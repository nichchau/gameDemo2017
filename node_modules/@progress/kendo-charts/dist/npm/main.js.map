{"version":3,"file":"main.js","sources":["common/constants.js","common/is-array.js","common/add-class.js","common/remove-class.js","common/align-path-to-pixel.js","common/clockwise.js","common/is-function.js","common/deep-extend.js","common/is-object.js","common/is-string.js","common/is-number.js","common/style-value.js","common/element-styles.js","common/get-spacing.js","services/intl-service.js","services/format-service.js","services/chart-service.js","services/dom-events-builder.js","services/template-service.js","common/get-template.js","common/getter.js","common/grep.js","common/has-classes.js","common/in-array.js","common/interpolate-value.js","common/instance-observer.js","common/map.js","common/mousewheel-delta.js","drawing-utils.js","common/font-loader.js","common/set-default-options.js","common/sparse-array-limits.js","core/point.js","core/box.js","core/ring.js","core/sector.js","core/shape-builder.js","core/chart-element.js","core/box-element.js","core/shape-element.js","core/gradients.js","core/utils/box-diff.js","core/root-element.js","core/float-element.js","core/text.js","core/utils/rect-to-box.js","core/text-box.js","core/title.js","core/axis-label.js","core/note.js","core/utils/create-axis-tick.js","core/utils/create-axis-grid-line.js","core/axis.js","core/category-axis.js","date-utils/constants.js","date-utils/absolute-date-diff.js","date-utils/add-ticks.js","date-utils/to-date.js","date-utils/start-of-week.js","date-utils/add-duration.js","date-utils/floor-date.js","date-utils/ceil-date.js","date-utils/date-comparer.js","date-utils/date-diff.js","date-utils/to-time.js","date-utils/date-equals.js","date-utils/date-index.js","date-utils/duration.js","date-utils/lte-date-index.js","date-utils/parse-date.js","date-utils/parse-dates.js","core/constants.js","core/date-category-axis.js","core/utils/auto-major-unit.js","core/utils/auto-axis-min.js","core/utils/auto-axis-max.js","core/utils/floor.js","core/utils/ceil.js","core/utils/limit-coordinate.js","core/numeric-axis.js","core/date-value-axis.js","core/logarithmic-axis.js","core/mixins/grid-lines-mixin.js","core/radar-category-axis.js","core/polar-axis.js","core/mixins/radar-numeric-axis-mixin.js","core/radar-numeric-axis.js","core/radar-logarithmic-axis.js","core/curve-processor.js","chart/api-elements/chart-axis.js","chart/api-elements/chart-pane.js","chart/api-elements/chart-plotarea.js","chart/utils/count-numbers.js","chart/aggregates/aggregates.js","chart/utils/get-field.js","chart/series-binder.js","chart/error-bars/error-range-calculator.js","chart/constants.js","chart/error-bars/error-bar-base.js","chart/error-bars/categorical-error-bar.js","chart/utils/eval-options.js","chart/utils/categories-count.js","chart/categorical-chart.js","chart/mixins/point-events-mixin.js","chart/mixins/note-mixin.js","chart/line-chart/line-point.js","chart/line-chart/line-segment.js","chart/line-chart/step-line-segment.js","chart/line-chart/spline-segment.js","chart/mixins/line-chart-mixin.js","chart/animations/clip-animation.js","chart/utils/any-has-z-index.js","chart/mixins/clip-animation-mixin.js","chart/line-chart/line-chart.js","chart/area-chart/area-segment-mixin.js","chart/area-chart/area-segment.js","chart/area-chart/step-area-segment.js","chart/area-chart/spline-area-segment.js","chart/area-chart/area-chart.js","chart/axis-group-range-tracker.js","chart/bar-chart/bar-label.js","chart/utils/has-gradient-overlay.js","chart/bar-chart/bar.js","chart/layout/cluster-layout.js","chart/layout/stack-wrap.js","chart/bar-chart/bar-chart.js","chart/candlestick-chart/candlestick.js","chart/utils/are-numbers.js","chart/candlestick-chart/candlestick-chart.js","chart/box-plot-chart/box-plot.js","chart/box-plot-chart/vertical-box-plot.js","chart/box-plot-chart/box-plot-chart.js","chart/error-bars/scatter-error-bar.js","chart/utils/has-value.js","chart/scatter-charts/scatter-chart.js","chart/bubble-chart/bubble.js","chart/bubble-chart/bubble-chart.js","chart/bullet-chart/target.js","chart/bullet-chart/bullet.js","chart/bullet-chart/bullet-chart.js","chart/tooltip/base-tooltip.js","chart/crosshair/crosshair-tooltip.js","chart/crosshair/crosshair.js","chart/chart-container.js","chart/pane.js","chart/plotarea/plotarea-base.js","chart/mixins/plotarea-events-mixin.js","chart/aggregates/series-aggregator.js","chart/aggregates/default-aggregates.js","chart/range-bar-chart/range-bar.js","chart/range-bar-chart/range-bar-chart.js","chart/ohlc-chart/ohlc-point.js","chart/ohlc-chart/ohlc-chart.js","chart/waterfall-chart/waterfall-segment.js","chart/waterfall-chart/waterfall-chart.js","chart/utils/filter-series-by-type.js","chart/utils/equals-ignore-case.js","chart/utils/is-date-axis.js","chart/utils/append-if-not-null.js","chart/utils/single-item-or-array.js","chart/utils/get-date-field.js","chart/plotarea/categorical-plotarea.js","chart/highlight.js","chart/pan-and-zoom/accept-key.js","chart/pan-and-zoom/to-chart-axis-ranges.js","chart/pan-and-zoom/pannable.js","chart/pan-and-zoom/zoom-selection.js","chart/pan-and-zoom/mousewheel-zoom.js","chart/legend/legend-layout.js","chart/legend/legend-item.js","chart/legend/legend.js","chart/plotarea/plotarea-factory.js","chart/selection.js","chart/tooltip/tooltip.js","chart/tooltip/shared-tooltip.js","chart/animations/bar-chart-animation.js","chart/animations/bubble-animation.js","chart/animations/fade-in-animation.js","chart/animations/pie-animation.js","chart/scatter-charts/scatter-line-chart.js","chart/plotarea/xy-plotarea.js","chart/pie-chart/pie-segment.js","chart/mixins/pie-chart-mixin.js","chart/utils/segment-visible.js","chart/utils/series-total.js","chart/pie-chart/pie-chart.js","chart/plotarea/pie-plotarea.js","chart/donut-chart/donut-segment.js","chart/donut-chart/donut-chart.js","chart/plotarea/donut-plotarea.js","chart/plotarea/polar-plotarea-base.js","chart/polar-scatter-chart/polar-scatter-chart.js","chart/polar-line-chart/polar-line-chart.js","chart/polar-area-chart/spline-polar-area-segment.js","chart/polar-area-chart/polar-area-segment.js","chart/polar-area-chart/polar-area-chart.js","chart/plotarea/polar-plotarea.js","chart/radar-line-chart/radar-line-chart.js","chart/radar-area-chart/spline-radar-area-segment.js","chart/radar-area-chart/radar-area-segment.js","chart/radar-area-chart/radar-area-chart.js","chart/radar-bar-chart/radar-segment.js","chart/layout/radar-cluster-layout.js","chart/layout/radar-stack-layout.js","chart/radar-bar-chart/radar-bar-chart.js","chart/plotarea/radar-plotarea.js","chart/funnel-chart/funnel-segment.js","chart/funnel-chart/funnel-chart.js","chart/plotarea/funnel-plotarea.js","chart/register-charts.js","chart/chart.js","sparkline/shared-tooltip.js","sparkline/sparkline.js","stock/fade-out-animation.js","stock/navigator-hint.js","stock/constants.js","stock/navigator.js","stock/stock-chart.js","chart/base-theme.js"],"sourcesContent":["const X = \"x\";\nconst Y = \"y\";\nconst TOP = \"top\";\nconst BOTTOM = \"bottom\";\nconst LEFT = \"left\";\nconst RIGHT = \"right\";\nconst CENTER = \"center\";\nconst WIDTH = \"width\";\nconst HEIGHT = \"height\";\nconst COORD_PRECISION = 3;\nconst MAX_VALUE = Number.MAX_VALUE;\nconst MIN_VALUE = -Number.MAX_VALUE;\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst WHITE = \"#fff\";\nconst BLACK = \"#000\";\nconst DEFAULT_FONT = \"12px sans-serif\";\nconst DEFAULT_PRECISION = 10;\nconst AXIS_LABEL_CLICK = \"axisLabelClick\";\nconst NOTE_CLICK = \"noteClick\";\nconst NOTE_HOVER = \"noteHover\";\nconst OUTSIDE = \"outside\";\nconst NONE = \"none\";\nconst CIRCLE = \"circle\";\nconst TRIANGLE = \"triangle\";\nconst CROSS = \"cross\";\nconst ARC = \"arc\";\nconst INSIDE = \"inside\";\nconst VALUE = \"value\";\nconst STRING = \"string\";\nconst OBJECT = \"object\";\nconst DATE = \"date\";\nconst FORMAT_REGEX = /\\{\\d+:?/;\n\nexport {\n    X, Y, WIDTH, HEIGHT, DEFAULT_HEIGHT, DEFAULT_WIDTH,\n    TOP, LEFT, BOTTOM, RIGHT, CENTER,\n    COORD_PRECISION, DEFAULT_PRECISION,\n    CIRCLE, TRIANGLE, CROSS,\n    MAX_VALUE, MIN_VALUE,\n    WHITE, BLACK, DEFAULT_FONT,\n    AXIS_LABEL_CLICK, OUTSIDE, INSIDE,\n    NONE, NOTE_CLICK,\n    NOTE_HOVER, VALUE, STRING, OBJECT,\n    DATE, ARC, FORMAT_REGEX\n};\n","export default function isArray(value) {\n    return Array.isArray(value);\n}","import isArray from './is-array';\n\nexport default function addClass(element, classes) {\n    const classArray = isArray(classes) ? classes : [ classes ];\n\n    for (let idx = 0; idx < classArray.length; idx++) {\n        const className = classArray[idx];\n        if (element.className.indexOf(className) === -1) {\n            element.className += \" \" + className;\n        }\n    }\n}","const SPACE_REGEX = /\\s+/g;\n\nexport default function removeClass(element, className) {\n    if (element && element.className) {\n        element.className = element.className.replace(className, \"\").replace(SPACE_REGEX, \" \");\n    }\n}","import { drawing } from '@progress/kendo-drawing';\n\nexport default function alignPathToPixel(path) {\n    let offset = 0.5;\n    if (path.options.stroke && drawing.util.defined(path.options.stroke.width)) {\n        if (path.options.stroke.width % 2 === 0) {\n            offset = 0;\n        }\n    }\n\n    for (let i = 0; i < path.segments.length; i++) {\n        path.segments[i].anchor().round(0).translate(offset, offset);\n    }\n\n    return path;\n}","export default function clockwise(angle1, angle2) {\n    // True if angle2 is clockwise of angle1\n    // assuming angles grow in clock-wise direction\n    // (as in the pie and radar charts)\n    return -angle1.x * angle2.y + angle1.y * angle2.x < 0;\n}","export default function isFunction(fn) {\n    return typeof fn === \"function\";\n}","import isFunction from './is-function';\n\nconst OBJECT = \"object\";\nconst UNDEFINED = \"undefined\";\n\nfunction deepExtendOne(destination, source) {\n\n    for (let property in source) {\n        let propValue = source[property];\n        let propType = typeof propValue;\n\n        let propInit;\n        if (propType === OBJECT && propValue !== null) {\n            propInit = propValue.constructor;\n        } else {\n            propInit = null;\n        }\n\n        if (propInit && propInit !== Array) {\n\n            if (propValue instanceof Date) {\n                destination[property] = new Date(propValue.getTime());\n            } else if (isFunction(propValue.clone)) {\n                destination[property] = propValue.clone();\n            } else {\n                let destProp = destination[property];\n                if (typeof (destProp) === OBJECT) {\n                    destination[property] = destProp || {};\n                } else {\n                    destination[property] = {};\n                }\n                deepExtendOne(destination[property], propValue);\n            }\n        } else if (propType !== UNDEFINED) {\n            destination[property] = propValue;\n        }\n    }\n\n    return destination;\n}\n\nexport default function deepExtend(destination) {\n    const length = arguments.length;\n\n    for (let i = 1; i < length; i++) {\n        deepExtendOne(destination, arguments[i]);\n    }\n\n    return destination;\n}","export default function isObject(value) {\n    return typeof value === \"object\";\n}","import { STRING } from './constants';\n\nexport default function isString(value) {\n    return typeof value === STRING;\n}","export default function isNumber(value) {\n    return typeof value === \"number\" && !isNaN(value);\n}","import isNumber from './is-number';\n\nexport default function styleValue(value) {\n    if (isNumber(value)) {\n        return value + \"px\";\n    }\n    return value;\n}","import isObject from './is-object';\nimport isArray from './is-array';\nimport isString from './is-string';\nimport styleValue from './style-value';\n\nconst SIZE_STYLES_REGEX = /width|height|top|left|bottom|right/i;\n\nfunction isSizeField(field) {\n    return SIZE_STYLES_REGEX.test(field);\n}\n\nexport default function elementStyles(element, styles) {\n    const stylesArray = isString(styles) ? [ styles ] : styles;\n\n    if (isArray(stylesArray)) {\n        const result = {};\n        const style = window.getComputedStyle(element);\n\n        for (let idx = 0; idx < stylesArray.length; idx++) {\n            let field = stylesArray[idx];\n            result[field] = isSizeField(field) ? parseFloat(style[field]) : style[field];\n        }\n\n        return result;\n    } else if (isObject(styles)) {\n        for (let field in styles) {\n            element.style[field] = styleValue(styles[field]);\n        }\n    }\n}","import { TOP, BOTTOM, LEFT, RIGHT } from './constants';\n\nexport default function getSpacing(value, defaultSpacing = 0) {\n    const spacing = { top: 0, right: 0, bottom: 0, left: 0 };\n\n    if (typeof(value) === \"number\") {\n        spacing[TOP] = spacing[RIGHT] = spacing[BOTTOM] = spacing[LEFT] = value;\n    } else {\n        spacing[TOP] = value[TOP] || defaultSpacing;\n        spacing[RIGHT] = value[RIGHT] || defaultSpacing;\n        spacing[BOTTOM] = value[BOTTOM] || defaultSpacing;\n        spacing[LEFT] = value[LEFT] || defaultSpacing;\n    }\n\n    return spacing;\n}","const defaultImplementation = {\n    format: (format, value) => value,\n\n    toString: (value) => value,\n\n    parseDate: (value) => new Date(value)\n};\n\nlet current = defaultImplementation;\n\nclass IntlService {\n    static register(userImplementation) {\n        current = userImplementation;\n    }\n\n    static get implementation() {\n        return current;\n    }\n}\n\nexport default IntlService;\n","import IntlService from './intl-service';\nimport { FORMAT_REGEX } from '../common/constants';\n\nconst FORMAT_REPLACE_REGEX = /\\{(\\d+)(:[^\\}]+)?\\}/g;\n\nclass FormatService {\n    constructor(intlService) {\n        this._intlService = intlService;\n    }\n\n    get intlService() {\n        return this._intlService || IntlService.implementation;\n    }\n\n    auto(formatString, ...values) {\n        const intl = this.intlService;\n\n        if (formatString.match(FORMAT_REGEX)) {\n            return intl.format(formatString, ...values);\n        }\n\n        return intl.toString(values[0], formatString);\n    }\n\n    localeAuto(formatString, values, locale) {\n        const intl = this.intlService;\n        let result;\n\n        if (formatString.match(FORMAT_REGEX)) {\n            result = formatString.replace(FORMAT_REPLACE_REGEX, function(match, index, placeholderFormat) {\n                let value = values[parseInt(index, 10)];\n\n                return intl.toString(value, placeholderFormat ? placeholderFormat.substring(1) : \"\", locale);\n            });\n        } else {\n            result = intl.toString(values[0], formatString, locale);\n        }\n\n        return result;\n    }\n}\n\nexport default FormatService;","import IntlService from './intl-service';\nimport FormatService from './format-service';\n\nclass ChartService {\n    constructor(chart, context = {}) {\n        this._intlService = context.intlService;\n        this.sender = context.sender || chart;\n        this.format = new FormatService(context.intlService);\n        this.chart = chart;\n    }\n\n    get intl() {\n        return this._intlService || IntlService.implementation;\n    }\n\n    notify(name, args) {\n        this.chart.trigger(name, args);\n    }\n}\n\nexport default ChartService;","let current;\n\nclass DomEventsBuilder {\n    static register(userImplementation) {\n        current = userImplementation;\n    }\n\n    static create(element, events) {\n        if (current) {\n            return current.create(element, events);\n        }\n    }\n}\n\nexport default DomEventsBuilder;\n","let current = {\n    compile: function(template) {\n        return template;\n    }\n};\n\nclass TemplateService {\n    static register(userImplementation) {\n        current = userImplementation;\n    }\n\n    static compile(template) {\n        return current.compile(template);\n    }\n}\n\nexport default TemplateService;\n","import { TemplateService } from '../services';\nimport isFunction from './is-function';\n\nexport default function getTemplate(options = {}) {\n    let template;\n    if (options.template) {\n        options.template = template = TemplateService.compile(options.template);\n    } else if (isFunction(options.content)) {\n        template = options.content;\n    }\n\n    return template;\n}","import { drawing } from '@progress/kendo-drawing';\n\nconst FIELD_REGEX = /\\[(?:(\\d+)|['\"](.*?)['\"])\\]|((?:(?!\\[.*?\\]|\\.).)+)/g;\nconst getterCache = {};\n\ngetterCache['undefined'] = function(obj) {\n    return obj;\n};\n\nexport default function getter(field) {\n    if (getterCache[field]) {\n        return getterCache[field];\n    }\n\n    const fields = [];\n    field.replace(FIELD_REGEX, function(match, index, indexAccessor, field) {\n        fields.push(drawing.util.defined(index) ? index : (indexAccessor || field));\n    });\n\n    getterCache[field] = function(obj) {\n        let result = obj;\n        for (let idx = 0; idx < fields.length && result; idx++) {\n            result = result[fields[idx]];\n        }\n\n        return result;\n    };\n\n    return getterCache[field];\n}","export default function grep(array, callback) {\n    const length = array.length;\n    const result = [];\n    for (let idx = 0; idx < length; idx++) {\n        if (callback(array[idx])) {\n            result .push(array[idx]);\n        }\n    }\n\n    return result;\n}","export default function hasClasses(element, classNames) {\n    if (element.className) {\n        const names = classNames.split(\" \");\n        for (let idx = 0; idx < names.length; idx++) {\n            if (element.className.indexOf(names[idx]) !== -1) {\n                return true;\n            }\n        }\n    }\n}","export default function inArray(value, array) {\n    if (array) {\n        return array.indexOf(value) !== -1;\n    }\n}","import { drawing } from '@progress/kendo-drawing';\nimport { COORD_PRECISION } from './constants';\n\nexport default function interpolateValue(start, end, progress) {\n    return drawing.util.round(start + (end - start) * progress, COORD_PRECISION);\n}","import deepExtend from './deep-extend';\n\nconst TRIGGER = 'trigger';\n\nclass InstanceObserver {\n    constructor(observer, handlers) {\n        this.observer = observer;\n        this.handlerMap = deepExtend({}, this.handlerMap, handlers);\n    }\n\n    trigger(name, args) {\n        const { observer, handlerMap } = this;\n        let isDefaultPrevented;\n        if (handlerMap[name]) {\n            isDefaultPrevented = this.callObserver(handlerMap[name], args);\n        } else if (observer[TRIGGER]) {\n            isDefaultPrevented = this.callObserver(TRIGGER, name, args);\n        }\n\n        return isDefaultPrevented;\n    }\n\n    callObserver(fnName, ...args) {\n        return this.observer[fnName].apply(this.observer, args);\n    }\n\n    requiresHandlers(names) {\n        if (this.observer.requiresHandlers) {\n            return this.observer.requiresHandlers(names);\n        }\n\n        for (let idx = 0; idx < names.length; idx++) {\n            if (this.handlerMap[names[idx]]) {\n                return true;\n            }\n        }\n    }\n}\n\nexport default InstanceObserver;","import { drawing } from '@progress/kendo-drawing';\n\nexport default function map(array, callback) {\n    const length = array.length;\n    const result = [];\n    for (let idx = 0; idx < length; idx++) {\n        let value = callback(array[idx]);\n        if (drawing.util.defined(value)) {\n            result.push(value);\n        }\n    }\n    return result;\n}","import { drawing } from '@progress/kendo-drawing';\n\nexport default function mousewheelDelta(e) {\n    let delta = 0;\n\n    if (e.wheelDelta) {\n        delta = -e.wheelDelta / 120;\n        delta = delta > 0 ? Math.ceil(delta) : Math.floor(delta);\n    }\n\n    if (e.detail) {\n        delta = drawing.util.round(e.detail / 3);\n    }\n\n    return delta;\n}","import { drawing, Class, logToConsole } from '@progress/kendo-drawing';\n\nconst { append, bindEvents, defined, deg, elementOffset, elementSize, eventElement, eventCoordinates, last, limitValue, objectKey, rad, round, unbindEvents, valueOrDefault } = drawing.util;\n\nexport { append, bindEvents, Class, defined, deg, elementOffset, elementSize, eventElement, eventCoordinates, last, limitValue, logToConsole, objectKey, rad, round, unbindEvents, valueOrDefault };","import { logToConsole } from '../drawing-utils';\n\nclass FontLoader {\n    static fetchFonts(options, fonts, state = { depth: 0 }) {\n        const MAX_DEPTH = 5;\n\n        if (!options || state.depth > MAX_DEPTH || !document.fonts) {\n            return;\n        }\n\n        Object.keys(options).forEach(function(key) {\n            const value = options[key];\n            if (key === \"dataSource\" || key[0] === \"$\" || !value) {\n                return;\n            }\n\n            if (key === \"font\") {\n                fonts.push(value);\n            } else if (typeof value === \"object\") {\n                state.depth++;\n                FontLoader.fetchFonts(value, fonts, state);\n                state.depth--;\n            }\n        });\n    }\n\n    static loadFonts(fonts, callback) {\n        let promises = [];\n\n        if (fonts.length > 0 && document.fonts) {\n            try {\n                promises = fonts.map(function(font) {\n                    return document.fonts.load(font);\n                });\n            } catch (e) {\n                // Silence font-loading errors\n                logToConsole(e);\n            }\n\n            Promise.all(promises).then(callback, callback);\n        } else {\n            callback();\n        }\n    }\n\n    static preloadFonts(options, callback) {\n        const fonts = [];\n        FontLoader.fetchFonts(options, fonts);\n\n        FontLoader.loadFonts(fonts, callback);\n    }\n}\n\nexport default FontLoader;","import deepExtend from './deep-extend';\n\nexport default function setDefaultOptions(type, options) {\n    const proto = type.prototype;\n    if (proto.options) {\n        proto.options = deepExtend({}, proto.options, options);\n    } else {\n        proto.options = options;\n    }\n}","import { MIN_VALUE, MAX_VALUE } from './constants';\n\nexport default function sparseArrayLimits(arr) {\n    let min = MAX_VALUE;\n    let max = MIN_VALUE;\n\n    for (let idx = 0, length = arr.length; idx < length; idx++) {\n        const value = arr[idx];\n        if (value !== null && isFinite(value)) {\n            min = Math.min(min, value);\n            max = Math.max(max, value);\n        }\n    }\n\n    return {\n        min: min === MAX_VALUE ? undefined : min,\n        max: max === MIN_VALUE ? undefined : max\n    };\n}","import { COORD_PRECISION } from '../common/constants';\nimport { Class, rad, round } from '../common';\n\nclass Point extends Class {\n    constructor(x, y) {\n        super();\n\n        this.x = x || 0;\n        this.y = y || 0;\n    }\n\n    clone() {\n        return new Point(this.x, this.y);\n    }\n\n    equals(point) {\n        return point && this.x === point.x && this.y === point.y;\n    }\n\n    rotate(center, degrees) {\n        const theta = rad(degrees);\n        const cosT = Math.cos(theta);\n        const sinT = Math.sin(theta);\n        const { x: cx, y: cy } = center;\n        const { x, y } = this;\n\n        this.x = round(\n            cx + (x - cx) * cosT + (y - cy) * sinT,\n            COORD_PRECISION\n        );\n\n        this.y = round(\n            cy + (y - cy) * cosT - (x - cx) * sinT,\n            COORD_PRECISION\n        );\n\n        return this;\n    }\n\n    multiply(a) {\n\n        this.x *= a;\n        this.y *= a;\n\n        return this;\n    }\n\n    distanceTo(point) {\n        const dx = this.x - point.x;\n        const dy = this.y - point.y;\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    static onCircle(center, angle, radius) {\n        const radians = rad(angle);\n\n        return new Point(\n            center.x - radius * Math.cos(radians),\n            center.y - radius * Math.sin(radians)\n        );\n    }\n}\n\n\nexport default Point;","import { geometry as geom } from '@progress/kendo-drawing';\n\nimport Point from './point';\n\nimport { X, Y, TOP, BOTTOM, LEFT, RIGHT, CENTER, WIDTH, HEIGHT } from '../common/constants';\nimport { Class, defined, getSpacing, inArray, isArray, rad } from '../common';\n\nclass Box extends Class {\n    constructor(x1, y1, x2, y2) {\n        super();\n\n        this.x1 = x1 || 0;\n        this.y1 = y1 || 0;\n        this.x2 = x2 || 0;\n        this.y2 = y2 || 0;\n    }\n\n    width() {\n        return this.x2 - this.x1;\n    }\n\n    height() {\n        return this.y2 - this.y1;\n    }\n\n    translate(dx, dy) {\n        this.x1 += dx;\n        this.x2 += dx;\n        this.y1 += dy;\n        this.y2 += dy;\n\n        return this;\n    }\n\n    move(x, y) {\n        const height = this.height();\n        const width = this.width();\n\n        if (defined(x)) {\n            this.x1 = x;\n            this.x2 = this.x1 + width;\n        }\n\n        if (defined(y)) {\n            this.y1 = y;\n            this.y2 = this.y1 + height;\n        }\n\n        return this;\n    }\n\n    wrap(targetBox) {\n        this.x1 = Math.min(this.x1, targetBox.x1);\n        this.y1 = Math.min(this.y1, targetBox.y1);\n        this.x2 = Math.max(this.x2, targetBox.x2);\n        this.y2 = Math.max(this.y2, targetBox.y2);\n\n        return this;\n    }\n\n    wrapPoint(point) {\n        const arrayPoint = isArray(point);\n        const x = arrayPoint ? point[0] : point.x;\n        const y = arrayPoint ? point[1] : point.y;\n        this.wrap(new Box(x, y, x, y));\n\n        return this;\n    }\n\n    snapTo(targetBox, axis) {\n\n        if (axis === X || !axis) {\n            this.x1 = targetBox.x1;\n            this.x2 = targetBox.x2;\n        }\n\n        if (axis === Y || !axis) {\n            this.y1 = targetBox.y1;\n            this.y2 = targetBox.y2;\n        }\n\n        return this;\n    }\n\n    alignTo(targetBox, anchor) {\n        const height = this.height();\n        const width = this.width();\n        const axis = anchor === TOP || anchor === BOTTOM ? Y : X;\n        const offset = axis === Y ? height : width;\n\n        if (anchor === CENTER) {\n            const targetCenter = targetBox.center();\n            const center = this.center();\n\n            this.x1 += targetCenter.x - center.x;\n            this.y1 += targetCenter.y - center.y;\n        } else if (anchor === TOP || anchor === LEFT) {\n            this[axis + 1] = targetBox[axis + 1] - offset;\n        } else {\n            this[axis + 1] = targetBox[axis + 2];\n        }\n\n        this.x2 = this.x1 + width;\n        this.y2 = this.y1 + height;\n\n        return this;\n    }\n\n    shrink(dw, dh) {\n\n        this.x2 -= dw;\n        this.y2 -= dh;\n\n        return this;\n    }\n\n    expand(dw, dh) {\n        this.shrink(-dw, -dh);\n        return this;\n    }\n\n    pad(padding) {\n        const spacing = getSpacing(padding);\n\n        this.x1 -= spacing.left;\n        this.x2 += spacing.right;\n        this.y1 -= spacing.top;\n        this.y2 += spacing.bottom;\n\n        return this;\n    }\n\n    unpad(padding) {\n        const spacing = getSpacing(padding);\n\n        spacing.left = -spacing.left;\n        spacing.top = -spacing.top;\n        spacing.right = -spacing.right;\n        spacing.bottom = -spacing.bottom;\n\n        return this.pad(spacing);\n    }\n\n    clone() {\n        return new Box(this.x1, this.y1, this.x2, this.y2);\n    }\n\n    center() {\n        return new Point(\n            this.x1 + this.width() / 2,\n            this.y1 + this.height() / 2\n        );\n    }\n\n    containsPoint(point) {\n\n        return point.x >= this.x1 && point.x <= this.x2 &&\n               point.y >= this.y1 && point.y <= this.y2;\n    }\n\n    points() {\n        return [\n            new Point(this.x1, this.y1),\n            new Point(this.x2, this.y1),\n            new Point(this.x2, this.y2),\n            new Point(this.x1, this.y2)\n        ];\n    }\n\n    getHash() {\n        return [ this.x1, this.y1, this.x2, this.y2 ].join(\",\");\n    }\n\n    overlaps(box) {\n        return !(box.y2 < this.y1 || this.y2 < box.y1 || box.x2 < this.x1 || this.x2 < box.x1);\n    }\n\n    rotate(rotation) {\n        let width = this.width();\n        let height = this.height();\n        const { x: cx, y: cy } = this.center();\n\n        const r1 = rotatePoint(0, 0, cx, cy, rotation);\n        const r2 = rotatePoint(width, 0, cx, cy, rotation);\n        const r3 = rotatePoint(width, height, cx, cy, rotation);\n        const r4 = rotatePoint(0, height, cx, cy, rotation);\n\n        width = Math.max(r1.x, r2.x, r3.x, r4.x) - Math.min(r1.x, r2.x, r3.x, r4.x);\n        height = Math.max(r1.y, r2.y, r3.y, r4.y) - Math.min(r1.y, r2.y, r3.y, r4.y);\n\n        this.x2 = this.x1 + width;\n        this.y2 = this.y1 + height;\n\n        return this;\n    }\n\n    toRect() {\n        return new geom.Rect([ this.x1, this.y1 ], [ this.width(), this.height() ]);\n    }\n\n    hasSize() {\n        return this.width() !== 0 && this.height() !== 0;\n    }\n\n    align(targetBox, axis, alignment) {\n        const c1 = axis + 1;\n        const c2 = axis + 2;\n        const sizeFunc = axis === X ? WIDTH : HEIGHT;\n        const size = this[sizeFunc]();\n\n        if (inArray(alignment, [ LEFT, TOP ])) {\n            this[c1] = targetBox[c1];\n            this[c2] = this[c1] + size;\n        } else if (inArray(alignment, [ RIGHT, BOTTOM ])) {\n            this[c2] = targetBox[c2];\n            this[c1] = this[c2] - size;\n        } else if (alignment === CENTER) {\n            this[c1] = targetBox[c1] + (targetBox[sizeFunc]() - size) / 2;\n            this[c2] = this[c1] + size;\n        }\n    }\n}\n\nfunction rotatePoint(x, y, cx, cy, angle) {\n    const theta = rad(angle);\n\n    return new Point(\n        cx + (x - cx) * Math.cos(theta) + (y - cy) * Math.sin(theta),\n        cy - (x - cx) * Math.sin(theta) + (y - cy) * Math.cos(theta)\n    );\n}\n\nexport default Box;\n","import Box from './box';\nimport Point from './point';\nimport { COORD_PRECISION, MAX_VALUE, MIN_VALUE } from '../common/constants';\nimport { Class, clockwise, rad, round } from '../common';\n\nclass Ring extends Class {\n\n    constructor(center, innerRadius, radius, startAngle, angle) {\n        super();\n\n        this.center = center;\n        this.innerRadius = innerRadius;\n        this.radius = radius;\n        this.startAngle = startAngle;\n        this.angle = angle;\n    }\n\n    clone() {\n        return new Ring(this.center, this.innerRadius, this.radius, this.startAngle, this.angle);\n    }\n\n    middle() {\n        return this.startAngle + this.angle / 2;\n    }\n\n    setRadius(newRadius, innerRadius) {\n        if (innerRadius) {\n            this.innerRadius = newRadius;\n        } else {\n            this.radius = newRadius;\n        }\n\n        return this;\n    }\n\n    // TODO: Remove and replace with Point.onCircle\n    point(angle, innerRadius) {\n        const radianAngle = rad(angle);\n        const ax = Math.cos(radianAngle);\n        const ay = Math.sin(radianAngle);\n        const radius = innerRadius ? this.innerRadius : this.radius;\n        const x = round(this.center.x - (ax * radius), COORD_PRECISION);\n        const y = round(this.center.y - (ay * radius), COORD_PRECISION);\n\n        return new Point(x, y);\n    }\n\n    adjacentBox(distance, width, height) {\n        const sector = this.clone().expand(distance);\n        const midAndle = sector.middle();\n        const midPoint = sector.point(midAndle);\n        const hw = width / 2;\n        const hh = height / 2;\n        const sa = Math.sin(rad(midAndle));\n        const ca = Math.cos(rad(midAndle));\n        let x = midPoint.x - hw;\n        let y = midPoint.y - hh;\n\n        if (Math.abs(sa) < 0.9) {\n            x += hw * -ca / Math.abs(ca);\n        }\n\n        if (Math.abs(ca) < 0.9) {\n            y += hh * -sa / Math.abs(sa);\n        }\n\n        return new Box(x, y, x + width, y + height);\n    }\n\n    containsPoint(p) {\n        const center = this.center;\n        const innerRadius = this.innerRadius;\n        const radius = this.radius;\n        const startAngle = this.startAngle;\n        const endAngle = this.startAngle + this.angle;\n        const dx = p.x - center.x;\n        const dy = p.y - center.y;\n        const vector = new Point(dx, dy);\n        const startPoint = this.point(startAngle);\n        const startVector = new Point(startPoint.x - center.x, startPoint.y - center.y);\n        const endPoint = this.point(endAngle);\n        const endVector = new Point(endPoint.x - center.x, endPoint.y - center.y);\n        const dist = round(dx * dx + dy * dy, COORD_PRECISION);\n\n        return (startVector.equals(vector) || clockwise(startVector, vector)) &&\n               !clockwise(endVector, vector) &&\n               dist >= innerRadius * innerRadius && dist <= radius * radius;\n    }\n\n    getBBox() {\n        const box = new Box(MAX_VALUE, MAX_VALUE, MIN_VALUE, MIN_VALUE);\n        const startAngle = round(this.startAngle % 360);\n        const endAngle = round((startAngle + this.angle) % 360);\n        const innerRadius = this.innerRadius;\n        const allAngles = [ 0, 90, 180, 270, startAngle, endAngle ].sort(numericComparer);\n        const startAngleIndex = allAngles.indexOf(startAngle);\n        const endAngleIndex = allAngles.indexOf(endAngle);\n        let angles;\n\n        if (startAngle === endAngle) {\n            angles = allAngles;\n        } else {\n            if (startAngleIndex < endAngleIndex) {\n                angles = allAngles.slice(startAngleIndex, endAngleIndex + 1);\n            } else {\n                angles = [].concat(\n                    allAngles.slice(0, endAngleIndex + 1),\n                    allAngles.slice(startAngleIndex, allAngles.length)\n                );\n            }\n        }\n\n        for (let i = 0; i < angles.length; i++) {\n            let point = this.point(angles[i]);\n            box.wrapPoint(point);\n            box.wrapPoint(point, innerRadius);\n        }\n\n        if (!innerRadius) {\n            box.wrapPoint(this.center);\n        }\n\n        return box;\n    }\n\n    expand(value) {\n        this.radius += value;\n        return this;\n    }\n}\n\nfunction numericComparer(a, b) {\n    return a - b;\n}\n\nexport default Ring;","import Ring from './ring';\n\nclass Sector extends Ring {\n    constructor(center, radius, startAngle, angle) {\n        super(center, 0, radius, startAngle, angle);\n    }\n\n    expand(value) {\n        return super.expand(value);\n    }\n\n    clone() {\n        return new Sector(this.center, this.radius, this.startAngle, this.angle);\n    }\n\n    setRadius(newRadius) {\n        this.radius = newRadius;\n\n        return this;\n    }\n}\n\nexport default Sector;","import { geometry as geom, drawing as draw } from '@progress/kendo-drawing';\nimport { Class } from '../common';\n\nclass ShapeBuilder extends Class {\n    createRing(sector, options) {\n        const startAngle = sector.startAngle + 180;\n        const endAngle = sector.angle + startAngle;\n        const center = new geom.Point(sector.center.x, sector.center.y);\n        const radius = Math.max(sector.radius, 0);\n        const innerRadius = Math.max(sector.innerRadius, 0);\n        const arc = new geom.Arc(center, {\n            startAngle: startAngle,\n            endAngle: endAngle,\n            radiusX: radius,\n            radiusY: radius\n        });\n        const path = draw.Path.fromArc(arc, options).close();\n\n        if (innerRadius) {\n            arc.radiusX = arc.radiusY = innerRadius;\n            const innerEnd = arc.pointAt(endAngle);\n            path.lineTo(innerEnd.x, innerEnd.y);\n            path.arc(endAngle, startAngle, innerRadius, innerRadius, true);\n        } else {\n            path.lineTo(center.x, center.y);\n        }\n\n        return path;\n    }\n}\n\nShapeBuilder.current = new ShapeBuilder();\n\nexport default ShapeBuilder;","import { drawing as draw } from '@progress/kendo-drawing';\n\nimport { WHITE } from '../common/constants';\nimport { Class, deepExtend, defined, valueOrDefault } from '../common';\n\nclass ChartElement extends Class {\n    constructor(options) {\n        super();\n\n        this.children = [];\n\n        this.options = deepExtend({}, this.options, options);\n    }\n\n    reflow(targetBox) {\n        const children = this.children;\n        let box;\n\n        for (let i = 0; i < children.length; i++) {\n            let currentChild = children[i];\n            currentChild.reflow(targetBox);\n\n            box = box ? box.wrap(currentChild.box) : currentChild.box.clone();\n        }\n\n        this.box = box || targetBox;\n    }\n\n    destroy() {\n        const children = this.children;\n\n        if (this.animation) {\n            this.animation.destroy();\n        }\n\n        for (let i = 0; i < children.length; i++) {\n            children[i].destroy();\n        }\n    }\n\n    getRoot() {\n        const parent = this.parent;\n\n        return parent ? parent.getRoot() : null;\n    }\n\n    getSender() {\n        const service = this.getService();\n        if (service) {\n            return service.sender;\n        }\n    }\n\n    getService() {\n        let element = this;\n        while (element) {\n            if (element.chartService) {\n                return element.chartService;\n            }\n            element = element.parent;\n        }\n    }\n\n    translateChildren(dx, dy) {\n        const children = this.children;\n        const childrenCount = children.length;\n\n        for (let i = 0; i < childrenCount; i++) {\n            children[i].box.translate(dx, dy);\n        }\n    }\n\n    append() {\n        for (let i = 0; i < arguments.length; i++) {\n            let item = arguments[i];\n            this.children.push(item);\n            item.parent = this;\n        }\n    }\n\n    renderVisual() {\n        if (this.options.visible === false) {\n            return;\n        }\n\n        this.createVisual();\n\n        this.addVisual();\n\n        this.renderChildren();\n\n        this.createAnimation();\n        this.renderComplete();\n    }\n\n    addVisual() {\n        if (this.visual) {\n            this.visual.chartElement = this;\n\n            if (this.parent) {\n                this.parent.appendVisual(this.visual);\n            }\n        }\n    }\n\n    renderChildren() {\n        const children = this.children;\n        const length = children.length;\n        for (let i = 0; i < length; i++) {\n            children[i].renderVisual();\n        }\n    }\n\n    createVisual() {\n        this.visual = new draw.Group({\n            zIndex: this.options.zIndex,\n            visible: valueOrDefault(this.options.visible, true)\n        });\n    }\n\n    createAnimation() {\n        if (this.visual) {\n            this.animation = draw.Animation.create(\n                this.visual, this.options.animation\n            );\n        }\n    }\n\n    appendVisual(childVisual) {\n        if (!childVisual.chartElement) {\n            childVisual.chartElement = this;\n        }\n\n        if (childVisual.options.noclip) {\n            this.clipRoot().visual.append(childVisual);\n        } else if (defined(childVisual.options.zIndex)) {\n            this.stackRoot().stackVisual(childVisual);\n        } else if (this.isStackRoot) {\n            this.stackVisual(childVisual);\n        } else if (this.visual) {\n            this.visual.append(childVisual);\n        } else {\n            // Allow chart elements without visuals to\n            // pass through child visuals\n            this.parent.appendVisual(childVisual);\n        }\n    }\n\n    clipRoot() {\n        if (this.parent) {\n            return this.parent.clipRoot();\n        }\n\n        return this;\n    }\n\n    stackRoot() {\n        if (this.parent) {\n            return this.parent.stackRoot();\n        }\n\n        return this;\n    }\n\n    stackVisual(childVisual) {\n        const zIndex = childVisual.options.zIndex || 0;\n        const visuals = this.visual.children;\n        const length = visuals.length;\n        let pos;\n\n        for (pos = 0; pos < length; pos++) {\n            let sibling = visuals[pos];\n            let here = valueOrDefault(sibling.options.zIndex, 0);\n            if (here > zIndex) {\n                break;\n            }\n        }\n\n        this.visual.insert(pos, childVisual);\n    }\n\n    traverse(callback) {\n        const children = this.children;\n        const length = children.length;\n\n        for (let i = 0; i < length; i++) {\n            let child = children[i];\n\n            callback(child);\n            if (child.traverse) {\n                child.traverse(callback);\n            }\n        }\n    }\n\n    closest(match) {\n        let element = this;\n        let matched = false;\n\n        while (element && !matched) {\n            matched = match(element);\n\n            if (!matched) {\n                element = element.parent;\n            }\n        }\n\n        if (matched) {\n            return element;\n        }\n    }\n\n    renderComplete() {}\n\n    hasHighlight() {\n        const options = (this.options || {}).highlight;\n        return !(!this.createHighlight || (options && options.visible === false));\n    }\n\n    toggleHighlight(show) {\n        const options = (this.options || {}).highlight;\n        const customVisual = (options || {}).visual;\n        let highlight = this._highlight;\n\n        if (!highlight) {\n            const highlightOptions = {\n                fill: {\n                    color: WHITE,\n                    opacity: 0.2\n                },\n                stroke: {\n                    color: WHITE,\n                    width: 1,\n                    opacity: 0.2\n                }\n            };\n\n            if (customVisual) {\n                highlight = this._highlight = customVisual(\n                    Object.assign(this.highlightVisualArgs(), {\n                        createVisual: () => this.createHighlight(highlightOptions),\n                        sender: this.getSender(),\n                        series: this.series,\n                        dataItem: this.dataItem,\n                        category: this.category,\n                        value: this.value,\n                        percentage: this.percentage,\n                        runningTotal: this.runningTotal,\n                        total: this.total\n                    }\n                ));\n\n                if (!highlight) {\n                    return;\n                }\n            } else {\n                highlight = this._highlight = this.createHighlight(highlightOptions);\n            }\n\n            highlight.options.zIndex = this.options.zIndex;\n            this.appendVisual(highlight);\n        }\n\n        highlight.visible(show);\n    }\n\n    createGradientOverlay(element, options, gradientOptions) {\n        const overlay = new draw.Path(Object.assign({\n            stroke: {\n                color: \"none\"\n            },\n            fill: this.createGradient(gradientOptions),\n            closed: element.options.closed\n        }, options));\n\n        overlay.segments.elements(element.segments.elements());\n\n        return overlay;\n    }\n\n    createGradient(options) {\n        if (this.parent) {\n            return this.parent.createGradient(options);\n        }\n    }\n}\n\nChartElement.prototype.options = { };\n\nexport default ChartElement;","import { drawing as draw } from '@progress/kendo-drawing';\n\nimport ChartElement from './chart-element';\nimport Box from './box';\n\nimport { BLACK, LEFT, TOP, X, Y } from '../common/constants';\nimport { getSpacing, setDefaultOptions, valueOrDefault } from '../common';\n\nclass BoxElement extends ChartElement {\n    constructor(options) {\n        super(options);\n\n        this.options.margin = getSpacing(this.options.margin);\n        this.options.padding = getSpacing(this.options.padding);\n    }\n\n    reflow(targetBox) {\n        const options = this.options;\n        const { width, height, shrinkToFit } = options;\n        const hasSetSize = width && height;\n        const margin = options.margin;\n        const padding = options.padding;\n        const borderWidth = options.border.width;\n        let box;\n\n        const reflowPaddingBox = () => {\n            this.align(targetBox, X, options.align);\n            this.align(targetBox, Y, options.vAlign);\n            this.paddingBox = box.clone().unpad(margin).unpad(borderWidth);\n        };\n\n        let contentBox = targetBox.clone();\n        if (hasSetSize) {\n            contentBox.x2 = contentBox.x1 + width;\n            contentBox.y2 = contentBox.y1 + height;\n        }\n\n        if (shrinkToFit) {\n            contentBox.unpad(margin).unpad(borderWidth).unpad(padding);\n        }\n\n        super.reflow(contentBox);\n\n        if (hasSetSize) {\n            box = this.box = new Box(0, 0, width, height);\n        } else {\n            box = this.box;\n        }\n\n        if (shrinkToFit && hasSetSize) {\n            reflowPaddingBox();\n            contentBox = this.contentBox = this.paddingBox.clone().unpad(padding);\n        } else {\n            contentBox = this.contentBox = box.clone();\n            box.pad(padding).pad(borderWidth).pad(margin);\n            reflowPaddingBox();\n        }\n\n        this.translateChildren(\n            box.x1 - contentBox.x1 + margin.left + borderWidth + padding.left,\n            box.y1 - contentBox.y1 + margin.top + borderWidth + padding.top\n        );\n\n        const children = this.children;\n        for (let i = 0; i < children.length; i++) {\n            let item = children[i];\n            item.reflow(item.box);\n        }\n    }\n\n    align(targetBox, axis, alignment) {\n        this.box.align(targetBox, axis, alignment);\n    }\n\n    hasBox() {\n        const options = this.options;\n        return options.border.width || options.background;\n    }\n\n    createVisual() {\n        super.createVisual();\n\n        const options = this.options;\n        if (options.visible && this.hasBox()) {\n            this.visual.append(draw.Path.fromRect(\n                this.paddingBox.toRect(),\n                this.visualStyle()\n            ));\n        }\n    }\n\n    visualStyle() {\n        const options = this.options;\n        const border = options.border || {};\n\n        return {\n            stroke: {\n                width: border.width,\n                color: border.color,\n                opacity: valueOrDefault(border.opacity, options.opacity),\n                dashType: border.dashType\n            },\n            fill: {\n                color: options.background,\n                opacity: options.opacity\n            },\n            cursor: options.cursor\n        };\n    }\n}\n\nsetDefaultOptions(BoxElement, {\n    align: LEFT,\n    vAlign: TOP,\n    margin: {},\n    padding: {},\n    border: {\n        color: BLACK,\n        width: 0\n    },\n    background: \"\",\n    shrinkToFit: false,\n    width: 0,\n    height: 0,\n    visible: true\n});\n\nexport default BoxElement;","import { drawing as draw, geometry as geom } from '@progress/kendo-drawing';\n\nimport BoxElement from './box-element';\n\nimport { CIRCLE, TRIANGLE, CROSS, CENTER, COORD_PRECISION } from '../common/constants';\nimport { round, setDefaultOptions } from '../common';\n\nclass ShapeElement extends BoxElement {\n\n    constructor(options, pointData) {\n        super(options);\n\n        this.pointData = pointData;\n    }\n\n    getElement() {\n        const { options, paddingBox: box } = this;\n        const { type, rotation } = options;\n        const center = box.center();\n        const halfWidth = box.width() / 2;\n\n        if (!options.visible || !this.hasBox()) {\n            return null;\n        }\n\n        const style = this.visualStyle();\n        let element;\n\n        if (type === CIRCLE) {\n            element = new draw.Circle(\n                new geom.Circle([\n                    round(box.x1 + halfWidth, COORD_PRECISION),\n                    round(box.y1 + box.height() / 2, COORD_PRECISION)\n                ], halfWidth),\n                style\n            );\n        } else if (type === TRIANGLE) {\n            element = draw.Path.fromPoints([\n                [ box.x1 + halfWidth, box.y1 ],\n                [ box.x1, box.y2 ],\n                [ box.x2, box.y2 ]\n            ], style).close();\n        } else if (type === CROSS) {\n            element = new draw.MultiPath(style);\n\n            element.moveTo(box.x1, box.y1).lineTo(box.x2, box.y2);\n            element.moveTo(box.x1, box.y2).lineTo(box.x2, box.y1);\n        } else {\n            element = draw.Path.fromRect(box.toRect(), style);\n        }\n\n        if (rotation) {\n            element.transform(geom.transform()\n                .rotate(-rotation, [ center.x, center.y ])\n            );\n        }\n\n        element.options.zIndex = options.zIndex;\n        return element;\n    }\n\n    createElement() {\n        const customVisual = this.options.visual;\n        const pointData = this.pointData || {};\n        let visual;\n\n        if (customVisual) {\n            visual = customVisual({\n                value: pointData.value,\n                dataItem: pointData.dataItem,\n                sender: this.getSender(),\n                series: pointData.series,\n                category: pointData.category,\n                rect: this.paddingBox.toRect(),\n                options: this.visualOptions(),\n                createVisual: () => this.getElement()\n            });\n        } else {\n            visual = this.getElement();\n        }\n\n        return visual;\n    }\n\n    visualOptions() {\n        const options = this.options;\n        return {\n            background: options.background,\n            border: options.border,\n            margin: options.margin,\n            padding: options.padding,\n            type: options.type,\n            size: options.width,\n            visible: options.visible\n        };\n    }\n\n    createVisual() {\n        this.visual = this.createElement();\n    }\n}\n\nsetDefaultOptions(ShapeElement, {\n    type: CIRCLE,\n    align: CENTER,\n    vAlign: CENTER\n});\n\nexport default ShapeElement;","import { WHITE } from '../common/constants';\n\nconst LINEAR = \"linear\";\nconst RADIAL = \"radial\";\n\nconst GRADIENTS = {\n    glass: {\n        type: LINEAR,\n        rotation: 0,\n        stops: [ {\n            offset: 0,\n            color: WHITE,\n            opacity: 0\n        }, {\n            offset: 0.25,\n            color: WHITE,\n            opacity: 0.3\n        }, {\n            offset: 1,\n            color: WHITE,\n            opacity: 0\n        } ]\n    },\n    sharpBevel: {\n        type: RADIAL,\n        stops: [ {\n            offset: 0,\n            color: WHITE,\n            opacity: 0.55\n        }, {\n            offset: 0.65,\n            color: WHITE,\n            opacity: 0\n        }, {\n            offset: 0.95,\n            color: WHITE,\n            opacity: 0.25\n        } ]\n    },\n    roundedBevel: {\n        type: RADIAL,\n        stops: [ {\n            offset: 0.33,\n            color: WHITE,\n            opacity: 0.06\n        }, {\n            offset: 0.83,\n            color: WHITE,\n            opacity: 0.2\n        }, {\n            offset: 0.95,\n            color: WHITE,\n            opacity: 0\n        } ]\n    },\n    roundedGlass: {\n        type: RADIAL,\n        supportVML: false,\n        stops: [ {\n            offset: 0,\n            color: WHITE,\n            opacity: 0\n        }, {\n            offset: 0.5,\n            color: WHITE,\n            opacity: 0.3\n        }, {\n            offset: 0.99,\n            color: WHITE,\n            opacity: 0\n        } ]\n    },\n    sharpGlass: {\n        type: RADIAL,\n        supportVML: false,\n        stops: [ {\n            offset: 0,\n            color: WHITE,\n            opacity: 0.2\n        }, {\n            offset: 0.15,\n            color: WHITE,\n            opacity: 0.15\n        }, {\n            offset: 0.17,\n            color: WHITE,\n            opacity: 0.35\n        }, {\n            offset: 0.85,\n            color: WHITE,\n            opacity: 0.05\n        }, {\n            offset: 0.87,\n            color: WHITE,\n            opacity: 0.15\n        }, {\n            offset: 0.99,\n            color: WHITE,\n            opacity: 0\n        } ]\n    },\n    bubbleShadow: {\n        type: RADIAL,\n        center: [ 0.5, 0.5 ],\n        radius: 0.5\n    }\n};\n\nexport default GRADIENTS;","import Box from '../box';\nimport { grep } from '../../common';\n\nexport default function boxDiff(r, s) {\n    if (r.x1 === s.x1 && r.y1 === s.y1 && r.x2 === s.x2 && r.y2 === s.y2) {\n        return s;\n    }\n\n    const a = Math.min(r.x1, s.x1);\n    const b = Math.max(r.x1, s.x1);\n    const c = Math.min(r.x2, s.x2);\n    const d = Math.max(r.x2, s.x2);\n    const e = Math.min(r.y1, s.y1);\n    const f = Math.max(r.y1, s.y1);\n    const g = Math.min(r.y2, s.y2);\n    const h = Math.max(r.y2, s.y2);\n    const boxes = [];\n\n    // X = intersection, 0-7 = possible difference areas\n    // h +-+-+-+\n    // . |5|6|7|\n    // g +-+-+-+\n    // . |3|X|4|\n    // f +-+-+-+\n    // . |0|1|2|\n    // e +-+-+-+\n    // . a b c d\n\n    // we'll always have rectangles 1, 3, 4 and 6\n    boxes[0] = new Box(b, e, c, f);\n    boxes[1] = new Box(a, f, b, g);\n    boxes[2] = new Box(c, f, d, g);\n    boxes[3] = new Box(b, g, c, h);\n\n    // decide which corners\n    if (r.x1 === a && r.y1 === e || s.x1 === a && s.y1 === e) { // corners 0 and 7\n        boxes[4] = new Box(a, e, b, f);\n        boxes[5] = new Box(c, g, d, h);\n    } else { // corners 2 and 5\n        boxes[4] = new Box(c, e, d, f);\n        boxes[5] = new Box(a, g, b, h);\n    }\n\n    return grep(boxes, function(box) {\n        return box.height() > 0 && box.width() > 0;\n    })[0];\n}","import { drawing as draw } from '@progress/kendo-drawing';\n\nimport ChartElement from './chart-element';\nimport GRADIENTS from './gradients';\nimport Box from './box';\n\nimport boxDiff from './utils/box-diff';\n\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT, WHITE, BLACK } from '../common/constants';\nimport { getSpacing, objectKey, setDefaultOptions } from '../common';\n\nclass RootElement extends ChartElement {\n    constructor(options) {\n        super(options);\n\n        const rootOptions = this.options;\n        rootOptions.width = parseInt(rootOptions.width, 10);\n        rootOptions.height = parseInt(rootOptions.height, 10);\n\n        this.gradients = {};\n    }\n\n    reflow() {\n        const { options, children } = this;\n        let currentBox = new Box(0, 0, options.width, options.height);\n\n        this.box = currentBox.unpad(options.margin);\n\n        for (let i = 0; i < children.length; i++) {\n            children[i].reflow(currentBox);\n            currentBox = boxDiff(currentBox, children[i].box) || new Box();\n        }\n    }\n\n    createVisual() {\n        this.visual = new draw.Group();\n        this.createBackground();\n    }\n\n    createBackground() {\n        const options = this.options;\n        const border = options.border || {};\n        const box = this.box.clone().pad(options.margin).unpad(border.width);\n\n        const background = draw.Path.fromRect(box.toRect(), {\n            stroke: {\n                color: border.width ? border.color : \"\",\n                width: border.width,\n                dashType: border.dashType\n            },\n            fill: {\n                color: options.background,\n                opacity: options.opacity\n            },\n            zIndex: -10\n        });\n\n        this.visual.append(background);\n    }\n\n    getRoot() {\n        return this;\n    }\n\n    createGradient(options) {\n        const gradients = this.gradients;\n        const hashCode = objectKey(options);\n        const gradient = GRADIENTS[options.gradient];\n        let drawingGradient;\n\n        if (gradients[hashCode]) {\n            drawingGradient = gradients[hashCode];\n        } else {\n            const gradientOptions = Object.assign({}, gradient, options);\n            if (gradient.type === \"linear\") {\n                drawingGradient = new draw.LinearGradient(gradientOptions);\n            } else {\n                if (options.innerRadius) {\n                    gradientOptions.stops = innerRadialStops(gradientOptions);\n                }\n                drawingGradient = new draw.RadialGradient(gradientOptions);\n                drawingGradient.supportVML = gradient.supportVML !== false;\n            }\n            gradients[hashCode] = drawingGradient;\n        }\n\n        return drawingGradient;\n    }\n}\n\nsetDefaultOptions(RootElement, {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    background: WHITE,\n    border: {\n        color: BLACK,\n        width: 0\n    },\n    margin: getSpacing(5),\n    zIndex: -2\n});\n\nfunction innerRadialStops(options) {\n    const stops = options.stops;\n    const usedSpace = ((options.innerRadius / options.radius) * 100);\n    const length = stops.length;\n    const currentStops = [];\n\n    for (let i = 0; i < length; i++) {\n        let currentStop = Object.assign({}, stops[i]);\n        currentStop.offset = (currentStop.offset * (100 - usedSpace) + usedSpace) / 100;\n        currentStops.push(currentStop);\n    }\n\n    return currentStops;\n}\n\nexport default RootElement;","import ChartElement from './chart-element';\nimport Box from './box';\n\nimport { X, Y, WIDTH, HEIGHT, RIGHT, BOTTOM, CENTER } from '../common/constants';\nimport { round, setDefaultOptions } from '../common';\n\nclass FloatElement extends ChartElement {\n    constructor(options) {\n        super(options);\n        this._initDirection();\n    }\n\n    _initDirection() {\n        const options = this.options;\n        if (options.vertical) {\n            this.groupAxis = X;\n            this.elementAxis = Y;\n            this.groupSizeField = WIDTH;\n            this.elementSizeField = HEIGHT;\n            this.groupSpacing = options.spacing;\n            this.elementSpacing = options.vSpacing;\n        } else {\n            this.groupAxis = Y;\n            this.elementAxis = X;\n            this.groupSizeField = HEIGHT;\n            this.elementSizeField = WIDTH;\n            this.groupSpacing = options.vSpacing;\n            this.elementSpacing = options.spacing;\n        }\n    }\n\n    reflow(targetBox) {\n        this.box = targetBox.clone();\n        this.reflowChildren();\n    }\n\n    reflowChildren() {\n        const { box, elementAxis, groupAxis, elementSizeField, groupSizeField } = this;\n        const { groups, groupsSize, maxGroupElementsSize } = this.groupOptions();\n        const groupsCount = groups.length;\n        const groupsStart = box[groupAxis + 1] + this.alignStart(groupsSize, box[groupSizeField]());\n\n        if (groupsCount) {\n            let groupStart = groupsStart;\n\n            for (let groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                let group = groups[groupIdx];\n                let groupElements = group.groupElements;\n                let elementStart = box[elementAxis + 1];\n                let groupElementsCount = groupElements.length;\n\n                for (let idx = 0; idx < groupElementsCount; idx++) {\n                    let element = groupElements[idx];\n                    let elementSize = this.elementSize(element);\n                    let groupElementStart = groupStart + this.alignStart(elementSize[groupSizeField], group.groupSize);\n\n                    let elementBox = new Box();\n                    elementBox[groupAxis + 1] = groupElementStart;\n                    elementBox[groupAxis + 2] = groupElementStart + elementSize[groupSizeField];\n                    elementBox[elementAxis + 1] = elementStart;\n                    elementBox[elementAxis + 2] = elementStart + elementSize[elementSizeField];\n\n                    element.reflow(elementBox);\n\n                    elementStart += elementSize[elementSizeField] + this.elementSpacing;\n                }\n                groupStart += group.groupSize + this.groupSpacing;\n            }\n            box[groupAxis + 1] = groupsStart;\n            box[groupAxis + 2] = groupsStart + groupsSize;\n            box[elementAxis + 2] = box[elementAxis + 1] + maxGroupElementsSize;\n        }\n    }\n\n    alignStart(size, maxSize) {\n        let start = 0;\n        const align = this.options.align;\n        if (align === RIGHT || align === BOTTOM) {\n            start = maxSize - size;\n        } else if (align === CENTER) {\n            start = (maxSize - size) / 2;\n        }\n        return start;\n    }\n\n    groupOptions() {\n        const { box, children, elementSizeField, groupSizeField, elementSpacing, groupSpacing } = this;\n        const maxSize = round(box[elementSizeField]());\n        const childrenCount = children.length;\n        const groups = [];\n\n        let groupSize = 0;\n        let groupElementsSize = 0;\n        let groupsSize = 0;\n        let maxGroupElementsSize = 0;\n        let groupElements = [];\n\n        for (let idx = 0; idx < childrenCount; idx++) {\n            let element = children[idx];\n            if (!element.box) {\n                element.reflow(box);\n            }\n\n            let elementSize = this.elementSize(element);\n            if (this.options.wrap && round(groupElementsSize + elementSpacing + elementSize[elementSizeField]) > maxSize) {\n                groups.push({\n                    groupElements: groupElements,\n                    groupSize: groupSize,\n                    groupElementsSize: groupElementsSize\n                });\n                maxGroupElementsSize = Math.max(maxGroupElementsSize, groupElementsSize);\n                groupsSize += groupSpacing + groupSize;\n                groupSize = 0;\n                groupElementsSize = 0;\n                groupElements = [];\n            }\n            groupSize = Math.max(groupSize, elementSize[groupSizeField]);\n            if (groupElementsSize > 0) {\n                groupElementsSize += elementSpacing;\n            }\n            groupElementsSize += elementSize[elementSizeField];\n            groupElements.push(element);\n        }\n\n        groups.push({\n            groupElements: groupElements,\n            groupSize: groupSize,\n            groupElementsSize: groupElementsSize\n        });\n        maxGroupElementsSize = Math.max(maxGroupElementsSize, groupElementsSize);\n        groupsSize += groupSize;\n\n        return {\n            groups: groups,\n            groupsSize: groupsSize,\n            maxGroupElementsSize: maxGroupElementsSize\n        };\n    }\n\n    elementSize(element) {\n        return {\n            width: element.box.width(),\n            height: element.box.height()\n        };\n    }\n\n    createVisual() {}\n}\n\nsetDefaultOptions(FloatElement, {\n    vertical: true,\n    wrap: true,\n    vSpacing: 0,\n    spacing: 0\n});\n\nexport default FloatElement;","import { drawing as draw } from '@progress/kendo-drawing';\n\nimport ChartElement from './chart-element';\nimport Box from './box';\n\nimport { DEFAULT_FONT, BLACK } from '../common/constants';\nimport { setDefaultOptions } from '../common';\n\nconst DrawingText = draw.Text;\n\nclass Text extends ChartElement {\n\n    constructor(content, options) {\n        super(options);\n\n        this.content = content;\n\n        // Calculate size\n        this.reflow(new Box());\n    }\n\n    reflow(targetBox) {\n        const options = this.options;\n        const size = options.size = draw.util.measureText(this.content, { font: options.font });\n\n        this.baseline = size.baseline;\n\n        this.box = new Box(targetBox.x1, targetBox.y1,\n                targetBox.x1 + size.width, targetBox.y1 + size.height);\n    }\n\n    createVisual() {\n        const { font, color, opacity, cursor } = this.options;\n\n        this.visual = new DrawingText(this.content, this.box.toRect().topLeft(), {\n            font: font,\n            fill: { color: color, opacity: opacity },\n            cursor: cursor\n        });\n    }\n}\n\nsetDefaultOptions(Text, {\n    font: DEFAULT_FONT,\n    color: BLACK\n});\n\nexport default Text;\n","import Box from '../box';\n\nexport default function rectToBox(rect) {\n    const origin = rect.origin;\n    const bottomRight = rect.bottomRight();\n\n    return new Box(origin.x, origin.y, bottomRight.x, bottomRight.y);\n}","import { drawing as draw, geometry as geom } from '@progress/kendo-drawing';\n\nimport BoxElement from './box-element';\nimport FloatElement from './float-element';\nimport Text from './text';\nimport Box from './box';\n\nimport rectToBox from './utils/rect-to-box';\n\nimport { getSpacing, deepExtend } from '../common';\nimport { X, Y } from '../common/constants';\n\nconst ROWS_SPLIT_REGEX = /\\n|\\\\n/m;\n\nclass TextBox extends BoxElement {\n\n    constructor(content, options) {\n        super(options);\n        this.content = content;\n\n        this._initContainer();\n        if (this.options._autoReflow !== false) {\n            this.reflow(new Box());\n        }\n    }\n\n    _initContainer() {\n        const options = this.options;\n        const rows = String(this.content).split(ROWS_SPLIT_REGEX);\n        const floatElement = new FloatElement({ vertical: true, align: options.align, wrap: false });\n        const textOptions = deepExtend({ }, options, { opacity: 1, animation: null });\n\n        this.container = floatElement;\n        this.append(floatElement);\n\n        for (let rowIdx = 0; rowIdx < rows.length; rowIdx++) {\n            let text = new Text(rows[rowIdx].trim(), textOptions);\n            floatElement.append(text);\n        }\n    }\n\n    reflow(targetBox) {\n        const options = this.options;\n        const visualFn = options.visual;\n        this.container.options.align = options.align;\n\n        if (visualFn && !this._boxReflow) {\n            let visualBox = targetBox;\n            if (!visualBox.hasSize()) {\n                this._boxReflow = true;\n                this.reflow(visualBox);\n                this._boxReflow = false;\n                visualBox = this.box;\n            }\n            const visual = this.visual = visualFn(this.visualContext(visualBox));\n\n            if (visual) {\n                visualBox = rectToBox(visual.clippedBBox() || new geom.Rect());\n\n                visual.options.zIndex = options.zIndex;\n                visual.options.noclip = options.noclip;\n            }\n\n            this.box = this.contentBox = this.paddingBox = visualBox;\n        } else {\n            super.reflow(targetBox);\n\n            if (options.rotation) {\n                const margin = getSpacing(options.margin);\n                let box = this.box.unpad(margin);\n\n                this.targetBox = targetBox;\n                this.normalBox = box.clone();\n\n                box = this.rotate();\n                box.translate(margin.left - margin.right, margin.top - margin.bottom);\n\n                this.rotatedBox = box.clone();\n\n                box.pad(margin);\n            }\n        }\n    }\n\n    createVisual() {\n        const options = this.options;\n\n        if (!options.visible) {\n            return;\n        }\n\n        this.visual = new draw.Group({\n            transform: this.rotationTransform(),\n            zIndex: options.zIndex,\n            noclip: options.noclip\n        });\n\n        if (this.hasBox()) {\n            const box = draw.Path.fromRect(this.paddingBox.toRect(), this.visualStyle());\n            this.visual.append(box);\n        }\n    }\n\n    renderVisual() {\n        if (this.options.visual) {\n            this.addVisual();\n            this.createAnimation();\n        } else {\n            super.renderVisual();\n        }\n    }\n\n    visualOptions() {\n        const options = this.options;\n        return {\n            background: options.background,\n            border: options.border,\n            color: options.color,\n            font: options.font,\n            margin: options.margin,\n            padding: options.padding,\n            visible: options.visible\n        };\n    }\n\n    visualContext(targetBox) {\n\n        return {\n            text: this.content,\n            rect: targetBox.toRect(),\n            sender: this.getSender(),\n            options: this.visualOptions(),\n            createVisual: () => {\n                this._boxReflow = true;\n                this.reflow(targetBox);\n                this._boxReflow = false;\n                return this.getDefaultVisual();\n            }\n        };\n    }\n\n    getDefaultVisual() {\n        this.createVisual();\n        this.renderChildren();\n        const visual = this.visual;\n        delete this.visual;\n        return visual;\n    }\n\n    rotate() {\n        const options = this.options;\n        this.box.rotate(options.rotation);\n        this.align(this.targetBox, X, options.align);\n        this.align(this.targetBox, Y, options.vAlign);\n        return this.box;\n    }\n\n    rotationTransform() {\n        const rotation = this.options.rotation;\n        if (!rotation) {\n            return null;\n        }\n\n        const { x: cx, y: cy } = this.normalBox.center();\n        const boxCenter = this.rotatedBox.center();\n\n        return geom.transform()\n                   .translate(boxCenter.x - cx, boxCenter.y - cy)\n                   .rotate(rotation, [ cx, cy ]);\n    }\n}\n\nexport default TextBox;","import ChartElement from './chart-element';\nimport TextBox from './text-box';\n\nimport { X, BLACK, TOP, CENTER } from '../common/constants';\nimport { getSpacing, setDefaultOptions } from '../common';\n\nclass Title extends ChartElement {\n    constructor(options) {\n        super(options);\n\n        this.append(\n            new TextBox(this.options.text, Object.assign({}, this.options, {\n                vAlign: this.options.position\n            }))\n        );\n    }\n\n    reflow(targetBox) {\n        super.reflow(targetBox);\n        this.box.snapTo(targetBox, X);\n    }\n\n    static buildTitle(options, parent, defaultOptions) {\n        let titleOptions = options;\n\n        if (typeof options === \"string\") {\n            titleOptions = { text: options };\n        }\n\n        titleOptions = Object.assign({ visible: true }, defaultOptions, titleOptions);\n\n        let title;\n        if (titleOptions && titleOptions.visible && titleOptions.text) {\n            title = new Title(titleOptions);\n            parent.append(title);\n        }\n\n        return title;\n    }\n}\n\nsetDefaultOptions(Title, {\n    color: BLACK,\n    position: TOP,\n    align: CENTER,\n    margin: getSpacing(5),\n    padding: getSpacing(5)\n});\n\nexport default Title;","import { geometry as geom } from '@progress/kendo-drawing';\n\nimport TextBox from './text-box';\nimport Box from './box';\n\nimport rectToBox from './utils/rect-to-box';\n\nimport { AXIS_LABEL_CLICK, CENTER, TOP, BOTTOM, LEFT, DEFAULT_PRECISION, X, Y } from '../common/constants';\n\nimport { eventElement, round, setDefaultOptions } from '../common';\n\nclass AxisLabel extends TextBox {\n    constructor(value, text, index, dataItem, options) {\n        super(text, options);\n\n        this.text = text;\n        this.value = value;\n        this.index = index;\n        this.dataItem = dataItem;\n        this.reflow(new Box());\n    }\n\n    visualContext(targetBox) {\n        const context = super.visualContext(targetBox);\n\n        context.value = this.value;\n        context.dataItem = this.dataItem;\n        context.format = this.options.format;\n        context.culture = this.options.culture;\n\n        return context;\n    }\n\n    click(widget, e) {\n\n        widget.trigger(AXIS_LABEL_CLICK, {\n            element: eventElement(e),\n            value: this.value,\n            text: this.text,\n            index: this.index,\n            dataItem: this.dataItem,\n            axis: this.parent.options\n        });\n    }\n\n    rotate() {\n        if (this.options.alignRotation !== CENTER) {\n            const box = this.normalBox.toRect();\n            const transform = this.rotationTransform();\n\n            this.box = rectToBox(box.bbox(transform.matrix()));\n        } else {\n            super.rotate();\n        }\n\n        return this.box;\n    }\n\n    rotationTransform() {\n        const options = this.options;\n        const rotation = options.rotation;\n        if (!rotation) {\n            return null;\n        }\n\n        if (options.alignRotation === CENTER) {\n            return super.rotationTransform();\n        }\n\n        const rotationMatrix = geom.transform().rotate(rotation).matrix();\n        const box = this.normalBox.toRect();\n        const rect = this.targetBox.toRect();\n\n        const rotationOrigin = options.rotationOrigin || TOP;\n        const alignAxis = rotationOrigin === TOP || rotationOrigin === BOTTOM ? X : Y;\n        const distanceAxis = rotationOrigin === TOP || rotationOrigin === BOTTOM ? Y : X;\n        const axisAnchor = rotationOrigin === TOP || rotationOrigin === LEFT ? rect.origin : rect.bottomRight();\n\n        const topLeft = box.topLeft().transformCopy(rotationMatrix);\n        const topRight = box.topRight().transformCopy(rotationMatrix);\n        const bottomRight = box.bottomRight().transformCopy(rotationMatrix);\n        const bottomLeft = box.bottomLeft().transformCopy(rotationMatrix);\n        const rotatedBox = geom.Rect.fromPoints(topLeft, topRight, bottomRight, bottomLeft);\n\n        const translate = {\n            [distanceAxis]: rect.origin[distanceAxis] - rotatedBox.origin[distanceAxis]\n        };\n\n        const distanceLeft = Math.abs(topLeft[distanceAxis] + translate[distanceAxis] - axisAnchor[distanceAxis]);\n        const distanceRight = Math.abs(topRight[distanceAxis] + translate[distanceAxis] - axisAnchor[distanceAxis]);\n\n        let alignStart, alignEnd;\n\n        if (round(distanceLeft, DEFAULT_PRECISION) === round(distanceRight, DEFAULT_PRECISION)) {\n            alignStart = topLeft;\n            alignEnd = topRight;\n        } else if (distanceRight < distanceLeft) {\n            alignStart = topRight;\n            alignEnd = bottomRight;\n        } else {\n            alignStart = topLeft;\n            alignEnd = bottomLeft;\n        }\n\n        const alignCenter = alignStart[alignAxis] + (alignEnd[alignAxis] - alignStart[alignAxis]) / 2;\n        translate[alignAxis] = rect.center()[alignAxis] - alignCenter;\n\n        return geom.transform()\n            .translate(translate.x, translate.y)\n            .rotate(rotation);\n    }\n}\n\nsetDefaultOptions(AxisLabel, {\n    _autoReflow: false\n});\n\nexport default AxisLabel;\n","import { drawing as draw } from '@progress/kendo-drawing';\n\nimport BoxElement from './box-element';\nimport TextBox from './text-box';\nimport ShapeElement from './shape-element';\nimport Box from './box';\n\nimport { CIRCLE, TOP, BOTTOM, LEFT, RIGHT, CENTER, INSIDE, OUTSIDE, NOTE_CLICK, NOTE_HOVER } from '../common/constants';\nimport { alignPathToPixel, defined, deepExtend, eventElement, getTemplate, inArray, setDefaultOptions } from '../common';\n\nconst DEFAULT_ICON_SIZE = 7;\nconst DEFAULT_LABEL_COLOR = \"#fff\";\n\nclass Note extends BoxElement {\n    constructor(fields, options, chartService) {\n        super(options);\n\n        this.fields = fields;\n        this.chartService = chartService;\n\n        this.render();\n    }\n\n    hide() {\n        this.options.visible = false;\n    }\n\n    show() {\n        this.options.visible = true;\n    }\n\n    render() {\n        const options = this.options;\n\n        if (options.visible) {\n            const { label, icon } = options;\n            const box = new Box();\n            let size = icon.size;\n            let text = this.fields.text;\n            let width, height;\n\n            if (defined(label) && label.visible) {\n                const noteTemplate = getTemplate(label);\n                if (noteTemplate) {\n                    text = noteTemplate(this.fields);\n                } else if (label.format) {\n                    text = this.chartService.format.auto(label.format, text);\n                }\n\n                if (!label.color) {\n                    label.color = label.position === INSIDE ? DEFAULT_LABEL_COLOR : icon.background;\n                }\n\n                this.label = new TextBox(text, deepExtend({}, label));\n\n                if (label.position === INSIDE && !defined(size)) {\n                    if (icon.type === CIRCLE) {\n                        size = Math.max(this.label.box.width(), this.label.box.height());\n                    } else {\n                        width = this.label.box.width();\n                        height = this.label.box.height();\n                    }\n                    box.wrap(this.label.box);\n                }\n            }\n\n            icon.width = width || size || DEFAULT_ICON_SIZE;\n            icon.height = height || size || DEFAULT_ICON_SIZE;\n\n            let marker = new ShapeElement(deepExtend({}, icon));\n\n            this.marker = marker;\n            this.append(marker);\n\n            if (this.label) {\n                this.append(this.label);\n            }\n\n            marker.reflow(new Box());\n            this.wrapperBox = box.wrap(marker.box);\n        }\n    }\n\n    reflow(targetBox) {\n        const { options, label, marker, wrapperBox } = this;\n        const center = targetBox.center();\n        const length = options.line.length;\n        const position = options.position;\n\n        // TODO: Review\n        if (options.visible) {\n            let lineStart, box, contentBox;\n\n            if (inArray(position, [ LEFT, RIGHT ])) {\n                if (position === LEFT) {\n                    contentBox = wrapperBox.alignTo(targetBox, position).translate(-length, targetBox.center().y - wrapperBox.center().y);\n\n                    if (options.line.visible) {\n                        lineStart = [ targetBox.x1, center.y ];\n                        this.linePoints = [\n                            lineStart,\n                            [ contentBox.x2, center.y ]\n                        ];\n                        box = contentBox.clone().wrapPoint(lineStart);\n                    }\n                } else {\n                    contentBox = wrapperBox.alignTo(targetBox, position).translate(length, targetBox.center().y - wrapperBox.center().y);\n\n                    if (options.line.visible) {\n                        lineStart = [ targetBox.x2, center.y ];\n                        this.linePoints = [\n                            lineStart,\n                            [ contentBox.x1, center.y ]\n                        ];\n                        box = contentBox.clone().wrapPoint(lineStart);\n                    }\n                }\n            } else {\n                if (position === BOTTOM) {\n                    contentBox = wrapperBox.alignTo(targetBox, position).translate(targetBox.center().x - wrapperBox.center().x, length);\n\n                    if (options.line.visible) {\n                        lineStart = [ center.x, targetBox.y2 ];\n                        this.linePoints = [\n                            lineStart,\n                            [ center.x, contentBox.y1 ]\n                        ];\n                        box = contentBox.clone().wrapPoint(lineStart);\n                    }\n                } else {\n                    contentBox = wrapperBox.alignTo(targetBox, position).translate(targetBox.center().x - wrapperBox.center().x, -length);\n\n                    if (options.line.visible) {\n                        lineStart = [ center.x, targetBox.y1 ];\n                        this.linePoints = [\n                            lineStart,\n                            [ center.x, contentBox.y2 ]\n                        ];\n                        box = contentBox.clone().wrapPoint(lineStart);\n                    }\n                }\n            }\n\n            if (marker) {\n                marker.reflow(contentBox);\n            }\n\n            if (label) {\n                label.reflow(contentBox);\n                if (marker) {\n                    if (options.label.position === OUTSIDE) {\n                        label.box.alignTo(marker.box, position);\n                    }\n                    label.reflow(label.box);\n                }\n            }\n\n            this.contentBox = contentBox;\n            this.targetBox = targetBox;\n            this.box = box || contentBox;\n        }\n    }\n\n    createVisual() {\n        super.createVisual();\n        this.visual.options.noclip = this.options.noclip;\n\n        if (this.options.visible) {\n            this.createLine();\n        }\n    }\n\n    renderVisual() {\n        const options = this.options;\n        const customVisual = options.visual;\n        if (options.visible && customVisual) {\n            this.visual = customVisual(Object.assign(this.fields, {\n                sender: this.getSender(),\n                rect: this.targetBox.toRect(),\n                options: {\n                    background: options.background,\n                    border: options.background,\n                    icon: options.icon,\n                    label: options.label,\n                    line: options.line,\n                    position: options.position,\n                    visible: options.visible\n                },\n                createVisual: () => {\n                    this.createVisual();\n                    this.renderChildren();\n                    const defaultVisual = this.visual;\n                    delete this.visual;\n                    return defaultVisual;\n                }\n            }));\n            this.addVisual();\n        } else {\n            super.renderVisual();\n        }\n    }\n\n    createLine() {\n        const options = this.options.line;\n\n        if (this.linePoints) {\n            const path = draw.Path.fromPoints(this.linePoints, {\n                stroke: {\n                    color: options.color,\n                    width: options.width,\n                    dashType: options.dashType\n                }\n            });\n\n            alignPathToPixel(path);\n            this.visual.append(path);\n        }\n    }\n\n    click(widget, e) {\n        const args = this.eventArgs(e);\n\n        if (!widget.trigger(NOTE_CLICK, args)) {\n            e.preventDefault();\n        }\n    }\n\n    hover(widget, e) {\n        const args = this.eventArgs(e);\n\n        if (!widget.trigger(NOTE_HOVER, args)) {\n            e.preventDefault();\n        }\n    }\n\n    leave(widget) {\n        widget._unsetActivePoint();\n    }\n\n    eventArgs(e) {\n        const options = this.options;\n\n        return Object.assign(this.fields, {\n            element: eventElement(e),\n            text: defined(options.label) ? options.label.text : \"\",\n            visual: this.visual\n        });\n    }\n}\n\nsetDefaultOptions(Note, {\n    icon: {\n        visible: true,\n        type: CIRCLE\n    },\n    label: {\n        position: INSIDE,\n        visible: true,\n        align: CENTER,\n        vAlign: CENTER\n    },\n    line: {\n        visible: true\n    },\n    visible: true,\n    position: TOP,\n    zIndex: 2\n});\n\nexport default Note;","import { drawing as draw } from '@progress/kendo-drawing';\n\nimport { alignPathToPixel } from '../../common';\n\nexport default function createAxisTick(options, tickOptions) {\n    const { tickX, tickY, position } = options;\n\n    const tick = new draw.Path({\n        stroke: {\n            width: tickOptions.width,\n            color: tickOptions.color\n        }\n    });\n\n    if (options.vertical) {\n        tick.moveTo(tickX, position)\n            .lineTo(tickX + tickOptions.size, position);\n    } else {\n        tick.moveTo(position, tickY)\n            .lineTo(position, tickY + tickOptions.size);\n    }\n\n    alignPathToPixel(tick);\n\n    return tick;\n}","import { drawing as draw } from '@progress/kendo-drawing';\n\nimport { alignPathToPixel } from '../../common';\n\nexport default function createAxisGridLine(options, gridLine) {\n    const { lineStart, lineEnd, position } = options;\n\n    const line = new draw.Path({\n        stroke: {\n            width: gridLine.width,\n            color: gridLine.color,\n            dashType: gridLine.dashType\n        }\n    });\n\n    if (options.vertical) {\n        line.moveTo(lineStart, position)\n            .lineTo(lineEnd, position);\n    } else {\n        line.moveTo(position, lineStart)\n            .lineTo(position, lineEnd);\n    }\n\n    alignPathToPixel(line);\n\n    return line;\n}","import { drawing as draw, geometry as geom } from '@progress/kendo-drawing';\n\nimport ChartElement from './chart-element';\nimport TextBox from './text-box';\nimport AxisLabel from './axis-label';\nimport Note from './note';\nimport Box from './box';\nimport { ChartService } from '../services';\n\nimport createAxisTick from './utils/create-axis-tick';\nimport createAxisGridLine from './utils/create-axis-grid-line';\n\nimport { NONE, BLACK, CENTER, TOP, BOTTOM, LEFT, RIGHT, OUTSIDE, X, Y, WIDTH, HEIGHT } from '../common/constants';\nimport { alignPathToPixel, deepExtend, getTemplate, grep, defined, isObject, inArray, limitValue, round, setDefaultOptions } from '../common';\n\nclass Axis extends ChartElement {\n    constructor(options, chartService = new ChartService()) {\n        super(options);\n\n        this.chartService = chartService;\n\n        if (!this.options.visible) {\n            this.options = deepExtend({}, this.options, {\n                labels: {\n                    visible: false\n                },\n                line: {\n                    visible: false\n                },\n                margin: 0,\n                majorTickSize: 0,\n                minorTickSize: 0\n            });\n        }\n\n        this.options.minorTicks = deepExtend({}, {\n            color: this.options.line.color,\n            width: this.options.line.width,\n            visible: this.options.minorTickType !== NONE\n        }, this.options.minorTicks, {\n            size: this.options.minorTickSize,\n            align: this.options.minorTickType\n        });\n\n        this.options.majorTicks = deepExtend({}, {\n            color: this.options.line.color,\n            width: this.options.line.width,\n            visible: this.options.majorTickType !== NONE\n        }, this.options.majorTicks, {\n            size: this.options.majorTickSize,\n            align: this.options.majorTickType\n        });\n\n        if (!this.options._deferLabels) {\n            this.createLabels();\n        }\n\n        this.createTitle();\n        this.createNotes();\n    }\n\n    // abstract labelsCount(): Number\n    // abstract createAxisLabel(index, options): AxisLabel\n\n    labelsRange() {\n        return {\n            min: this.options.labels.skip,\n            max: this.labelsCount()\n        };\n    }\n\n    createLabels() {\n        const options = this.options;\n        const align = options.vertical ? RIGHT : CENTER;\n        const labelOptions = deepExtend({ }, options.labels, {\n            align: align,\n            zIndex: options.zIndex\n        });\n        const step = Math.max(1, labelOptions.step);\n\n        this.children = grep(this.children, child => !(child instanceof AxisLabel));\n\n        this.labels = [];\n\n        if (labelOptions.visible) {\n            const range = this.labelsRange();\n            const rotation = labelOptions.rotation;\n\n            if (isObject(rotation)) {\n                labelOptions.alignRotation = rotation.align;\n                labelOptions.rotation = rotation.angle;\n            }\n\n            if (labelOptions.rotation === \"auto\") {\n                labelOptions.rotation = 0;\n                options.autoRotateLabels = true;\n            }\n\n            for (let idx = range.min; idx < range.max; idx += step) {\n                let label = this.createAxisLabel(idx, labelOptions);\n                if (label) {\n                    this.append(label);\n                    this.labels.push(label);\n                }\n            }\n        }\n    }\n\n    lineBox() {\n        const { options, box } = this;\n        const vertical = options.vertical;\n        const mirror = options.labels.mirror;\n        const axisX = mirror ? box.x1 : box.x2;\n        const axisY = mirror ? box.y2 : box.y1;\n        const lineWidth = options.line.width || 0;\n\n        return vertical ?\n            new Box(axisX, box.y1, axisX, box.y2 - lineWidth) :\n            new Box(box.x1, axisY, box.x2 - lineWidth, axisY);\n    }\n\n    createTitle() {\n        const options = this.options;\n        const titleOptions = deepExtend({\n            rotation: options.vertical ? -90 : 0,\n            text: \"\",\n            zIndex: 1,\n            visualSize: true\n        }, options.title);\n\n        if (titleOptions.visible && titleOptions.text) {\n            const title = new TextBox(titleOptions.text, titleOptions);\n            this.append(title);\n            this.title = title;\n        }\n    }\n\n    createNotes() {\n        const options = this.options;\n        const notes = options.notes;\n        const items = notes.data || [];\n\n        this.notes = [];\n\n        for (let i = 0; i < items.length; i++) {\n            const item = deepExtend({}, notes, items[i]);\n            item.value = this.parseNoteValue(item.value);\n\n            const note = new Note({\n                value: item.value,\n                text: item.label.text,\n                dataItem: item\n            }, item, this.chartService);\n\n            if (note.options.visible) {\n                if (defined(note.options.position)) {\n                    if (options.vertical && !inArray(note.options.position, [ LEFT, RIGHT ])) {\n                        note.options.position = options.reverse ? LEFT : RIGHT;\n                    } else if (!options.vertical && !inArray(note.options.position, [ TOP, BOTTOM ])) {\n                        note.options.position = options.reverse ? BOTTOM : TOP;\n                    }\n                } else {\n                    if (options.vertical) {\n                        note.options.position = options.reverse ? LEFT : RIGHT;\n                    } else {\n                        note.options.position = options.reverse ? BOTTOM : TOP;\n                    }\n                }\n                this.append(note);\n                this.notes.push(note);\n            }\n        }\n    }\n\n    parseNoteValue(value) {\n        return value;\n    }\n\n    renderVisual() {\n        super.renderVisual();\n\n        this.createPlotBands();\n    }\n\n    createVisual() {\n        super.createVisual();\n\n        this.createBackground();\n        this.createLine();\n    }\n\n    gridLinesVisual() {\n        let gridLines = this._gridLines;\n        if (!gridLines) {\n            gridLines = this._gridLines = new draw.Group({\n                zIndex: -2\n            });\n            this.appendVisual(this._gridLines);\n        }\n\n        return gridLines;\n    }\n\n    createTicks(lineGroup) {\n        const options = this.options;\n        const lineBox = this.lineBox();\n        const mirror = options.labels.mirror;\n        const majorUnit = options.majorTicks.visible ? options.majorUnit : 0;\n        const tickLineOptions = {\n            // TODO\n            // _alignLines: options._alignLines,\n            vertical: options.vertical\n        };\n\n        function render(tickPositions, tickOptions, skipUnit) {\n            const count = tickPositions.length;\n            const step = Math.max(1, tickOptions.step);\n\n            if (tickOptions.visible) {\n                for (let i = tickOptions.skip; i < count; i += step) {\n                    if (defined(skipUnit) && (i % skipUnit === 0)) {\n                        continue;\n                    }\n\n                    tickLineOptions.tickX = mirror ? lineBox.x2 : lineBox.x2 - tickOptions.size;\n                    tickLineOptions.tickY = mirror ? lineBox.y1 - tickOptions.size : lineBox.y1;\n                    tickLineOptions.position = tickPositions[i];\n\n                    lineGroup.append(createAxisTick(tickLineOptions, tickOptions));\n                }\n            }\n        }\n\n        render(this.getMajorTickPositions(), options.majorTicks);\n        render(this.getMinorTickPositions(), options.minorTicks, majorUnit / options.minorUnit);\n    }\n\n    createLine() {\n        const options = this.options;\n        const line = options.line;\n        const lineBox = this.lineBox();\n\n        if (line.width > 0 && line.visible) {\n            const path = new draw.Path({\n                stroke: {\n                    width: line.width,\n                    color: line.color,\n                    dashType: line.dashType\n                }\n\n                /* TODO\n                zIndex: line.zIndex,\n                */\n            });\n\n            path.moveTo(lineBox.x1, lineBox.y1)\n                .lineTo(lineBox.x2, lineBox.y2);\n\n            if (options._alignLines) {\n                alignPathToPixel(path);\n            }\n\n            const group = this._lineGroup = new draw.Group();\n            group.append(path);\n\n            this.visual.append(group);\n            this.createTicks(group);\n        }\n    }\n\n    getActualTickSize() {\n        const options = this.options;\n        let tickSize = 0;\n\n        if (options.majorTicks.visible && options.minorTicks.visible) {\n            tickSize = Math.max(options.majorTicks.size, options.minorTicks.size);\n        } else if (options.majorTicks.visible) {\n            tickSize = options.majorTicks.size;\n        } else if (options.minorTicks.visible) {\n            tickSize = options.minorTicks.size;\n        }\n\n        return tickSize;\n    }\n\n    createBackground() {\n        const { options, box } = this;\n        const background = options.background;\n\n        if (background) {\n            this._backgroundPath = draw.Path.fromRect(box.toRect(), {\n                fill: {\n                    color: background\n                },\n                stroke: null\n            });\n\n            this.visual.append(this._backgroundPath);\n        }\n    }\n\n    createPlotBands() {\n        const options = this.options;\n        const plotBands = options.plotBands || [];\n        const vertical = options.vertical;\n        const plotArea = this.plotArea;\n\n        if (plotBands.length === 0) {\n            return;\n        }\n\n        const group = this._plotbandGroup = new draw.Group({\n            zIndex: -1\n        });\n\n        const altAxis = grep(this.pane.axes, axis => axis.options.vertical !== this.options.vertical)[0];\n\n        for (let idx = 0; idx < plotBands.length; idx++) {\n            let item = plotBands[idx];\n            let slotX, slotY;\n\n            if (vertical) {\n                slotX = (altAxis || plotArea.axisX).lineBox();\n                slotY = this.getSlot(item.from, item.to, true);\n            } else {\n                slotX = this.getSlot(item.from, item.to, true);\n                slotY = (altAxis || plotArea.axisY).lineBox();\n            }\n\n            if (slotX.width() !== 0 && slotY.height() !== 0) {\n                const bandRect = new geom.Rect(\n                    [ slotX.x1, slotY.y1 ],\n                    [ slotX.width(), slotY.height() ]\n                );\n\n                const path = draw.Path.fromRect(bandRect, {\n                    fill: {\n                        color: item.color,\n                        opacity: item.opacity\n                    },\n                    stroke: null\n                });\n\n                group.append(path);\n            }\n        }\n\n        this.appendVisual(group);\n    }\n\n    createGridLines(altAxis) {\n        const options = this.options;\n        const { minorGridLines, majorGridLines, minorUnit, vertical } = options;\n        const axisLineVisible = altAxis.options.line.visible;\n        const majorUnit = majorGridLines.visible ? options.majorUnit : 0;\n        const lineBox = altAxis.lineBox();\n        const linePos = lineBox[vertical ? \"y1\" : \"x1\"];\n        const lineOptions = {\n            lineStart: lineBox[vertical ? \"x1\" : \"y1\"],\n            lineEnd: lineBox[vertical ? \"x2\" : \"y2\"],\n            vertical: vertical\n        };\n        const majorTicks = [];\n\n        const container = this.gridLinesVisual();\n\n        function render(tickPositions, gridLine, skipUnit) {\n            const count = tickPositions.length;\n            const step = Math.max(1, gridLine.step);\n\n            if (gridLine.visible) {\n                for (let i = gridLine.skip; i < count; i += step) {\n                    let pos = round(tickPositions[i]);\n                    if (!inArray(pos, majorTicks)) {\n                        if (i % skipUnit !== 0 && (!axisLineVisible || linePos !== pos)) {\n                            lineOptions.position = pos;\n                            container.append(createAxisGridLine(lineOptions, gridLine));\n\n                            majorTicks.push(pos);\n                        }\n                    }\n                }\n            }\n        }\n\n        render(this.getMajorTickPositions(), majorGridLines);\n        render(this.getMinorTickPositions(), minorGridLines, majorUnit / minorUnit);\n\n        return container.children;\n    }\n\n    reflow(box) {\n        const { options, labels, title } = this;\n        const vertical = options.vertical;\n        const count = labels.length;\n        const sizeFn = vertical ? WIDTH : HEIGHT;\n        const titleSize = title ? title.box[sizeFn]() : 0;\n        const space = this.getActualTickSize() + options.margin + titleSize;\n        const rootBox = (this.getRoot() || {}).box || box;\n        const boxSize = rootBox[sizeFn]();\n        let maxLabelSize = 0;\n\n        for (let i = 0; i < count; i++) {\n            let labelSize = labels[i].box[sizeFn]();\n            if (labelSize + space <= boxSize) {\n                maxLabelSize = Math.max(maxLabelSize, labelSize);\n            }\n        }\n\n        if (vertical) {\n            this.box = new Box(\n                box.x1, box.y1,\n                box.x1 + maxLabelSize + space, box.y2\n            );\n        } else {\n            this.box = new Box(\n                box.x1, box.y1,\n                box.x2, box.y1 + maxLabelSize + space\n            );\n        }\n\n        this.arrangeTitle();\n        this.arrangeLabels();\n        this.arrangeNotes();\n    }\n\n    getLabelsTickPositions() {\n        return this.getMajorTickPositions();\n    }\n\n    labelTickIndex(label) {\n        return label.index;\n    }\n\n    arrangeLabels() {\n        const { options, labels } = this;\n        const labelsBetweenTicks = !options.justified;\n        const vertical = options.vertical;\n        const lineBox = this.lineBox();\n        const mirror = options.labels.mirror;\n        const tickPositions = this.getLabelsTickPositions();\n        const labelOffset = this.getActualTickSize() + options.margin;\n\n        for (let idx = 0; idx < labels.length; idx++) {\n            const label = labels[idx];\n            const tickIx = this.labelTickIndex(label);\n            const labelSize = vertical ? label.box.height() : label.box.width();\n            let labelPos = tickPositions[tickIx] - (labelSize / 2);\n            let labelBox, firstTickPosition, nextTickPosition;\n\n            if (vertical) {\n                if (labelsBetweenTicks) {\n                    firstTickPosition = tickPositions[tickIx];\n                    nextTickPosition = tickPositions[tickIx + 1];\n\n                    let middle = firstTickPosition + (nextTickPosition - firstTickPosition) / 2;\n                    labelPos = middle - (labelSize / 2);\n                }\n\n                let labelX = lineBox.x2;\n\n                if (mirror) {\n                    labelX += labelOffset;\n                    label.options.rotationOrigin = LEFT;\n                } else {\n                    labelX -= labelOffset + label.box.width();\n                    label.options.rotationOrigin = RIGHT;\n                }\n\n                labelBox = label.box.move(labelX, labelPos);\n            } else {\n                if (labelsBetweenTicks) {\n                    firstTickPosition = tickPositions[tickIx];\n                    nextTickPosition = tickPositions[tickIx + 1];\n                } else {\n                    firstTickPosition = labelPos;\n                    nextTickPosition = labelPos + labelSize;\n                }\n\n                let labelY = lineBox.y1;\n\n                if (mirror) {\n                    labelY -= labelOffset + label.box.height();\n                    label.options.rotationOrigin = BOTTOM;\n                } else {\n                    labelY += labelOffset;\n                    label.options.rotationOrigin = TOP;\n                }\n\n                labelBox = new Box(firstTickPosition, labelY,\n                                nextTickPosition, labelY + label.box.height());\n            }\n\n            label.reflow(labelBox);\n        }\n    }\n\n    autoRotateLabels() {\n        if (this.options.autoRotateLabels && !this.options.vertical) {\n            const tickPositions = this.getMajorTickPositions();\n            const labels = this.labels;\n            let angle;\n\n            for (let idx = 0; idx < labels.length; idx++) {\n                const width = tickPositions[idx + 1] - tickPositions[idx];\n                const labelBox = labels[idx].box;\n\n                if (labelBox.width() > width) {\n                    if (labelBox.height() > width) {\n                        angle = -90;\n                        break;\n                    }\n                    angle = -45;\n                }\n            }\n\n            if (angle) {\n                for (let idx = 0; idx < labels.length; idx++) {\n                    labels[idx].options.rotation = angle;\n                    labels[idx].reflow(new Box());\n                }\n                return true;\n            }\n        }\n    }\n\n    arrangeTitle() {\n        const { options, title } = this;\n        const mirror = options.labels.mirror;\n        const vertical = options.vertical;\n\n        if (title) {\n            if (vertical) {\n                title.options.align = mirror ? RIGHT : LEFT;\n                title.options.vAlign = title.options.position;\n            } else {\n                title.options.align = title.options.position;\n                title.options.vAlign = mirror ? TOP : BOTTOM;\n            }\n\n            title.reflow(this.box);\n        }\n    }\n\n    arrangeNotes() {\n        for (let idx = 0; idx < this.notes.length; idx++) {\n            const item = this.notes[idx];\n            const value = item.options.value;\n            let slot;\n\n            if (defined(value)) {\n                if (this.shouldRenderNote(value)) {\n                    item.show();\n                } else {\n                    item.hide();\n                }\n\n                slot = this.noteSlot(value);\n            } else {\n                item.hide();\n            }\n\n            item.reflow(slot || this.lineBox());\n        }\n    }\n\n    noteSlot(value) {\n        return this.getSlot(value);\n    }\n\n    alignTo(secondAxis) {\n        const lineBox = secondAxis.lineBox();\n        const vertical = this.options.vertical;\n        const pos = vertical ? Y : X;\n\n        this.box.snapTo(lineBox, pos);\n        if (vertical) {\n            this.box.shrink(0, this.lineBox().height() - lineBox.height());\n        } else {\n            this.box.shrink(this.lineBox().width() - lineBox.width(), 0);\n        }\n        this.box[pos + 1] -= this.lineBox()[pos + 1] - lineBox[pos + 1];\n        this.box[pos + 2] -= this.lineBox()[pos + 2] - lineBox[pos + 2];\n    }\n\n    axisLabelText(value, dataItem, options) {\n        const tmpl = getTemplate(options);\n        let text = value;\n\n        if (tmpl) {\n            text = tmpl({ value: value, dataItem: dataItem, format: options.format, culture: options.culture });\n        } else if (options.format) {\n            text = this.chartService.format.localeAuto(options.format, [ value ], options.culture);\n        }\n\n        return text;\n    }\n\n    slot(from , to, limit) {\n        const slot = this.getSlot(from, to, limit);\n        if (slot) {\n            return slot.toRect();\n        }\n    }\n\n    contentBox() {\n        const box = this.box.clone();\n        const labels = this.labels;\n        if (labels.length) {\n            if (labels[0].options.visible) {\n                box.wrap(labels[0].box);\n            }\n            const lastLabel = labels[labels.length - 1];\n            if (lastLabel.options.visible) {\n                box.wrap(lastLabel.box);\n            }\n        }\n\n        return box;\n    }\n\n    limitRange(from, to, min, max, offset) {\n        const options = this.options;\n\n        if ((from < min && offset < 0 && (!defined(options.min) || options.min <= min)) || (max < to && offset > 0 && (!defined(options.max) || max <= options.max))) {\n            return null;\n        }\n\n        if ((to < min && offset > 0) || (max < from && offset < 0)) {\n            return {\n                min: from,\n                max: to\n            };\n        }\n\n        const rangeSize = to - from;\n        let minValue = from;\n        let maxValue = to;\n\n        if (from < min) {\n            minValue = limitValue(from, min, max);\n            maxValue = limitValue(from + rangeSize, min + rangeSize, max);\n        } else if (to > max) {\n            maxValue = limitValue(to, min, max);\n            minValue = limitValue(to - rangeSize, min, max - rangeSize);\n        }\n\n        return {\n            min: minValue,\n            max: maxValue\n        };\n    }\n\n    valueRange() {\n        return {\n            min: this.seriesMin,\n            max: this.seriesMax\n        };\n    }\n}\n\nsetDefaultOptions(Axis, {\n    labels: {\n        visible: true,\n        rotation: 0,\n        mirror: false,\n        step: 1,\n        skip: 0\n    },\n    line: {\n        width: 1,\n        color: BLACK,\n        visible: true\n    },\n    title: {\n        visible: true,\n        position: CENTER\n    },\n    majorTicks: {\n        align: OUTSIDE,\n        size: 4,\n        skip: 0,\n        step: 1\n    },\n    minorTicks: {\n        align: OUTSIDE,\n        size: 3,\n        skip: 0,\n        step: 1\n    },\n    axisCrossingValue: 0,\n    majorTickType: OUTSIDE,\n    minorTickType: NONE,\n    majorGridLines: {\n        skip: 0,\n        step: 1\n    },\n    minorGridLines: {\n        visible: false,\n        width: 1,\n        color: BLACK,\n        skip: 0,\n        step: 1\n    },\n    // TODO: Move to line or labels options\n    margin: 5,\n    visible: true,\n    reverse: false,\n    justified: true,\n    notes: {\n        label: {\n            text: \"\"\n        }\n    },\n\n    _alignLines: true,\n    _deferLabels: false\n});\n\nexport default Axis;","import Axis from './axis';\nimport AxisLabel from './axis-label';\n\nimport { BLACK, COORD_PRECISION, DEFAULT_PRECISION, X, Y } from '../common/constants';\nimport { defined, isNumber, last, limitValue, round, setDefaultOptions, valueOrDefault } from '../common';\n\nconst MIN_CATEGORY_POINTS_RANGE = 0.01;\n\nclass CategoryAxis extends Axis {\n    constructor(options, chartService) {\n        super(options, chartService);\n\n        this._ticks = {};\n        this._initCategories(this.options);\n    }\n\n    _initCategories(options) {\n        const categories = (options.categories || []).slice(0);\n        const definedMin = defined(options.min);\n        const definedMax = defined(options.max);\n        options.categories = categories;\n\n        if ((definedMin || definedMax) && categories.length) {\n            options.srcCategories = options.categories;\n            const min = definedMin ? Math.floor(options.min) : 0;\n            let max;\n\n            if (definedMax) {\n                max = options.justified ? Math.floor(options.max) + 1 : Math.ceil(options.max);\n            } else {\n                max = categories.length;\n            }\n\n            options.categories = options.categories.slice(min, max);\n        }\n    }\n\n    rangeIndices() {\n        const options = this.options;\n        const length = options.categories.length || 1;\n        const min = isNumber(options.min) ? options.min % 1 : 0;\n        let max;\n\n        if (isNumber(options.max) && options.max % 1 !== 0 && options.max < this.totalRange().max) {\n            max = length - (1 - options.max % 1);\n        } else {\n            max = length - (options.justified ? 1 : 0);\n        }\n\n        return {\n            min: min,\n            max: max\n        };\n    }\n\n    totalRangeIndices(limit) {\n        const options = this.options;\n        let min = isNumber(options.min) ? options.min : 0;\n        let max;\n\n        if (isNumber(options.max)) {\n            max = options.max;\n        } else if (isNumber(options.min)) {\n            max = min + options.categories.length;\n        } else {\n            max = ((options.srcCategories || options.categories).length - (options.justified ? 1 : 0) || 1);\n        }\n\n        if (limit) {\n            const totalRange = this.totalRange();\n            min = limitValue(min, 0, totalRange.max);\n            max = limitValue(max, 0, totalRange.max);\n        }\n\n        return {\n            min: min,\n            max: max\n        };\n    }\n\n    range() {\n        const options = this.options;\n        return { min: isNumber(options.min) ? options.min : 0, max: isNumber(options.max) ? options.max : options.categories.length };\n    }\n\n    totalRange() {\n        const options = this.options;\n        return { min: 0, max: Math.max(this._seriesMax || 0, (options.srcCategories || options.categories).length) - (options.justified ? 1 : 0) };\n    }\n\n    getScale() {\n        const { min, max } = this.rangeIndices();\n        const lineBox = this.lineBox();\n        const size = this.options.vertical ? lineBox.height() : lineBox.width();\n        const scale = size / ((max - min) || 1);\n\n        return scale * (this.options.reverse ? -1 : 1);\n    }\n\n    getTickPositions(stepSize) {\n        const { vertical, reverse } = this.options;\n        const { min, max } = this.rangeIndices();\n        const lineBox = this.lineBox();\n        const scale = this.getScale();\n        const pos = lineBox[(vertical ? Y : X) + (reverse ? 2 : 1)];\n        const positions = [];\n\n        let current = min % 1 !== 0 ? Math.floor(min / 1) + stepSize : min;\n\n        while (current <= max) {\n            positions.push(pos + round(scale * (current - min), COORD_PRECISION));\n            current += stepSize;\n        }\n\n        return positions;\n    }\n\n    getLabelsTickPositions() {\n        const tickPositions = this.getMajorTickPositions().slice(0);\n        const range = this.rangeIndices();\n        const scale = this.getScale();\n        const box = this.lineBox();\n        const options = this.options;\n        const axis = options.vertical ? Y : X;\n        const start = options.reverse ? 2 : 1;\n        const end = options.reverse ? 1 : 2;\n\n        if (range.min % 1 !== 0) {\n            tickPositions.unshift(box[axis + start] - scale * (range.min % 1));\n        }\n\n        if (range.max % 1 !== 0) {\n            tickPositions.push(box[axis + end] + scale * (1 - range.max % 1));\n        }\n\n        return tickPositions;\n    }\n\n    labelTickIndex(label) {\n        const range = this.rangeIndices();\n        let index = label.index;\n\n        if (range.min > 0) {\n            index = index - Math.floor(range.min);\n        }\n\n        return index;\n    }\n\n    arrangeLabels() {\n        super.arrangeLabels();\n        this.hideOutOfRangeLabels();\n    }\n\n    hideOutOfRangeLabels() {\n        const { box, labels } = this;\n\n        if (labels.length) {\n            const valueAxis = this.options.vertical ? Y : X;\n            const start = box[valueAxis + 1];\n            const end = box[valueAxis + 2];\n            const firstLabel = labels[0];\n            const lastLabel = last(labels);\n\n            if (firstLabel.box[valueAxis + 1] > end || firstLabel.box[valueAxis + 2] < start) {\n                firstLabel.options.visible = false;\n            }\n            if (lastLabel.box[valueAxis + 1] > end || lastLabel.box[valueAxis + 2] < start) {\n                lastLabel.options.visible = false;\n            }\n        }\n    }\n\n    getMajorTickPositions() {\n        return this.getTicks().majorTicks;\n    }\n\n    getMinorTickPositions() {\n        return this.getTicks().minorTicks;\n    }\n\n    getTicks() {\n        const { reverse, justified } = this.options;\n        const cache = this._ticks;\n        const range = this.rangeIndices();\n        const lineBox = this.lineBox();\n        const hash = lineBox.getHash() + range.min + \",\" + range.max + reverse + justified;\n\n        if (cache._hash !== hash) {\n            cache._hash = hash;\n            cache.majorTicks = this.getTickPositions(1);\n            cache.minorTicks = this.getTickPositions(0.5);\n        }\n\n        return cache;\n    }\n\n    getSlot(from, to, limit) {\n        const { options } = this;\n        const { reverse, justified, vertical } = options;\n        const { min } = this.rangeIndices();\n        const valueAxis = vertical ? Y : X;\n        const lineBox = this.lineBox();\n        const scale = this.getScale();\n        const lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n        const slotBox = lineBox.clone();\n        const singleSlot = !defined(to);\n\n        const start = valueOrDefault(from, 0);\n        let end = valueOrDefault(to, start);\n        end = Math.max(end - 1, start);\n\n        // Fixes transient bug caused by iOS 6.0 JIT\n        // (one can never be too sure)\n        end = Math.max(start, end);\n\n        let p1 = lineStart + (start - min) * scale;\n        let p2 = lineStart + (end + 1 - min) * scale;\n\n        if (singleSlot && justified) {\n            p2 = p1;\n        }\n\n        if (limit) {\n            p1 = limitValue(p1, lineBox[valueAxis + 1], lineBox[valueAxis + 2]);\n            p2 = limitValue(p2, lineBox[valueAxis + 1], lineBox[valueAxis + 2]);\n        }\n\n        slotBox[valueAxis + 1] = reverse ? p2 : p1;\n        slotBox[valueAxis + 2] = reverse ? p1 : p2;\n\n        return slotBox;\n    }\n\n    slot(from, to, limit) {\n        let start = from;\n        let end = to;\n\n        if (typeof start === \"string\") {\n            start = this.categoryIndex(start);\n        }\n\n        if (typeof end === \"string\") {\n            end = this.categoryIndex(end);\n        }\n\n        return super.slot(start, end, limit);\n    }\n\n    pointCategoryIndex(point) {\n        const { reverse, justified, vertical } = this.options;\n        const valueAxis = vertical ? Y : X;\n        const lineBox = this.lineBox();\n        const range = this.rangeIndices();\n        const startValue = reverse ? range.max : range.min;\n        const scale = this.getScale();\n        const lineStart = lineBox[valueAxis + 1];\n        const lineEnd = lineBox[valueAxis + 2];\n        const pos = point[valueAxis];\n\n        if (pos < lineStart || pos > lineEnd) {\n            return null;\n        }\n\n        let value = startValue + (pos - lineStart) / scale;\n        const diff = value % 1;\n\n        if (justified) {\n            value = Math.round(value);\n        } else if (diff === 0 && value > 0) {\n            value--;\n        }\n\n        return Math.floor(value);\n    }\n\n    getCategory(point) {\n        const index = this.pointCategoryIndex(point);\n\n        if (index === null) {\n            return null;\n        }\n\n        return this.options.categories[index];\n    }\n\n    categoryIndex(value) {\n        const options = this.options;\n        const index = (options.srcCategories || options.categories).indexOf(value);\n\n        return index - Math.floor(options.min || 0);\n    }\n\n    translateRange(delta) {\n        const options = this.options;\n        const lineBox = this.lineBox();\n        const size = options.vertical ? lineBox.height() : lineBox.width();\n        const range = options.categories.length;\n        const scale = size / range;\n        const offset = round(delta / scale, DEFAULT_PRECISION);\n\n        return {\n            min: offset,\n            max: range + offset\n        };\n    }\n\n    zoomRange(rate) {\n        const rangeIndices = this.totalRangeIndices();\n        const { min: totalMin, max: totalMax } = this.totalRange();\n        const min = limitValue(rangeIndices.min + rate, totalMin, totalMax);\n        const max = limitValue(rangeIndices.max - rate, totalMin, totalMax);\n\n        if (max - min > 0) {\n            return {\n                min: min,\n                max: max\n            };\n        }\n    }\n\n    scaleRange(scale) {\n        const range = this.options.categories.length;\n        const delta = scale * range;\n\n        return {\n            min: -delta,\n            max: range + delta\n        };\n    }\n\n    labelsCount() {\n        const labelsRange = this.labelsRange();\n\n        return labelsRange.max - labelsRange.min;\n    }\n\n    labelsRange() {\n        const options = this.options;\n        const { justified, labels: labelOptions } = options;\n        let { min, max } = this.totalRangeIndices(true);\n        const start = Math.floor(min);\n\n        if (!justified) {\n            min = Math.floor(min);\n            max = Math.ceil(max);\n        } else {\n            min = Math.ceil(min);\n            max = Math.floor(max);\n        }\n\n        let skip;\n\n        if (min > labelOptions.skip) {\n            skip = labelOptions.skip + labelOptions.step * Math.ceil((min - labelOptions.skip) / labelOptions.step);\n        } else {\n            skip = labelOptions.skip;\n        }\n\n        return {\n            min: skip - start,\n            max: (options.categories.length ? max + (justified ? 1 : 0) : 0) - start\n        };\n    }\n\n    createAxisLabel(index, labelOptions) {\n        const options = this.options;\n        const dataItem = options.dataItems ? options.dataItems[index] : null;\n        const category = valueOrDefault(options.categories[index], \"\");\n        const text = this.axisLabelText(category, dataItem, labelOptions);\n\n        return new AxisLabel(category, text, index, dataItem, labelOptions);\n    }\n\n    shouldRenderNote(value) {\n        const range = this.totalRangeIndices();\n\n        return Math.floor(range.min) <= value && value <= Math.ceil(range.max);\n    }\n\n    noteSlot(value) {\n        const options = this.options;\n        const index = value - Math.floor(options.min || 0);\n        return this.getSlot(index);\n    }\n\n    arrangeNotes() {\n        super.arrangeNotes();\n        this.hideOutOfRangeNotes();\n    }\n\n    hideOutOfRangeNotes() {\n        const { notes, box } = this;\n        if (notes && notes.length) {\n            const valueAxis = this.options.vertical ? Y : X;\n            const start = box[valueAxis + 1];\n            const end = box[valueAxis + 2];\n\n            for (let idx = 0; idx < notes.length; idx++) {\n                const note = notes[idx];\n                if (note.box && (end < note.box[valueAxis + 1] || note.box[valueAxis + 2] < start)) {\n                    note.hide();\n                }\n            }\n        }\n    }\n\n    pan(delta) {\n        const range = this.totalRangeIndices(true);\n        const scale = this.getScale();\n        const offset = round(delta / scale, DEFAULT_PRECISION);\n        const totalRange = this.totalRange();\n        const min = range.min + offset;\n        const max = range.max + offset;\n\n        return this.limitRange(min, max, 0, totalRange.max, offset);\n    }\n\n    pointsRange(start, end) {\n        const { reverse, vertical } = this.options;\n        const valueAxis = vertical ? Y : X;\n        const lineBox = this.lineBox();\n        const range = this.totalRangeIndices(true);\n        const scale = this.getScale();\n        const lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n\n        const diffStart = start[valueAxis] - lineStart;\n        const diffEnd = end[valueAxis] - lineStart;\n\n        const min = range.min + diffStart / scale;\n        const max = range.min + diffEnd / scale;\n        const rangeMin = Math.min(min, max);\n        const rangeMax = Math.max(min, max);\n\n        if (rangeMax - rangeMin >= MIN_CATEGORY_POINTS_RANGE) {\n            return {\n                min: rangeMin,\n                max: rangeMax\n            };\n        }\n    }\n\n    valueRange() {\n        return this.range();\n    }\n}\n\nsetDefaultOptions(CategoryAxis, {\n    type: \"category\",\n    categories: [],\n    vertical: false,\n    majorGridLines: {\n        visible: false,\n        width: 1,\n        color: BLACK\n    },\n    labels: {\n        zIndex: 1\n    },\n    justified: false,\n    _deferLabels: true\n});\n\nexport default CategoryAxis;","export const MILLISECONDS = \"milliseconds\";\nexport const SECONDS = \"seconds\";\nexport const MINUTES = \"minutes\";\nexport const HOURS = \"hours\";\nexport const DAYS = \"days\";\nexport const WEEKS = \"weeks\";\nexport const MONTHS = \"months\";\nexport const YEARS = \"years\";\n\nexport const TIME_PER_MILLISECOND = 1;\nexport const TIME_PER_SECOND = 1000;\nexport const TIME_PER_MINUTE = 60 * TIME_PER_SECOND;\nexport const TIME_PER_HOUR = 60 * TIME_PER_MINUTE;\nexport const TIME_PER_DAY = 24 * TIME_PER_HOUR;\nexport const TIME_PER_WEEK = 7 * TIME_PER_DAY;\nexport const TIME_PER_MONTH = 31 * TIME_PER_DAY;\nexport const TIME_PER_YEAR = 365 * TIME_PER_DAY;\nexport const TIME_PER_UNIT = {\n    \"years\": TIME_PER_YEAR,\n    \"months\": TIME_PER_MONTH,\n    \"weeks\": TIME_PER_WEEK,\n    \"days\": TIME_PER_DAY,\n    \"hours\": TIME_PER_HOUR,\n    \"minutes\": TIME_PER_MINUTE,\n    \"seconds\": TIME_PER_SECOND,\n    \"milliseconds\": TIME_PER_MILLISECOND\n};\n\n","import { TIME_PER_MINUTE } from './constants';\n\nexport default function absoluteDateDiff(a, b) {\n    const diff = a.getTime() - b;\n    const offsetDiff = a.getTimezoneOffset() - b.getTimezoneOffset();\n\n    return diff - (offsetDiff * TIME_PER_MINUTE);\n}","export default function addTicks(date, ticks) {\n    return new Date(date.getTime() + ticks);\n}","export default function toDate(value) {\n    let result;\n\n    if (value instanceof Date) {\n        result = value;\n    } else if (value) {\n        result = new Date(value);\n    }\n\n    return result;\n}","import { TIME_PER_DAY } from './constants';\nimport addTicks from './add-ticks';\n\nexport default function startOfWeek(date, weekStartDay = 0) {\n    let daysToSubtract = 0;\n    let day = date.getDay();\n\n    if (!isNaN(day)) {\n        while (day !== weekStartDay) {\n            if (day === 0) {\n                day = 6;\n            } else {\n                day--;\n            }\n\n            daysToSubtract++;\n        }\n    }\n\n    return addTicks(date, -daysToSubtract * TIME_PER_DAY);\n}","import { MILLISECONDS, SECONDS, MINUTES, HOURS, DAYS, WEEKS, MONTHS, YEARS,\n    TIME_PER_SECOND, TIME_PER_MINUTE, TIME_PER_HOUR } from './constants';\nimport addTicks from './add-ticks';\nimport toDate from './to-date';\nimport startOfWeek from './start-of-week';\n\nfunction adjustDST(date, hours) {\n    if (hours === 0 && date.getHours() === 23) {\n        date.setHours(date.getHours() + 2);\n        return true;\n    }\n\n    return false;\n}\n\nfunction addHours(date, hours) {\n    const roundedDate = new Date(date);\n\n    roundedDate.setMinutes(0, 0, 0);\n\n    const tzDiff = (date.getTimezoneOffset() - roundedDate.getTimezoneOffset()) * TIME_PER_MINUTE;\n\n    return addTicks(roundedDate, tzDiff + hours * TIME_PER_HOUR);\n}\n\nexport default function addDuration(dateValue, value, unit, weekStartDay) {\n    let result = dateValue;\n\n    if (dateValue) {\n        let date = toDate(dateValue);\n        const hours = date.getHours();\n\n        if (unit === YEARS) {\n            result = new Date(date.getFullYear() + value, 0, 1);\n            adjustDST(result, 0);\n        } else if (unit === MONTHS) {\n            result = new Date(date.getFullYear(), date.getMonth() + value, 1);\n            adjustDST(result, hours);\n        } else if (unit === WEEKS) {\n            result = addDuration(startOfWeek(date, weekStartDay), value * 7, DAYS);\n            adjustDST(result, hours);\n        } else if (unit === DAYS) {\n            result = new Date(date.getFullYear(), date.getMonth(), date.getDate() + value);\n            adjustDST(result, hours);\n        } else if (unit === HOURS) {\n            result = addHours(date, value);\n        } else if (unit === MINUTES) {\n            result = addTicks(date, value * TIME_PER_MINUTE);\n\n            if (result.getSeconds() > 0) {\n                result.setSeconds(0);\n            }\n        } else if (unit === SECONDS) {\n            result = addTicks(date, value * TIME_PER_SECOND);\n        } else if (unit === MILLISECONDS) {\n            result = addTicks(date, value);\n        }\n\n        if (unit !== MILLISECONDS && result.getMilliseconds() > 0) {\n            result.setMilliseconds(0);\n        }\n    }\n\n    return result;\n}","import addDuration from './add-duration';\nimport toDate from './to-date';\n\nexport default function floorDate(date, unit, weekStartDay) {\n    return addDuration(toDate(date), 0, unit, weekStartDay);\n}","import floorDate from './floor-date';\nimport addDuration from './add-duration';\nimport toDate from './to-date';\n\nexport default function ceilDate(dateValue, unit, weekStartDay) {\n    const date = toDate(dateValue);\n\n    if (date && floorDate(date, unit, weekStartDay).getTime() === date.getTime()) {\n        return date;\n    }\n\n    return addDuration(date, 1, unit, weekStartDay);\n}","export default function dateComparer(a, b) {\n    if (a && b) {\n        return a.getTime() - b.getTime();\n    }\n\n    return -1;\n}","export default function dateDiff(a, b) {\n    return a.getTime() - b;\n}","import { isArray } from '../common';\nimport toDate from './to-date';\n\nexport default function toTime(value) {\n    if (isArray(value)) {\n        let result = [];\n        for (let idx = 0; idx < value.length; idx++) {\n            result.push(toTime(value[idx]));\n        }\n\n        return result;\n    } else if (value) {\n        return toDate(value).getTime();\n    }\n}","import toTime from './to-time';\n\nexport default function dateEquals(a, b) {\n    if (a && b) {\n        return toTime(a) === toTime(b);\n    }\n\n    return a === b;\n}","import { DAYS, WEEKS, MONTHS, YEARS, TIME_PER_UNIT } from './constants';\nimport dateDiff from './date-diff';\nimport absoluteDateDiff from './absolute-date-diff';\nimport toDate from './to-date';\n\nfunction timeIndex(date, start, baseUnit) {\n    return absoluteDateDiff(date, start) / TIME_PER_UNIT[baseUnit];\n}\n\nexport default function dateIndex(value, start, baseUnit, baseUnitStep) {\n    const date = toDate(value);\n    const startDate = toDate(start);\n    let index;\n\n    if (baseUnit === MONTHS) {\n        index = (date.getMonth() - startDate.getMonth() + (date.getFullYear() - startDate.getFullYear()) * 12) +\n            timeIndex(date, new Date(date.getFullYear(), date.getMonth()), DAYS) / new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n    } else if (baseUnit === YEARS) {\n        index = date.getFullYear() - startDate.getFullYear() + dateIndex(date, new Date(date.getFullYear(), 0), MONTHS, 1) / 12;\n    } else if (baseUnit === DAYS || baseUnit === WEEKS) {\n        index = timeIndex(date, startDate, baseUnit);\n    } else {\n        index = dateDiff(date, start) / TIME_PER_UNIT[baseUnit];\n    }\n\n    return index / baseUnitStep;\n}\n\n","import { DAYS, MONTHS, YEARS, TIME_PER_DAY, TIME_PER_UNIT } from './constants';\nimport dateDiff from './date-diff';\n\nexport default function duration(a, b, unit) {\n    let diff;\n\n    if (unit === YEARS) {\n        diff = b.getFullYear() - a.getFullYear();\n    } else if (unit === MONTHS) {\n        diff = duration(a, b, YEARS) * 12 + b.getMonth() - a.getMonth();\n    } else if (unit === DAYS) {\n        diff = Math.floor(dateDiff(b, a) / TIME_PER_DAY);\n    } else {\n        diff = Math.floor(dateDiff(b, a) / TIME_PER_UNIT[unit]);\n    }\n\n    return diff;\n}","import dateEquals from './date-equals';\n\nexport default function lteDateIndex(date, sortedDates) {\n    let low = 0;\n    let high = sortedDates.length - 1;\n    let index;\n\n    while (low <= high) {\n        index = Math.floor((low + high) / 2);\n        const currentDate = sortedDates[index];\n\n        if (currentDate < date) {\n            low = index + 1;\n            continue;\n        }\n\n        if (currentDate > date) {\n            high = index - 1;\n            continue;\n        }\n\n        while (dateEquals(sortedDates[index - 1], date)) {\n            index--;\n        }\n\n        return index;\n    }\n\n    if (sortedDates[index] <= date) {\n        return index;\n    }\n\n    return index - 1;\n}","import { isString } from '../common';\nimport toDate from './to-date';\n\nexport default function parseDate(intlService, date) {\n    let result;\n    if (isString(date)) {\n        result = intlService.parseDate(date) || toDate(date);\n    } else {\n        result = toDate(date);\n    }\n    return result;\n}","import parseDate from './parse-date';\n\nimport { isArray } from '../common';\n\nexport default function parseDates(intlService, dates) {\n    if (isArray(dates)) {\n        const result = [];\n        for (let idx = 0; idx < dates.length; idx++) {\n            result.push(parseDate(intlService, dates[idx]));\n        }\n\n        return result;\n    }\n\n    return parseDate(intlService, dates);\n}","const COORDINATE_LIMIT = 300000;\n\nconst DateLabelFormats = {\n    seconds: \"HH:mm:ss\",\n    minutes: \"HH:mm\",\n    hours: \"HH:mm\",\n    days: \"M/d\",\n    weeks: \"M/d\",\n    months: \"MMM 'yy\",\n    years: \"yyyy\"\n};\n\nconst ZERO_THRESHOLD = 0.2;\n\nexport {\n    COORDINATE_LIMIT, DateLabelFormats, ZERO_THRESHOLD\n};","import CategoryAxis from './category-axis';\nimport AxisLabel from './axis-label';\n\nimport { DEFAULT_PRECISION, MAX_VALUE, OBJECT, DATE } from '../common/constants';\nimport { deepExtend, defined, inArray, last, limitValue, round, setDefaultOptions, sparseArrayLimits } from '../common';\n\nimport { MILLISECONDS, SECONDS, MINUTES, HOURS, DAYS, WEEKS, MONTHS, YEARS,\n    TIME_PER_MINUTE, TIME_PER_HOUR, TIME_PER_DAY, TIME_PER_WEEK,\n    TIME_PER_MONTH, TIME_PER_YEAR, TIME_PER_UNIT } from '../date-utils/constants';\nimport { dateComparer, toDate, addTicks, addDuration, dateDiff, absoluteDateDiff, dateIndex, dateEquals, toTime, floorDate, parseDate, parseDates } from '../date-utils';\n\nimport { DateLabelFormats } from './constants';\n\nconst AUTO = \"auto\";\nconst BASE_UNITS = [\n    MILLISECONDS, SECONDS, MINUTES, HOURS, DAYS, WEEKS, MONTHS, YEARS\n];\nconst FIT = \"fit\";\n\nclass DateCategoryAxis extends CategoryAxis {\n\n    constructor(axisOptions, chartService) {\n        super(axisOptions, chartService);\n\n        const intlService = chartService.intl;\n        let options = this.options;\n\n        options = deepExtend({\n            roundToBaseUnit: true\n        }, options, {\n            categories: parseDates(intlService, options.categories),\n            min: parseDate(intlService, options.min),\n            max: parseDate(intlService, options.max)\n        });\n\n        options.userSetBaseUnit = options.userSetBaseUnit || options.baseUnit;\n        options.userSetBaseUnitStep = options.userSetBaseUnitStep || options.baseUnitStep;\n\n        if (options.categories && options.categories.length > 0) {\n            const baseUnit = (options.baseUnit || \"\").toLowerCase();\n            const useDefault = baseUnit !== FIT && !inArray(baseUnit, BASE_UNITS);\n\n            if (useDefault) {\n                options.baseUnit = this.defaultBaseUnit(options);\n            }\n\n            if (baseUnit === FIT || options.baseUnitStep === AUTO) {\n                this.autoBaseUnit(options);\n            }\n\n            this._groupsStart = addDuration(options.categories[0], 0, options.baseUnit, options.weekStartDay);\n\n            this.groupCategories(options);\n        } else {\n            options.baseUnit = options.baseUnit || DAYS;\n        }\n\n        this.options = options;\n    }\n\n    _initCategories() {}\n\n    shouldRenderNote(value) {\n        const range = this.range();\n        const categories = this.options.categories || [];\n\n        return dateComparer(value, range.min) >= 0 && dateComparer(value, range.max) <= 0 && categories.length;\n    }\n\n    parseNoteValue(value) {\n        return parseDate(this.chartService.intl, value);\n    }\n\n    noteSlot(value) {\n        return this.getSlot(value);\n    }\n\n    translateRange(delta) {\n        const options = this.options;\n        const { baseUnit, weekStartDay, vertical } = options;\n        const lineBox = this.lineBox();\n        const size = vertical ? lineBox.height() : lineBox.width();\n        let range = this.range();\n        const scale = size / (range.max - range.min);\n        const offset = round(delta / scale, DEFAULT_PRECISION);\n\n        if (range.min && range.max) {\n            const from = addTicks(options.min || range.min, offset);\n            const to = addTicks(options.max || range.max, offset);\n\n            range = {\n                min: addDuration(from, 0, baseUnit, weekStartDay),\n                max: addDuration(to, 0, baseUnit, weekStartDay)\n            };\n        }\n\n        return range;\n    }\n\n    scaleRange(delta) {\n        let rounds = Math.abs(delta);\n        let result = this.range();\n        let { min: from, max: to } = result;\n\n        if (from && to) {\n            while (rounds--) {\n                const range = dateDiff(from, to);\n                const step = Math.round(range * 0.1);\n                if (delta < 0) {\n                    from = addTicks(from, step);\n                    to = addTicks(to, -step);\n                } else {\n                    from = addTicks(from, -step);\n                    to = addTicks(to, step);\n                }\n            }\n\n            result = { min: from, max: to };\n        }\n\n        return result;\n    }\n\n    defaultBaseUnit(options) {\n        const categories = options.categories;\n        const count = defined(categories) ? categories.length : 0;\n        let minDiff = MAX_VALUE;\n        let lastCategory, unit;\n\n        for (let categoryIx = 0; categoryIx < count; categoryIx++) {\n            const category = categories[categoryIx];\n\n            if (category && lastCategory) {\n                const diff = absoluteDateDiff(category, lastCategory);\n                if (diff > 0) {\n                    minDiff = Math.min(minDiff, diff);\n\n                    if (minDiff >= TIME_PER_YEAR) {\n                        unit = YEARS;\n                    } else if (minDiff >= TIME_PER_MONTH - TIME_PER_DAY * 3) {\n                        unit = MONTHS;\n                    } else if (minDiff >= TIME_PER_WEEK) {\n                        unit = WEEKS;\n                    } else if (minDiff >= TIME_PER_DAY) {\n                        unit = DAYS;\n                    } else if (minDiff >= TIME_PER_HOUR) {\n                        unit = HOURS;\n                    } else if (minDiff >= TIME_PER_MINUTE) {\n                        unit = MINUTES;\n                    } else {\n                        unit = SECONDS;\n                    }\n                }\n            }\n\n            lastCategory = category;\n        }\n\n        return unit || DAYS;\n    }\n\n    _categoryRange(categories) {\n        let range = categories._range;\n        if (!range) {\n            range = categories._range = sparseArrayLimits(categories);\n        }\n\n        return range;\n    }\n\n    totalRange() {\n        return {\n            min: 0,\n            max: this.options.categories.length\n        };\n    }\n\n    rangeIndices() {\n        const options = this.options;\n        const { categories, baseUnit } = options;\n        const baseUnitStep = options.baseUnitStep || 1;\n        const categoryLimits = this.categoriesRange();\n        const min = toDate(options.min || categoryLimits.min);\n        const max = toDate(options.max || categoryLimits.max);\n        let minIdx = 0, maxIdx = 0;\n\n        if (categories.length) {\n            minIdx = dateIndex(min, categories[0], baseUnit, baseUnitStep);\n            maxIdx = dateIndex(max, categories[0], baseUnit, baseUnitStep);\n\n            if (options.roundToBaseUnit) {\n                minIdx = Math.floor(minIdx);\n                maxIdx = options.justified ? Math.floor(maxIdx) : Math.ceil(maxIdx);\n            }\n        }\n\n        return { min: minIdx, max: maxIdx };\n    }\n\n    labelsRange() {\n        const options = this.options;\n        const labelOptions = options.labels;\n        const range = this.rangeIndices();\n        const min = Math.floor(range.min);\n        const max = Math.ceil(range.max);\n\n        return {\n            min: min + labelOptions.skip,\n            max: options.categories.length ? max + (options.justified ? 1 : 0) : 0\n        };\n    }\n\n    categoriesRange() {\n        const options = this.options;\n        const range = this._categoryRange(options.srcCategories || options.categories);\n\n        let max = toDate(range.max);\n        if (!options.justified && dateEquals(max, this._roundToTotalStep(max, options, false))) {\n            max = this._roundToTotalStep(max, options, true, true);\n        }\n        return {\n            min: toDate(range.min),\n            max: max\n        };\n    }\n\n    currentRange() {\n        const options = this.options;\n        const round = options.roundToBaseUnit !== false;\n        const totalRange = this.categoriesRange();\n        let { min, max } = options;\n\n        if (!min) {\n            min = round ? this._roundToTotalStep(totalRange.min, options, false) : totalRange.min;\n        }\n\n        if (!max) {\n            max = round ? this._roundToTotalStep(totalRange.max, options, !options.justified) : totalRange.max;\n        }\n\n        return {\n            min: min,\n            max: max\n        };\n    }\n\n    datesRange() {\n        const range = this._categoryRange(this.options.srcCategories || this.options.categories);\n        return {\n            min: toDate(range.min),\n            max: toDate(range.max)\n        };\n    }\n\n    pan(delta) {\n        const options = this.options;\n        const lineBox = this.lineBox();\n        const size = options.vertical ? lineBox.height() : lineBox.width();\n        const { min, max } = this.currentRange();\n        const totalLimits = this.totalLimits();\n        const scale = size / (max - min);\n        const offset = round(delta / scale, DEFAULT_PRECISION);\n        const from = addTicks(min, offset);\n        const to = addTicks(max, offset);\n\n        const panRange = this.limitRange(toTime(from), toTime(to), toTime(totalLimits.min), toTime(totalLimits.max), offset);\n\n        if (panRange) {\n            panRange.min = toDate(panRange.min);\n            panRange.max = toDate(panRange.max);\n            panRange.baseUnit = options.baseUnit;\n            panRange.baseUnitStep = options.baseUnitStep || 1;\n            panRange.userSetBaseUnit = options.userSetBaseUnit;\n            panRange.userSetBaseUnitStep = options.userSetBaseUnitStep;\n\n            return panRange;\n        }\n    }\n\n    pointsRange(start, end) {\n        const pointsRange = super.pointsRange(start, end);\n        const datesRange = this.currentRange();\n        const indicesRange = this.rangeIndices();\n        const scale = dateDiff(datesRange.max, datesRange.min) / (indicesRange.max - indicesRange.min);\n        const options = this.options;\n\n        const min = addTicks(datesRange.min, pointsRange.min * scale);\n        const max = addTicks(datesRange.min, pointsRange.max * scale);\n\n        return {\n            min: min,\n            max: max,\n            baseUnit: options.userSetBaseUnit,\n            baseUnitStep: options.userSetBaseUnitStep\n        };\n    }\n\n    zoomRange(delta) {\n        const options = this.options;\n        const totalLimits = this.totalLimits();\n        let { weekStartDay, baseUnit } = options;\n        const baseUnitStep = options.baseUnitStep || 1;\n        const { min: rangeMin, max: rangeMax } = this.currentRange();\n        let min = addDuration(rangeMin, delta * baseUnitStep, baseUnit, weekStartDay);\n        let max = addDuration(rangeMax, -delta * baseUnitStep, baseUnit, weekStartDay);\n\n        if (options.userSetBaseUnit === FIT) {\n            const { autoBaseUnitSteps, maxDateGroups } = options;\n\n            const maxDiff = last(autoBaseUnitSteps[baseUnit]) * maxDateGroups * TIME_PER_UNIT[baseUnit];\n            const rangeDiff = dateDiff(rangeMax, rangeMin);\n            const diff = dateDiff(max, min);\n            let baseUnitIndex = BASE_UNITS.indexOf(baseUnit);\n            let autoBaseUnitStep, ticks;\n\n            if (diff < TIME_PER_UNIT[baseUnit] && baseUnit !== MILLISECONDS) {\n                baseUnit = BASE_UNITS[baseUnitIndex - 1];\n                autoBaseUnitStep = last(autoBaseUnitSteps[baseUnit]);\n                ticks = (rangeDiff - (maxDateGroups - 1) * autoBaseUnitStep * TIME_PER_UNIT[baseUnit]) / 2;\n                min = addTicks(rangeMin, ticks);\n                max = addTicks(rangeMax, -ticks);\n\n            } else if (diff > maxDiff && baseUnit !== YEARS) {\n                let stepIndex = 0;\n\n                do {\n                    baseUnitIndex++;\n                    baseUnit = BASE_UNITS[baseUnitIndex];\n                    stepIndex = 0;\n                    ticks = 2 * TIME_PER_UNIT[baseUnit];\n                    do {\n                        autoBaseUnitStep = autoBaseUnitSteps[baseUnit][stepIndex];\n                        stepIndex++;\n                    } while (stepIndex < autoBaseUnitSteps[baseUnit].length && ticks * autoBaseUnitStep < rangeDiff);\n                } while (baseUnit !== YEARS && ticks * autoBaseUnitStep < rangeDiff);\n\n                ticks = (ticks * autoBaseUnitStep - rangeDiff) / 2;\n                if (ticks > 0) {\n                    min = addTicks(rangeMin, -ticks);\n                    max = addTicks(rangeMax, ticks);\n                    min = addTicks(min, limitValue(max, totalLimits.min, totalLimits.max) - max);\n                    max = addTicks(max, limitValue(min, totalLimits.min, totalLimits.max) - min);\n                }\n            }\n        }\n\n        min = toDate(limitValue(min, totalLimits.min, totalLimits.max));\n        max = toDate(limitValue(max, totalLimits.min, totalLimits.max));\n\n        if (min && max && dateDiff(max, min) > 0) {\n            return {\n                min: min,\n                max: max,\n                baseUnit: options.userSetBaseUnit,\n                baseUnitStep: options.userSetBaseUnitStep\n            };\n        }\n    }\n\n    totalLimits() {\n        const options = this.options;\n        const datesRange = this.datesRange();\n\n        const min = this._roundToTotalStep(toDate(datesRange.min), options, false);\n        let max = datesRange.max;\n\n        if (!options.justified) {\n            max = this._roundToTotalStep(max, options, true, dateEquals(max, this._roundToTotalStep(max, options, false)));\n        }\n\n        return {\n            min: min,\n            max: max\n        };\n    }\n\n    range(rangeOptions) {\n        const options = rangeOptions || this.options;\n\n        const categories = options.categories;\n        const autoUnit = options.baseUnit === FIT;\n        const baseUnit = autoUnit ? BASE_UNITS[0] : options.baseUnit;\n        const baseUnitStep = options.baseUnitStep || 1;\n        const stepOptions = {\n            baseUnit: baseUnit,\n            baseUnitStep: baseUnitStep,\n            weekStartDay: options.weekStartDay\n        };\n        const categoryLimits = this._categoryRange(categories);\n        const min = toDate(options.min || categoryLimits.min);\n        const max = toDate(options.max || categoryLimits.max);\n\n        return {\n            min: this._roundToTotalStep(min, stepOptions, false),\n            max: this._roundToTotalStep(max, stepOptions, true, true)\n        };\n    }\n\n    autoBaseUnit(options) {\n        const categoryLimits = this._categoryRange(options.categories);\n        const span = toDate(options.max || categoryLimits.max) - toDate(options.min || categoryLimits.min);\n        const maxDateGroups = options.maxDateGroups || this.options.maxDateGroups;\n        const autoUnit = options.baseUnit === FIT;\n        let autoUnitIx = 0;\n        let baseUnit = autoUnit ? BASE_UNITS[autoUnitIx++] : options.baseUnit;\n        let units = span / TIME_PER_UNIT[baseUnit];\n        let totalUnits = units;\n        const autoBaseUnitSteps = deepExtend(\n            {}, this.options.autoBaseUnitSteps, options.autoBaseUnitSteps\n        );\n        let unitSteps, step, nextStep;\n\n        while (!step || units >= maxDateGroups) {\n            unitSteps = unitSteps || autoBaseUnitSteps[baseUnit].slice(0);\n            nextStep = unitSteps.shift();\n\n            if (nextStep) {\n                step = nextStep;\n                units = totalUnits / step;\n            } else if (baseUnit === last(BASE_UNITS)) {\n                step = Math.ceil(totalUnits / maxDateGroups);\n                break;\n            } else if (autoUnit) {\n                baseUnit = BASE_UNITS[autoUnitIx++] || last(BASE_UNITS);\n                totalUnits = span / TIME_PER_UNIT[baseUnit];\n                unitSteps = null;\n            } else {\n                if (units > maxDateGroups) {\n                    step = Math.ceil(totalUnits / maxDateGroups);\n                }\n                break;\n            }\n        }\n\n        options.baseUnitStep = step;\n        options.baseUnit = baseUnit;\n    }\n\n    groupCategories(options) {\n        const { categories, baseUnit } = options;\n        const baseUnitStep = options.baseUnitStep || 1;\n        const maxCategory = toDate(sparseArrayLimits(categories).max);\n        const { min, max } = this.range(options);\n        const groups = [];\n        let nextDate;\n\n        for (let date = min; date < max; date = nextDate) {\n            groups.push(date);\n\n            nextDate = addDuration(date, baseUnitStep, baseUnit, options.weekStartDay);\n            if (nextDate > maxCategory && !options.max) {\n                break;\n            }\n        }\n\n        options.srcCategories = categories;\n        options.categories = groups;\n    }\n\n    _roundToTotalStep(value, axisOptions, upper, roundToNext) {\n        const options = axisOptions || this.options;\n        const baseUnit = options.baseUnit;\n        const baseUnitStep = options.baseUnitStep || 1;\n        const start = this._groupsStart;\n\n        if (start) {\n            const step = dateIndex(value, start, baseUnit, baseUnitStep);\n            let roundedStep = upper ? Math.ceil(step) : Math.floor(step);\n            if (roundToNext) {\n                roundedStep++;\n            }\n            return addDuration(start, roundedStep * baseUnitStep, baseUnit, options.weekStartDay);\n        }\n\n        return addDuration(value, upper ? baseUnitStep : 0, baseUnit, options.weekStartDay);\n    }\n\n    createAxisLabel(index, labelOptions) {\n        const options = this.options;\n        const dataItem = options.dataItems ? options.dataItems[index] : null;\n        const date = options.categories[index];\n        const baseUnit = options.baseUnit;\n        const unitFormat = labelOptions.dateFormats[baseUnit];\n        let visible = true;\n\n        if (options.justified) {\n            const roundedDate = floorDate(date, baseUnit, options.weekStartDay);\n            visible = dateEquals(roundedDate, date);\n        } else if (!options.roundToBaseUnit) {\n            visible = !dateEquals(this.range().max, date);\n        }\n\n        if (visible) {\n            labelOptions.format = labelOptions.format || unitFormat;\n            const text = this.axisLabelText(date, dataItem, labelOptions);\n            if (text) {\n                return new AxisLabel(date, text, index, dataItem, labelOptions);\n            }\n        }\n    }\n\n    categoryIndex(value) {\n        const options = this.options;\n        const categories = options.categories;\n        let index = -1;\n\n        if (categories.length) {\n            index = Math.floor(dateIndex(toDate(value), categories[0], options.baseUnit, options.baseUnitStep || 1));\n        }\n\n        return index;\n    }\n\n    getSlot(a, b, limit) {\n        let start = a;\n        let end = b;\n\n        if (typeof start === OBJECT) {\n            start = this.categoryIndex(start);\n        }\n\n        if (typeof end === OBJECT) {\n            end = this.categoryIndex(end);\n        }\n\n        return super.getSlot(start, end, limit);\n    }\n\n    valueRange() {\n        const options = this.options;\n        const range = this._categoryRange(options.srcCategories || options.categories);\n\n        return {\n            min: toDate(range.min),\n            max: toDate(range.max)\n        };\n    }\n}\n\nsetDefaultOptions(DateCategoryAxis, {\n    type: DATE,\n    labels: {\n        dateFormats: DateLabelFormats\n    },\n    autoBaseUnitSteps: {\n        milliseconds: [ 1, 10, 100 ],\n        seconds: [ 1, 2, 5, 15, 30 ],\n        minutes: [ 1, 2, 5, 15, 30 ],\n        hours: [ 1, 2, 3 ],\n        days: [ 1, 2, 3 ],\n        weeks: [ 1, 2 ],\n        months: [ 1, 2, 3, 6 ],\n        years: [ 1, 2, 3, 5, 10, 25, 50 ]\n    },\n    maxDateGroups: 10\n});\n\nexport default DateCategoryAxis;\n","import { DEFAULT_PRECISION } from '../../common/constants';\nimport { round } from '../../common';\n\nexport default function autoMajorUnit(min, max) {\n    let diff = round(max - min, DEFAULT_PRECISION - 1);\n\n    if (diff === 0) {\n        if (max === 0) {\n            return 0.1;\n        }\n\n        diff = Math.abs(max);\n    }\n\n    const scale = Math.pow(10, Math.floor(Math.log(diff) / Math.log(10)));\n    const relativeValue = round((diff / scale), DEFAULT_PRECISION);\n    let scaleMultiplier = 1;\n\n    if (relativeValue < 1.904762) {\n        scaleMultiplier = 0.2;\n    } else if (relativeValue < 4.761904) {\n        scaleMultiplier = 0.5;\n    } else if (relativeValue < 9.523809) {\n        scaleMultiplier = 1;\n    } else {\n        scaleMultiplier = 2;\n    }\n\n    return round(scale * scaleMultiplier, DEFAULT_PRECISION);\n}","import { ZERO_THRESHOLD } from '../constants';\n\nexport default function autoAxisMin(min, max, narrow) {\n    if (!min && !max) {\n        return 0;\n    }\n\n    let axisMin;\n\n    if (min >= 0 && max >= 0) {\n        const minValue = min === max ? 0 : min;\n\n        let diff = (max - minValue) / max;\n        if (narrow === false || (!narrow && diff > ZERO_THRESHOLD)) {\n            return 0;\n        }\n\n        axisMin = Math.max(0, minValue - ((max - minValue) / 2));\n    } else {\n        axisMin = min;\n    }\n\n    return axisMin;\n}\n","import { ZERO_THRESHOLD } from '../constants';\n\nexport default function autoAxisMax(min, max, narrow) {\n    if (!min && !max) {\n        return 1;\n    }\n\n    let axisMax;\n\n    if (min <= 0 && max <= 0) {\n        const maxValue = min === max ? 0 : max;\n\n        let diff = Math.abs((maxValue - min) / maxValue);\n        if (narrow === false || (!narrow && diff > ZERO_THRESHOLD)) {\n            return 0;\n        }\n\n        axisMax = Math.min(0, maxValue - ((min - maxValue) / 2));\n    } else {\n        axisMax = max;\n    }\n\n    return axisMax;\n}","import { DEFAULT_PRECISION } from '../../common/constants';\nimport { round } from '../../common';\n\nexport default function floor(value, step) {\n    return round(Math.floor(value / step) * step, DEFAULT_PRECISION);\n}\n","import { DEFAULT_PRECISION } from '../../common/constants';\nimport { round } from '../../common';\n\nexport default function ceil(value, step) {\n    return round(Math.ceil(value / step) * step, DEFAULT_PRECISION);\n}","import { COORDINATE_LIMIT } from '../constants';\n\nexport default function limitCoordinate(value) {\n    return Math.max(Math.min(value, COORDINATE_LIMIT), -COORDINATE_LIMIT);\n}","\nimport Axis from './axis';\nimport AxisLabel from './axis-label';\nimport Box from './box';\n\nimport { BLACK, DEFAULT_PRECISION, COORD_PRECISION, X, Y } from '../common/constants';\nimport { deepExtend, defined, limitValue, round, setDefaultOptions } from '../common';\n\nimport autoMajorUnit from './utils/auto-major-unit';\nimport autoAxisMin from './utils/auto-axis-min';\nimport autoAxisMax from './utils/auto-axis-max';\nimport floor from './utils/floor';\nimport ceil from './utils/ceil';\nimport limitCoordinate from './utils/limit-coordinate';\n\nconst MIN_VALUE_RANGE = Math.pow(10, -DEFAULT_PRECISION + 1);\n\nclass NumericAxis extends Axis {\n\n    constructor(seriesMin, seriesMax, options, chartService) {\n        const autoOptions = autoAxisOptions(seriesMin, seriesMax, options);\n        const totalOptions = totalAxisOptions(autoOptions, options);\n\n        super(axisOptions(autoOptions, options), chartService);\n\n        this.totalMin = totalOptions.min;\n        this.totalMax = totalOptions.max;\n        this.totalMajorUnit = totalOptions.majorUnit;\n        this.seriesMin = seriesMin;\n        this.seriesMax = seriesMax;\n    }\n\n    startValue() {\n        return 0;\n    }\n\n    range() {\n        const options = this.options;\n        return { min: options.min, max: options.max };\n    }\n\n    getDivisions(stepValue) {\n        if (stepValue === 0) {\n            return 1;\n        }\n\n        const options = this.options;\n        const range = options.max - options.min;\n\n        return Math.floor(round(range / stepValue, COORD_PRECISION)) + 1;\n    }\n\n    getTickPositions(unit, skipUnit) {\n        const options = this.options;\n        const { vertical, reverse } = options;\n        const lineBox = this.lineBox();\n        const lineSize = vertical ? lineBox.height() : lineBox.width();\n        const range = options.max - options.min;\n        const scale = lineSize / range;\n        const step = unit * scale;\n        const divisions = this.getDivisions(unit);\n        const dir = (vertical ? -1 : 1) * (reverse ? -1 : 1);\n        const startEdge = dir === 1 ? 1 : 2;\n        const positions = [];\n        let pos = lineBox[(vertical ? Y : X) + startEdge];\n        let skipStep = 0;\n\n        if (skipUnit) {\n            skipStep = skipUnit / unit;\n        }\n\n        for (let idx = 0; idx < divisions; idx++) {\n            if (idx % skipStep !== 0) {\n                positions.push(round(pos, COORD_PRECISION));\n            }\n\n            pos = pos + step * dir;\n        }\n\n        return positions;\n    }\n\n    getMajorTickPositions() {\n        return this.getTickPositions(this.options.majorUnit);\n    }\n\n    getMinorTickPositions() {\n        return this.getTickPositions(this.options.minorUnit);\n    }\n\n    getSlot(a, b, limit = false) {\n        const options = this.options;\n        const { vertical, reverse } = options;\n        const valueAxis = vertical ? Y : X;\n        const lineBox = this.lineBox();\n        const lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n        const lineSize = vertical ? lineBox.height() : lineBox.width();\n        const dir = reverse ? -1 : 1;\n        const step = dir * (lineSize / (options.max - options.min));\n        const slotBox = new Box(lineBox.x1, lineBox.y1, lineBox.x1, lineBox.y1);\n\n        let start = a;\n        let end = b;\n\n        if (!defined(start)) {\n            start = end || 0;\n        }\n\n        if (!defined(end)) {\n            end = start || 0;\n        }\n\n        if (limit) {\n            start = Math.max(Math.min(start, options.max), options.min);\n            end = Math.max(Math.min(end, options.max), options.min);\n        }\n\n        let p1, p2;\n\n        if (vertical) {\n            p1 = options.max - Math.max(start, end);\n            p2 = options.max - Math.min(start, end);\n        } else {\n            p1 = Math.min(start, end) - options.min;\n            p2 = Math.max(start, end) - options.min;\n        }\n\n        slotBox[valueAxis + 1] = limitCoordinate(lineStart + step * (reverse ? p2 : p1));\n        slotBox[valueAxis + 2] = limitCoordinate(lineStart + step * (reverse ? p1 : p2));\n\n        return slotBox;\n    }\n\n    getValue(point) {\n        const options = this.options;\n        const { vertical, reverse } = options;\n        const max = Number(options.max);\n        const min = Number(options.min);\n        const valueAxis = vertical ? Y : X;\n        const lineBox = this.lineBox();\n        const lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n        const lineSize = vertical ? lineBox.height() : lineBox.width();\n        const dir = reverse ? -1 : 1;\n        const offset = dir * (point[valueAxis] - lineStart);\n        const step = (max - min) / lineSize;\n        const valueOffset = offset * step;\n\n        if (offset < 0 || offset > lineSize) {\n            return null;\n        }\n\n        const value = vertical ?\n                max - valueOffset :\n                min + valueOffset;\n\n        return round(value, DEFAULT_PRECISION);\n    }\n\n    translateRange(delta) {\n        const options = this.options;\n        const { vertical, reverse, max, min } = options;\n        const lineBox = this.lineBox();\n        const size = vertical ? lineBox.height() : lineBox.width();\n        const range = max - min;\n        const scale = size / range;\n        let offset = round(delta / scale, DEFAULT_PRECISION);\n\n        if ((vertical || reverse) && !(vertical && reverse )) {\n            offset = -offset;\n        }\n\n        return {\n            min: min + offset,\n            max: max + offset\n        };\n    }\n\n    scaleRange(delta) {\n        const options = this.options;\n        const offset = -delta * options.majorUnit;\n\n        return {\n            min: options.min - offset,\n            max: options.max + offset\n        };\n    }\n\n    labelsCount() {\n        return this.getDivisions(this.options.majorUnit);\n    }\n\n    createAxisLabel(index, labelOptions) {\n        const options = this.options;\n        const value = round(options.min + (index * options.majorUnit), DEFAULT_PRECISION);\n        const text = this.axisLabelText(value, null, labelOptions);\n\n        return new AxisLabel(value, text, index, null, labelOptions);\n    }\n\n    shouldRenderNote(value) {\n        const range = this.range();\n        return range.min <= value && value <= range.max;\n    }\n\n    pan(delta) {\n        const range = this.translateRange(delta);\n        return this.limitRange(range.min, range.max, this.totalMin, this.totalMax);\n    }\n\n    pointsRange(start, end) {\n        const startValue = this.getValue(start);\n        const endValue = this.getValue(end);\n        const min = Math.min(startValue, endValue);\n        const max = Math.max(startValue, endValue);\n\n        if (this.isValidRange(min, max)) {\n            return {\n                min: min,\n                max: max\n            };\n        }\n    }\n\n    zoomRange(delta) {\n        const { totalMin, totalMax } = this;\n        const newRange = this.scaleRange(delta);\n        const min = limitValue(newRange.min, totalMin, totalMax);\n        const max = limitValue(newRange.max, totalMin, totalMax);\n\n        if (this.isValidRange(min, max)) {\n            return {\n                min: min,\n                max: max\n            };\n        }\n    }\n\n    isValidRange(min, max) {\n        return max - min > MIN_VALUE_RANGE;\n    }\n}\n\nfunction autoAxisOptions(seriesMin, seriesMax, options) {\n    const narrowRange = options.narrowRange;\n\n    let autoMin = autoAxisMin(seriesMin, seriesMax, narrowRange);\n    let autoMax = autoAxisMax(seriesMin, seriesMax, narrowRange);\n\n    const majorUnit = autoMajorUnit(autoMin, autoMax);\n    const autoOptions = {\n        majorUnit: majorUnit\n    };\n\n    if (options.roundToMajorUnit !== false) {\n        if (autoMin < 0 && remainderClose(autoMin, majorUnit, 1 / 3)) {\n            autoMin -= majorUnit;\n        }\n\n        if (autoMax > 0 && remainderClose(autoMax, majorUnit, 1 / 3)) {\n            autoMax += majorUnit;\n        }\n    }\n\n    autoOptions.min = floor(autoMin, majorUnit);\n    autoOptions.max = ceil(autoMax, majorUnit);\n\n    return autoOptions;\n}\n\nfunction totalAxisOptions(autoOptions, options) {\n    return {\n        min: defined(options.min) ? Math.min(autoOptions.min, options.min) : autoOptions.min,\n        max: defined(options.max) ? Math.max(autoOptions.max, options.max) : autoOptions.max,\n        majorUnit: autoOptions.majorUnit\n    };\n}\n\nfunction axisOptions(autoOptions, userOptions) {\n    let options = userOptions;\n    if (userOptions) {\n        const userSetLimits = defined(userOptions.min) || defined(userOptions.max);\n        if (userSetLimits) {\n            if (userOptions.min === userOptions.max) {\n                if (userOptions.min > 0) {\n                    userOptions.min = 0;\n                } else {\n                    userOptions.max = 1;\n                }\n            }\n        }\n\n        if (userOptions.majorUnit) {\n            autoOptions.min = floor(autoOptions.min, userOptions.majorUnit);\n            autoOptions.max = ceil(autoOptions.max, userOptions.majorUnit);\n        } else if (userSetLimits) {\n            options = deepExtend(autoOptions, userOptions);\n\n            // Determine an auto major unit after min/max have been set\n            autoOptions.majorUnit = autoMajorUnit(options.min, options.max);\n        }\n    }\n\n    autoOptions.minorUnit = (options.majorUnit || autoOptions.majorUnit) / 5;\n\n    return deepExtend(autoOptions, options);\n}\n\nfunction remainderClose(value, divisor, ratio) {\n    const remainder = round(Math.abs(value % divisor), DEFAULT_PRECISION);\n    const threshold = divisor * (1 - ratio);\n\n    return remainder === 0 || remainder > threshold;\n}\n\nsetDefaultOptions(NumericAxis, {\n    type: \"numeric\",\n    min: 0,\n    max: 1,\n    vertical: true,\n    majorGridLines: {\n        visible: true,\n        width: 1,\n        color: BLACK\n    },\n    labels: {\n        format: \"#.####################\"\n    },\n    zIndex: 1\n});\n\nexport default NumericAxis;","import Axis from './axis';\nimport NumericAxis from './numeric-axis';\nimport AxisLabel from './axis-label';\nimport { DateLabelFormats } from './constants';\n\nimport { BLACK, DATE, COORD_PRECISION, DEFAULT_PRECISION, X, Y } from '../common/constants';\nimport { setDefaultOptions, deepExtend, limitValue, round } from '../common';\n\nimport autoMajorUnit from './utils/auto-major-unit';\nimport ceil from './utils/ceil';\n\nimport { toDate, toTime, floorDate, ceilDate, duration, addDuration, addTicks, dateDiff, absoluteDateDiff, dateComparer, parseDate, parseDates } from '../date-utils';\nimport { HOURS, DAYS, WEEKS, MONTHS, YEARS, TIME_PER_DAY, TIME_PER_WEEK, TIME_PER_MONTH, TIME_PER_YEAR, TIME_PER_UNIT } from '../date-utils/constants';\n\nclass DateValueAxis extends Axis {\n    constructor(seriesMin, seriesMax, axisOptions, chartService) {\n        const min = toDate(seriesMin);\n        const max = toDate(seriesMax);\n\n        const intlService = chartService.intl;\n        let options = axisOptions || {};\n        options = deepExtend(options || {}, {\n            min: parseDate(intlService, options.min),\n            max: parseDate(intlService, options.max),\n            axisCrossingValue: parseDates(intlService, options.axisCrossingValues || options.axisCrossingValue)\n        });\n        options = applyDefaults(min, max, options);\n\n        super(options, chartService);\n\n        this.seriesMin = min;\n        this.seriesMax = max;\n        this.totalMin = toTime(floorDate(toTime(min) - 1, options.baseUnit));\n        this.totalMax = toTime(ceilDate(toTime(max) + 1, options.baseUnit));\n    }\n\n    range() {\n        const options = this.options;\n        return { min: options.min, max: options.max };\n    }\n\n    getDivisions(stepValue) {\n        const options = this.options;\n\n        return Math.floor(\n            duration(options.min, options.max, options.baseUnit) / stepValue + 1\n        );\n    }\n\n    getTickPositions(step) {\n        const options = this.options;\n        const vertical = options.vertical;\n        const lineBox = this.lineBox();\n        const dir = (vertical ? -1 : 1) * (options.reverse ? -1 : 1);\n        const startEdge = dir === 1 ? 1 : 2;\n        const start = lineBox[(vertical ? Y : X) + startEdge];\n        const divisions = this.getDivisions(step);\n        const timeRange = dateDiff(options.max, options.min);\n        const lineSize = vertical ? lineBox.height() : lineBox.width();\n        const scale = lineSize / timeRange;\n\n        const positions = [ start ];\n        for (let i = 1; i < divisions; i++) {\n            const date = addDuration(options.min, i * step, options.baseUnit);\n            const pos = start + dateDiff(date, options.min) * scale * dir;\n\n            positions.push(round(pos, COORD_PRECISION));\n        }\n\n        return positions;\n    }\n\n    getMajorTickPositions() {\n        return this.getTickPositions(this.options.majorUnit);\n    }\n\n    getMinorTickPositions() {\n        return this.getTickPositions(this.options.minorUnit);\n    }\n\n    getSlot(a, b, limit) {\n        return NumericAxis.prototype.getSlot.call(\n            this, toDate(a), toDate(b), limit\n        );\n    }\n\n    getValue(point) {\n        const value = NumericAxis.prototype.getValue.call(this, point);\n\n        return value !== null ? toDate(value) : null;\n    }\n\n    labelsCount() {\n        return this.getDivisions(this.options.majorUnit);\n    }\n\n    createAxisLabel(index, labelOptions) {\n        const options = this.options;\n        const offset = index * options.majorUnit;\n        let date = options.min;\n\n        if (offset > 0) {\n            date = addDuration(date, offset, options.baseUnit);\n        }\n\n        const unitFormat = labelOptions.dateFormats[options.baseUnit];\n        labelOptions.format = labelOptions.format || unitFormat;\n\n        const text = this.axisLabelText(date, null, labelOptions);\n        return new AxisLabel(date, text, index, null, labelOptions);\n    }\n\n    translateRange(delta, exact) {\n        const options = this.options;\n        const { baseUnit, weekStartDay } = options;\n        const lineBox = this.lineBox();\n        const size = options.vertical ? lineBox.height() : lineBox.width();\n        const range = this.range();\n        const scale = size / dateDiff(range.max, range.min);\n        const offset = round(delta / scale, DEFAULT_PRECISION);\n        let from = addTicks(options.min, offset);\n        let to = addTicks(options.max, offset);\n\n        if (!exact) {\n            from = addDuration(from, 0, baseUnit, weekStartDay);\n            to = addDuration(to, 0, baseUnit, weekStartDay);\n        }\n\n        return {\n            min: from,\n            max: to\n        };\n    }\n\n    scaleRange(delta) {\n        let { min: from, max: to } = this.options;\n        let rounds = Math.abs(delta);\n\n        while (rounds--) {\n            const range = dateDiff(from, to);\n            const step = Math.round(range * 0.1);\n            if (delta < 0) {\n                from = addTicks(from, step);\n                to = addTicks(to, -step);\n            } else {\n                from = addTicks(from, -step);\n                to = addTicks(to, step);\n            }\n        }\n\n        return { min: from, max: to };\n    }\n\n    shouldRenderNote(value) {\n        const range = this.range();\n\n        return dateComparer(value, range.min) >= 0 && dateComparer(value, range.max) <= 0;\n    }\n\n    pan(delta) {\n        const range = this.translateRange(delta, true);\n        const limittedRange = this.limitRange(toTime(range.min), toTime(range.max), this.totalMin, this.totalMax);\n\n        if (limittedRange) {\n            return {\n                min: toDate(limittedRange.min),\n                max: toDate(limittedRange.max)\n            };\n        }\n    }\n\n    pointsRange(start, end) {\n        const startValue = this.getValue(start);\n        const endValue = this.getValue(end);\n        const min = Math.min(startValue, endValue);\n        const max = Math.max(startValue, endValue);\n\n        return {\n            min: toDate(min),\n            max: toDate(max)\n        };\n    }\n\n    zoomRange(delta) {\n        const range = this.scaleRange(delta);\n        const min = toDate(limitValue(toTime(range.min), this.totalMin, this.totalMax));\n        const max = toDate(limitValue(toTime(range.max), this.totalMin, this.totalMax));\n\n        return {\n            min: min,\n            max: max\n        };\n    }\n}\n\nfunction timeUnits(delta) {\n    let unit = HOURS;\n\n    if (delta >= TIME_PER_YEAR) {\n        unit = YEARS;\n    } else if (delta >= TIME_PER_MONTH) {\n        unit = MONTHS;\n    } else if (delta >= TIME_PER_WEEK) {\n        unit = WEEKS;\n    } else if (delta >= TIME_PER_DAY) {\n        unit = DAYS;\n    }\n\n    return unit;\n}\n\nfunction applyDefaults(seriesMin, seriesMax, options) {\n    const min = options.min || seriesMin;\n    const max = options.max || seriesMax;\n    const baseUnit = options.baseUnit || (max && min ? timeUnits(absoluteDateDiff(max, min)) : HOURS);\n    const baseUnitTime = TIME_PER_UNIT[baseUnit];\n    const autoMin = floorDate(toTime(min) - 1, baseUnit) || toDate(max);\n    const autoMax = ceilDate(toTime(max) + 1, baseUnit);\n    const userMajorUnit = options.majorUnit ? options.majorUnit : undefined;\n    const majorUnit = userMajorUnit || ceil(\n                        autoMajorUnit(autoMin.getTime(), autoMax.getTime()),\n                        baseUnitTime\n                    ) / baseUnitTime;\n    const actualUnits = duration(autoMin, autoMax, baseUnit);\n    const totalUnits = ceil(actualUnits, majorUnit);\n    const unitsToAdd = totalUnits - actualUnits;\n    const head = Math.floor(unitsToAdd / 2);\n    const tail = unitsToAdd - head;\n\n    if (!options.baseUnit) {\n        delete options.baseUnit;\n    }\n\n    options.baseUnit = options.baseUnit || baseUnit;\n    options.min = options.min || addDuration(autoMin, -head, baseUnit);\n    options.max = options.max || addDuration(autoMax, tail, baseUnit);\n    options.minorUnit = options.minorUnit || majorUnit / 5;\n    options.majorUnit = majorUnit;\n\n    return options;\n}\n\nsetDefaultOptions(DateValueAxis, {\n    type: DATE,\n    majorGridLines: {\n        visible: true,\n        width: 1,\n        color: BLACK\n    },\n    labels: {\n        dateFormats: DateLabelFormats\n    }\n});\n\nexport default DateValueAxis;","\nimport Axis from './axis';\nimport AxisLabel from './axis-label';\nimport Box from './box';\n\nimport createAxisTick from './utils/create-axis-tick';\nimport createAxisGridLine from './utils/create-axis-grid-line';\nimport limitCoordinate from './utils/limit-coordinate';\n\nimport { DEFAULT_PRECISION, BLACK, X, Y } from '../common/constants';\nimport { deepExtend, defined, inArray, limitValue, round, setDefaultOptions } from '../common';\n\nconst DEFAULT_MAJOR_UNIT = 10;\n\nclass LogarithmicAxis extends Axis {\n    constructor(seriesMin, seriesMax, options, chartService) {\n\n        const axisOptions = deepExtend({ majorUnit: DEFAULT_MAJOR_UNIT, min: seriesMin, max: seriesMax }, options);\n        const base = axisOptions.majorUnit;\n        const autoMax = autoAxisMax(seriesMax, base);\n        const autoMin = autoAxisMin(seriesMin, seriesMax, axisOptions);\n        const range = initRange(autoMin, autoMax, axisOptions, options);\n\n        axisOptions.max = range.max;\n        axisOptions.min = range.min;\n        axisOptions.minorUnit = options.minorUnit || round(base - 1, DEFAULT_PRECISION);\n\n        super(axisOptions, chartService);\n\n        this.totalMin = defined(options.min) ? Math.min(autoMin, options.min) : autoMin;\n        this.totalMax = defined(options.max) ? Math.max(autoMax, options.max) : autoMax;\n        this.logMin = round(log(range.min, base), DEFAULT_PRECISION);\n        this.logMax = round(log(range.max, base), DEFAULT_PRECISION);\n        this.seriesMin = seriesMin;\n        this.seriesMax = seriesMax;\n\n        this.createLabels();\n    }\n\n    startValue() {\n        return this.options.min;\n    }\n\n    getSlot(a, b, limit) {\n        const { options, logMin, logMax } = this;\n        const { reverse, vertical, majorUnit: base } = options;\n        const valueAxis = vertical ? Y : X;\n        const lineBox = this.lineBox();\n        const lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n        const lineSize = vertical ? lineBox.height() : lineBox.width();\n        const dir = reverse ? -1 : 1;\n        const step = dir * (lineSize / (logMax - logMin));\n        const slotBox = new Box(lineBox.x1, lineBox.y1, lineBox.x1, lineBox.y1);\n        let start = a;\n        let end = b;\n\n        if (!defined(start)) {\n            start = end || 1;\n        }\n\n        if (!defined(end)) {\n            end = start || 1;\n        }\n\n        if (start <= 0 || end <= 0) {\n            return null;\n        }\n\n        if (limit) {\n            start = Math.max(Math.min(start, options.max), options.min);\n            end = Math.max(Math.min(end, options.max), options.min);\n        }\n\n        start = log(start, base);\n        end = log(end, base);\n\n        let p1, p2;\n\n        if (vertical) {\n            p1 = logMax - Math.max(start, end);\n            p2 = logMax - Math.min(start, end);\n        } else {\n            p1 = Math.min(start, end) - logMin;\n            p2 = Math.max(start, end) - logMin;\n        }\n\n        slotBox[valueAxis + 1] = limitCoordinate(lineStart + step * (reverse ? p2 : p1));\n        slotBox[valueAxis + 2] = limitCoordinate(lineStart + step * (reverse ? p1 : p2));\n\n        return slotBox;\n    }\n\n    getValue(point) {\n        const { options, logMin, logMax } = this;\n        const { reverse, vertical, majorUnit: base } = options;\n        const lineBox = this.lineBox();\n        const dir = vertical === reverse ? 1 : -1;\n        const startEdge = dir === 1 ? 1 : 2;\n        const lineSize = vertical ? lineBox.height() : lineBox.width();\n        const step = ((logMax - logMin) / lineSize);\n        const valueAxis = vertical ? Y : X;\n        const lineStart = lineBox[valueAxis + startEdge];\n        const offset = dir * (point[valueAxis] - lineStart);\n        const valueOffset = offset * step;\n\n        if (offset < 0 || offset > lineSize) {\n            return null;\n        }\n\n        const value = logMin + valueOffset;\n\n        return round(Math.pow(base, value), DEFAULT_PRECISION);\n    }\n\n    range() {\n        const options = this.options;\n        return { min: options.min, max: options.max };\n    }\n\n    scaleRange(delta) {\n        const base = this.options.majorUnit;\n        const offset = -delta;\n\n        return {\n            min: Math.pow(base, this.logMin - offset),\n            max: Math.pow(base, this.logMax + offset)\n        };\n    }\n\n    translateRange(delta) {\n        const { options, logMin, logMax } = this;\n        const { reverse, vertical, majorUnit: base } = options;\n        const lineBox = this.lineBox();\n        const size = vertical ? lineBox.height() : lineBox.width();\n        const scale = size / (logMax - logMin);\n        let offset = round(delta / scale, DEFAULT_PRECISION);\n\n        if ((vertical || reverse) && !(vertical && reverse )) {\n            offset = -offset;\n        }\n\n        return {\n            min: Math.pow(base, logMin + offset),\n            max: Math.pow(base, logMax + offset)\n        };\n    }\n\n    labelsCount() {\n        const floorMax = Math.floor(this.logMax);\n        const count = Math.floor(floorMax - this.logMin) + 1;\n\n        return count;\n    }\n\n    getMajorTickPositions() {\n        const ticks = [];\n\n        this.traverseMajorTicksPositions((position) => {\n            ticks.push(position);\n        }, { step: 1, skip: 0 });\n\n        return ticks;\n    }\n\n    createTicks(lineGroup) {\n        const options = this.options;\n        const { majorTicks, minorTicks, vertical } = options;\n        const mirror = options.labels.mirror;\n        const lineBox = this.lineBox();\n        const ticks = [];\n        const tickLineOptions = {\n            // TODO\n            // _alignLines: options._alignLines,\n            vertical: vertical\n        };\n\n        function render(tickPosition, tickOptions) {\n            tickLineOptions.tickX = mirror ? lineBox.x2 : lineBox.x2 - tickOptions.size;\n            tickLineOptions.tickY = mirror ? lineBox.y1 - tickOptions.size : lineBox.y1;\n            tickLineOptions.position = tickPosition;\n\n            lineGroup.append(createAxisTick(tickLineOptions, tickOptions));\n        }\n\n        if (majorTicks.visible) {\n            this.traverseMajorTicksPositions(render, majorTicks);\n        }\n\n        if (minorTicks.visible) {\n            this.traverseMinorTicksPositions(render, minorTicks);\n        }\n\n        return ticks;\n    }\n\n    createGridLines(altAxis) {\n        const options = this.options;\n        const { minorGridLines, majorGridLines, vertical } = options;\n        const lineBox = altAxis.lineBox();\n        const lineOptions = {\n            lineStart: lineBox[vertical ? \"x1\" : \"y1\"],\n            lineEnd: lineBox[vertical ? \"x2\" : \"y2\"],\n            vertical: vertical\n        };\n        const majorTicks = [];\n\n        const container = this.gridLinesVisual();\n        function render(tickPosition, gridLine) {\n            if (!inArray(tickPosition, majorTicks)) {\n                lineOptions.position = tickPosition;\n                container.append(createAxisGridLine(lineOptions, gridLine));\n\n                majorTicks.push(tickPosition);\n            }\n        }\n\n        if (majorGridLines.visible) {\n            this.traverseMajorTicksPositions(render, majorGridLines);\n        }\n\n        if (minorGridLines.visible) {\n            this.traverseMinorTicksPositions(render, minorGridLines);\n        }\n\n        return container.children;\n    }\n\n    traverseMajorTicksPositions(callback, tickOptions) {\n        const { lineStart, step } = this._lineOptions();\n        const { logMin, logMax } = this;\n\n        for (let power = Math.ceil(logMin) + tickOptions.skip; power <= logMax; power += tickOptions.step) {\n            let position = round(lineStart + step * (power - logMin), DEFAULT_PRECISION);\n            callback(position, tickOptions);\n        }\n    }\n\n    traverseMinorTicksPositions(callback, tickOptions) {\n        const { min, max, minorUnit, majorUnit: base } = this.options;\n        const { lineStart, step } = this._lineOptions();\n        const { logMin, logMax } = this;\n        const start = Math.floor(logMin);\n\n        for (let power = start; power < logMax; power++) {\n            const minorOptions = this._minorIntervalOptions(power);\n            for (let idx = tickOptions.skip; idx < minorUnit; idx += tickOptions.step) {\n                const value = minorOptions.value + idx * minorOptions.minorStep;\n                if (value > max) {\n                    break;\n                }\n                if (value >= min) {\n                    const position = round(lineStart + step * (log(value, base) - logMin), DEFAULT_PRECISION);\n                    callback(position, tickOptions);\n                }\n            }\n        }\n    }\n\n    createAxisLabel(index, labelOptions) {\n        const power = Math.ceil(this.logMin + index);\n        const value = Math.pow(this.options.majorUnit, power);\n        const text = this.axisLabelText(value, null, labelOptions);\n\n        return new AxisLabel(value, text, index, null, labelOptions);\n    }\n\n    shouldRenderNote(value) {\n        const range = this.range();\n        return range.min <= value && value <= range.max;\n    }\n\n    pan(delta) {\n        const range = this.translateRange(delta);\n        return this.limitRange(range.min, range.max, this.totalMin, this.totalMax, -delta);\n    }\n\n    pointsRange(start, end) {\n        const startValue = this.getValue(start);\n        const endValue = this.getValue(end);\n        const min = Math.min(startValue, endValue);\n        const max = Math.max(startValue, endValue);\n\n        return {\n            min: min,\n            max: max\n        };\n    }\n\n    zoomRange(delta) {\n        const { options, totalMin, totalMax } = this;\n        const newRange = this.scaleRange(delta);\n        const min = limitValue(newRange.min, totalMin, totalMax);\n        const max = limitValue(newRange.max, totalMin, totalMax);\n        const base = options.majorUnit;\n        const acceptOptionsRange = max > min && options.min && options.max && (round(log(options.max, base) - log(options.min, base), DEFAULT_PRECISION) < 1);\n        const acceptNewRange = !(options.min === totalMin && options.max === totalMax) && round(log(max, base) - log(min, base), DEFAULT_PRECISION) >= 1;\n\n        if (acceptOptionsRange || acceptNewRange) {\n            return {\n                min: min,\n                max: max\n            };\n        }\n    }\n\n    _minorIntervalOptions(power) {\n        const { minorUnit, majorUnit: base } = this.options;\n        const value = Math.pow(base, power);\n        const nextValue = Math.pow(base, power + 1);\n        const difference = nextValue - value;\n        const minorStep = difference / minorUnit;\n\n        return {\n            value: value,\n            minorStep: minorStep\n        };\n    }\n\n    _lineOptions() {\n        const { reverse, vertical } = this.options;\n        const valueAxis = vertical ? Y : X;\n        const lineBox = this.lineBox();\n        const dir = vertical === reverse ? 1 : -1;\n        const startEdge = dir === 1 ? 1 : 2;\n        const lineSize = vertical ? lineBox.height() : lineBox.width();\n        const step = dir * (lineSize / (this.logMax - this.logMin));\n        const lineStart = lineBox[valueAxis + startEdge];\n\n        return {\n            step: step,\n            lineStart: lineStart,\n            lineBox: lineBox\n        };\n    }\n}\n\nfunction initRange(autoMin, autoMax, axisOptions, options) {\n    let { min, max } = axisOptions;\n\n    if (defined(axisOptions.axisCrossingValue) && axisOptions.axisCrossingValue <= 0) {\n        throwNegativeValuesError();\n    }\n\n    if (!defined(options.max)) {\n        max = autoMax;\n    } else if (options.max <= 0) {\n        throwNegativeValuesError();\n    }\n\n    if (!defined(options.min)) {\n        min = autoMin;\n    } else if (options.min <= 0) {\n        throwNegativeValuesError();\n    }\n\n    return {\n        min: min,\n        max: max\n    };\n}\n\nfunction autoAxisMin(min, max, options) {\n    const base = options.majorUnit;\n    let autoMin = min;\n    if (min <= 0) {\n        autoMin = max <= 1 ? Math.pow(base, -2) : 1;\n    } else if (!options.narrowRange) {\n        autoMin = Math.pow(base, Math.floor(log(min, base)));\n    }\n    return autoMin;\n}\n\nfunction autoAxisMax(max, base) {\n    const logMaxRemainder = round(log(max, base), DEFAULT_PRECISION) % 1;\n    let autoMax;\n    if (max <= 0) {\n        autoMax = base;\n    } else if (logMaxRemainder !== 0 && (logMaxRemainder < 0.3 || logMaxRemainder > 0.9)) {\n        autoMax = Math.pow(base, log(max, base) + 0.2);\n    } else {\n        autoMax = Math.pow(base, Math.ceil(log(max, base)));\n    }\n\n    return autoMax;\n}\n\nfunction throwNegativeValuesError() {\n    throw new Error(\"Non positive values cannot be used for a logarithmic axis\");\n}\n\nfunction log(y, x) {\n    return Math.log(y) / Math.log(x);\n}\n\nsetDefaultOptions(LogarithmicAxis, {\n    type: \"log\",\n    majorUnit: DEFAULT_MAJOR_UNIT,\n    minorUnit: 1,\n    axisCrossingValue: 1,\n    vertical: true,\n    majorGridLines: {\n        visible: true,\n        width: 1,\n        color: BLACK\n    },\n    zIndex: 1,\n    _deferLabels: true\n});\n\nexport default LogarithmicAxis;","import { geometry as geom, drawing as draw } from '@progress/kendo-drawing';\n\nimport { append, map } from '../../common';\n\nconst GridLinesMixin = {\n    createGridLines: function(altAxis) {\n        const options = this.options;\n        const radius = Math.abs(this.box.center().y - altAxis.lineBox().y1);\n        let gridLines = [];\n        let skipMajor = false;\n        let majorAngles, minorAngles;\n\n        if (options.majorGridLines.visible) {\n            majorAngles = this.majorGridLineAngles(altAxis);\n            skipMajor = true;\n\n            gridLines = this.renderMajorGridLines(\n                majorAngles, radius, options.majorGridLines\n            );\n        }\n\n        if (options.minorGridLines.visible) {\n            minorAngles = this.minorGridLineAngles(altAxis, skipMajor);\n\n            append(gridLines, this.renderMinorGridLines(\n                minorAngles, radius, options.minorGridLines, altAxis, skipMajor\n            ));\n        }\n\n        return gridLines;\n    },\n\n    renderMajorGridLines: function(angles, radius, options) {\n        return this.renderGridLines(angles, radius, options);\n    },\n\n    renderMinorGridLines: function(angles, radius, options, altAxis, skipMajor) {\n        const radiusCallback = this.radiusCallback && this.radiusCallback(radius, altAxis, skipMajor);\n        return this.renderGridLines(angles, radius, options, radiusCallback);\n    },\n\n    renderGridLines: function(angles, radius, options, radiusCallback) {\n        const style = {\n            stroke: {\n                width: options.width,\n                color: options.color,\n                dashType: options.dashType\n            }\n        };\n\n        const center = this.box.center();\n        const circle = new geom.Circle([ center.x, center.y ], radius);\n        const container = this.gridLinesVisual();\n\n        for (let i = 0; i < angles.length; i++) {\n            const line = new draw.Path(style);\n            if (radiusCallback) {\n                circle.radius = radiusCallback(angles[i]);\n            }\n\n            line.moveTo(circle.center)\n                .lineTo(circle.pointAt(angles[i] + 180));\n\n            container.append(line);\n        }\n\n        return container.children;\n    },\n\n    gridLineAngles: function(altAxis, size, skip, step, skipAngles) {\n        const divs = this.intervals(size, skip, step, skipAngles);\n        const options = altAxis.options;\n        const altAxisVisible = options.visible && (options.line || {}).visible !== false;\n\n        return map(divs, (d) => {\n            const alpha = this.intervalAngle(d);\n\n            if (!altAxisVisible || alpha !== 90) {\n                return alpha;\n            }\n        });\n    }\n};\n\nexport default GridLinesMixin;","import { geometry as geom, drawing as draw } from '@progress/kendo-drawing';\n\nimport GridLinesMixin from './mixins/grid-lines-mixin';\nimport CategoryAxis from './category-axis';\nimport ShapeBuilder from './shape-builder';\nimport Ring from './ring';\nimport Box from './box';\n\nimport { COORD_PRECISION, ARC } from '../common/constants';\nimport { deepExtend, getSpacing, inArray, limitValue, map, rad, round, setDefaultOptions } from '../common';\n\nclass RadarCategoryAxis extends CategoryAxis {\n    range() {\n        return { min: 0, max: this.options.categories.length };\n    }\n\n    reflow(box) {\n        this.box = box;\n        this.reflowLabels();\n    }\n\n    lineBox() {\n        return this.box;\n    }\n\n    reflowLabels() {\n        const { labels, options: { labels: labelOptions } } = this;\n        const skip = labelOptions.skip || 0;\n        const step = labelOptions.step || 1;\n        const measureBox = new Box();\n\n        for (let i = 0; i < labels.length; i++) {\n            labels[i].reflow(measureBox);\n            const labelBox = labels[i].box;\n\n            labels[i].reflow(this.getSlot(skip + i * step).adjacentBox(\n                0, labelBox.width(), labelBox.height()\n            ));\n        }\n    }\n\n    intervals(size, skipOption, stepOption, skipAngles = false) {\n        const options = this.options;\n        const categories = options.categories.length;\n        const divCount = categories / size || 1;\n        const divAngle = 360 / divCount;\n        const skip = skipOption || 0;\n        const step = stepOption || 1;\n        const divs = [];\n        let angle = 0;\n\n        for (let i = skip; i < divCount; i += step) {\n            if (options.reverse) {\n                angle = 360 - i * divAngle;\n            } else {\n                angle = i * divAngle;\n            }\n\n            angle = round(angle, COORD_PRECISION) % 360;\n\n            if (!(skipAngles && inArray(angle, skipAngles))) {\n                divs.push(angle);\n            }\n        }\n\n        return divs;\n    }\n\n    majorIntervals() {\n        return this.intervals(1);\n    }\n\n    minorIntervals() {\n        return this.intervals(0.5);\n    }\n\n    intervalAngle(interval) {\n        return (360 + interval + this.options.startAngle) % 360;\n    }\n\n    majorAngles() {\n        return map(this.majorIntervals(), (interval) => this.intervalAngle(interval));\n    }\n\n    createLine() {\n        return [];\n    }\n\n    majorGridLineAngles(altAxis) {\n        const majorGridLines = this.options.majorGridLines;\n        return this.gridLineAngles(altAxis, 1, majorGridLines.skip, majorGridLines.step);\n    }\n\n    minorGridLineAngles(altAxis, skipMajor) {\n        const { minorGridLines, majorGridLines } = this.options;\n        const majorGridLineAngles = skipMajor ? this.intervals(1, majorGridLines.skip, majorGridLines.step) : null;\n\n        return this.gridLineAngles(altAxis, 0.5, minorGridLines.skip, minorGridLines.step, majorGridLineAngles);\n    }\n\n    radiusCallback(radius, altAxis, skipMajor) {\n        if (altAxis.options.type !== ARC) {\n            const minorAngle = rad(360 / (this.options.categories.length * 2));\n            const minorRadius = Math.cos(minorAngle) * radius;\n            const majorAngles = this.majorAngles();\n\n            const radiusCallback = function(angle) {\n                if (!skipMajor && inArray(angle, majorAngles)) {\n                    return radius;\n                }\n\n                return minorRadius;\n            };\n            return radiusCallback;\n        }\n    }\n\n    createPlotBands() {\n        const plotBands = this.options.plotBands || [];\n\n        const group = this._plotbandGroup = new draw.Group({\n            zIndex: -1\n        });\n\n        for (let i = 0; i < plotBands.length; i++) {\n            const band = plotBands[i];\n            const slot = this.plotBandSlot(band);\n            const singleSlot = this.getSlot(band.from);\n\n            const head = band.from - Math.floor(band.from);\n            slot.startAngle += head * singleSlot.angle;\n\n            const tail = Math.ceil(band.to) - band.to;\n            slot.angle -= (tail + head) * singleSlot.angle;\n\n            const ring = ShapeBuilder.current.createRing(slot, {\n                fill: {\n                    color: band.color,\n                    opacity: band.opacity\n                },\n                stroke: {\n                    opacity: band.opacity\n                }\n            });\n            group.append(ring);\n        }\n\n        this.appendVisual(group);\n    }\n\n    plotBandSlot(band) {\n        return this.getSlot(band.from, band.to - 1);\n    }\n\n    getSlot(from, to) {\n        const options = this.options;\n        const justified = options.justified;\n        const box = this.box;\n        const divs = this.majorAngles();\n        const totalDivs = divs.length;\n        const slotAngle = 360 / totalDivs;\n        let fromValue = from;\n\n        if (options.reverse && !justified) {\n            fromValue = (fromValue + 1) % totalDivs;\n        }\n\n        fromValue = limitValue(Math.floor(fromValue), 0, totalDivs - 1);\n        let slotStart = divs[fromValue];\n\n        if (justified) {\n            slotStart = slotStart - slotAngle / 2;\n\n            if (slotStart < 0) {\n                slotStart += 360;\n            }\n        }\n\n        const toValue = limitValue(Math.ceil(to || fromValue), fromValue, totalDivs - 1);\n        const slots = toValue - fromValue + 1;\n        const angle = slotAngle * slots;\n\n        return new Ring(box.center(), 0, box.height() / 2, slotStart, angle);\n    }\n\n    slot(from, to) {\n        const slot = this.getSlot(from, to);\n        const startAngle = slot.startAngle + 180;\n        const endAngle = startAngle + slot.angle;\n\n        return new geom.Arc([ slot.center.x, slot.center.y ], {\n            startAngle: startAngle,\n            endAngle: endAngle,\n            radiusX: slot.radius,\n            radiusY: slot.radius\n        });\n    }\n\n    pointCategoryIndex(point) {\n        const length = this.options.categories.length;\n        let index = null;\n\n        for (let i = 0; i < length; i++) {\n            const slot = this.getSlot(i);\n            if (slot.containsPoint(point)) {\n                index = i;\n                break;\n            }\n        }\n\n        return index;\n    }\n}\n\nsetDefaultOptions(RadarCategoryAxis, {\n    startAngle: 90,\n    labels: {\n        margin: getSpacing(10)\n    },\n    majorGridLines: {\n        visible: true\n    },\n    justified: true\n});\ndeepExtend(RadarCategoryAxis.prototype, GridLinesMixin);\n\nexport default RadarCategoryAxis;","import { geometry as geom } from '@progress/kendo-drawing';\n\nimport GridLinesMixin from './mixins/grid-lines-mixin';\nimport RadarCategoryAxis from './radar-category-axis';\nimport NumericAxis from './numeric-axis';\nimport Axis from './axis';\nimport Ring from './ring';\nimport Box from './box';\n\nimport { BLACK } from '../common/constants';\nimport { deepExtend, deg, getSpacing, inArray, limitValue, setDefaultOptions } from '../common';\n\nclass PolarAxis extends Axis {\n    constructor(options, chartService) {\n        super(options, chartService);\n\n        const instanceOptions = this.options;\n\n        instanceOptions.minorUnit = instanceOptions.minorUnit || instanceOptions.majorUnit / 2;\n    }\n\n    getDivisions(stepValue) {\n        return NumericAxis.prototype.getDivisions.call(this, stepValue) - 1;\n    }\n\n    reflow(box) {\n        this.box = box;\n        this.reflowLabels();\n    }\n\n    reflowLabels() {\n        const { options, labels, options: { labels: labelOptions } } = this;\n        const skip = labelOptions.skip || 0;\n        const step = labelOptions.step || 1;\n\n        const measureBox = new Box();\n        const divs = this.intervals(options.majorUnit, skip, step);\n\n        for (let i = 0; i < labels.length; i++) {\n            labels[i].reflow(measureBox);\n            const labelBox = labels[i].box;\n\n            labels[i].reflow(this.getSlot(divs[i]).adjacentBox(0, labelBox.width(), labelBox.height()));\n        }\n    }\n\n    lineBox() {\n        return this.box;\n    }\n\n    intervals(size, skipOption, stepOption, skipAngles = false) {\n        const min = this.options.min;\n        const divisions = this.getDivisions(size);\n        const divs = [];\n        const skip = skipOption || 0;\n        const step = stepOption || 1;\n\n        for (let i = skip; i < divisions; i += step) {\n            const current = (360 + min + i * size) % 360;\n            if (!(skipAngles && inArray(current, skipAngles))) {\n                divs.push(current);\n            }\n        }\n\n        return divs;\n    }\n\n    majorIntervals() {\n        return this.intervals(this.options.majorUnit);\n    }\n\n    minorIntervals() {\n        return this.intervals(this.options.minorUnit);\n    }\n\n    intervalAngle(i) {\n        return (540 - i - this.options.startAngle) % 360;\n    }\n\n    createLine() {\n        return [];\n    }\n\n    majorGridLineAngles(altAxis) {\n        const majorGridLines = this.options.majorGridLines;\n        return this.gridLineAngles(altAxis, this.options.majorUnit, majorGridLines.skip, majorGridLines.step);\n    }\n\n    minorGridLineAngles(altAxis, skipMajor) {\n        const options = this.options;\n        const { minorGridLines, majorGridLines } = options;\n        const majorGridLineAngles = skipMajor ? this.intervals(options.majorUnit, majorGridLines.skip, majorGridLines.step) : null;\n\n        return this.gridLineAngles(altAxis, options.minorUnit, minorGridLines.skip, minorGridLines.step, majorGridLineAngles);\n    }\n\n    plotBandSlot(band) {\n        return this.getSlot(band.from, band.to);\n    }\n\n    getSlot(a, b) {\n        const { options, box } = this;\n        const startAngle = options.startAngle;\n        let start = limitValue(a, options.min, options.max);\n        let end = limitValue(b || start, start, options.max);\n\n        if (options.reverse) {\n            start *= -1;\n            end *= -1;\n        }\n\n        start = (540 - start - startAngle) % 360;\n        end = (540 - end - startAngle) % 360;\n\n        if (end < start) {\n            const tmp = start;\n            start = end;\n            end = tmp;\n        }\n\n        return new Ring(box.center(), 0, box.height() / 2, start, end - start);\n    }\n\n    slot(from, to = from) {\n        const options = this.options;\n        const start = 360 - options.startAngle;\n        const slot = this.getSlot(from, to);\n        const min = Math.min(from, to);\n        const max = Math.max(from, to);\n        let startAngle, endAngle;\n\n        if (options.reverse) {\n            startAngle = min;\n            endAngle = max;\n        } else {\n            startAngle = 360 - max;\n            endAngle = 360 - min;\n        }\n\n        startAngle = (startAngle + start) % 360;\n        endAngle = (endAngle + start) % 360;\n\n        return new geom.Arc([ slot.center.x, slot.center.y ], {\n            startAngle: startAngle,\n            endAngle: endAngle,\n            radiusX: slot.radius,\n            radiusY: slot.radius\n        });\n    }\n\n    getValue(point) {\n        const options = this.options;\n        const center = this.box.center();\n        const dx = point.x - center.x;\n        const dy = point.y - center.y;\n        let theta = Math.round(deg(Math.atan2(dy, dx)));\n        let start = options.startAngle;\n\n        if (!options.reverse) {\n            theta *= -1;\n            start *= -1;\n        }\n\n        return (theta + start + 360) % 360;\n    }\n\n    valueRange() {\n        return {\n            min: 0,\n            max: Math.PI * 2\n        };\n    }\n}\n\nsetDefaultOptions(PolarAxis, {\n    type: \"polar\",\n    startAngle: 0,\n    reverse: false,\n    majorUnit: 60,\n    min: 0,\n    max: 360,\n    labels: {\n        margin: getSpacing(10)\n    },\n    majorGridLines: {\n        color: BLACK,\n        visible: true,\n        width: 1\n    },\n    minorGridLines: {\n        color: \"#aaa\"\n    }\n});\n\ndeepExtend(PolarAxis.prototype, GridLinesMixin, {\n    createPlotBands: RadarCategoryAxis.prototype.createPlotBands,\n    majorAngles: RadarCategoryAxis.prototype.majorAngles,\n    range: NumericAxis.prototype.range,\n    labelsCount: NumericAxis.prototype.labelsCount,\n    createAxisLabel: NumericAxis.prototype.createAxisLabel\n});\n\nexport default PolarAxis;","import { geometry as geom, drawing as draw } from '@progress/kendo-drawing';\n\nimport ShapeBuilder from '../shape-builder';\nimport Ring from '../ring';\nimport Point from '../point';\n\nimport { ARC } from '../../common/constants';\nimport { append, deg, rad } from '../../common';\n\nconst RadarNumericAxisMixin = {\n    options: {\n        majorGridLines: {\n            visible: true\n        }\n    },\n\n    createPlotBands: function() {\n        const { majorGridLines: { type }, plotBands = [] } = this.options;\n        const altAxis = this.plotArea.polarAxis;\n        const majorAngles = altAxis.majorAngles();\n        const center = altAxis.box.center();\n        const group = this._plotbandGroup = new draw.Group({\n            zIndex: -1\n        });\n\n        for (let i = 0; i < plotBands.length; i++) {\n            const band = plotBands[i];\n            const bandStyle = {\n                fill: {\n                    color: band.color,\n                    opacity: band.opacity\n                },\n                stroke: {\n                    opacity: band.opacity\n                }\n            };\n\n            const slot = this.getSlot(band.from, band.to, true);\n            const ring = new Ring(center, center.y - slot.y2, center.y - slot.y1, 0, 360);\n\n            let shape;\n            if (type === ARC) {\n                shape = ShapeBuilder.current.createRing(ring, bandStyle);\n            } else {\n                shape = draw.Path.fromPoints(this.plotBandPoints(ring, majorAngles), bandStyle).close();\n            }\n\n            group.append(shape);\n        }\n\n        this.appendVisual(group);\n    },\n\n    plotBandPoints: function(ring, angles) {\n        const innerPoints = [];\n        const outerPoints = [];\n        const center = [ ring.center.x, ring.center.y ];\n        const innerCircle = new geom.Circle(center, ring.innerRadius);\n        const outerCircle = new geom.Circle(center, ring.radius);\n\n        for (let i = 0; i < angles.length; i++) {\n            innerPoints.push(innerCircle.pointAt(angles[i] + 180));\n            outerPoints.push(outerCircle.pointAt(angles[i] + 180));\n        }\n\n        innerPoints.reverse();\n        innerPoints.push(innerPoints[0]);\n        outerPoints.push(outerPoints[0]);\n\n        return outerPoints.concat(innerPoints);\n    },\n\n    createGridLines: function(altAxis) {\n        const options = this.options;\n        const majorTicks = this.radarMajorGridLinePositions();\n        const majorAngles = altAxis.majorAngles();\n        const center = altAxis.box.center();\n        let gridLines = [];\n\n        if (options.majorGridLines.visible) {\n            gridLines = this.renderGridLines(\n                center, majorTicks, majorAngles, options.majorGridLines\n            );\n        }\n\n        if (options.minorGridLines.visible) {\n            const minorTicks = this.radarMinorGridLinePositions();\n            append(gridLines, this.renderGridLines(\n                center, minorTicks, majorAngles, options.minorGridLines\n            ));\n        }\n\n        return gridLines;\n    },\n\n    renderGridLines: function(center, ticks, angles, options) {\n        const style = {\n            stroke: {\n                width: options.width,\n                color: options.color,\n                dashType: options.dashType\n            }\n        };\n        const { skip = 0, step = 0 } = options;\n        const container = this.gridLinesVisual();\n\n        for (let tickIx = skip; tickIx < ticks.length; tickIx += step) {\n            const tickRadius = center.y - ticks[tickIx];\n            if (tickRadius > 0) {\n                const circle = new geom.Circle([ center.x, center.y ], tickRadius);\n                if (options.type === ARC) {\n                    container.append(new draw.Circle(circle, style));\n                } else {\n                    const line = new draw.Path(style);\n                    for (let angleIx = 0; angleIx < angles.length; angleIx++) {\n                        line.lineTo(circle.pointAt(angles[angleIx] + 180));\n                    }\n\n                    line.close();\n                    container.append(line);\n                }\n            }\n        }\n\n        return container.children;\n    },\n\n    getValue: function(point) {\n        const lineBox = this.lineBox();\n        const altAxis = this.plotArea.polarAxis;\n        const majorAngles = altAxis.majorAngles();\n        const center = altAxis.box.center();\n        const radius = point.distanceTo(center);\n        let distance = radius;\n\n        if (this.options.majorGridLines.type !== ARC && majorAngles.length > 1) {\n            const dx = point.x - center.x;\n            const dy = point.y - center.y;\n            const theta = (deg(Math.atan2(dy, dx)) + 540) % 360;\n\n            majorAngles.sort(function(a, b) {\n                return angularDistance(a, theta) - angularDistance(b, theta);\n            });\n\n            // Solve triangle (center, point, axis X) using one side (radius) and two angles.\n            // Angles are derived from triangle (center, point, gridline X)\n            const midAngle = angularDistance(majorAngles[0], majorAngles[1]) / 2;\n            const alpha = angularDistance(theta, majorAngles[0]);\n            const gamma = 90 - midAngle;\n            const beta = 180 - alpha - gamma;\n\n            distance = radius * (Math.sin(rad(beta)) / Math.sin(rad(gamma)));\n        }\n\n        return this.axisType().prototype.getValue.call(\n            this, new Point(lineBox.x1, lineBox.y2 - distance)\n        );\n    }\n};\n\nfunction angularDistance(a, b) {\n    return 180 - Math.abs(Math.abs(a - b) - 180);\n}\n\nexport default RadarNumericAxisMixin;","import NumericAxis from './numeric-axis';\nimport RadarNumericAxisMixin from './mixins/radar-numeric-axis-mixin';\n\nimport { deepExtend } from '../common';\n\nclass RadarNumericAxis extends NumericAxis {\n    radarMajorGridLinePositions() {\n        return this.getTickPositions(this.options.majorUnit);\n    }\n\n    radarMinorGridLinePositions() {\n        const options = this.options;\n        let minorSkipStep = 0;\n\n        if (options.majorGridLines.visible) {\n            minorSkipStep = options.majorUnit;\n        }\n        return this.getTickPositions(options.minorUnit, minorSkipStep);\n    }\n\n    axisType() {\n        return NumericAxis;\n    }\n}\n\ndeepExtend(RadarNumericAxis.prototype, RadarNumericAxisMixin);\n\nexport default RadarNumericAxis;","import LogarithmicAxis from './logarithmic-axis';\nimport RadarNumericAxisMixin from './mixins/radar-numeric-axis-mixin';\n\nimport { deepExtend } from '../common';\n\nclass RadarLogarithmicAxis extends LogarithmicAxis {\n    radarMajorGridLinePositions() {\n        const positions = [];\n\n        this.traverseMajorTicksPositions(function(position) {\n            positions.push(position);\n        }, this.options.majorGridLines);\n\n        return positions;\n    }\n\n    radarMinorGridLinePositions() {\n        const positions = [];\n\n        this.traverseMinorTicksPositions(function(position) {\n            positions.push(position);\n        }, this.options.minorGridLines);\n\n        return positions;\n    }\n\n    axisType() {\n        return LogarithmicAxis;\n    }\n}\n\ndeepExtend(RadarLogarithmicAxis.prototype, RadarNumericAxisMixin);\n\nexport default RadarLogarithmicAxis;","import { geometry as geom } from '@progress/kendo-drawing';\n\nimport { X, Y } from '../common/constants';\nimport { Class, last, round } from '../common';\n\nconst WEIGHT = 0.333;\nconst EXTREMUM_ALLOWED_DEVIATION = 0.01;\n\nclass CurveProcessor extends Class {\n\n    constructor(closed) {\n        super();\n\n        this.closed = closed;\n    }\n\n    process(dataPoints) {\n        const points = dataPoints.slice(0);\n        const segments = [];\n        let closed = this.closed;\n        let length = points.length;\n\n        if (length > 2) {\n            this.removeDuplicates(0, points);\n            length = points.length;\n        }\n\n        if (length < 2 || (length === 2 && points[0].equals(points[1]))) {\n            return segments;\n        }\n\n        let p0 = points[0];\n        let p1 = points[1];\n        let p2 = points[2];\n\n        segments.push(new geom.Segment(p0));\n\n        while (p0.equals(points[length - 1])) {\n            closed = true;\n            points.pop();\n            length--;\n        }\n\n        if (length === 2) {\n            const tangent = this.tangent(p0,p1, X, Y);\n\n            last(segments).controlOut(\n                this.firstControlPoint(tangent, p0, p1, X, Y)\n            );\n\n            segments.push(new geom.Segment(\n                p1,\n                this.secondControlPoint(tangent, p0, p1, X, Y)\n            ));\n\n            return segments;\n        }\n\n        let initialControlPoint, lastControlPoint;\n\n        if (closed) {\n            p0 = points[length - 1]; p1 = points[0]; p2 = points[1];\n            const controlPoints = this.controlPoints(p0, p1, p2);\n            initialControlPoint = controlPoints[1];\n            lastControlPoint = controlPoints[0];\n        } else {\n            const tangent = this.tangent(p0, p1, X,Y);\n            initialControlPoint = this.firstControlPoint(tangent, p0, p1, X, Y);\n        }\n\n        let cp0 = initialControlPoint;\n        for (let idx = 0; idx <= length - 3; idx++) {\n            this.removeDuplicates(idx, points);\n            length = points.length;\n            if (idx + 3 <= length) {\n                p0 = points[idx]; p1 = points[idx + 1]; p2 = points[idx + 2];\n                const controlPoints = this.controlPoints(p0,p1,p2);\n\n                last(segments).controlOut(cp0);\n                cp0 = controlPoints[1];\n\n                const cp1 = controlPoints[0];\n                segments.push(new geom.Segment(p1, cp1));\n            }\n        }\n\n        if (closed) {\n            p0 = points[length - 2]; p1 = points[length - 1]; p2 = points[0];\n            const controlPoints = this.controlPoints(p0, p1, p2);\n\n            last(segments).controlOut(cp0);\n            segments.push(new geom.Segment(\n                p1,\n                controlPoints[0]\n            ));\n\n            last(segments).controlOut(controlPoints[1]);\n            segments.push(new geom.Segment(\n                p2,\n                lastControlPoint\n            ));\n        } else {\n            const tangent = this.tangent(p1, p2, X, Y);\n\n            last(segments).controlOut(cp0);\n            segments.push(new geom.Segment(\n                p2,\n                this.secondControlPoint(tangent, p1, p2, X, Y)\n            ));\n        }\n\n        return segments;\n    }\n\n    removeDuplicates(idx, points) {\n        while (points[idx + 1] && (points[idx].equals(points[idx + 1]) || points[idx + 1].equals(points[idx + 2]))) {\n            points.splice(idx + 1, 1);\n        }\n    }\n\n    invertAxis(p0, p1, p2) {\n        let invertAxis = false;\n\n        if (p0.x === p1.x) {\n            invertAxis = true;\n        } else if (p1.x === p2.x) {\n            if ((p1.y < p2.y && p0.y <= p1.y) || (p2.y < p1.y && p1.y <= p0.y)) {\n                invertAxis = true;\n            }\n        } else {\n            const fn = this.lineFunction(p0,p1);\n            const y2 = this.calculateFunction(fn, p2.x);\n            if (!(p0.y <= p1.y && p2.y <= y2) &&\n                !(p1.y <= p0.y && p2.y >= y2)) {\n                invertAxis = true;\n            }\n        }\n\n        return invertAxis;\n    }\n\n    isLine(p0, p1, p2) {\n        const fn = this.lineFunction(p0, p1);\n        const y2 = this.calculateFunction(fn, p2.x);\n\n        return (p0.x === p1.x && p1.x === p2.x) || round(y2, 1) === round(p2.y, 1);\n    }\n\n    lineFunction(p1, p2) {\n        const a = (p2.y - p1.y) / (p2.x - p1.x);\n        const b = p1.y - a * p1.x;\n\n        return [ b, a ];\n    }\n\n    controlPoints(p0, p1, p2) {\n        let xField = X;\n        let yField = Y;\n        let restrict = false;\n        let switchOrientation = false;\n        let tangent;\n\n        if (this.isLine(p0, p1, p2)) {\n            tangent = this.tangent(p0, p1, X, Y);\n        } else {\n            const monotonic = {\n                x: this.isMonotonicByField(p0, p1, p2, X),\n                y: this.isMonotonicByField(p0, p1, p2, Y)\n            };\n\n            if (monotonic.x && monotonic.y) {\n                tangent = this.tangent(p0, p2, X, Y);\n                restrict = true;\n            } else {\n                if (this.invertAxis(p0, p1, p2)) {\n                    xField = Y;\n                    yField = X;\n                }\n\n                if (monotonic[xField]) {\n                    tangent = 0;\n                } else {\n                    let sign;\n                    if ((p2[yField] < p0[yField] && p0[yField] <= p1[yField]) ||\n                        (p0[yField] < p2[yField] && p1[yField] <= p0[yField])) {\n                        sign = numberSign((p2[yField] - p0[yField]) * (p1[xField] - p0[xField]));\n                    } else {\n                        sign = -numberSign((p2[xField] - p0[xField]) * (p1[yField] - p0[yField]));\n                    }\n\n                    tangent = EXTREMUM_ALLOWED_DEVIATION * sign;\n                    switchOrientation = true;\n                }\n            }\n        }\n\n        const secondControlPoint = this.secondControlPoint(tangent, p0, p1, xField, yField);\n\n        if (switchOrientation) {\n            const oldXField = xField;\n            xField = yField;\n            yField = oldXField;\n        }\n\n        const firstControlPoint = this.firstControlPoint(tangent, p1, p2, xField, yField);\n\n        if (restrict) {\n            this.restrictControlPoint(p0, p1, secondControlPoint, tangent);\n            this.restrictControlPoint(p1, p2, firstControlPoint, tangent);\n        }\n\n        return [ secondControlPoint, firstControlPoint ];\n    }\n\n    restrictControlPoint(p1, p2, cp, tangent) {\n        if (p1.y < p2.y) {\n            if (p2.y < cp.y) {\n                cp.x = p1.x + (p2.y - p1.y) / tangent;\n                cp.y = p2.y;\n            } else if (cp.y < p1.y) {\n                cp.x = p2.x - (p2.y - p1.y) / tangent;\n                cp.y = p1.y;\n            }\n        } else {\n            if (cp.y < p2.y) {\n                cp.x = p1.x - (p1.y - p2.y) / tangent;\n                cp.y = p2.y;\n            } else if (p1.y < cp.y) {\n                cp.x = p2.x + (p1.y - p2.y) / tangent;\n                cp.y = p1.y;\n            }\n        }\n    }\n\n    tangent(p0, p1, xField, yField) {\n        const x = p1[xField] - p0[xField];\n        const y = p1[yField] - p0[yField];\n        let tangent;\n\n        if (x === 0) {\n            tangent = 0;\n        } else {\n            tangent = y / x;\n        }\n\n        return tangent;\n    }\n\n    isMonotonicByField(p0, p1, p2, field) {\n        return (p2[field] > p1[field] && p1[field] > p0[field]) ||\n                    (p2[field] < p1[field] && p1[field] < p0[field]);\n    }\n\n    firstControlPoint(tangent, p0, p3, xField, yField) {\n        const t1 = p0[xField];\n        const t2 = p3[xField];\n        const distance = (t2 - t1) * WEIGHT;\n\n        return this.point(t1 + distance, p0[yField] + distance * tangent, xField, yField);\n    }\n\n    secondControlPoint(tangent, p0, p3, xField, yField) {\n        const t1 = p0[xField];\n        const t2 = p3[xField];\n        const distance = (t2 - t1) * WEIGHT;\n\n        return this.point(t2 - distance, p3[yField] - distance * tangent, xField, yField);\n    }\n\n    point(xValue, yValue, xField, yField) {\n        const controlPoint = new geom.Point();\n        controlPoint[xField] = xValue;\n        controlPoint[yField] = yValue;\n\n        return controlPoint;\n    }\n\n    calculateFunction(fn, x) {\n        const length = fn.length;\n        let result = 0;\n\n        for (let i = 0; i < length; i++) {\n            result += Math.pow(x,i) * fn[i];\n        }\n        return result;\n    }\n}\n\nfunction numberSign(value) {\n    return value <= 0 ? -1 : 1;\n}\n\nexport default CurveProcessor;","import { Class } from '../../common';\n\nclass ChartAxis extends Class {\n    constructor(axis) {\n        super();\n\n        this._axis = axis;\n        this.options = axis.options;\n    }\n\n    value(point) {\n        const axis = this._axis;\n        const value = axis.getCategory ? axis.getCategory(point) : axis.getValue(point);\n\n        return value;\n    }\n\n    slot(from, to, limit = true) {\n        return this._axis.slot(from, to, limit);\n    }\n\n    range() {\n        return this._axis.range();\n    }\n\n    valueRange() {\n        return this._axis.valueRange();\n    }\n}\n\nexport default ChartAxis;","class ChartPane {\n    constructor(pane) {\n        this.visual = pane.visual;\n        this.chartsVisual = pane.chartContainer.visual;\n    }\n}\n\nexport default ChartPane;","import { Class } from '../../common';\n\nclass ChartPlotArea extends Class {\n    constructor(plotArea) {\n        super();\n\n        this._plotArea = plotArea;\n        this.visual = plotArea.visual;\n        this.backgroundVisual = plotArea._bgVisual;\n    }\n}\n\nexport default ChartPlotArea;","import { isNumber } from '../../common';\n\nexport default function countNumbers(values) {\n    const length = values.length;\n    let count = 0;\n\n    for (let i = 0; i < length; i++) {\n        const num = values[i];\n        if (isNumber(num)) {\n            count++;\n        }\n    }\n\n    return count;\n}","import { MIN_VALUE, MAX_VALUE } from '../../common/constants';\nimport { defined, isNumber } from '../../common';\n\nimport countNumbers from '../utils/count-numbers';\n\nconst Aggregates = {\n    min: function(values) {\n        const length = values.length;\n        let min = MAX_VALUE;\n\n        for (let i = 0; i < length; i++) {\n            const value = values[i];\n            if (isNumber(value)) {\n                min = Math.min(min, value);\n            }\n        }\n\n        return min === MAX_VALUE ? values[0] : min;\n    },\n\n    max: function(values) {\n        const length = values.length;\n        let max = MIN_VALUE;\n\n        for (let i = 0; i < length; i++) {\n            const value = values[i];\n            if (isNumber(value)) {\n                max = Math.max(max, value);\n            }\n        }\n\n        return max === MIN_VALUE ? values[0] : max;\n    },\n\n    sum: function(values) {\n        const length = values.length;\n        let sum = 0;\n\n        for (let i = 0; i < length; i++) {\n            const value = values[i];\n            if (isNumber(value)) {\n                sum += value;\n            }\n        }\n\n        return sum;\n    },\n\n    sumOrNull: function(values) {\n        let result = null;\n\n        if (countNumbers(values)) {\n            result = Aggregates.sum(values);\n        }\n\n        return result;\n    },\n\n    count: function(values) {\n        const length = values.length;\n        let count = 0;\n\n        for (let i = 0; i < length; i++) {\n            const value = values[i];\n            if (value !== null && defined(value)) {\n                count++;\n            }\n        }\n\n        return count;\n    },\n\n    avg: function(values) {\n        const count = countNumbers(values);\n        let result = values[0];\n\n        if (count > 0) {\n            result = Aggregates.sum(values) / count;\n        }\n\n        return result;\n    },\n\n    first: function(values) {\n        const length = values.length;\n\n        for (let i = 0; i < length; i++) {\n            const value = values[i];\n            if (value !== null && defined(value)) {\n                return value;\n            }\n        }\n\n        return values[0];\n    }\n};\n\nexport default Aggregates;","import { getter } from '../../common';\n\nexport default function getField(field, row) {\n    if (row === null) {\n        return row;\n    }\n\n    const get = getter(field, true);\n    return get(row);\n}","import getField from './utils/get-field';\nimport { VALUE } from '../common/constants';\nimport { Class, defined } from '../common';\n\nclass SeriesBinder extends Class {\n\n    constructor() {\n        super();\n\n        this._valueFields = {};\n        this._otherFields = {};\n        this._nullValue = {};\n        this._undefinedValue = {};\n    }\n\n    register(seriesTypes, valueFields = [ VALUE ], otherFields = {}) {\n\n        for (let i = 0; i < seriesTypes.length; i++) {\n            const type = seriesTypes[i];\n\n            this._valueFields[type] = valueFields;\n            this._otherFields[type] = otherFields;\n            this._nullValue[type] = this._makeValue(valueFields, null);\n            this._undefinedValue[type] = this._makeValue(valueFields, undefined);\n        }\n    }\n\n    canonicalFields(series) {\n        return this.valueFields(series).concat(this.otherFields(series));\n    }\n\n    valueFields(series) {\n        return this._valueFields[series.type] || [ VALUE ];\n    }\n\n    otherFields(series) {\n        return this._otherFields[series.type] || [ VALUE ];\n    }\n\n    bindPoint(series, pointIx, item) {\n        const data = series.data;\n        const pointData = defined(item) ? item : data[pointIx];\n        const result = { valueFields: { value: pointData } };\n        const valueFields = this.valueFields(series);\n        const otherFields = this._otherFields[series.type];\n        let fields, value;\n\n        if (pointData === null) {\n            value = this._nullValue[series.type];\n        } else if (!defined(pointData)) {\n            value = this._undefinedValue[series.type];\n        } else if (Array.isArray(pointData)) {\n            const fieldData = pointData.slice(valueFields.length);\n            value = this._bindFromArray(pointData, valueFields);\n            fields = this._bindFromArray(fieldData, otherFields);\n        } else if (typeof pointData === \"object\") {\n            const srcValueFields = this.sourceFields(series, valueFields);\n            const srcPointFields = this.sourceFields(series, otherFields);\n\n            value = this._bindFromObject(pointData, valueFields, srcValueFields);\n            fields = this._bindFromObject(pointData, otherFields, srcPointFields);\n        }\n\n        if (defined(value)) {\n            if (valueFields.length === 1) {\n                result.valueFields.value = value[valueFields[0]];\n            } else {\n                result.valueFields = value;\n            }\n        }\n\n        result.fields = fields || {};\n\n        return result;\n    }\n\n    _makeValue(fields, initialValue) {\n        const value = {};\n        const length = fields.length;\n\n        for (let i = 0; i < length; i++) {\n            const fieldName = fields[i];\n            value[fieldName] = initialValue;\n        }\n\n        return value;\n    }\n\n    _bindFromArray(array, fields) {\n        const value = {};\n\n        if (fields) {\n            const length = Math.min(fields.length, array.length);\n\n            for (let i = 0; i < length; i++) {\n                value[fields[i]] = array[i];\n            }\n        }\n\n        return value;\n    }\n\n    _bindFromObject(object, fields, srcFields = fields) {\n        const value = {};\n\n        if (fields) {\n            const length = fields.length;\n\n            for (let i = 0; i < length; i++) {\n                const fieldName = fields[i];\n                const srcFieldName = srcFields[i];\n                value[fieldName] = getField(srcFieldName, object);\n            }\n        }\n\n        return value;\n    }\n\n    sourceFields(series, canonicalFields) {\n        const sourceFields = [];\n\n        if (canonicalFields) {\n            const length = canonicalFields.length;\n\n            for (let i = 0; i < length; i++) {\n                const fieldName = canonicalFields[i];\n                const sourceFieldName = fieldName === VALUE ? \"field\" : fieldName + \"Field\";\n\n                sourceFields.push(series[sourceFieldName] || fieldName);\n            }\n        }\n\n        return sourceFields;\n    }\n}\n\nSeriesBinder.current = new SeriesBinder();\n\nexport default SeriesBinder;","import SeriesBinder from '../series-binder';\n\nimport { OBJECT } from '../../common/constants';\nimport { Class, defined, getter, isArray, isNumber } from '../../common';\n\nconst STD_ERR = \"stderr\";\nconst STD_DEV = \"stddev\";\nconst percentRegex = /percent(?:\\w*)\\((\\d+)\\)/;\nconst standardDeviationRegex = new RegExp(\"^\" + STD_DEV + \"(?:\\\\((\\\\d+(?:\\\\.\\\\d+)?)\\\\))?$\");\n\nclass ErrorRangeCalculator extends Class {\n    constructor(errorValue, series, field) {\n        super();\n\n        this.initGlobalRanges(errorValue, series, field);\n    }\n\n    initGlobalRanges(errorValue, series, field) {\n        const data = series.data;\n        const deviationMatch = standardDeviationRegex.exec(errorValue);\n\n        if (deviationMatch) {\n            this.valueGetter = this.createValueGetter(series, field);\n\n            const average = this.getAverage(data);\n            const deviation = this.getStandardDeviation(data, average, false);\n            const multiple = deviationMatch[1] ? parseFloat(deviationMatch[1]) : 1;\n            const errorRange = { low: average.value - deviation * multiple, high: average.value + deviation * multiple };\n\n            this.globalRange = function() {\n                return errorRange;\n            };\n        } else if (errorValue.indexOf && errorValue.indexOf(STD_ERR) >= 0) {\n            this.valueGetter = this.createValueGetter(series, field);\n            const standardError = this.getStandardError(data, this.getAverage(data));\n\n            this.globalRange = function(value) {\n                return { low: value - standardError, high: value + standardError };\n            };\n        }\n    }\n\n    createValueGetter(series, field) {\n        const data = series.data;\n        const binder = SeriesBinder.current;\n        const valueFields = binder.valueFields(series);\n        const item = defined(data[0]) ? data[0] : {};\n        let valueGetter;\n\n        if (isArray(item)) {\n            const index = field ? valueFields.indexOf(field) : 0;\n            valueGetter = getter(\"[\" + index + \"]\");\n        } else if (isNumber(item)) {\n            valueGetter = getter();\n        } else if (typeof item === OBJECT) {\n            const srcValueFields = binder.sourceFields(series, valueFields);\n            valueGetter = getter(srcValueFields[valueFields.indexOf(field)]);\n        }\n\n        return valueGetter;\n    }\n\n    getErrorRange(pointValue, errorValue) {\n        let low, high, value;\n\n        if (!defined(errorValue)) {\n            return null;\n        }\n\n        if (this.globalRange) {\n            return this.globalRange(pointValue);\n        }\n\n        if (isArray(errorValue)) {\n            low = pointValue - errorValue[0];\n            high = pointValue + errorValue[1];\n        } else if (isNumber(value = parseFloat(errorValue))) {\n            low = pointValue - value;\n            high = pointValue + value;\n        } else if ((value = percentRegex.exec(errorValue))) {\n            const percentValue = pointValue * (parseFloat(value[1]) / 100);\n            low = pointValue - Math.abs(percentValue);\n            high = pointValue + Math.abs(percentValue);\n        } else {\n            throw new Error(\"Invalid ErrorBar value: \" + errorValue);\n        }\n\n        return { low: low, high: high };\n    }\n\n    getStandardError(data, average) {\n        return this.getStandardDeviation(data, average, true) / Math.sqrt(average.count);\n    }\n\n    getStandardDeviation(data, average, isSample) {\n        const length = data.length;\n        const total = isSample ? average.count - 1 : average.count;\n        let squareDifferenceSum = 0;\n\n        for (let idx = 0; idx < length; idx++) {\n            const value = this.valueGetter(data[idx]);\n            if (isNumber(value)) {\n                squareDifferenceSum += Math.pow(value - average.value, 2);\n            }\n        }\n\n        return Math.sqrt(squareDifferenceSum / total);\n    }\n\n    getAverage(data) {\n        const length = data.length;\n        let sum = 0;\n        let count = 0;\n\n        for (let idx = 0; idx < length; idx++) {\n            const value = this.valueGetter(data[idx]);\n            if (isNumber(value)) {\n                sum += value;\n                count++;\n            }\n        }\n\n        return {\n            value: sum / count,\n            count: count\n        };\n    }\n}\n\nexport default ErrorRangeCalculator;","import { support } from '@progress/kendo-drawing';\n\nconst browser = support.browser || {};\n\nconst INITIAL_ANIMATION_DURATION = 600;\nconst FADEIN = \"fadeIn\";\n\nconst GLASS = \"glass\";\nconst BORDER_BRIGHTNESS = 0.8;\nconst TOOLTIP_OFFSET = 5;\nconst START_SCALE = browser.msie ? 0.001 : 0;\nconst ERROR_LOW_FIELD = \"errorLow\";\nconst ERROR_HIGH_FIELD = \"errorHigh\";\nconst X_ERROR_LOW_FIELD = \"xErrorLow\";\nconst X_ERROR_HIGH_FIELD = \"xErrorHigh\";\nconst Y_ERROR_LOW_FIELD = \"yErrorLow\";\nconst Y_ERROR_HIGH_FIELD = \"yErrorHigh\";\nconst LINE_MARKER_SIZE = 8;\nconst ZERO = \"zero\";\nconst INTERPOLATE = \"interpolate\";\nconst GAP = \"gap\";\n\nconst SMOOTH = \"smooth\";\nconst STEP = \"step\";\n\nconst AREA = \"area\";\nconst BAR = \"bar\";\nconst BOX_PLOT = \"boxPlot\";\nconst BUBBLE = \"bubble\";\nconst BULLET = \"bullet\";\nconst CANDLESTICK = \"candlestick\";\nconst COLUMN = \"column\";\nconst DONUT = \"donut\";\nconst FUNNEL = \"funnel\";\nconst HORIZONTAL_WATERFALL = \"horizontalWaterfall\";\nconst LINE = \"line\";\nconst OHLC = \"ohlc\";\nconst PIE = \"pie\";\nconst POLAR_AREA = \"polarArea\";\nconst POLAR_LINE = \"polarLine\";\nconst POLAR_SCATTER = \"polarScatter\";\nconst RADAR_AREA = \"radarArea\";\nconst RADAR_COLUMN = \"radarColumn\";\nconst RADAR_LINE = \"radarLine\";\nconst RANGE_BAR = \"rangeBar\";\nconst RANGE_COLUMN = \"rangeColumn\";\nconst SCATTER = \"scatter\";\nconst SCATTER_LINE = \"scatterLine\";\nconst VERTICAL_AREA = \"verticalArea\";\nconst VERTICAL_BOX_PLOT = \"verticalBoxPlot\";\nconst VERTICAL_BULLET = \"verticalBullet\";\nconst VERTICAL_LINE = \"verticalLine\";\nconst WATERFALL = \"waterfall\";\nconst EQUALLY_SPACED_SERIES = [\n    BAR, COLUMN, OHLC, CANDLESTICK, BOX_PLOT, VERTICAL_BOX_PLOT,\n    BULLET, RANGE_COLUMN, RANGE_BAR, WATERFALL, HORIZONTAL_WATERFALL\n];\n\nconst LEGEND_ITEM_CLICK = \"legendItemClick\";\nconst LEGEND_ITEM_HOVER = \"legendItemHover\";\nconst SERIES_CLICK = \"seriesClick\";\nconst SERIES_HOVER = \"seriesHover\";\nconst PLOT_AREA_CLICK = \"plotAreaClick\";\nconst PLOT_AREA_HOVER = \"plotAreaHover\";\nconst DRAG = \"drag\";\nconst DRAG_END = \"dragEnd\";\nconst DRAG_START = \"dragStart\";\nconst ZOOM_START = \"zoomStart\";\nconst ZOOM = \"zoom\";\nconst ZOOM_END = \"zoomEnd\";\nconst SELECT_START = \"selectStart\";\nconst SELECT = \"select\";\nconst SELECT_END = \"selectEnd\";\nconst RENDER = \"render\";\nconst SHOW_TOOLTIP = \"showTooltip\";\nconst HIDE_TOOLTIP = \"hideTooltip\";\n\nconst LOGARITHMIC = \"log\";\nconst CATEGORY = \"category\";\n\nconst INSIDE_END = \"insideEnd\";\nconst INSIDE_BASE = \"insideBase\";\nconst OUTSIDE_END = \"outsideEnd\";\n\nconst MOUSEWHEEL = \"DOMMouseScroll mousewheel\";\nconst MOUSEWHEEL_DELAY = 150;\n\nexport {\n    INITIAL_ANIMATION_DURATION, FADEIN,\n    LEGEND_ITEM_CLICK, LEGEND_ITEM_HOVER,\n    SERIES_CLICK, SERIES_HOVER, GLASS,\n    BORDER_BRIGHTNESS, TOOLTIP_OFFSET,\n    START_SCALE, ERROR_LOW_FIELD, ERROR_HIGH_FIELD,\n    X_ERROR_LOW_FIELD, X_ERROR_HIGH_FIELD,\n    Y_ERROR_LOW_FIELD, Y_ERROR_HIGH_FIELD,\n    LINE_MARKER_SIZE, INTERPOLATE, ZERO,\n    SMOOTH, STEP, CATEGORY, FUNNEL,\n    BAR, CANDLESTICK, PIE, COLUMN, AREA,\n    VERTICAL_BULLET, BOX_PLOT, OHLC, WATERFALL, LINE,\n    BULLET, VERTICAL_LINE, VERTICAL_AREA, RANGE_COLUMN,\n    VERTICAL_BOX_PLOT, RANGE_BAR, HORIZONTAL_WATERFALL,\n    SCATTER, SCATTER_LINE, BUBBLE, RADAR_AREA, RADAR_LINE,\n    RADAR_COLUMN, POLAR_LINE, POLAR_AREA, POLAR_SCATTER,\n    RENDER, PLOT_AREA_CLICK, PLOT_AREA_HOVER,\n    LOGARITHMIC, DRAG, DRAG_START, DRAG_END, ZOOM_START, ZOOM, ZOOM_END,\n    SELECT_START, SELECT, SELECT_END, GAP,\n    DONUT, INSIDE_END, INSIDE_BASE, OUTSIDE_END,\n    MOUSEWHEEL, MOUSEWHEEL_DELAY, SHOW_TOOLTIP, HIDE_TOOLTIP,\n    EQUALLY_SPACED_SERIES\n};\n","import { drawing as draw } from '@progress/kendo-drawing';\n\nimport { ChartElement, Point, Box } from '../../core';\n\nimport { FADEIN, INITIAL_ANIMATION_DURATION } from '../constants';\n\nimport { setDefaultOptions, alignPathToPixel } from '../../common';\n\nconst DEFAULT_ERROR_BAR_WIDTH = 4;\n\nclass ErrorBarBase extends ChartElement {\n    constructor(low, high, isVertical, chart, series, options) {\n        super(options);\n\n        this.low = low;\n        this.high = high;\n        this.isVertical = isVertical;\n        this.chart = chart;\n        this.series = series;\n    }\n\n    reflow(targetBox) {\n        const endCaps = this.options.endCaps;\n        const isVertical = this.isVertical;\n        const axis = this.getAxis();\n        const valueBox = axis.getSlot(this.low, this.high);\n        const centerBox = targetBox.center();\n        const capsWidth = this.getCapsWidth(targetBox, isVertical);\n        const capValue = isVertical ? centerBox.x : centerBox.y;\n        const capStart = capValue - capsWidth;\n        const capEnd = capValue + capsWidth;\n        let linePoints;\n\n        if (isVertical) {\n            linePoints = [\n                new Point(centerBox.x, valueBox.y1),\n                new Point(centerBox.x, valueBox.y2)\n            ];\n            if (endCaps) {\n                linePoints.push(new Point(capStart, valueBox.y1),\n                    new Point(capEnd, valueBox.y1),\n                    new Point(capStart, valueBox.y2),\n                    new Point(capEnd, valueBox.y2));\n            }\n            this.box = new Box(capStart, valueBox.y1, capEnd, valueBox.y2);\n        } else {\n            linePoints = [\n                new Point(valueBox.x1, centerBox.y),\n                new Point(valueBox.x2, centerBox.y)\n            ];\n            if (endCaps) {\n                linePoints.push(new Point(valueBox.x1, capStart),\n                    new Point(valueBox.x1, capEnd),\n                    new Point(valueBox.x2, capStart),\n                    new Point(valueBox.x2, capEnd));\n            }\n            this.box = new Box(valueBox.x1, capStart, valueBox.x2, capEnd);\n        }\n\n        this.linePoints = linePoints;\n    }\n\n    getCapsWidth(box, isVertical) {\n        const boxSize = isVertical ? box.width() : box.height();\n        const capsWidth = Math.min(Math.floor(boxSize / 2), DEFAULT_ERROR_BAR_WIDTH) || DEFAULT_ERROR_BAR_WIDTH;\n\n        return capsWidth;\n    }\n\n    createVisual() {\n        const options = this.options;\n        const visual = options.visual;\n\n        if (visual) {\n            this.visual = visual({\n                low: this.low,\n                high: this.high,\n                rect: this.box.toRect(),\n                sender: this.getSender(),\n                options: {\n                    endCaps: options.endCaps,\n                    color: options.color,\n                    line: options.line\n                },\n                createVisual: () => {\n                    this.createDefaultVisual();\n                    const defaultVisual = this.visual;\n                    delete this.visual;\n                    return defaultVisual;\n                }\n            });\n        } else {\n            this.createDefaultVisual();\n        }\n    }\n\n    createDefaultVisual() {\n        const { options, linePoints } = this;\n        const lineOptions = {\n            stroke: {\n                color: options.color,\n                width: options.line.width,\n                dashType: options.line.dashType\n            }\n        };\n\n        super.createVisual();\n\n        for (let idx = 0; idx < linePoints.length; idx += 2) {\n            const line = new draw.Path(lineOptions)\n                .moveTo(linePoints[idx].x, linePoints[idx].y)\n                .lineTo(linePoints[idx + 1].x, linePoints[idx + 1].y);\n\n            alignPathToPixel(line);\n            this.visual.append(line);\n        }\n    }\n}\n\nsetDefaultOptions(ErrorBarBase, {\n    animation: {\n        type: FADEIN,\n        delay: INITIAL_ANIMATION_DURATION\n    },\n    endCaps: true,\n    line: {\n        width: 2\n    },\n    zIndex: 1\n});\n\nexport default ErrorBarBase;","import ErrorBarBase from './error-bar-base';\n\nclass CategoricalErrorBar extends ErrorBarBase {\n    getAxis() {\n        const axis = this.chart.seriesValueAxis(this.series);\n\n        return axis;\n    }\n}\n\nexport default CategoricalErrorBar;","import { inArray, isFunction, isObject, valueOrDefault } from '../../common';\n\nconst MAX_EXPAND_DEPTH = 5;\n\nexport default function evalOptions(options, context, state = {}, dryRun = false) {\n    const defaults = state.defaults = state.defaults || {};\n    const depth = state.depth = state.depth || 0;\n    let needsEval = false;\n\n    state.excluded = state.excluded || [];\n\n    if (depth > MAX_EXPAND_DEPTH) {\n        return null;\n    }\n\n    for (let property in options) {\n        if (!inArray(property, state.excluded) && options.hasOwnProperty(property)) {\n            const propValue = options[property];\n            if (isFunction(propValue)) {\n                needsEval = true;\n                if (!dryRun) {\n                    options[property] = valueOrDefault(propValue(context), defaults[property]);\n                }\n            } else if (isObject(propValue)) {\n                if (!dryRun) {\n                    state.defaults = defaults[property];\n                }\n                state.depth++;\n                needsEval = evalOptions(propValue, context, state, dryRun) || needsEval;\n                state.depth--;\n            }\n        }\n    }\n\n    return needsEval;\n}","export default function categoriesCount(series) {\n    const seriesCount = series.length;\n    let categories = 0;\n\n    for (let i = 0; i < seriesCount; i++) {\n        categories = Math.max(categories, series[i].data.length);\n    }\n\n    return categories;\n}","import ErrorRangeCalculator from './error-bars/error-range-calculator';\nimport CategoricalErrorBar from './error-bars/categorical-error-bar';\n\nimport SeriesBinder from './series-binder';\nimport { ERROR_LOW_FIELD, ERROR_HIGH_FIELD } from './constants';\n\nimport evalOptions from './utils/eval-options';\nimport categoriesCount from './utils/categories-count';\n\nimport { ChartElement, Box } from '../core';\n\nimport { VALUE, STRING, MIN_VALUE, MAX_VALUE } from '../common/constants';\nimport { deepExtend, defined, isNumber, setDefaultOptions, sparseArrayLimits } from '../common';\n\nclass CategoricalChart extends ChartElement {\n    constructor(plotArea, options) {\n        super(options);\n\n        this.plotArea = plotArea;\n        this.chartService = plotArea.chartService;\n        this.categoryAxis = plotArea.seriesCategoryAxis(options.series[0]);\n\n        // Value axis ranges grouped by axis name, e.g.:\n        // primary: { min: 0, max: 1 }\n        this.valueAxisRanges = {};\n\n        this.points = [];\n        this.categoryPoints = [];\n        this.seriesPoints = [];\n        this.seriesOptions = [];\n        this._evalSeries = [];\n\n        this.render();\n    }\n\n    render() {\n        this.traverseDataPoints(this.addValue.bind(this));\n    }\n\n    pointOptions(series, seriesIx) {\n        let options = this.seriesOptions[seriesIx];\n        if (!options) {\n            const defaults = this.pointType().prototype.defaults;\n            this.seriesOptions[seriesIx] = options = deepExtend({ }, defaults, {\n                vertical: !this.options.invertAxes\n            }, series);\n        }\n\n        return options;\n    }\n\n    plotValue(point) {\n        if (!point) {\n            return 0;\n        }\n\n        if (this.options.isStacked100 && isNumber(point.value)) {\n            const categoryIx = point.categoryIx;\n            const categoryPoints = this.categoryPoints[categoryIx];\n            const otherValues = [];\n            let categorySum = 0;\n\n            for (let i = 0; i < categoryPoints.length; i++) {\n                const other = categoryPoints[i];\n                if (other) {\n                    const stack = point.series.stack;\n                    const otherStack = other.series.stack;\n\n                    if ((stack && otherStack) && stack.group !== otherStack.group) {\n                        continue;\n                    }\n\n                    if (isNumber(other.value)) {\n                        categorySum += Math.abs(other.value);\n                        otherValues.push(Math.abs(other.value));\n                    }\n                }\n            }\n\n            if (categorySum > 0) {\n                return point.value / categorySum;\n            }\n        }\n\n        return point.value;\n    }\n\n    plotRange(point, startValue = 0) {\n        const categoryPoints = this.categoryPoints[point.categoryIx];\n\n        if (this.options.isStacked) {\n            let plotValue = this.plotValue(point);\n            const positive = plotValue >= 0;\n            let prevValue = startValue;\n            let isStackedBar = false;\n\n            for (let i = 0; i < categoryPoints.length; i++) {\n                const other = categoryPoints[i];\n\n                if (point === other) {\n                    break;\n                }\n\n                const stack = point.series.stack;\n                const otherStack = other.series.stack;\n                if (stack && otherStack) {\n                    if (typeof stack === STRING && stack !== otherStack) {\n                        continue;\n                    }\n\n                    if (stack.group && stack.group !== otherStack.group) {\n                        continue;\n                    }\n                }\n\n                const otherValue = this.plotValue(other);\n                if ((otherValue >= 0 && positive) ||\n                    (otherValue < 0 && !positive)) {\n                    prevValue += otherValue;\n                    plotValue += otherValue;\n                    isStackedBar = true;\n\n                    if (this.options.isStacked100) {\n                        plotValue = Math.min(plotValue, 1);\n                    }\n                }\n            }\n\n            if (isStackedBar) {\n                prevValue -= startValue;\n            }\n\n            return [ prevValue, plotValue ];\n        }\n\n        const series = point.series;\n        const valueAxis = this.seriesValueAxis(series);\n        const axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n\n        return [ axisCrossingValue, point.value || axisCrossingValue ];\n    }\n\n    stackLimits(axisName, stackName) {\n        let min = MAX_VALUE;\n        let max = MIN_VALUE;\n\n        for (let i = 0; i < this.categoryPoints.length; i++) {\n            const categoryPoints = this.categoryPoints[i];\n            if (!categoryPoints) {\n                continue;\n            }\n\n            for (let pIx = 0; pIx < categoryPoints.length; pIx++) {\n                const point = categoryPoints[pIx];\n                if (point) {\n                    if (point.series.stack === stackName || point.series.axis === axisName) {\n                        const to = this.plotRange(point, 0)[1];\n                        if (defined(to) && isFinite(to)) {\n                            max = Math.max(max, to);\n                            min = Math.min(min, to);\n                        }\n                    }\n                }\n            }\n        }\n\n        return { min: min, max: max };\n    }\n\n    updateStackRange() {\n        const { isStacked, series: chartSeries } = this.options;\n        const limitsCache = {};\n\n        if (isStacked) {\n            for (let i = 0; i < chartSeries.length; i++) {\n                const series = chartSeries[i];\n                const axisName = series.axis;\n                const key = axisName + series.stack;\n\n                let limits = limitsCache[key];\n                if (!limits) {\n                    limits = this.stackLimits(axisName, series.stack);\n\n                    const errorTotals = this.errorTotals;\n                    if (errorTotals) {\n                        if (errorTotals.negative.length) {\n                            limits.min = Math.min(limits.min, sparseArrayLimits(errorTotals.negative).min);\n                        }\n                        if (errorTotals.positive.length) {\n                            limits.max = Math.max(limits.max, sparseArrayLimits(errorTotals.positive).max);\n                        }\n                    }\n\n                    if (limits.min !== MAX_VALUE || limits.max !== MIN_VALUE) {\n                        limitsCache[key] = limits;\n                    } else {\n                        limits = null;\n                    }\n                }\n\n                if (limits) {\n                    this.valueAxisRanges[axisName] = limits;\n                }\n            }\n        }\n    }\n\n    addErrorBar(point, data, categoryIx) {\n        const { value, series, seriesIx } = point;\n        const errorBars = point.options.errorBars;\n        const lowValue = data.fields[ERROR_LOW_FIELD];\n        const highValue = data.fields[ERROR_HIGH_FIELD];\n        let errorRange;\n\n        if (isNumber(lowValue) && isNumber(highValue)) {\n            errorRange = { low: lowValue, high: highValue };\n        } else if (errorBars && defined(errorBars.value)) {\n            this.seriesErrorRanges = this.seriesErrorRanges || [];\n            this.seriesErrorRanges[seriesIx] = this.seriesErrorRanges[seriesIx] ||\n                new ErrorRangeCalculator(errorBars.value, series, VALUE);\n\n            errorRange = this.seriesErrorRanges[seriesIx].getErrorRange(value, errorBars.value);\n        }\n\n        if (errorRange) {\n            point.low = errorRange.low;\n            point.high = errorRange.high;\n            this.addPointErrorBar(point, categoryIx);\n        }\n    }\n\n    addPointErrorBar(point, categoryIx) {\n        const isVertical = !this.options.invertAxes;\n        const options = point.options.errorBars;\n        let { series, low, high } = point;\n\n        if (this.options.isStacked) {\n            const stackedErrorRange = this.stackedErrorRange(point, categoryIx);\n            low = stackedErrorRange.low;\n            high = stackedErrorRange.high;\n        } else {\n            const fields = { categoryIx: categoryIx, series: series };\n            this.updateRange({ value: low }, fields);\n            this.updateRange({ value: high }, fields);\n        }\n\n        const errorBar = new CategoricalErrorBar(low, high, isVertical, this, series, options);\n        point.errorBars = [ errorBar ];\n        point.append(errorBar);\n    }\n\n    stackedErrorRange(point, categoryIx) {\n        const plotValue = this.plotRange(point, 0)[1] - point.value;\n        const low = point.low + plotValue;\n        const high = point.high + plotValue;\n\n        this.errorTotals = this.errorTotals || { positive: [], negative: [] };\n\n        if (low < 0) {\n            this.errorTotals.negative[categoryIx] = Math.min(this.errorTotals.negative[categoryIx] || 0, low);\n        }\n\n        if (high > 0) {\n            this.errorTotals.positive[categoryIx] = Math.max(this.errorTotals.positive[categoryIx] || 0, high);\n        }\n\n        return { low: low, high: high };\n    }\n\n    addValue(data, fields) {\n        const { categoryIx, series, seriesIx } = fields;\n\n        let categoryPoints = this.categoryPoints[categoryIx];\n        if (!categoryPoints) {\n            this.categoryPoints[categoryIx] = categoryPoints = [];\n        }\n\n        let seriesPoints = this.seriesPoints[seriesIx];\n        if (!seriesPoints) {\n            this.seriesPoints[seriesIx] = seriesPoints = [];\n        }\n\n        const point = this.createPoint(data, fields);\n        if (point) {\n            Object.assign(point, fields);\n\n            point.owner = this;\n            point.dataItem = series.data[categoryIx];\n            point.noteText = data.fields.noteText;\n            this.addErrorBar(point, data, categoryIx);\n        }\n\n        this.points.push(point);\n        seriesPoints.push(point);\n        categoryPoints.push(point);\n\n        this.updateRange(data.valueFields, fields);\n    }\n\n    evalPointOptions(options, value, category, categoryIx, series, seriesIx) {\n        const state = { defaults: series._defaults, excluded: [ \"data\", \"aggregate\", \"_events\", \"tooltip\", \"content\", \"template\", \"visual\", \"toggle\", \"_outOfRangeMinPoint\", \"_outOfRangeMaxPoint\" ] };\n\n        let doEval = this._evalSeries[seriesIx];\n        if (!defined(doEval)) {\n            this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n        }\n\n        let pointOptions = options;\n        if (doEval) {\n            pointOptions = deepExtend({}, pointOptions);\n            evalOptions(pointOptions, {\n                value: value,\n                category: category,\n                index: categoryIx,\n                series: series,\n                dataItem: series.data[categoryIx]\n            }, state);\n        }\n\n        return pointOptions;\n    }\n\n    updateRange(data, fields) {\n        const axisName = fields.series.axis;\n        const value = data.value;\n        let axisRange = this.valueAxisRanges[axisName];\n\n        if (isFinite(value) && value !== null) {\n            axisRange = this.valueAxisRanges[axisName] =\n                axisRange || { min: MAX_VALUE, max: MIN_VALUE };\n\n            axisRange.min = Math.min(axisRange.min, value);\n            axisRange.max = Math.max(axisRange.max, value);\n        }\n    }\n\n    seriesValueAxis(series) {\n        const plotArea = this.plotArea;\n        const axisName = series.axis;\n        const axis = axisName ? plotArea.namedValueAxes[axisName] : plotArea.valueAxis;\n\n        if (!axis) {\n            throw new Error(\"Unable to locate value axis with name \" + axisName);\n        }\n\n        return axis;\n    }\n\n    reflow(targetBox) {\n        const categorySlots = this.categorySlots = [];\n        const chartPoints = this.points;\n        const categoryAxis = this.categoryAxis;\n        let pointIx = 0;\n\n        this.traverseDataPoints((data, fields) => {\n            const { categoryIx, series: currentSeries } = fields;\n\n            const valueAxis = this.seriesValueAxis(currentSeries);\n            const point = chartPoints[pointIx++];\n\n            let categorySlot = categorySlots[categoryIx];\n            if (!categorySlot) {\n                categorySlots[categoryIx] = categorySlot =\n                    this.categorySlot(categoryAxis, categoryIx, valueAxis);\n            }\n\n            if (point) {\n                const plotRange = this.plotRange(point, valueAxis.startValue());\n                const valueSlot = valueAxis.getSlot(plotRange[0], plotRange[1], !this.options.clip);\n                if (valueSlot) {\n                    const pointSlot = this.pointSlot(categorySlot, valueSlot);\n\n                    point.aboveAxis = this.aboveAxis(point, valueAxis);\n                    point.stackValue = plotRange[1];\n\n                    if (this.options.isStacked100) {\n                        point.percentage = this.plotValue(point);\n                    }\n\n                    this.reflowPoint(point, pointSlot);\n                } else {\n                    point.visible = false;\n                }\n            }\n        });\n\n        this.reflowCategories(categorySlots);\n\n        this.box = targetBox;\n    }\n\n    aboveAxis(point, valueAxis) {\n        const axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n        const value = point.value;\n\n        return valueAxis.options.reverse ?\n            value < axisCrossingValue : value >= axisCrossingValue;\n    }\n\n    categoryAxisCrossingValue(valueAxis) {\n        const categoryAxis = this.categoryAxis;\n        const options = valueAxis.options;\n        const crossingValues = [].concat(\n            options.axisCrossingValues || options.axisCrossingValue\n        );\n\n        return crossingValues[categoryAxis.axisIndex || 0] || 0;\n    }\n\n    reflowPoint(point, pointSlot) {\n        point.reflow(pointSlot);\n    }\n\n    reflowCategories() { }\n\n    pointSlot(categorySlot, valueSlot) {\n        const options = this.options;\n        const invertAxes = options.invertAxes;\n        const slotX = invertAxes ? valueSlot : categorySlot;\n        const slotY = invertAxes ? categorySlot : valueSlot;\n\n        return new Box(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n    }\n\n    categorySlot(categoryAxis, categoryIx) {\n        return categoryAxis.getSlot(categoryIx);\n    }\n\n    traverseDataPoints(callback) {\n        const series = this.options.series;\n        const categories = this.categoryAxis.options.categories || [];\n        const count = categoriesCount(series);\n        const seriesCount = series.length;\n\n        for (let seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n            this._outOfRangeCallback(series[seriesIx], \"_outOfRangeMinPoint\", seriesIx, callback);\n        }\n\n        for (let categoryIx = 0; categoryIx < count; categoryIx++) {\n            for (let seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                const currentSeries = series[seriesIx];\n                const currentCategory = categories[categoryIx];\n                const pointData = this._bindPoint(currentSeries, seriesIx, categoryIx);\n\n                callback(pointData, {\n                    category: currentCategory,\n                    categoryIx: categoryIx,\n                    series: currentSeries,\n                    seriesIx: seriesIx\n                });\n            }\n        }\n\n        for (let seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n            this._outOfRangeCallback(series[seriesIx], \"_outOfRangeMaxPoint\", seriesIx, callback);\n        }\n    }\n\n    _outOfRangeCallback(series, field, seriesIx, callback) {\n        const outOfRangePoint = series[field];\n        if (outOfRangePoint) {\n            const categoryIx = outOfRangePoint.categoryIx;\n            const pointData = this._bindPoint(series, seriesIx, categoryIx, outOfRangePoint.item);\n\n            callback(pointData, {\n                category: outOfRangePoint.category,\n                categoryIx: categoryIx,\n                series: series,\n                seriesIx: seriesIx\n            });\n        }\n    }\n\n    _bindPoint(series, seriesIx, categoryIx, item) {\n        if (!this._bindCache) {\n            this._bindCache = [];\n        }\n\n        let bindCache = this._bindCache[seriesIx];\n        if (!bindCache) {\n            bindCache = this._bindCache[seriesIx] = [];\n        }\n\n        let data = bindCache[categoryIx];\n        if (!data) {\n            data = bindCache[categoryIx] = SeriesBinder.current.bindPoint(series, categoryIx, item);\n        }\n\n        return data;\n    }\n\n    formatPointValue(point, format) {\n        if (point.value === null) {\n            return \"\";\n        }\n\n        return this.chartService.format.auto(format, point.value);\n    }\n\n    pointValue(data) {\n        return data.valueFields.value;\n    }\n}\n\nsetDefaultOptions(CategoricalChart, {\n    series: [],\n    invertAxes: false,\n    isStacked: false,\n    clip: true\n});\n\nexport default CategoricalChart;","import { SERIES_CLICK, SERIES_HOVER } from '../constants';\nimport { eventElement } from '../../common';\n\nconst PointEventsMixin = {\n    click: function(chart, e) {\n        return chart.trigger(\n            SERIES_CLICK,\n            this.eventArgs(e)\n        );\n    },\n\n    hover: function(chart, e) {\n        return chart.trigger(\n            SERIES_HOVER,\n            this.eventArgs(e)\n        );\n    },\n\n    eventArgs: function(e) {\n        return {\n            value: this.value,\n            percentage: this.percentage,\n            stackValue: this.stackValue,\n            category: this.category,\n            series: this.series,\n            dataItem: this.dataItem,\n            runningTotal: this.runningTotal,\n            total: this.total,\n            element: eventElement(e),\n            originalEvent: e,\n            point: this\n        };\n    }\n};\n\nexport default PointEventsMixin;","import { Note } from '../../core';\nimport { defined } from '../../common';\n\nconst NoteMixin = {\n    createNote: function() {\n        const options = this.options.notes;\n        const text = this.noteText || options.label.text;\n\n        if (options.visible !== false && defined(text) && text !== null) {\n            this.note = new Note({\n                value: this.value,\n                text: text,\n                dataItem: this.dataItem,\n                category: this.category,\n                series: this.series\n            }, this.options.notes, this.owner.chartService);\n\n            this.append(this.note);\n        }\n    }\n};\n\nexport default NoteMixin;","import { geometry as geom, Color } from '@progress/kendo-drawing';\n\nimport { ChartElement, TextBox, ShapeElement, Box, Point } from '../../core';\n\nimport PointEventsMixin from '../mixins/point-events-mixin';\nimport NoteMixin from '../mixins/note-mixin';\nimport { LINE_MARKER_SIZE, FADEIN, INITIAL_ANIMATION_DURATION, BORDER_BRIGHTNESS, TOOLTIP_OFFSET } from '../constants';\n\nimport { WHITE, CIRCLE, CENTER, TOP, BOTTOM, LEFT } from '../../common/constants';\nimport { deepExtend, defined, getTemplate, valueOrDefault, getSpacing } from '../../common';\n\nconst ABOVE = \"above\";\nconst BELOW = \"below\";\n\nclass LinePoint extends ChartElement {\n    constructor(value, options) {\n        super();\n\n        this.value = value;\n        this.options = options;\n        this.aboveAxis = valueOrDefault(this.options.aboveAxis, true);\n        this.tooltipTracking = true;\n    }\n\n    render() {\n        const { markers, labels } = this.options;\n\n        if (this._rendered) {\n            return;\n        }\n\n        this._rendered = true;\n\n        if (markers.visible && markers.size) {\n            this.marker = this.createMarker();\n            this.append(this.marker);\n        }\n\n        if (labels.visible) {\n            const labelTemplate = getTemplate(labels);\n            let labelText = this.value;\n            if (labelTemplate) {\n                labelText = labelTemplate({\n                    dataItem: this.dataItem,\n                    category: this.category,\n                    value: this.value,\n                    percentage: this.percentage,\n                    stackValue: this.stackValue,\n                    series: this.series\n                });\n            } else if (labels.format) {\n                labelText = this.formatValue(labels.format);\n            }\n            this.label = new TextBox(labelText,\n                deepExtend({\n                    align: CENTER,\n                    vAlign: CENTER,\n                    margin: {\n                        left: 5,\n                        right: 5\n                    },\n                    zIndex: valueOrDefault(labels.zIndex, this.series.zIndex)\n                }, labels)\n            );\n            this.append(this.label);\n        }\n\n        this.createNote();\n\n        if (this.errorBar) {\n            this.append(this.errorBar);\n        }\n    }\n\n    markerBorder() {\n        const options = this.options.markers;\n        const background = options.background;\n        const border = deepExtend({ color: this.color }, options.border);\n\n        if (!defined(border.color)) {\n            border.color = new Color(background).brightness(BORDER_BRIGHTNESS).toHex();\n        }\n\n        return border;\n    }\n\n    createVisual() {}\n\n    createMarker() {\n        const options = this.options.markers;\n        const marker = new ShapeElement({\n            type: options.type,\n            width: options.size,\n            height: options.size,\n            rotation: options.rotation,\n            background: options.background,\n            border: this.markerBorder(),\n            opacity: options.opacity,\n            zIndex: valueOrDefault(options.zIndex, this.series.zIndex),\n            animation: options.animation,\n            visual: options.visual\n        }, {\n            dataItem: this.dataItem,\n            value: this.value,\n            series: this.series,\n            category: this.category\n        });\n\n        return marker;\n    }\n\n    markerBox() {\n        if (!this.marker) {\n            this.marker = this.createMarker();\n            this.marker.reflow(this._childBox);\n        }\n\n        return this.marker.box;\n    }\n\n    reflow(targetBox) {\n        const { options, aboveAxis } = this;\n        const vertical = options.vertical;\n\n        this.render();\n\n        this.box = targetBox;\n        const childBox = targetBox.clone();\n\n        if (vertical) {\n            if (aboveAxis) {\n                childBox.y1 -= childBox.height();\n            } else {\n                childBox.y2 += childBox.height();\n            }\n        } else {\n            if (aboveAxis) {\n                childBox.x1 += childBox.width();\n            } else {\n                childBox.x2 -= childBox.width();\n            }\n        }\n\n        this._childBox = childBox;\n        if (this.marker) {\n            this.marker.reflow(childBox);\n        }\n\n        this.reflowLabel(childBox);\n\n        if (this.errorBars) {\n            for (let i = 0; i < this.errorBars.length; i++) {\n                this.errorBars[i].reflow(childBox);\n            }\n        }\n\n        if (this.note) {\n            let noteTargetBox = this.markerBox();\n\n            if (!(options.markers.visible && options.markers.size)) {\n                const center = noteTargetBox.center();\n                noteTargetBox = new Box(center.x, center.y, center.x, center.y);\n            }\n\n            this.note.reflow(noteTargetBox);\n        }\n    }\n\n    reflowLabel(box) {\n        const { options, label } = this;\n        let anchor = options.labels.position;\n\n        if (label) {\n            anchor = anchor === ABOVE ? TOP : anchor;\n            anchor = anchor === BELOW ? BOTTOM : anchor;\n\n            label.reflow(box);\n            label.box.alignTo(this.markerBox(), anchor);\n            label.reflow(label.box);\n        }\n    }\n\n    createHighlight() {\n        const markers = this.options.highlight.markers;\n        const defaultColor = this.markerBorder().color;\n        const options = this.options.markers;\n        const size = options.size + (options.border.width || 0) + (markers.border.width || 0);\n\n        const shadow = new ShapeElement({\n            type: options.type,\n            width: size,\n            height: size,\n            rotation: options.rotation,\n            background: markers.color || defaultColor,\n            border: {\n                color: markers.border.color,\n                width: markers.border.width,\n                opacity: valueOrDefault(markers.border.opacity, 1)\n            },\n            opacity: valueOrDefault(markers.opacity, 1)\n        });\n        shadow.reflow(this._childBox);\n\n        return shadow.getElement();\n    }\n\n    highlightVisual() {\n        return (this.marker || {}).visual;\n    }\n\n    highlightVisualArgs() {\n        const marker = this.marker;\n        let visual, rect;\n\n        if (marker) {\n            rect = marker.paddingBox.toRect();\n            visual = marker.visual;\n        } else {\n            const size = this.options.markers.size;\n            const halfSize = size / 2;\n            const center = this.box.center();\n            rect = new geom.Rect([ center.x - halfSize, center.y - halfSize ], [ size, size ]);\n        }\n\n        return {\n            options: this.options,\n            rect: rect,\n            visual: visual\n        };\n    }\n\n    tooltipAnchor() {\n        const markerBox = this.markerBox();\n        const clipBox = this.owner.pane.clipBox();\n        const showTooltip = !clipBox || clipBox.overlaps(markerBox);\n\n        if (showTooltip) {\n            const x = markerBox.x2 + TOOLTIP_OFFSET;\n            const horizontalAlign = LEFT;\n            let y, verticalAlign;\n\n            if (this.aboveAxis) {\n                y = markerBox.y1;\n                verticalAlign = BOTTOM;\n            } else {\n                y = markerBox.y2;\n                verticalAlign = TOP;\n            }\n\n            return {\n                point: new Point(x, y),\n                align: {\n                    horizontal: horizontalAlign,\n                    vertical: verticalAlign\n                }\n            };\n        }\n    }\n\n    formatValue(format) {\n        return this.owner.formatPointValue(this, format);\n    }\n\n    overlapsBox(box) {\n        const markerBox = this.markerBox();\n        return markerBox.overlaps(box);\n    }\n}\n\nLinePoint.prototype.defaults = {\n    vertical: true,\n    markers: {\n        visible: true,\n        background: WHITE,\n        size: LINE_MARKER_SIZE,\n        type: CIRCLE,\n        border: {\n            width: 2\n        },\n        opacity: 1\n    },\n    labels: {\n        visible: false,\n        position: ABOVE,\n        margin: getSpacing(3),\n        padding: getSpacing(4),\n        animation: {\n            type: FADEIN,\n            delay: INITIAL_ANIMATION_DURATION\n        }\n    },\n    notes: {\n        label: {}\n    },\n    highlight: {\n        markers: {\n            border: {\n                color: \"#fff\",\n                width: 2\n            }\n        }\n    },\n    errorBars: {\n        line: {\n            width: 1\n        }\n    }\n};\n\ndeepExtend(LinePoint.prototype, PointEventsMixin);\ndeepExtend(LinePoint.prototype, NoteMixin);\n\nexport default LinePoint;\n","import { drawing as draw } from '@progress/kendo-drawing';\n\nimport { ChartElement } from '../../core';\n\nimport { isFunction, setDefaultOptions } from '../../common';\n\nclass LineSegment extends ChartElement {\n    constructor(linePoints, series, seriesIx) {\n        super();\n\n        this.linePoints = linePoints;\n        this.series = series;\n        this.seriesIx = seriesIx;\n    }\n\n    points(visualPoints) {\n        const linePoints = this.linePoints.concat(visualPoints || []);\n        const points = [];\n\n        for (let i = 0, length = linePoints.length; i < length; i++) {\n            if (linePoints[i].visible !== false) {\n                points.push(linePoints[i]._childBox.toRect().center());\n            }\n        }\n\n        return points;\n    }\n\n    createVisual() {\n        const { options, series } = this;\n        let { color, _defaults: defaults } = series;\n\n        if (isFunction(color) && defaults) {\n            color = defaults.color;\n        }\n\n        const line = draw.Path.fromPoints(this.points(), {\n            stroke: {\n                color: color,\n                width: series.width,\n                opacity: series.opacity,\n                dashType: series.dashType\n            },\n            zIndex: series.zIndex\n        });\n\n        if (options.closed) {\n            line.close();\n        }\n\n        this.visual = line;\n    }\n\n    aliasFor(e, coords) {\n        return this.parent.getNearestPoint(coords.x, coords.y, this.seriesIx);\n    }\n}\n\nsetDefaultOptions(LineSegment, {\n    closed: false\n});\n\nexport default LineSegment;","import { geometry as geom } from '@progress/kendo-drawing';\n\nimport LineSegment from './line-segment';\n\nimport { INTERPOLATE } from '../constants';\n\nimport { X, Y } from '../../common/constants';\n\nclass StepLineSegment extends LineSegment {\n    points(visualPoints) {\n        let points = this.calculateStepPoints(this.linePoints);\n\n        if (visualPoints && visualPoints.length) {\n            points = points.concat(this.calculateStepPoints(visualPoints).reverse());\n        }\n\n        return points;\n    }\n\n    calculateStepPoints(points) {\n        const chart = this.parent;\n        const plotArea = chart.plotArea;\n        const categoryAxis = plotArea.seriesCategoryAxis(this.series);\n        const isInterpolate = chart.seriesMissingValues(this.series) === INTERPOLATE;\n        const reverse = categoryAxis.options.reverse;\n        const vertical = categoryAxis.options.vertical;\n        const dir = reverse ? 2 : 1;\n        const revDir = reverse ? 1 : 2;\n        const length = points.length;\n        const result = [];\n\n        for (let i = 1; i < length; i++) {\n            const prevPoint = points[i - 1];\n            const point = points[i];\n            const prevMarkerBoxCenter = prevPoint.markerBox().center();\n            const markerBoxCenter = point.markerBox().center();\n            if (categoryAxis.options.justified) {\n                result.push(new geom.Point(prevMarkerBoxCenter.x, prevMarkerBoxCenter.y));\n                if (vertical) {\n                    result.push(new geom.Point(prevMarkerBoxCenter.x, markerBoxCenter.y));\n                } else {\n                    result.push(new geom.Point(markerBoxCenter.x, prevMarkerBoxCenter.y));\n                }\n                result.push(new geom.Point(markerBoxCenter.x, markerBoxCenter.y));\n            } else {\n                if (vertical) {\n                    result.push(new geom.Point(prevMarkerBoxCenter.x, prevPoint.box[Y + dir]));\n                    result.push(new geom.Point(prevMarkerBoxCenter.x, prevPoint.box[Y + revDir]));\n                    if (isInterpolate) {\n                        result.push(new geom.Point(prevMarkerBoxCenter.x, point.box[Y + dir]));\n                    }\n                    result.push(new geom.Point(markerBoxCenter.x, point.box[Y + dir]));\n                    result.push(new geom.Point(markerBoxCenter.x, point.box[Y + revDir]));\n                } else {\n                    result.push(new geom.Point(prevPoint.box[X + dir], prevMarkerBoxCenter.y));\n                    result.push(new geom.Point(prevPoint.box[X + revDir], prevMarkerBoxCenter.y));\n                    if (isInterpolate) {\n                        result.push(new geom.Point(point.box[X + dir], prevMarkerBoxCenter.y));\n                    }\n                    result.push(new geom.Point(point.box[X + dir], markerBoxCenter.y));\n                    result.push(new geom.Point(point.box[X + revDir], markerBoxCenter.y));\n                }\n            }\n        }\n\n        return result || [];\n    }\n}\n\nexport default StepLineSegment;","import { drawing as draw } from '@progress/kendo-drawing';\n\nimport LineSegment from './line-segment';\n\nimport { CurveProcessor } from '../../core';\n\nimport { isFunction } from '../../common';\n\nclass SplineSegment extends LineSegment {\n    createVisual() {\n        const series = this.series;\n        const defaults = series._defaults;\n        let color = series.color;\n\n        if (isFunction(color) && defaults) {\n            color = defaults.color;\n        }\n\n        const curveProcessor = new CurveProcessor(this.options.closed);\n        const segments = curveProcessor.process(this.points());\n        const curve = new draw.Path({\n            stroke: {\n                color: color,\n                width: series.width,\n                opacity: series.opacity,\n                dashType: series.dashType\n            },\n            zIndex: series.zIndex\n        });\n\n        curve.segments.push.apply(curve.segments, segments);\n\n        this.visual = curve;\n    }\n}\n\nexport default SplineSegment;","import { ZERO, INTERPOLATE } from '../constants';\n\nimport { Point } from '../../core';\nimport { MAX_VALUE } from '../../common/constants';\nimport { defined } from '../../common';\n\nconst LineChartMixin = {\n    renderSegments: function() {\n        const { options, seriesPoints } = this;\n        const series = options.series;\n        const seriesCount = seriesPoints.length;\n        let lastSegment;\n\n        this._segments = [];\n\n        for (let seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n            const currentSeries = series[seriesIx];\n            const sortedPoints = this.sortPoints(seriesPoints[seriesIx]);\n            const pointCount = sortedPoints.length;\n            let linePoints = [];\n\n            for (let pointIx = 0; pointIx < pointCount; pointIx++) {\n                const point = sortedPoints[pointIx];\n                if (point) {\n                    linePoints.push(point);\n                } else if (this.seriesMissingValues(currentSeries) !== INTERPOLATE) {\n                    if (linePoints.length > 1) {\n                        lastSegment = this.createSegment(\n                            linePoints, currentSeries, seriesIx, lastSegment\n                        );\n                        this._addSegment(lastSegment);\n                    }\n                    linePoints = [];\n                }\n            }\n\n            if (linePoints.length > 1) {\n                lastSegment = this.createSegment(\n                    linePoints, currentSeries, seriesIx, lastSegment\n                );\n                this._addSegment(lastSegment);\n            }\n        }\n\n        this.children.unshift.apply(this.children, this._segments);\n    },\n\n    _addSegment: function(segment) {\n        this._segments.push(segment);\n        segment.parent = this;\n    },\n\n    sortPoints: function(points) {\n        return points;\n    },\n\n    seriesMissingValues: function(series) {\n        const missingValues = series.missingValues;\n        const assumeZero = !missingValues && this.options.isStacked;\n\n        return assumeZero ? ZERO : missingValues || INTERPOLATE;\n    },\n\n    getNearestPoint: function(x, y, seriesIx) {\n        const target = new Point(x, y);\n        const allPoints = this.seriesPoints[seriesIx];\n        let nearestPointDistance = MAX_VALUE;\n        let nearestPoint;\n\n        for (let i = 0; i < allPoints.length; i++) {\n            const point = allPoints[i];\n\n            if (point && defined(point.value) && point.value !== null && point.visible !== false) {\n                const pointBox = point.box;\n                const pointDistance = pointBox.center().distanceTo(target);\n\n                if (pointDistance < nearestPointDistance) {\n                    nearestPoint = point;\n                    nearestPointDistance = pointDistance;\n                }\n            }\n        }\n\n        return nearestPoint;\n    }\n};\n\nexport default LineChartMixin;","import { drawing as draw } from '@progress/kendo-drawing';\n\nimport { INITIAL_ANIMATION_DURATION } from '../constants';\n\nimport { interpolateValue, setDefaultOptions } from '../../common';\n\nclass ClipAnimation extends draw.Animation {\n    setup() {\n        this._setEnd(this.options.box.x1);\n    }\n\n    step(pos) {\n        const box = this.options.box;\n        this._setEnd(interpolateValue(box.x1, box.x2, pos));\n    }\n\n    _setEnd(x) {\n        const element = this.element;\n        const segments = element.segments;\n        const topRight = segments[1].anchor();\n        const bottomRight = segments[2].anchor();\n\n        element.suspend();\n        topRight.setX(x);\n        element.resume();\n        bottomRight.setX(x);\n    }\n}\n\nsetDefaultOptions(ClipAnimation, {\n    duration: INITIAL_ANIMATION_DURATION\n});\n\ndraw.AnimationFactory.current.register(\"clip\", ClipAnimation);\n\nexport default ClipAnimation;","import { defined } from '../../common';\n\nexport default function anyHasZIndex(elements) {\n    for (let idx = 0; idx < elements.length; idx++) {\n        if (defined(elements[idx].zIndex)) {\n            return true;\n        }\n    }\n}","import { drawing as draw } from '@progress/kendo-drawing';\n\nimport ClipAnimation from '../animations/clip-animation';\nimport anyHasZIndex from '../utils/any-has-z-index';\nimport { defined } from '../../common';\n\nconst ClipAnimationMixin = {\n    createAnimation: function() {\n        const root = this.getRoot();\n        if (root && (root.options || {}).transitions !== false) {\n            const box = root.box;\n            const clipPath = draw.Path.fromRect(box.toRect());\n            this.visual.clip(clipPath);\n            this.animation = new ClipAnimation(clipPath, {\n                box: box\n            });\n            if (anyHasZIndex(this.options.series)) {\n                this._setChildrenAnimation(clipPath);\n            }\n        }\n    },\n\n    _setChildrenAnimation: function(clipPath) {\n        const points = this.animationPoints();\n\n        for (let idx = 0; idx < points.length; idx++) {\n            const point = points[idx];\n            if (point && point.visual && defined(point.visual.options.zIndex)) {\n                point.visual.clip(clipPath);\n            }\n        }\n    }\n};\n\nexport default ClipAnimationMixin;","import CategoricalChart from '../categorical-chart';\nimport LinePoint from './line-point';\nimport LineSegment from './line-segment';\nimport StepLineSegment from './step-line-segment';\nimport SplineSegment from './spline-segment';\nimport LineChartMixin from '../mixins/line-chart-mixin';\nimport ClipAnimationMixin from '../mixins/clip-animation-mixin';\n\nimport { ZERO, SMOOTH, STEP } from '../constants';\n\nimport { deepExtend, defined, isFunction } from '../../common';\n\nclass LineChart extends CategoricalChart {\n    render() {\n\n        super.render();\n\n        this.updateStackRange();\n        this.renderSegments();\n    }\n\n    pointType() {\n        return LinePoint;\n    }\n\n    createPoint(data, fields) {\n        const { categoryIx, category, series, seriesIx } = fields;\n        const missingValues = this.seriesMissingValues(series);\n        let value = data.valueFields.value;\n\n        if (!defined(value) || value === null) {\n            if (missingValues === ZERO) {\n                value = 0;\n            } else {\n                return null;\n            }\n        }\n\n        let pointOptions = this.pointOptions(series, seriesIx);\n        pointOptions = this.evalPointOptions(\n            pointOptions, value, category, categoryIx, series, seriesIx\n        );\n\n        let color = data.fields.color || series.color;\n        if (isFunction(series.color)) {\n            color = pointOptions.color;\n        }\n\n        const point = new LinePoint(value, pointOptions);\n        point.color = color;\n\n        this.append(point);\n\n        return point;\n    }\n\n    plotRange(point) {\n        let plotValue = this.plotValue(point);\n\n        if (this.options.isStacked) {\n            const categoryIx = point.categoryIx;\n            const categoryPoints = this.categoryPoints[categoryIx];\n\n            for (let i = 0; i < categoryPoints.length; i++) {\n                const other = categoryPoints[i];\n\n                if (point === other) {\n                    break;\n                }\n\n                plotValue += this.plotValue(other);\n\n                if (this.options.isStacked100) {\n                    plotValue = Math.min(plotValue, 1);\n                }\n            }\n\n        }\n\n        return [ plotValue, plotValue ];\n    }\n\n    createSegment(linePoints, currentSeries, seriesIx) {\n        const style = currentSeries.style;\n        let pointType;\n\n        if (style === STEP) {\n            pointType = StepLineSegment;\n        } else if (style === SMOOTH) {\n            pointType = SplineSegment;\n        } else {\n            pointType = LineSegment;\n        }\n\n        return new pointType(linePoints, currentSeries, seriesIx);\n    }\n\n    animationPoints() {\n        const points = this.points;\n        const result = [];\n        for (let idx = 0; idx < points.length; idx++) {\n            result.push((points[idx] || {}).marker);\n        }\n        return result.concat(this._segments);\n    }\n}\n\ndeepExtend(LineChart.prototype, LineChartMixin, ClipAnimationMixin);\n\nexport default LineChart;","import { drawing as draw, geometry as geom } from '@progress/kendo-drawing';\n\nimport { X, Y } from '../../common/constants';\nimport { deepExtend, isFunction, last, limitValue } from '../../common';\n\nconst AreaSegmentMixin = {\n    points: function() {\n        const chart = this.parent;\n        const plotArea = chart.plotArea;\n        const invertAxes = chart.options.invertAxes;\n        const valueAxis = chart.seriesValueAxis(this.series);\n        const valueAxisLineBox = valueAxis.lineBox();\n        const categoryAxis = plotArea.seriesCategoryAxis(this.series);\n        const categoryAxisLineBox = categoryAxis.lineBox();\n        const stackPoints = this.stackPoints;\n        const points = this._linePoints(stackPoints);\n        const pos = invertAxes ? X : Y;\n        let end = invertAxes ? categoryAxisLineBox.x1 : categoryAxisLineBox.y1;\n\n        end = limitValue(end, valueAxisLineBox[pos + 1], valueAxisLineBox[pos + 2]);\n        if (!this.stackPoints && points.length > 1) {\n            const firstPoint = points[0];\n            const lastPoint = last(points);\n\n            if (invertAxes) {\n                points.unshift(new geom.Point(end, firstPoint.y));\n                points.push(new geom.Point(end, lastPoint.y));\n            } else {\n                points.unshift(new geom.Point(firstPoint.x, end));\n                points.push(new geom.Point(lastPoint.x, end));\n            }\n        }\n\n        return points;\n    },\n\n    createVisual: function() {\n        const series = this.series;\n        const defaults = series._defaults;\n        let color = series.color;\n\n        if (isFunction(color) && defaults) {\n            color = defaults.color;\n        }\n\n        this.visual = new draw.Group({\n            zIndex: series.zIndex\n        });\n\n        this.createArea(color);\n        this.createLine(color);\n    },\n\n    createLine: function(color) {\n        const series = this.series;\n        const lineOptions = deepExtend({\n            color: color,\n            opacity: series.opacity\n        }, series.line);\n\n        if (lineOptions.visible !== false && lineOptions.width > 0) {\n            const line = draw.Path.fromPoints(this._linePoints(), {\n                stroke: {\n                    color: lineOptions.color,\n                    width: lineOptions.width,\n                    opacity: lineOptions.opacity,\n                    dashType: lineOptions.dashType,\n                    lineCap: \"butt\"\n                }\n            });\n\n            this.visual.append(line);\n        }\n    },\n\n    createArea: function(color) {\n        const series = this.series;\n\n        const area = draw.Path.fromPoints(this.points(), {\n            fill: {\n                color: color,\n                opacity: series.opacity\n            },\n            stroke: null\n        });\n\n        this.visual.append(area);\n    }\n};\n\nexport default AreaSegmentMixin;","import AreaSegmentMixin from './area-segment-mixin';\nimport LineSegment from '../line-chart/line-segment';\n\nimport { deepExtend } from '../../common';\n\nclass AreaSegment extends LineSegment {\n    constructor(linePoints, stackPoints, currentSeries, seriesIx) {\n        super(linePoints, currentSeries, seriesIx);\n\n        this.stackPoints = stackPoints;\n    }\n}\n\ndeepExtend(AreaSegment.prototype, AreaSegmentMixin, {\n    _linePoints: LineSegment.prototype.points\n});\n\nexport default AreaSegment;","import StepLineSegment from '../line-chart/step-line-segment';\nimport AreaSegmentMixin from './area-segment-mixin';\n\nimport { deepExtend } from '../../common';\n\nclass StepAreaSegment extends StepLineSegment {\n    constructor(linePoints, stackPoints, currentSeries, seriesIx) {\n        super(linePoints, currentSeries, seriesIx);\n\n        this.stackPoints = stackPoints;\n    }\n}\n\ndeepExtend(StepAreaSegment.prototype, AreaSegmentMixin, {\n    _linePoints: StepLineSegment.prototype.points\n});\n\nexport default StepAreaSegment;","import { drawing as draw, geometry as geom } from '@progress/kendo-drawing';\n\nimport AreaSegment from './area-segment';\nimport LineSegment from '../line-chart/line-segment';\n\nimport { CurveProcessor } from '../../core';\n\nimport { X, Y } from '../../common/constants';\nimport { append, deepExtend, isFunction, last, limitValue } from '../../common';\n\nclass SplineAreaSegment extends AreaSegment {\n    constructor(linePoints, prevSegment, isStacked, currentSeries, seriesIx) {\n        super(linePoints, [], currentSeries, seriesIx);\n\n        this.prevSegment = prevSegment;\n        this.isStacked = isStacked;\n    }\n\n    strokeSegments() {\n        let segments = this._strokeSegments;\n\n        if (!segments) {\n            const curveProcessor = new CurveProcessor(this.options.closed);\n            const linePoints = LineSegment.prototype.points.call(this);\n            segments = this._strokeSegments = curveProcessor.process(linePoints);\n        }\n\n        return segments;\n    }\n\n    createVisual() {\n        const series = this.series;\n        const defaults = series._defaults;\n        let color = series.color;\n\n        if (isFunction(color) && defaults) {\n            color = defaults.color;\n        }\n\n        this.visual = new draw.Group({\n            zIndex: series.zIndex\n        });\n\n        this.createFill({\n            fill: {\n                color: color,\n                opacity: series.opacity\n            },\n            stroke: null\n        });\n\n        this.createStroke({\n            stroke: deepExtend({\n                color: color,\n                opacity: series.opacity,\n                lineCap: \"butt\"\n            }, series.line)\n        });\n    }\n\n    createFill(style) {\n        const strokeSegments = this.strokeSegments();\n        const fillSegments = strokeSegments.slice(0);\n        const prevSegment = this.prevSegment;\n\n        if (this.isStacked && prevSegment) {\n            const prevStrokeSegments = prevSegment.strokeSegments();\n            const prevAnchor = last(prevStrokeSegments).anchor();\n\n            fillSegments.push(new geom.Segment(\n                prevAnchor,\n                prevAnchor,\n                last(strokeSegments).anchor()\n            ));\n\n            const stackSegments = [];\n            for (let idx = prevStrokeSegments.length - 1; idx >= 0; idx--) {\n                const segment = prevStrokeSegments[idx];\n                stackSegments.push(new geom.Segment(\n                    segment.anchor(),\n                    segment.controlOut(),\n                    segment.controlIn()\n                ));\n            }\n\n            append(fillSegments, stackSegments);\n\n            const firstAnchor = fillSegments[0].anchor();\n            fillSegments.push(new geom.Segment(\n                firstAnchor,\n                firstAnchor,\n                last(stackSegments).anchor()\n            ));\n        }\n\n        const fill = new draw.Path(style);\n        fill.segments.push.apply(fill.segments, fillSegments);\n        this.closeFill(fill);\n\n        this.visual.append(fill);\n    }\n\n    closeFill(fillPath) {\n        const chart = this.parent;\n        const prevSegment = this.prevSegment;\n        const plotArea = chart.plotArea;\n        const invertAxes = chart.options.invertAxes;\n        const valueAxis = chart.seriesValueAxis(this.series);\n        const valueAxisLineBox = valueAxis.lineBox();\n        const categoryAxis = plotArea.seriesCategoryAxis(this.series);\n        const categoryAxisLineBox = categoryAxis.lineBox();\n        const pos = invertAxes ? X : Y;\n        const segments = this.strokeSegments();\n        const firstPoint = segments[0].anchor();\n        const lastPoint = last(segments).anchor();\n        let end = invertAxes ? categoryAxisLineBox.x1 : categoryAxisLineBox.y1;\n\n        end = limitValue(end, valueAxisLineBox[pos + 1], valueAxisLineBox[pos + 2]);\n        if (!(chart.options.isStacked && prevSegment) && segments.length > 1) {\n            if (invertAxes) {\n                fillPath.lineTo(end, lastPoint.y)\n                        .lineTo(end, firstPoint.y);\n            } else {\n                fillPath.lineTo(lastPoint.x, end)\n                        .lineTo(firstPoint.x, end);\n            }\n        }\n    }\n\n    createStroke(style) {\n        if (style.stroke.width > 0) {\n            const stroke = new draw.Path(style);\n            stroke.segments.push.apply(stroke.segments, this.strokeSegments());\n\n            this.visual.append(stroke);\n        }\n    }\n}\n\nexport default SplineAreaSegment;","import LineChart from '../line-chart/line-chart';\nimport LinePoint from '../line-chart/line-point';\n\nimport AreaSegment from './area-segment';\nimport StepAreaSegment from './step-area-segment';\nimport SplineAreaSegment from './spline-area-segment';\n\nimport { STEP, SMOOTH, ZERO } from '../constants';\n\nclass AreaChart extends LineChart {\n    createSegment(linePoints, currentSeries, seriesIx, prevSegment) {\n        const isStacked = this.options.isStacked;\n        const style = (currentSeries.line || {}).style;\n\n        let stackPoints;\n        if (isStacked && seriesIx > 0 && prevSegment) {\n            const missingValues = this.seriesMissingValues(currentSeries);\n            if (missingValues !== \"gap\") {\n                stackPoints = prevSegment.linePoints;\n            } else {\n                stackPoints = this._gapStackPoints(linePoints, seriesIx, style);\n            }\n\n            if (style !== STEP) {\n                stackPoints = stackPoints.slice(0).reverse();\n            }\n        }\n\n        if (style === SMOOTH) {\n            return new SplineAreaSegment(linePoints, prevSegment, isStacked, currentSeries, seriesIx);\n        }\n\n        let pointType;\n        if (style === STEP) {\n            pointType = StepAreaSegment;\n        } else {\n            pointType = AreaSegment;\n        }\n\n        return new pointType(linePoints, stackPoints, currentSeries, seriesIx);\n    }\n\n    reflow(targetBox) {\n        super.reflow(targetBox);\n\n        const stackPoints = this._stackPoints;\n        if (stackPoints) {\n            for (let idx = 0; idx < stackPoints.length; idx++) {\n                const stackPoint = stackPoints[idx];\n                const pointSlot = this.categoryAxis.getSlot(stackPoint.categoryIx);\n                stackPoint.reflow(pointSlot);\n            }\n        }\n    }\n\n    _gapStackPoints(linePoints, seriesIx, style) {\n        const seriesPoints = this.seriesPoints;\n        let startIdx = linePoints[0].categoryIx;\n        let length = linePoints.length;\n        if (startIdx < 0) {\n            startIdx = 0;\n            length--;\n        }\n\n        const endIdx = startIdx + length;\n        const pointOffset = this.seriesOptions[0]._outOfRangeMinPoint ? 1 : 0;\n        const stackPoints = [];\n\n        this._stackPoints = this._stackPoints || [];\n        for (let categoryIx = startIdx; categoryIx < endIdx; categoryIx++) {\n            const pointIx = categoryIx + pointOffset;\n            let currentSeriesIx = seriesIx;\n            let point;\n\n            do {\n                currentSeriesIx--;\n                point = seriesPoints[currentSeriesIx][pointIx];\n            } while (currentSeriesIx > 0 && !point);\n\n            if (point) {\n                if (style !== STEP && categoryIx > startIdx && !seriesPoints[currentSeriesIx][pointIx - 1]) {\n                    stackPoints.push(this._previousSegmentPoint(categoryIx, pointIx, pointIx - 1, currentSeriesIx));\n                }\n\n                stackPoints.push(point);\n\n                if (style !== STEP && categoryIx + 1 < endIdx && !seriesPoints[currentSeriesIx][pointIx + 1]) {\n                    stackPoints.push(this._previousSegmentPoint(categoryIx, pointIx, pointIx + 1, currentSeriesIx));\n                }\n            } else {\n                const gapStackPoint = this._createGapStackPoint(categoryIx);\n                this._stackPoints.push(gapStackPoint);\n                stackPoints.push(gapStackPoint);\n            }\n        }\n\n        return stackPoints;\n    }\n\n    _previousSegmentPoint(categoryIx, pointIx, segmentIx, seriesIdx) {\n        const seriesPoints = this.seriesPoints;\n        let index = seriesIdx;\n        let point;\n\n        while (index > 0 && !point) {\n            index--;\n            point = seriesPoints[index][segmentIx];\n        }\n\n        if (!point) {\n            point = this._createGapStackPoint(categoryIx);\n            this._stackPoints.push(point);\n        } else {\n            point = seriesPoints[index][pointIx];\n        }\n\n        return point;\n    }\n\n    _createGapStackPoint(categoryIx) {\n        const options = this.pointOptions({}, 0);\n        const point = new LinePoint(0, options);\n        point.categoryIx = categoryIx;\n        point.series = {};\n\n        return point;\n    }\n\n    seriesMissingValues(series) {\n        return series.missingValues || ZERO;\n    }\n}\n\nexport default AreaChart;","import { MIN_VALUE, MAX_VALUE } from '../common/constants';\nimport { Class } from '../common';\n\nclass AxisGroupRangeTracker extends Class {\n    constructor() {\n        super();\n\n        this.axisRanges = {};\n    }\n\n    update(chartAxisRanges) {\n        const axisRanges = this.axisRanges;\n\n        for (let axisName in chartAxisRanges) {\n            const chartRange = chartAxisRanges[axisName];\n            let range = axisRanges[axisName];\n            axisRanges[axisName] = range = range || { min: MAX_VALUE, max: MIN_VALUE };\n\n            range.min = Math.min(range.min, chartRange.min);\n            range.max = Math.max(range.max, chartRange.max);\n        }\n    }\n\n    reset(axisName) {\n        this.axisRanges[axisName] = undefined;\n    }\n\n    query(axisName) {\n        return this.axisRanges[axisName];\n    }\n}\n\nexport default AxisGroupRangeTracker;","import { ChartElement, TextBox, Box } from '../../core';\nimport { FADEIN, INITIAL_ANIMATION_DURATION, INSIDE_END, INSIDE_BASE, OUTSIDE_END } from '../constants';\n\nimport { CENTER, TOP, BOTTOM, LEFT, RIGHT, X, Y, BLACK } from '../../common/constants';\nimport { getSpacing, setDefaultOptions } from '../../common';\n\nclass BarLabel extends ChartElement {\n    constructor(content, options) {\n        super(options);\n\n        this.textBox = new TextBox(content, this.options);\n        this.append(this.textBox);\n    }\n\n    createVisual() {\n        this.textBox.options.noclip = this.options.noclip;\n    }\n\n    reflow(targetBox) {\n        const options = this.options;\n        const { vertical, aboveAxis } = options;\n        const text = this.children[0];\n        const textOptions = text.options;\n        const box = text.box;\n        const padding = text.options.padding;\n        let labelBox = targetBox;\n\n        textOptions.align = vertical ? CENTER : LEFT;\n        textOptions.vAlign = vertical ? TOP : CENTER;\n\n        if (options.position === INSIDE_END) {\n            if (vertical) {\n                textOptions.vAlign = TOP;\n\n                if (!aboveAxis && box.height() < targetBox.height()) {\n                    textOptions.vAlign = BOTTOM;\n                }\n            } else {\n                textOptions.align = aboveAxis ? RIGHT : LEFT;\n            }\n        } else if (options.position === CENTER) {\n            textOptions.vAlign = CENTER;\n            textOptions.align = CENTER;\n        } else if (options.position === INSIDE_BASE) {\n            if (vertical) {\n                textOptions.vAlign = aboveAxis ? BOTTOM : TOP;\n            } else {\n                textOptions.align = aboveAxis ? LEFT : RIGHT;\n            }\n        } else if (options.position === OUTSIDE_END) {\n            if (vertical) {\n                if (aboveAxis) {\n                    labelBox = new Box(\n                        targetBox.x1, targetBox.y1 - box.height(),\n                        targetBox.x2, targetBox.y1\n                    );\n                } else {\n                    labelBox = new Box(\n                        targetBox.x1, targetBox.y2,\n                        targetBox.x2, targetBox.y2 + box.height()\n                    );\n                }\n            } else {\n                textOptions.align = CENTER;\n                if (aboveAxis) {\n                    labelBox = new Box(\n                        targetBox.x2, targetBox.y1,\n                        targetBox.x2 + box.width(), targetBox.y2\n                    );\n                } else {\n                    labelBox = new Box(\n                        targetBox.x1 - box.width(), targetBox.y1,\n                        targetBox.x1, targetBox.y2\n                    );\n                }\n            }\n        }\n\n        if (!options.rotation) {\n            if (vertical) {\n                padding.left = padding.right =\n                    (labelBox.width() - text.contentBox.width()) / 2;\n            } else {\n                padding.top = padding.bottom =\n                    (labelBox.height() - text.contentBox.height()) / 2;\n            }\n        }\n\n        text.reflow(labelBox);\n    }\n\n    alignToClipBox(clipBox) {\n        const vertical = this.options.vertical;\n        const field = vertical ? Y : X;\n        const start = field + \"1\";\n        const end = field + \"2\";\n        const text = this.children[0];\n        const parentBox = this.parent.box;\n\n        if (parentBox[start] < clipBox[start] || clipBox[end] < parentBox[end]) {\n            const targetBox = text.paddingBox.clone();\n            targetBox[start] = Math.max(parentBox[start], clipBox[start]);\n            targetBox[end] = Math.min(parentBox[end], clipBox[end]);\n\n            this.reflow(targetBox);\n        }\n    }\n}\n\nsetDefaultOptions(BarLabel, {\n    position: OUTSIDE_END,\n    margin: getSpacing(3),\n    padding: getSpacing(4),\n    color: BLACK,\n    background: \"\",\n    border: {\n        width: 1,\n        color: \"\"\n    },\n    aboveAxis: true,\n    vertical: false,\n    animation: {\n        type: FADEIN,\n        delay: INITIAL_ANIMATION_DURATION\n    },\n    zIndex: 2\n});\n\nexport default BarLabel;","export default function hasGradientOverlay(options) {\n    const overlay = options.overlay;\n\n    return overlay && overlay.gradient && overlay.gradient !== \"none\";\n}","import { drawing as draw, Color } from '@progress/kendo-drawing';\n\nimport BarLabel from './bar-label';\n\nimport { BORDER_BRIGHTNESS, TOOLTIP_OFFSET } from '../constants';\n\nimport hasGradientOverlay from '../utils/has-gradient-overlay';\n\nimport { ChartElement, Point } from '../../core';\n\nimport PointEventsMixin from '../mixins/point-events-mixin';\nimport NoteMixin from '../mixins/note-mixin';\n\nimport { WHITE, LEFT, RIGHT, BOTTOM, TOP } from '../../common/constants';\nimport { alignPathToPixel, deepExtend, defined, getTemplate, valueOrDefault } from '../../common';\n\nconst BAR_ALIGN_MIN_WIDTH = 6;\n\nclass Bar extends ChartElement {\n    constructor(value, options) {\n        super();\n\n        this.options = options;\n        this.color = options.color || WHITE;\n        this.aboveAxis = valueOrDefault(this.options.aboveAxis, true);\n        this.value = value;\n    }\n\n    render() {\n        if (this._rendered) {\n            return;\n        }\n\n        this._rendered = true;\n\n        this.createLabel();\n        this.createNote();\n\n        if (this.errorBar) {\n            this.append(this.errorBar);\n        }\n    }\n\n    createLabel() {\n        const options = this.options;\n        const labels = options.labels;\n\n        if (labels.visible) {\n            let labelTemplate = getTemplate(labels);\n            let labelText;\n\n            if (labelTemplate) {\n                labelText = labelTemplate({\n                    dataItem: this.dataItem,\n                    category: this.category,\n                    value: this.value,\n                    percentage: this.percentage,\n                    stackValue: this.stackValue,\n                    runningTotal: this.runningTotal,\n                    total: this.total,\n                    series: this.series\n                });\n            } else {\n                labelText = this.formatValue(labels.format);\n            }\n\n            this.label = new BarLabel(labelText,\n                    deepExtend({\n                        vertical: options.vertical\n                    },\n                    labels\n                ));\n            this.append(this.label);\n        }\n    }\n\n    formatValue(format) {\n        return this.owner.formatPointValue(this, format);\n    }\n\n    reflow(targetBox) {\n        this.render();\n\n        const label = this.label;\n\n        this.box = targetBox;\n\n        if (label) {\n            label.options.aboveAxis = this.aboveAxis;\n            label.reflow(targetBox);\n        }\n\n        if (this.note) {\n            this.note.reflow(targetBox);\n        }\n\n        if (this.errorBars) {\n            for (let i = 0; i < this.errorBars.length; i++) {\n                this.errorBars[i].reflow(targetBox);\n            }\n        }\n    }\n\n    createVisual() {\n        const { box, options } = this;\n        const customVisual = options.visual;\n\n        if (this.visible !== false) {\n            super.createVisual();\n\n            if (customVisual) {\n                const visual = this.rectVisual = customVisual({\n                    category: this.category,\n                    dataItem: this.dataItem,\n                    value: this.value,\n                    sender: this.getSender(),\n                    series: this.series,\n                    percentage: this.percentage,\n                    stackValue: this.stackValue,\n                    runningTotal: this.runningTotal,\n                    total: this.total,\n                    rect: box.toRect(),\n                    createVisual: () => {\n                        const group = new draw.Group();\n                        this.createRect(group);\n                        return group;\n                    },\n                    options: options\n                });\n\n                if (visual) {\n                    this.visual.append(visual);\n                }\n            } else if (box.width() > 0 && box.height() > 0) {\n                this.createRect(this.visual);\n            }\n        }\n    }\n\n    createRect(visual) {\n        const options = this.options;\n        const border = options.border;\n        const strokeOpacity = defined(border.opacity) ? border.opacity : options.opacity;\n        const rect = this.box.toRect();\n\n        rect.size.width = Math.round(rect.size.width);\n\n        const path = this.rectVisual = draw.Path.fromRect(rect, {\n            fill: {\n                color: this.color,\n                opacity: options.opacity\n            },\n            stroke: {\n                color: this.getBorderColor(),\n                width: border.width,\n                opacity: strokeOpacity,\n                dashType: border.dashType\n            }\n        });\n\n        const width = this.box.width();\n        const height = this.box.height();\n\n        const size = options.vertical ? width : height;\n\n        if (size > BAR_ALIGN_MIN_WIDTH) {\n            alignPathToPixel(path);\n\n            // Fixes lineJoin issue in firefox when the joined lines are parallel\n            if (width < 1 || height < 1) {\n                path.options.stroke.lineJoin = \"round\";\n            }\n        }\n\n        visual.append(path);\n\n        if (hasGradientOverlay(options)) {\n            const overlay = this.createGradientOverlay(path, { baseColor: this.color }, deepExtend({\n                end: !options.vertical ? [ 0, 1 ] : undefined\n            }, options.overlay));\n\n            visual.append(overlay);\n        }\n    }\n\n    createHighlight(style) {\n        const highlight = draw.Path.fromRect(this.box.toRect(), style);\n\n        return alignPathToPixel(highlight);\n    }\n\n    highlightVisual() {\n        return this.rectVisual;\n    }\n\n    highlightVisualArgs() {\n        return {\n            options: this.options,\n            rect: this.box.toRect(),\n            visual: this.rectVisual\n        };\n    }\n\n    getBorderColor() {\n        const color = this.color;\n        const border = this.options.border;\n        const brightness = border._brightness || BORDER_BRIGHTNESS;\n        let borderColor = border.color;\n\n        if (!defined(borderColor)) {\n            borderColor = new Color(color).brightness(brightness).toHex();\n        }\n\n        return borderColor;\n    }\n\n    tooltipAnchor() {\n        const { options, box, aboveAxis } = this;\n        const clipBox = this.owner.pane.clipBox() || box;\n        let horizontalAlign = LEFT;\n        let verticalAlign = TOP;\n        let x, y;\n\n        if (options.vertical) {\n            x = Math.min(box.x2, clipBox.x2) + TOOLTIP_OFFSET;\n            if (aboveAxis) {\n                y = Math.max(box.y1, clipBox.y1);\n            } else {\n                y = Math.min(box.y2, clipBox.y2);\n                verticalAlign = BOTTOM;\n            }\n        } else {\n            const x1 = Math.max(box.x1, clipBox.x1);\n            const x2 = Math.min(box.x2, clipBox.x2);\n\n            if (options.isStacked) {\n                verticalAlign = BOTTOM;\n                if (aboveAxis) {\n                    horizontalAlign = RIGHT;\n                    x = x2;\n                } else {\n                    x = x1;\n                }\n                y = Math.max(box.y1, clipBox.y1) - TOOLTIP_OFFSET;\n            } else {\n                if (aboveAxis) {\n                    x = x2 + TOOLTIP_OFFSET;\n                } else {\n                    x = x1 - TOOLTIP_OFFSET;\n                    horizontalAlign = RIGHT;\n                }\n                y = Math.max(box.y1, clipBox.y1);\n            }\n        }\n\n        return {\n            point: new Point(x, y),\n            align: {\n                horizontal: horizontalAlign,\n                vertical: verticalAlign\n            }\n        };\n    }\n\n    overlapsBox(box) {\n        return this.box.overlaps(box);\n    }\n}\n\ndeepExtend(Bar.prototype, PointEventsMixin);\ndeepExtend(Bar.prototype, NoteMixin);\n\nBar.prototype.defaults = {\n    border: {\n        width: 1\n    },\n    vertical: true,\n    overlay: {\n        gradient: \"glass\"\n    },\n    labels: {\n        visible: false,\n        format: \"{0}\"\n    },\n    opacity: 1,\n    notes: {\n        label: {}\n    }\n};\n\nexport default Bar;","import { ChartElement } from '../../core';\n\nimport { X, Y } from '../../common/constants';\nimport { setDefaultOptions } from '../../common';\n\nclass ClusterLayout extends ChartElement {\n    reflow(box) {\n        const { vertical, gap, spacing } = this.options;\n        const children = this.children;\n        const count = children.length;\n        const axis = vertical ? Y : X;\n        const slots = count + gap + (spacing * (count - 1));\n        const slotSize = (vertical ? box.height() : box.width()) / slots;\n        let position = box[axis + 1] + slotSize * (gap / 2);\n\n        for (let i = 0; i < count; i++) {\n            const childBox = (children[i].box || box).clone();\n\n            childBox[axis + 1] = position;\n            childBox[axis + 2] = position + slotSize;\n\n            children[i].reflow(childBox);\n            if (i < count - 1) {\n                position += (slotSize * spacing);\n            }\n\n            position += slotSize;\n        }\n    }\n}\n\nsetDefaultOptions(ClusterLayout, {\n    vertical: false,\n    gap: 0,\n    spacing: 0\n});\n\nexport default ClusterLayout;","import { ChartElement, Box } from '../../core';\n\nimport { X, Y } from '../../common/constants';\nimport { setDefaultOptions } from '../../common';\n\nclass StackWrap extends ChartElement {\n    reflow(targetBox) {\n        const positionAxis = this.options.vertical ? X : Y;\n        const children = this.children;\n        const childrenCount = children.length;\n        let box = this.box = new Box();\n\n        for (let i = 0; i < childrenCount; i++) {\n            const currentChild = children[i];\n\n            if (currentChild.visible !== false) {\n                const childBox = currentChild.box.clone();\n                childBox.snapTo(targetBox, positionAxis);\n\n                if (i === 0) {\n                    box = this.box = childBox.clone();\n                }\n\n                currentChild.reflow(childBox);\n                box.wrap(childBox);\n            }\n        }\n    }\n}\n\nsetDefaultOptions(StackWrap, {\n    vertical: true\n});\n\nexport default StackWrap;","import { geometry as geom } from '@progress/kendo-drawing';\n\nimport Bar from './bar';\n\nimport CategoricalChart from '../categorical-chart';\nimport ClusterLayout from '../layout/cluster-layout';\nimport StackWrap from '../layout/stack-wrap';\nimport { BAR, OUTSIDE_END, INSIDE_END } from '../constants';\n\nimport anyHasZIndex from '../utils/any-has-z-index';\n\nimport { STRING, X, Y } from '../../common/constants';\nimport { defined, isFunction, setDefaultOptions } from '../../common';\n\nclass BarChart extends CategoricalChart {\n\n    render() {\n        super.render();\n        this.updateStackRange();\n    }\n\n    pointType() {\n        return Bar;\n    }\n\n    clusterType() {\n        return ClusterLayout;\n    }\n\n    stackType() {\n        return StackWrap;\n    }\n\n    stackLimits(axisName, stackName) {\n        const limits = super.stackLimits(axisName, stackName);\n\n        return limits;\n    }\n\n    createPoint(data, fields) {\n        const { categoryIx, category, series, seriesIx } = fields;\n        const { options, children } = this;\n        const isStacked = options.isStacked;\n        const value = this.pointValue(data);\n        let pointOptions = this.pointOptions(series, seriesIx);\n\n        const labelOptions = pointOptions.labels;\n        if (isStacked) {\n            if (labelOptions.position === OUTSIDE_END) {\n                labelOptions.position = INSIDE_END;\n            }\n        }\n\n        pointOptions.isStacked = isStacked;\n\n        let color = data.fields.color || series.color;\n        if (value < 0 && pointOptions.negativeColor) {\n            color = pointOptions.negativeColor;\n        }\n\n        pointOptions = this.evalPointOptions(\n            pointOptions, value, category, categoryIx, series, seriesIx\n        );\n\n        if (isFunction(series.color)) {\n            color = pointOptions.color;\n        }\n\n        const pointType = this.pointType();\n        const point = new pointType(value, pointOptions);\n        point.color = color;\n\n        let cluster = children[categoryIx];\n        if (!cluster) {\n            const clusterType = this.clusterType();\n            cluster = new clusterType({\n                vertical: options.invertAxes,\n                gap: options.gap,\n                spacing: options.spacing\n            });\n            this.append(cluster);\n        }\n\n        if (isStacked) {\n            const stackWrap = this.getStackWrap(series, cluster);\n            stackWrap.append(point);\n        } else {\n            cluster.append(point);\n        }\n\n        return point;\n    }\n\n    getStackWrap(series, cluster) {\n        const stack = series.stack;\n        const stackGroup = stack ? stack.group || stack : stack;\n        const wraps = cluster.children;\n        let stackWrap;\n\n        if (typeof stackGroup === STRING) {\n            for (let i = 0; i < wraps.length; i++) {\n                if (wraps[i]._stackGroup === stackGroup) {\n                    stackWrap = wraps[i];\n                    break;\n                }\n            }\n        } else {\n            stackWrap = wraps[0];\n        }\n\n        if (!stackWrap) {\n            const stackType = this.stackType();\n            stackWrap = new stackType({\n                vertical: !this.options.invertAxes\n            });\n            stackWrap._stackGroup = stackGroup;\n            cluster.append(stackWrap);\n        }\n\n        return stackWrap;\n    }\n\n    categorySlot(categoryAxis, categoryIx, valueAxis) {\n        const options = this.options;\n        const categorySlot = categoryAxis.getSlot(categoryIx);\n        const startValue = valueAxis.startValue();\n\n        if (options.isStacked) {\n            const zeroSlot = valueAxis.getSlot(startValue, startValue, true);\n            const stackAxis = options.invertAxes ? X : Y;\n            categorySlot[stackAxis + 1] = categorySlot[stackAxis + 2] = zeroSlot[stackAxis + 1];\n        }\n\n        return categorySlot;\n    }\n\n    reflowCategories(categorySlots) {\n        const children = this.children;\n        const childrenLength = children.length;\n\n        for (let i = 0; i < childrenLength; i++) {\n            children[i].reflow(categorySlots[i]);\n        }\n    }\n\n    createAnimation() {\n        this._setAnimationOptions();\n        super.createAnimation();\n\n        if (anyHasZIndex(this.options.series)) {\n            this._setChildrenAnimation();\n        }\n    }\n\n    _setChildrenAnimation() {\n        const points = this.points;\n\n        for (let idx = 0; idx < points.length; idx++) {\n            const point = points[idx];\n            const pointVisual = point.visual;\n            if (pointVisual && defined(pointVisual.options.zIndex)) {\n                point.options.animation = this.options.animation;\n                point.createAnimation();\n            }\n        }\n    }\n\n    _setAnimationOptions() {\n        const options = this.options;\n        const animation = options.animation || {};\n        let origin;\n\n        if (options.isStacked) {\n            const valueAxis = this.seriesValueAxis(options.series[0]);\n            origin = valueAxis.getSlot(valueAxis.startValue());\n        } else {\n            origin = this.categoryAxis.getSlot(0);\n        }\n\n        animation.origin = new geom.Point(origin.x1, origin.y1);\n        animation.vertical = !options.invertAxes;\n    }\n}\n\nsetDefaultOptions(BarChart, {\n    animation: {\n        type: BAR\n    }\n});\n\nexport default BarChart;","import { drawing as draw, Color } from '@progress/kendo-drawing';\n\nimport { ChartElement, Point } from '../../core';\nimport PointEventsMixin from '../mixins/point-events-mixin';\nimport NoteMixin from '../mixins/note-mixin';\n\nimport { TOOLTIP_OFFSET } from '../constants';\nimport hasGradientOverlay from '../utils/has-gradient-overlay';\n\nimport { WHITE, LEFT, TOP } from '../../common/constants';\nimport { alignPathToPixel, deepExtend, defined, setDefaultOptions, valueOrDefault } from '../../common';\n\nclass Candlestick extends ChartElement {\n    constructor(value, options) {\n        super(options);\n        this.value = value;\n    }\n\n    reflow(box) {\n        const { options, value, owner: chart } = this;\n        const valueAxis = chart.seriesValueAxis(options);\n        const ocSlot = valueAxis.getSlot(value.open, value.close);\n        const lhSlot = valueAxis.getSlot(value.low, value.high);\n\n        ocSlot.x1 = lhSlot.x1 = box.x1;\n        ocSlot.x2 = lhSlot.x2 = box.x2;\n\n        this.realBody = ocSlot;\n\n        const mid = lhSlot.center().x;\n        const points = [];\n\n        points.push([ [ mid, lhSlot.y1 ], [ mid, ocSlot.y1 ] ]);\n        points.push([ [ mid, ocSlot.y2 ], [ mid, lhSlot.y2 ] ]);\n\n        this.lines = points;\n\n        this.box = lhSlot.clone().wrap(ocSlot);\n\n        if (!this._rendered) {\n            this._rendered = true;\n            this.createNote();\n        }\n\n        this.reflowNote();\n    }\n\n    reflowNote() {\n        if (this.note) {\n            this.note.reflow(this.box);\n        }\n    }\n\n    createVisual() {\n        super.createVisual();\n        this._mainVisual = this.mainVisual(this.options);\n        this.visual.append(\n            this._mainVisual\n        );\n\n        this.createOverlay();\n    }\n\n    mainVisual(options) {\n        const group = new draw.Group();\n\n        this.createBody(group, options);\n        this.createLines(group, options);\n\n        return group;\n    }\n\n    createBody(container, options) {\n        const body = draw.Path.fromRect(this.realBody.toRect(), {\n            fill: {\n                color: this.color,\n                opacity: options.opacity\n            },\n            stroke: null\n        });\n\n        if (options.border.width > 0) {\n            body.options.set(\"stroke\", {\n                color: this.getBorderColor(),\n                width: options.border.width,\n                dashType: options.border.dashType,\n                opacity: valueOrDefault(options.border.opacity, options.opacity)\n            });\n        }\n\n        alignPathToPixel(body);\n        container.append(body);\n\n        if (hasGradientOverlay(options)) {\n            container.append(this.createGradientOverlay(body, { baseColor: this.color }, deepExtend({\n                end: !options.vertical ? [ 0, 1 ] : undefined\n            }, options.overlay)));\n        }\n    }\n\n    createLines(container, options) {\n        this.drawLines(container, options, this.lines, options.line);\n    }\n\n    drawLines(container, options, lines, lineOptions) {\n        if (!lines) {\n            return;\n        }\n\n        const lineStyle = {\n            stroke: {\n                color: lineOptions.color || this.color,\n                opacity: valueOrDefault(lineOptions.opacity, options.opacity),\n                width: lineOptions.width,\n                dashType: lineOptions.dashType,\n                lineCap: \"butt\"\n            }\n        };\n\n        for (let i = 0; i < lines.length; i++) {\n            const line = draw.Path.fromPoints(lines[i], lineStyle);\n            alignPathToPixel(line);\n            container.append(line);\n        }\n    }\n\n    getBorderColor() {\n        const border = this.options.border;\n        let borderColor = border.color;\n\n        if (!defined(borderColor)) {\n            borderColor = new Color(this.color).brightness(border._brightness).toHex();\n        }\n\n        return borderColor;\n    }\n\n    createOverlay() {\n        const overlay = draw.Path.fromRect(this.box.toRect(), {\n            fill: {\n                color: WHITE,\n                opacity: 0\n            },\n            stroke: null\n        });\n\n        this.visual.append(overlay);\n    }\n\n    createHighlight() {\n        const highlight = this.options.highlight;\n        const normalColor = this.color;\n\n        this.color = highlight.color || this.color;\n        const overlay = this.mainVisual(\n            deepExtend({}, this.options, {\n                line: {\n                    color: this.getBorderColor()\n                }\n            }, highlight)\n        );\n        this.color = normalColor;\n\n        return overlay;\n    }\n\n    highlightVisual() {\n        return this._mainVisual;\n    }\n\n    highlightVisualArgs() {\n        return {\n            options: this.options,\n            rect: this.box.toRect(),\n            visual: this._mainVisual\n        };\n    }\n\n    tooltipAnchor() {\n        const box = this.box;\n        const clipBox = this.owner.pane.clipBox() || box;\n\n        return {\n            point: new Point(box.x2 + TOOLTIP_OFFSET, Math.max(box.y1, clipBox.y1) + TOOLTIP_OFFSET),\n            align: {\n                horizontal: LEFT,\n                vertical: TOP\n            }\n        };\n    }\n\n    formatValue(format) {\n        return this.owner.formatPointValue(this, format);\n    }\n\n    overlapsBox(box) {\n        return this.box.overlaps(box);\n    }\n}\n\nsetDefaultOptions(Candlestick, {\n    vertical: true,\n    border: {\n        _brightness: 0.8\n    },\n    line: {\n        width: 2\n    },\n    overlay: {\n        gradient: \"glass\"\n    },\n    tooltip: {\n        format: \"<table>\" +\n                    \"<tr><th colspan='2'>{4:d}</th></tr>\" +\n                    \"<tr><td>Open:</td><td>{0:C}</td></tr>\" +\n                    \"<tr><td>High:</td><td>{1:C}</td></tr>\" +\n                    \"<tr><td>Low:</td><td>{2:C}</td></tr>\" +\n                    \"<tr><td>Close:</td><td>{3:C}</td></tr>\" +\n                \"</table>\"\n    },\n    highlight: {\n        opacity: 1,\n        border: {\n            width: 1,\n            opacity: 1\n        },\n        line: {\n            width: 1,\n            opacity: 1\n        }\n    },\n    notes: {\n        visible: true,\n        label: {}\n    }\n});\n\ndeepExtend(Candlestick.prototype, PointEventsMixin);\ndeepExtend(Candlestick.prototype, NoteMixin);\n\nexport default Candlestick;","import countNumbers from './count-numbers';\n\nexport default function areNumbers(values) {\n    return countNumbers(values) === values.length;\n}","import CategoricalChart from '../categorical-chart';\nimport ClusterLayout from '../layout/cluster-layout';\nimport Candlestick from './candlestick';\n\nimport ClipAnimationMixin from '../mixins/clip-animation-mixin';\nimport { CANDLESTICK } from '../constants';\nimport areNumbers from '../utils/are-numbers';\n\nimport { MIN_VALUE, MAX_VALUE } from '../../common/constants';\nimport { deepExtend, isFunction } from '../../common';\n\nclass CandlestickChart extends CategoricalChart {\n\n    reflowCategories(categorySlots) {\n        const children = this.children;\n        const childrenLength = children.length;\n\n        for (let i = 0; i < childrenLength; i++) {\n            children[i].reflow(categorySlots[i]);\n        }\n    }\n\n    addValue(data, fields) {\n        const { categoryIx, category, series, seriesIx } = fields;\n        const { children, options } = this;\n        const value = data.valueFields;\n        const valueParts = this.splitValue(value);\n        const hasValue = areNumbers(valueParts);\n        const dataItem = series.data[categoryIx];\n        let categoryPoints = this.categoryPoints[categoryIx];\n        let point;\n\n        if (!categoryPoints) {\n            this.categoryPoints[categoryIx] = categoryPoints = [];\n        }\n\n        if (hasValue) {\n            point = this.createPoint(data, fields);\n        }\n\n        let cluster = children[categoryIx];\n        if (!cluster) {\n            cluster = new ClusterLayout({\n                vertical: options.invertAxes,\n                gap: options.gap,\n                spacing: options.spacing\n            });\n            this.append(cluster);\n        }\n\n        if (point) {\n            this.updateRange(value, fields);\n\n            cluster.append(point);\n\n            point.categoryIx = categoryIx;\n            point.category = category;\n            point.series = series;\n            point.seriesIx = seriesIx;\n            point.owner = this;\n            point.dataItem = dataItem;\n            point.noteText = data.fields.noteText;\n        }\n\n        this.points.push(point);\n        categoryPoints.push(point);\n    }\n\n    pointType() {\n        return Candlestick;\n    }\n\n    createPoint(data, fields) {\n        const { categoryIx, category, series, seriesIx } = fields;\n        const pointType = this.pointType();\n        const value = data.valueFields;\n        let pointOptions = deepExtend({}, series);\n        let color = data.fields.color || series.color;\n\n        pointOptions = this.evalPointOptions(\n            pointOptions, value, category, categoryIx, series, seriesIx\n        );\n\n        if (series.type === CANDLESTICK) {\n            if (value.open > value.close) {\n                color = data.fields.downColor || series.downColor || series.color;\n            }\n        }\n\n        if (isFunction(series.color)) {\n            color = pointOptions.color;\n        }\n\n        pointOptions.vertical = !this.options.invertAxes;\n\n        const point = new pointType(value, pointOptions);\n        point.color = color;\n\n        return point;\n    }\n\n    splitValue(value) {\n        return [ value.low, value.open, value.close, value.high ];\n    }\n\n    updateRange(value, fields) {\n        const axisName = fields.series.axis;\n        const parts = this.splitValue(value);\n        let axisRange = this.valueAxisRanges[axisName];\n\n        axisRange = this.valueAxisRanges[axisName] =\n            axisRange || { min: MAX_VALUE, max: MIN_VALUE };\n\n        axisRange = this.valueAxisRanges[axisName] = {\n            min: Math.min.apply(Math, parts.concat([ axisRange.min ])),\n            max: Math.max.apply(Math, parts.concat([ axisRange.max ]))\n        };\n    }\n\n    formatPointValue(point, format) {\n        const value = point.value;\n\n        return this.chartService.format.auto(format,\n            value.open, value.high,\n            value.low, value.close, point.category\n        );\n    }\n\n    animationPoints() {\n        return this.points;\n    }\n}\n\ndeepExtend(CandlestickChart.prototype, ClipAnimationMixin);\n\nexport default CandlestickChart;","import { Color } from '@progress/kendo-drawing';\n\nimport Candlestick from '../candlestick-chart/candlestick';\nimport PointEventsMixin from '../mixins/point-events-mixin';\nimport { ShapeElement } from '../../core';\n\nimport { LINE_MARKER_SIZE, BORDER_BRIGHTNESS } from '../constants';\n\nimport { CROSS, CIRCLE, WHITE } from '../../common/constants';\nimport { deepExtend, defined, setDefaultOptions } from '../../common';\n\nclass BoxPlot extends Candlestick {\n    constructor(value, options) {\n        super(value, options);\n\n        this.createNote();\n    }\n\n    reflow(box) {\n        const { options, value, owner: chart } = this;\n        const valueAxis = chart.seriesValueAxis(options);\n        let whiskerSlot, boxSlot;\n\n        this.boxSlot = boxSlot = valueAxis.getSlot(value.q1, value.q3);\n        this.realBody = boxSlot;\n        this.reflowBoxSlot(box);\n\n        this.whiskerSlot = whiskerSlot = valueAxis.getSlot(value.lower, value.upper);\n        this.reflowWhiskerSlot(box);\n\n        const medianSlot = valueAxis.getSlot(value.median);\n\n        if (value.mean) {\n            const meanSlot = valueAxis.getSlot(value.mean);\n            this.meanPoints = this.calcMeanPoints(box, meanSlot);\n        }\n\n        this.whiskerPoints = this.calcWhiskerPoints(boxSlot, whiskerSlot);\n        this.medianPoints = this.calcMedianPoints(box, medianSlot);\n\n        this.box = whiskerSlot.clone().wrap(boxSlot);\n        this.reflowNote();\n    }\n\n    reflowBoxSlot(box) {\n        this.boxSlot.x1 = box.x1;\n        this.boxSlot.x2 = box.x2;\n    }\n\n    reflowWhiskerSlot(box) {\n        this.whiskerSlot.x1 = box.x1;\n        this.whiskerSlot.x2 = box.x2;\n    }\n\n    calcMeanPoints(box, meanSlot) {\n        return [\n            [ [ box.x1, meanSlot.y1 ], [ box.x2, meanSlot.y1 ] ]\n        ];\n    }\n\n    calcWhiskerPoints(boxSlot, whiskerSlot) {\n        const mid = whiskerSlot.center().x;\n        return [ [\n            [ mid - 5, whiskerSlot.y1 ], [ mid + 5, whiskerSlot.y1 ],\n            [ mid, whiskerSlot.y1 ], [ mid, boxSlot.y1 ]\n        ], [\n            [ mid - 5, whiskerSlot.y2 ], [ mid + 5, whiskerSlot.y2 ],\n            [ mid, whiskerSlot.y2 ], [ mid, boxSlot.y2 ]\n        ] ];\n    }\n\n    calcMedianPoints(box, medianSlot) {\n        return [\n            [ [ box.x1, medianSlot.y1 ], [ box.x2, medianSlot.y1 ] ]\n        ];\n    }\n\n    renderOutliers(options) {\n        const value = this.value;\n        const outliers = value.outliers || [];\n        const outerFence = Math.abs(value.q3 - value.q1) * 3;\n        const elements = [];\n        let markers = options.markers || {};\n\n        for (let i = 0; i < outliers.length; i++) {\n            const outlierValue = outliers[i];\n            if (outlierValue < value.q3 + outerFence && outlierValue > value.q1 - outerFence) {\n                markers = options.outliers;\n            } else {\n                markers = options.extremes;\n            }\n            let markersBorder = deepExtend({}, markers.border);\n\n            if (!defined(markersBorder.color)) {\n                if (defined(this.color)) {\n                    markersBorder.color = this.color;\n                } else {\n                    markersBorder.color =\n                        new Color(markers.background).brightness(BORDER_BRIGHTNESS).toHex();\n                }\n            }\n\n            const shape = new ShapeElement({\n                type: markers.type,\n                width: markers.size,\n                height: markers.size,\n                rotation: markers.rotation,\n                background: markers.background,\n                border: markersBorder,\n                opacity: markers.opacity\n            });\n\n            shape.value = outlierValue;\n\n            elements.push(shape);\n        }\n\n        this.reflowOutliers(elements);\n        return elements;\n    }\n\n    reflowOutliers(outliers) {\n        const valueAxis = this.owner.seriesValueAxis(this.options);\n        const center = this.box.center();\n\n        for (let i = 0; i < outliers.length; i++) {\n            const outlierValue = outliers[i].value;\n            const markerBox = valueAxis.getSlot(outlierValue);\n\n            if (this.options.vertical) {\n                markerBox.move(center.x);\n            } else {\n                markerBox.move(undefined, center.y);\n            }\n\n            this.box = this.box.wrap(markerBox);\n            outliers[i].reflow(markerBox);\n        }\n    }\n\n    mainVisual(options) {\n        const group = super.mainVisual(options);\n        const outliers = this.renderOutliers(options);\n\n        for (let i = 0; i < outliers.length; i++) {\n            const element = outliers[i].getElement();\n            if (element) {\n                group.append(element);\n            }\n        }\n\n        return group;\n    }\n\n    createLines(container, options) {\n        this.drawLines(container, options, this.whiskerPoints, options.whiskers);\n        this.drawLines(container, options, this.medianPoints, options.median);\n        this.drawLines(container, options, this.meanPoints, options.mean);\n    }\n\n    getBorderColor() {\n        if (this.color) {\n            return this.color;\n        }\n\n        return super.getBorderColor();\n    }\n}\n\nsetDefaultOptions(BoxPlot, {\n    border: {\n        _brightness: 0.8\n    },\n    line: {\n        width: 2\n    },\n    median: {\n        color: \"#f6f6f6\"\n    },\n    mean: {\n        width: 2,\n        dashType: \"dash\",\n        color: \"#f6f6f6\"\n    },\n    overlay: {\n        gradient: \"glass\"\n    },\n    tooltip: {\n        format: \"<table>\" +\n                    \"<tr><th colspan='2'>{6:d}</th></tr>\" +\n                    \"<tr><td>Lower:</td><td>{0:C}</td></tr>\" +\n                    \"<tr><td>Q1:</td><td>{1:C}</td></tr>\" +\n                    \"<tr><td>Median:</td><td>{2:C}</td></tr>\" +\n                    \"<tr><td>Mean:</td><td>{5:C}</td></tr>\" +\n                    \"<tr><td>Q3:</td><td>{3:C}</td></tr>\" +\n                    \"<tr><td>Upper:</td><td>{4:C}</td></tr>\" +\n                \"</table>\"\n    },\n    highlight: {\n        opacity: 1,\n        border: {\n            width: 1,\n            opacity: 1\n        },\n        line: {\n            width: 1,\n            opacity: 1\n        }\n    },\n    notes: {\n        visible: true,\n        label: {}\n    },\n    outliers: {\n        visible: true,\n        size: LINE_MARKER_SIZE,\n        type: CROSS,\n        background: WHITE,\n        border: {\n            width: 2,\n            opacity: 1\n        },\n        opacity: 0\n    },\n    extremes: {\n        visible: true,\n        size: LINE_MARKER_SIZE,\n        type: CIRCLE,\n        background: WHITE,\n        border: {\n            width: 2,\n            opacity: 1\n        },\n        opacity: 0\n    }\n});\n\ndeepExtend(BoxPlot.prototype, PointEventsMixin);\n\nexport default BoxPlot;","import BoxPlot from './box-plot';\n\nclass VerticalBoxPlot extends BoxPlot {\n    reflowBoxSlot(box) {\n        this.boxSlot.y1 = box.y1;\n        this.boxSlot.y2 = box.y2;\n    }\n\n    reflowWhiskerSlot(box) {\n        this.whiskerSlot.y1 = box.y1;\n        this.whiskerSlot.y2 = box.y2;\n    }\n\n    calcMeanPoints(box, meanSlot) {\n        return [\n            [ [ meanSlot.x1, box.y1 ], [ meanSlot.x1, box.y2 ] ]\n        ];\n    }\n\n    calcWhiskerPoints(boxSlot, whiskerSlot) {\n        const mid = whiskerSlot.center().y;\n        return [ [\n            [ whiskerSlot.x1, mid - 5 ], [ whiskerSlot.x1, mid + 5 ],\n            [ whiskerSlot.x1, mid ], [ boxSlot.x1, mid ]\n        ], [\n            [ whiskerSlot.x2, mid - 5 ], [ whiskerSlot.x2, mid + 5 ],\n            [ whiskerSlot.x2, mid ], [ boxSlot.x2, mid ]\n        ] ];\n    }\n\n    calcMedianPoints(box, medianSlot) {\n        return [\n            [ [ medianSlot.x1, box.y1 ], [ medianSlot.x1, box.y2 ] ]\n        ];\n    }\n}\n\nexport default VerticalBoxPlot;","import CandlestickChart from '../candlestick-chart/candlestick-chart';\nimport VerticalBoxPlot from './vertical-box-plot';\nimport BoxPlot from './box-plot';\nimport ClusterLayout from '../layout/cluster-layout';\n\nimport areNumbers from '../utils/are-numbers';\n\nimport { MIN_VALUE, MAX_VALUE } from '../../common/constants';\nimport { defined } from '../../common';\n\nclass BoxPlotChart extends CandlestickChart {\n    addValue(data, fields) {\n        const { categoryIx, category, series, seriesIx } = fields;\n        const { children, options } = this;\n        const value = data.valueFields;\n        const valueParts = this.splitValue(value);\n        const hasValue = areNumbers(valueParts);\n        const dataItem = series.data[categoryIx];\n        let categoryPoints = this.categoryPoints[categoryIx];\n        let point;\n\n        if (!categoryPoints) {\n            this.categoryPoints[categoryIx] = categoryPoints = [];\n        }\n\n        if (hasValue) {\n            point = this.createPoint(data, fields);\n        }\n\n        let cluster = children[categoryIx];\n        if (!cluster) {\n            cluster = new ClusterLayout({\n                vertical: options.invertAxes,\n                gap: options.gap,\n                spacing: options.spacing\n            });\n            this.append(cluster);\n        }\n\n        if (point) {\n            this.updateRange(value, fields);\n\n            cluster.append(point);\n\n            point.categoryIx = categoryIx;\n            point.category = category;\n            point.series = series;\n            point.seriesIx = seriesIx;\n            point.owner = this;\n            point.dataItem = dataItem;\n        }\n\n        this.points.push(point);\n        categoryPoints.push(point);\n    }\n\n    pointType() {\n        if (this.options.invertAxes) {\n            return VerticalBoxPlot;\n        }\n\n        return BoxPlot;\n    }\n\n    splitValue(value) {\n        return [\n            value.lower, value.q1, value.median,\n            value.q3, value.upper\n        ];\n    }\n\n    updateRange(value, fields) {\n        const axisName = fields.series.axis;\n        let axisRange = this.valueAxisRanges[axisName];\n        let parts = this.splitValue(value).concat(this.filterOutliers(value.outliers));\n\n        if (defined(value.mean)) {\n            parts = parts.concat(value.mean);\n        }\n\n        axisRange = this.valueAxisRanges[axisName] =\n            axisRange || { min: MAX_VALUE, max: MIN_VALUE };\n\n        axisRange = this.valueAxisRanges[axisName] = {\n            min: Math.min.apply(Math, parts.concat([ axisRange.min ])),\n            max: Math.max.apply(Math, parts.concat([ axisRange.max ]))\n        };\n    }\n\n    formatPointValue(point, format) {\n        const value = point.value;\n\n        return this.chartService.format.auto(format,\n            value.lower, value.q1, value.median,\n            value.q3, value.upper, value.mean, point.category\n        );\n    }\n\n    filterOutliers(items) {\n        const length = (items || []).length;\n        const result = [];\n\n        for (let i = 0; i < length; i++) {\n            const item = items[i];\n            if (defined(item) && item !== null) {\n                result.push(item);\n            }\n        }\n\n        return result;\n    }\n}\n\nexport default BoxPlotChart;","import ErrorBarBase from './error-bar-base';\n\nclass ScatterErrorBar extends ErrorBarBase {\n    getAxis() {\n        const axes = this.chart.seriesAxes(this.series);\n        const axis = this.isVertical ? axes.y : axes.x;\n\n        return axis;\n    }\n}\n\nexport default ScatterErrorBar;","import { defined } from '../../common';\n\nexport default function hasValue(value) {\n    return defined(value) && value !== null;\n}","import { ChartElement, Box } from '../../core';\n\nimport ClipAnimationMixin from '../mixins/clip-animation-mixin';\nimport ErrorRangeCalculator from '../error-bars/error-range-calculator';\nimport ScatterErrorBar from '../error-bars/scatter-error-bar';\nimport LinePoint from '../line-chart/line-point';\nimport CategoricalChart from '../categorical-chart';\n\nimport hasValue from '../utils/has-value';\nimport evalOptions from '../utils/eval-options';\n\nimport { deepExtend, isNumber, isString, defined, isFunction, setDefaultOptions } from '../../common';\nimport { X, Y, MIN_VALUE, MAX_VALUE } from '../../common/constants';\nimport { parseDate } from '../../date-utils';\n\nclass ScatterChart extends ChartElement {\n    constructor(plotArea, options) {\n\n        super(options);\n\n        this.plotArea = plotArea;\n        this.chartService = plotArea.chartService;\n        this._initFields();\n\n        this.render();\n    }\n\n    _initFields() {\n        // X and Y axis ranges grouped by name, e.g.:\n        // primary: { min: 0, max: 1 }\n        this.xAxisRanges = {};\n        this.yAxisRanges = {};\n\n        this.points = [];\n        this.seriesPoints = [];\n        this.seriesOptions = [];\n        this._evalSeries = [];\n    }\n\n    render() {\n        this.traverseDataPoints(this.addValue.bind(this));\n    }\n\n    addErrorBar(point, field, fields) {\n        const value = point.value[field];\n        const valueErrorField = field + \"Value\";\n        const lowField = field + \"ErrorLow\";\n        const highField = field + \"ErrorHigh\";\n        const { seriesIx, series } = fields;\n        const errorBars = point.options.errorBars;\n        const lowValue = fields[lowField];\n        const highValue = fields[highField];\n\n        if (isNumber(value)) {\n            let errorRange;\n            if (isNumber(lowValue) && isNumber(highValue)) {\n                errorRange = { low: lowValue, high: highValue };\n            }\n\n            if (errorBars && defined(errorBars[valueErrorField])) {\n                this.seriesErrorRanges = this.seriesErrorRanges || { x: [], y: [] };\n                this.seriesErrorRanges[field][seriesIx] = this.seriesErrorRanges[field][seriesIx] ||\n                    new ErrorRangeCalculator(errorBars[valueErrorField], series, field);\n\n                errorRange = this.seriesErrorRanges[field][seriesIx].getErrorRange(value, errorBars[valueErrorField]);\n            }\n\n            if (errorRange) {\n                this.addPointErrorBar(errorRange, point, field);\n            }\n        }\n    }\n\n    addPointErrorBar(errorRange, point, field) {\n        const { low, high } = errorRange;\n        const { series, options: { errorBars: options } } = point;\n        const isVertical = field === Y;\n        const item = {};\n\n        point[field + \"Low\"] = low;\n        point[field + \"High\"] = high;\n\n        point.errorBars = point.errorBars || [];\n        const errorBar = new ScatterErrorBar(low, high, isVertical, this, series, options);\n        point.errorBars.push(errorBar);\n        point.append(errorBar);\n\n        item[field] = low;\n        this.updateRange(item, series);\n        item[field] = high;\n        this.updateRange(item, series);\n    }\n\n    addValue(value, fields) {\n        const { x, y } = value;\n        const seriesIx = fields.seriesIx;\n        const series = this.options.series[seriesIx];\n        const missingValues = this.seriesMissingValues(series);\n        const seriesPoints = this.seriesPoints[seriesIx];\n\n        let pointValue = value;\n        if (!(hasValue(x) && hasValue(y))) {\n            pointValue = this.createMissingValue(pointValue, missingValues);\n        }\n\n        let point;\n        if (pointValue) {\n            point = this.createPoint(pointValue, fields);\n            if (point) {\n                Object.assign(point, fields);\n                this.addErrorBar(point, X, fields);\n                this.addErrorBar(point, Y, fields);\n            }\n            this.updateRange(pointValue, fields.series);\n        }\n\n        this.points.push(point);\n        seriesPoints.push(point);\n    }\n\n    seriesMissingValues(series) {\n        return series.missingValues;\n    }\n\n    createMissingValue() {}\n\n    updateRange(value, series) {\n        const intlService = this.chartService.intl;\n        const { xAxis: xAxisName, yAxis: yAxisName } = series;\n        let { x, y } = value;\n        let xAxisRange = this.xAxisRanges[xAxisName];\n        let yAxisRange = this.yAxisRanges[yAxisName];\n\n        if (hasValue(x)) {\n            xAxisRange = this.xAxisRanges[xAxisName] =\n                xAxisRange || { min: MAX_VALUE, max: MIN_VALUE };\n\n            if (isString(x)) {\n                x = parseDate(intlService, x);\n            }\n\n            xAxisRange.min = Math.min(xAxisRange.min, x);\n            xAxisRange.max = Math.max(xAxisRange.max, x);\n        }\n\n        if (hasValue(y)) {\n            yAxisRange = this.yAxisRanges[yAxisName] =\n                yAxisRange || { min: MAX_VALUE, max: MIN_VALUE };\n\n            if (isString(y)) {\n                y = parseDate(intlService, y);\n            }\n\n            yAxisRange.min = Math.min(yAxisRange.min, y);\n            yAxisRange.max = Math.max(yAxisRange.max, y);\n        }\n    }\n\n    evalPointOptions(options, value, fields) {\n        const { series, seriesIx } = fields;\n        const state = { defaults: series._defaults, excluded: [ \"data\", \"tooltip\", \"content\", \"template\", \"visual\", \"toggle\", \"_outOfRangeMinPoint\", \"_outOfRangeMaxPoint\" ] };\n\n        let doEval = this._evalSeries[seriesIx];\n        if (!defined(doEval)) {\n            this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n        }\n\n        let pointOptions = options;\n        if (doEval) {\n            pointOptions = deepExtend({}, options);\n            evalOptions(pointOptions, {\n                value: value,\n                series: series,\n                dataItem: fields.dataItem\n            }, state);\n        }\n\n        return pointOptions;\n    }\n\n    pointType() {\n        return LinePoint;\n    }\n\n    pointOptions(series, seriesIx) {\n        let options = this.seriesOptions[seriesIx];\n        if (!options) {\n            const defaults = this.pointType().prototype.defaults;\n            this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, {\n                markers: {\n                    opacity: series.opacity\n                },\n                tooltip: {\n                    format: this.options.tooltip.format\n                },\n                labels: {\n                    format: this.options.labels.format\n                }\n            }, series);\n        }\n\n        return options;\n    }\n\n    createPoint(value, fields) {\n        const series = fields.series;\n        let pointOptions = this.pointOptions(series, fields.seriesIx);\n        let color = fields.color || series.color;\n\n        pointOptions = this.evalPointOptions(pointOptions, value, fields);\n\n        if (isFunction(series.color)) {\n            color = pointOptions.color;\n        }\n\n        const point = new LinePoint(value, pointOptions);\n        point.color = color;\n\n        this.append(point);\n\n        return point;\n    }\n\n    seriesAxes(series) {\n        const { xAxis: xAxisName, yAxis: yAxisName } = series;\n        const plotArea = this.plotArea;\n        const xAxis = xAxisName ? plotArea.namedXAxes[xAxisName] : plotArea.axisX;\n        const yAxis = yAxisName ? plotArea.namedYAxes[yAxisName] : plotArea.axisY;\n\n        if (!xAxis) {\n            throw new Error(\"Unable to locate X axis with name \" + xAxisName);\n        }\n\n        if (!yAxis) {\n            throw new Error(\"Unable to locate Y axis with name \" + yAxisName);\n        }\n\n        return {\n            x: xAxis,\n            y: yAxis\n        };\n    }\n\n    reflow(targetBox) {\n        const chartPoints = this.points;\n        const limit = !this.options.clip;\n        let pointIx = 0;\n\n\n        this.traverseDataPoints((value, fields) => {\n            const point = chartPoints[pointIx++];\n            const seriesAxes = this.seriesAxes(fields.series);\n            const slotX = seriesAxes.x.getSlot(value.x, value.x, limit);\n            const slotY = seriesAxes.y.getSlot(value.y, value.y, limit);\n\n            if (point) {\n                if (slotX && slotY) {\n                    const pointSlot = this.pointSlot(slotX, slotY);\n                    point.reflow(pointSlot);\n                } else {\n                    point.visible = false;\n                }\n            }\n        });\n\n        this.box = targetBox;\n    }\n\n    pointSlot(slotX, slotY) {\n        return new Box(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n    }\n\n    traverseDataPoints(callback) {\n        const { options: { series }, seriesPoints } = this;\n\n        for (let seriesIx = 0; seriesIx < series.length; seriesIx++) {\n            const currentSeries = series[seriesIx];\n            const currentSeriesPoints = seriesPoints[seriesIx];\n            if (!currentSeriesPoints) {\n                seriesPoints[seriesIx] = [];\n            }\n\n            for (let pointIx = 0; pointIx < currentSeries.data.length; pointIx++) {\n                const { valueFields: value, fields } = this._bindPoint(currentSeries, seriesIx, pointIx);\n\n                callback(value, deepExtend({\n                    pointIx: pointIx,\n                    series: currentSeries,\n                    seriesIx: seriesIx,\n                    dataItem: currentSeries.data[pointIx],\n                    owner: this\n                }, fields));\n            }\n        }\n    }\n\n    formatPointValue(point, format) {\n        const value = point.value;\n        return this.chartService.format.auto(format, value.x, value.y);\n    }\n\n    animationPoints() {\n        const points = this.points;\n        const result = [];\n        for (let idx = 0; idx < points.length; idx++) {\n            result.push((points[idx] || {}).marker);\n        }\n        return result;\n    }\n}\nsetDefaultOptions(ScatterChart, {\n    series: [],\n    tooltip: {\n        format: \"{0}, {1}\"\n    },\n    labels: {\n        format: \"{0}, {1}\"\n    },\n    clip: true\n});\ndeepExtend(ScatterChart.prototype, ClipAnimationMixin, {\n    _bindPoint: CategoricalChart.prototype._bindPoint\n});\n\nexport default ScatterChart;","import { drawing as draw, geometry as geom, Color } from '@progress/kendo-drawing';\n\nimport LinePoint from '../line-chart/line-point';\nimport { BORDER_BRIGHTNESS } from '../constants';\n\nimport { CENTER } from '../../common/constants';\nimport { deepExtend } from '../../common';\n\nclass Bubble extends LinePoint {\n    constructor(value, options) {\n        super(value, options);\n\n        this.category = value.category;\n    }\n\n    createHighlight() {\n        const highlight = this.options.highlight;\n        const border = highlight.border;\n        const markers = this.options.markers;\n        const center = this.box.center();\n        const radius = (markers.size + markers.border.width + border.width) / 2;\n        const highlightGroup = new draw.Group();\n        const shadow = new draw.Circle(new geom.Circle([ center.x, center.y + radius / 5 + border.width / 2 ], radius + border.width / 2), {\n            stroke: {\n                color: 'none'\n            },\n            fill: this.createGradient({\n                gradient: 'bubbleShadow',\n                color: markers.background,\n                stops: [ {\n                    offset: 0,\n                    color: markers.background,\n                    opacity: 0.3\n                }, {\n                    offset: 1,\n                    color: markers.background,\n                    opacity: 0\n                } ]\n            })\n        });\n        const overlay = new draw.Circle(new geom.Circle([ center.x, center.y ], radius), {\n            stroke: {\n                color: border.color ||\n                    new Color(markers.background).brightness(BORDER_BRIGHTNESS).toHex(),\n                width: border.width,\n                opacity: border.opacity\n            },\n            fill: {\n                color: markers.background,\n                opacity: highlight.opacity\n            }\n        });\n\n        highlightGroup.append(shadow, overlay);\n\n        return highlightGroup;\n    }\n}\n\nBubble.prototype.defaults = deepExtend({}, Bubble.prototype.defaults, {\n    labels: {\n        position: CENTER\n    },\n    highlight: {\n        opacity: 1,\n        border: {\n            color: \"#fff\",\n            width: 2,\n            opacity: 1\n        }\n    }\n});\n\nexport default Bubble;","import ScatterChart from '../scatter-charts/scatter-chart';\nimport Bubble from './bubble';\n\nimport { INITIAL_ANIMATION_DURATION, BUBBLE } from '../constants';\n\nimport { MIN_VALUE, CIRCLE } from '../../common/constants';\nimport { deepExtend, isFunction, setDefaultOptions, valueOrDefault } from '../../common';\n\nclass BubbleChart extends ScatterChart {\n    _initFields() {\n        this._maxSize = MIN_VALUE;\n        super._initFields();\n    }\n\n    addValue(value, fields) {\n        if (value.size !== null && (value.size > 0 || (value.size < 0 && fields.series.negativeValues.visible))) {\n            this._maxSize = Math.max(this._maxSize, Math.abs(value.size));\n            super.addValue(value, fields);\n        } else {\n            this.points.push(null);\n            this.seriesPoints[fields.seriesIx].push(null);\n        }\n    }\n\n    reflow(box) {\n        this.updateBubblesSize(box);\n        super.reflow(box);\n    }\n\n    pointType() {\n        return Bubble;\n    }\n\n    createPoint(value, fields) {\n        const series = fields.series;\n        const pointsCount = series.data.length;\n        const delay = fields.pointIx * (INITIAL_ANIMATION_DURATION / pointsCount);\n        const animationOptions = {\n            delay: delay,\n            duration: INITIAL_ANIMATION_DURATION - delay,\n            type: BUBBLE\n        };\n\n        let color = fields.color || series.color;\n        if (value.size < 0 && series.negativeValues.visible) {\n            color = valueOrDefault(\n                series.negativeValues.color, color\n            );\n        }\n\n        let pointOptions = deepExtend({\n            labels: {\n                animation: {\n                    delay: delay,\n                    duration: INITIAL_ANIMATION_DURATION - delay\n                }\n            }\n        }, this.pointOptions(series, fields.seriesIx), {\n            markers: {\n                type: CIRCLE,\n                border: series.border,\n                opacity: series.opacity,\n                animation: animationOptions\n            }\n        });\n\n        pointOptions = this.evalPointOptions(pointOptions, value, fields);\n        if (isFunction(series.color)) {\n            color = pointOptions.color;\n        }\n\n        pointOptions.markers.background = color;\n\n        const point = new Bubble(value, pointOptions);\n        point.color = color;\n\n        this.append(point);\n\n        return point;\n    }\n\n    updateBubblesSize(box) {\n        const { options: { series } } = this;\n        const boxSize = Math.min(box.width(), box.height());\n\n        for (let seriesIx = 0; seriesIx < series.length; seriesIx++) {\n            const currentSeries = series[seriesIx];\n            const seriesPoints = this.seriesPoints[seriesIx];\n            const minSize = currentSeries.minSize || Math.max(boxSize * 0.02, 10);\n            const maxSize = currentSeries.maxSize || boxSize * 0.2;\n            const minR = minSize / 2;\n            const maxR = maxSize / 2;\n            const minArea = Math.PI * minR * minR;\n            const maxArea = Math.PI * maxR * maxR;\n            const areaRange = maxArea - minArea;\n            const areaRatio = areaRange / this._maxSize;\n\n            for (let pointIx = 0; pointIx < seriesPoints.length; pointIx++) {\n                const point = seriesPoints[pointIx];\n                if (point) {\n                    const area = Math.abs(point.value.size) * areaRatio;\n                    const radius = Math.sqrt((minArea + area) / Math.PI);\n                    const baseZIndex = valueOrDefault(point.options.zIndex, 0);\n                    const zIndex = baseZIndex + (1 - radius / maxR);\n\n                    deepExtend(point.options, {\n                        zIndex: zIndex,\n                        markers: {\n                            size: radius * 2,\n                            zIndex: zIndex\n                        },\n                        labels: {\n                            zIndex: zIndex + 1\n                        }\n                    });\n                }\n            }\n        }\n    }\n\n    formatPointValue(point, format) {\n        const value = point.value;\n        return this.chartService.format.auto(format, value.x, value.y, value.size, point.category);\n    }\n\n    createAnimation() {}\n    createVisual() {}\n}\n\nsetDefaultOptions(BubbleChart, {\n    tooltip: {\n        format: \"{3}\"\n    },\n    labels: {\n        format: \"{3}\"\n    }\n});\n\nexport default BubbleChart;","import { ShapeElement } from '../../core';\nimport { deepExtend } from '../../common';\nimport PointEventsMixin from '../mixins/point-events-mixin';\n\nclass Target extends ShapeElement { }\n\ndeepExtend(Target.prototype, PointEventsMixin);\n\nexport default Target;","import { drawing as draw } from '@progress/kendo-drawing';\n\nimport Target from './target';\n\nimport { ChartElement, Box } from '../../core';\n\nimport PointEventsMixin from '../mixins/point-events-mixin';\nimport NoteMixin from '../mixins/note-mixin';\nimport Bar from '../bar-chart/bar';\n\nimport { WHITE, TOP, RIGHT } from '../../common/constants';\nimport { alignPathToPixel, deepExtend, defined, setDefaultOptions, valueOrDefault } from '../../common';\n\nclass Bullet extends ChartElement {\n    constructor(value, options) {\n        super(options);\n\n        this.aboveAxis = this.options.aboveAxis;\n        this.color = options.color || WHITE;\n        this.value = value;\n    }\n\n    render() {\n        const options = this.options;\n\n        if (!this._rendered) {\n            this._rendered = true;\n\n            if (defined(this.value.target)) {\n                this.target = new Target({\n                    type: options.target.shape,\n                    background: options.target.color || this.color,\n                    opacity: options.opacity,\n                    zIndex: options.zIndex,\n                    border: options.target.border,\n                    vAlign: TOP,\n                    align: RIGHT\n                });\n\n                this.target.value = this.value;\n                this.target.dataItem = this.dataItem;\n                this.target.series = this.series;\n\n                this.append(this.target);\n            }\n\n            this.createNote();\n        }\n    }\n\n    reflow(box) {\n        this.render();\n\n        const { options, target, owner: chart } = this;\n        const invertAxes = options.invertAxes;\n        const valueAxis = chart.seriesValueAxis(this.options);\n        const categorySlot = chart.categorySlot(chart.categoryAxis, options.categoryIx, valueAxis);\n        const targetValueSlot = valueAxis.getSlot(this.value.target);\n        const targetSlotX = invertAxes ? targetValueSlot : categorySlot;\n        const targetSlotY = invertAxes ? categorySlot : targetValueSlot;\n\n        if (target) {\n            const targetSlot = new Box(\n                targetSlotX.x1, targetSlotY.y1,\n                targetSlotX.x2, targetSlotY.y2\n            );\n            target.options.height = invertAxes ? targetSlot.height() : options.target.line.width;\n            target.options.width = invertAxes ? options.target.line.width : targetSlot.width();\n            target.reflow(targetSlot);\n        }\n\n        if (this.note) {\n            this.note.reflow(box);\n        }\n\n        this.box = box;\n    }\n\n    createVisual() {\n        super.createVisual();\n\n        const options = this.options;\n        const body = draw.Path.fromRect(this.box.toRect(), {\n            fill: {\n                color: this.color,\n                opacity: options.opacity\n            },\n            stroke: null\n        });\n\n        if (options.border.width > 0) {\n            body.options.set(\"stroke\", {\n                color: options.border.color || this.color,\n                width: options.border.width,\n                dashType: options.border.dashType,\n                opacity: valueOrDefault(options.border.opacity, options.opacity)\n            });\n        }\n\n        this.bodyVisual = body;\n\n        alignPathToPixel(body);\n        this.visual.append(body);\n    }\n\n    createAnimation() {\n        if (this.bodyVisual) {\n            this.animation = draw.Animation.create(\n                this.bodyVisual, this.options.animation\n            );\n        }\n    }\n\n    createHighlight(style) {\n        return draw.Path.fromRect(this.box.toRect(), style);\n    }\n\n    highlightVisual() {\n        return this.bodyVisual;\n    }\n\n    highlightVisualArgs() {\n        return {\n            rect: this.box.toRect(),\n            visual: this.bodyVisual,\n            options: this.options\n        };\n    }\n\n    formatValue(format) {\n        return this.owner.formatPointValue(this, format);\n    }\n}\n\nBullet.prototype.tooltipAnchor = Bar.prototype.tooltipAnchor;\n\nsetDefaultOptions(Bullet, {\n    border: {\n        width: 1\n    },\n    vertical: false,\n    opacity: 1,\n    target: {\n        shape: \"\",\n        border: {\n            width: 0,\n            color: \"green\"\n        },\n        line: {\n            width: 2\n        }\n    },\n    tooltip: {\n        format: \"Current: {0}<br />Target: {1}\"\n    }\n});\n\ndeepExtend(Bullet.prototype, PointEventsMixin);\ndeepExtend(Bullet.prototype, NoteMixin);\n\nexport default Bullet;","\nimport CategoricalChart from '../categorical-chart';\nimport BarChart from '../bar-chart/bar-chart';\nimport Bullet from './bullet';\nimport ClusterLayout from '../layout/cluster-layout';\nimport { BAR } from '../constants';\n\nimport { MIN_VALUE, MAX_VALUE } from '../../common/constants';\nimport { deepExtend, defined, isArray, isFunction, isObject, setDefaultOptions } from '../../common';\n\nclass BulletChart extends CategoricalChart {\n    constructor(plotArea, options) {\n\n        wrapData(options);\n\n        super(plotArea, options);\n    }\n\n    reflowCategories(categorySlots) {\n        const children = this.children;\n        const childrenLength = children.length;\n\n        for (let i = 0; i < childrenLength; i++) {\n            children[i].reflow(categorySlots[i]);\n        }\n    }\n\n    plotRange(point) {\n        const series = point.series;\n        const valueAxis = this.seriesValueAxis(series);\n        const axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n\n        return [ axisCrossingValue, point.value.current || axisCrossingValue ];\n    }\n\n    createPoint(data, fields) {\n        const { categoryIx, category, series, seriesIx } = fields;\n        const { options, children } = this;\n        const value = data.valueFields;\n\n        let bulletOptions = deepExtend({\n            vertical: !options.invertAxes,\n            overlay: series.overlay,\n            categoryIx: categoryIx,\n            invertAxes: options.invertAxes\n        }, series);\n\n        let color = data.fields.color || series.color;\n        bulletOptions = this.evalPointOptions(\n            bulletOptions, value, category, categoryIx, series, seriesIx\n        );\n\n        if (isFunction(series.color)) {\n            color = bulletOptions.color;\n        }\n\n        const bullet = new Bullet(value, bulletOptions);\n        bullet.color = color;\n\n        let cluster = children[categoryIx];\n        if (!cluster) {\n            cluster = new ClusterLayout({\n                vertical: options.invertAxes,\n                gap: options.gap,\n                spacing: options.spacing\n            });\n            this.append(cluster);\n        }\n\n        cluster.append(bullet);\n\n        return bullet;\n    }\n\n    updateRange(value, fields) {\n        const { current, target } = value;\n        const axisName = fields.series.axis;\n        let axisRange = this.valueAxisRanges[axisName];\n\n        if (defined(current) && !isNaN(current) && defined(target && !isNaN(target))) {\n            axisRange = this.valueAxisRanges[axisName] =\n                axisRange || { min: MAX_VALUE, max: MIN_VALUE };\n\n            axisRange.min = Math.min(axisRange.min, current, target);\n            axisRange.max = Math.max(axisRange.max, current, target);\n        }\n    }\n\n    formatPointValue(point, format) {\n        return this.chartService.format.auto(format, point.value.current, point.value.target);\n    }\n\n    pointValue(data) {\n        return data.valueFields.current;\n    }\n\n    aboveAxis(point) {\n        const value = point.value.current;\n\n        return value > 0;\n    }\n\n    createAnimation() {\n        const points = this.points;\n\n        this._setAnimationOptions();\n\n        for (let idx = 0; idx < points.length; idx++) {\n            const point = points[idx];\n            point.options.animation = this.options.animation;\n            point.createAnimation();\n        }\n    }\n}\n\nBulletChart.prototype._setAnimationOptions = BarChart.prototype._setAnimationOptions;\n\nsetDefaultOptions(BulletChart, {\n    animation: {\n        type: BAR\n    }\n});\n\nfunction wrapData(options) {\n    const series = options.series;\n\n    for (let i = 0; i < series.length; i++) {\n        const seriesItem = series[i];\n        const data = seriesItem.data;\n        if (data && !isArray(data[0]) && !isObject(data[0])) {\n            seriesItem.data = [ data ];\n        }\n    }\n}\n\nexport default BulletChart;","import { Color } from '@progress/kendo-drawing';\n\nimport { Class, defined, deepExtend, setDefaultOptions, valueOrDefault, getSpacing, styleValue } from '../../common';\nimport { SHOW_TOOLTIP, HIDE_TOOLTIP } from '../constants';\n\nclass BaseTooltip extends Class {\n    constructor(chartService, options) {\n        super();\n\n        this.chartService = chartService;\n        this.options = deepExtend({}, this.options, options);\n    }\n\n    getStyle(options, point) {\n        let { background, border: { color: border } } = options;\n\n        if (point) {\n            const pointColor = point.color || point.options.color;\n            background = valueOrDefault(background, pointColor);\n            border = valueOrDefault(border, pointColor);\n        }\n\n        const padding = getSpacing(options.padding || {}, \"auto\");\n\n        return {\n            backgroundColor: background,\n            borderColor: border,\n            font: options.font,\n            color: options.color,\n            opacity: options.opacity,\n            borderWidth: styleValue(options.border.width),\n            paddingTop: styleValue(padding.top),\n            paddingBottom: styleValue(padding.bottom),\n            paddingLeft: styleValue(padding.left),\n            paddingRight: styleValue(padding.right)\n        };\n    }\n\n    show(options, tooltipOptions, point) {\n        options.format = tooltipOptions.format;\n\n        const style = this.getStyle(tooltipOptions, point);\n        options.style = style;\n\n        if (!defined(tooltipOptions.color) && new Color(style.backgroundColor).percBrightness() > 180) {\n            options.className = \"k-chart-tooltip-inverse\";\n        }\n\n        this.chartService.notify(SHOW_TOOLTIP, options);\n    }\n\n    hide() {\n        if (this.chartService) {\n            this.chartService.notify(HIDE_TOOLTIP);\n        }\n    }\n\n    destroy() {\n        delete this.chartService;\n    }\n}\n\nsetDefaultOptions(BaseTooltip, {\n    border: {\n        width: 1\n    },\n    opacity: 1\n});\n\nexport default BaseTooltip;\n","import BaseTooltip from '../tooltip/base-tooltip';\n\nimport { HIDE_TOOLTIP } from '../constants';\nimport { TOP, BOTTOM, LEFT, RIGHT, CENTER, DATE } from '../../common/constants';\nimport { setDefaultOptions } from '../../common';\n\nclass CrosshairTooltip extends BaseTooltip {\n    constructor(chartService, crosshair, options) {\n        super(chartService, options);\n\n        this.crosshair = crosshair;\n        this.formatService = chartService.format;\n        this.initAxisName();\n    }\n\n    initAxisName() {\n        const axis = this.crosshair.axis;\n        const plotArea = axis.plotArea;\n        let name;\n        if (plotArea.categoryAxis) {\n            name = axis.getCategory ? \"categoryAxis\" : \"valueAxis\";\n        } else {\n            name = axis.options.vertical ? \"yAxis\" : \"xAxis\";\n        }\n        this.axisName = name;\n    }\n\n    showAt(point) {\n        const { crosshair: { axis }, options } = this;\n        let value = axis[options.stickyMode ? \"getCategory\" : \"getValue\"](point);\n        let formattedValue = value;\n\n        if (options.format) {\n            formattedValue = this.formatService.auto(options.format, value);\n        } else if (axis.options.type === DATE) {\n            formattedValue = this.formatService.auto(axis.options.labels.dateFormats[axis.options.baseUnit], value);\n        }\n\n        this.show({\n            point: point,\n            anchor: this.getAnchor(),\n            crosshair: this.crosshair,\n            value: formattedValue,\n            axisName: this.axisName,\n            axisIndex: this.crosshair.axis.axisIndex\n        }, this.options);\n    }\n\n    hide() {\n        this.chartService.notify(HIDE_TOOLTIP, {\n            crosshair: this.crosshair,\n            axisName: this.axisName,\n            axisIndex: this.crosshair.axis.axisIndex\n        });\n    }\n\n    getAnchor() {\n        const { crosshair, options: { position, padding } } = this;\n        const vertical = !crosshair.axis.options.vertical;\n        const lineBox = crosshair.line.bbox();\n        let horizontalAlign, verticalAlign, point;\n\n        if (vertical) {\n            horizontalAlign = CENTER;\n            if (position === BOTTOM) {\n                verticalAlign = TOP;\n                point = lineBox.bottomLeft().translate(0, padding);\n            } else {\n                verticalAlign = BOTTOM;\n                point = lineBox.topLeft().translate(0, -padding);\n            }\n        } else {\n            verticalAlign = CENTER;\n            if (position === LEFT) {\n                horizontalAlign = RIGHT;\n                point = lineBox.topLeft().translate(-padding, 0);\n            } else {\n                horizontalAlign = LEFT;\n                point = lineBox.topRight().translate(padding, 0);\n            }\n        }\n\n        return {\n            point: point,\n            align: {\n                horizontal: horizontalAlign,\n                vertical: verticalAlign\n            }\n        };\n    }\n}\n\nsetDefaultOptions(CrosshairTooltip, {\n    padding: 10\n});\n\nexport default CrosshairTooltip;\n\n","import { drawing as draw, geometry as geom } from '@progress/kendo-drawing';\n\nimport { ChartElement, CategoryAxis } from '../../core';\nimport CrosshairTooltip from './crosshair-tooltip';\n\nimport { BLACK, X, Y } from '../../common/constants';\nimport { deepExtend, setDefaultOptions } from '../../common';\n\nclass Crosshair extends ChartElement {\n    constructor(chartService, axis, options) {\n        super(options);\n\n        this.axis = axis;\n        this.stickyMode = axis instanceof CategoryAxis;\n\n        const tooltipOptions = this.options.tooltip;\n\n        if (tooltipOptions.visible) {\n            this.tooltip = new CrosshairTooltip(chartService, this,\n                deepExtend({}, tooltipOptions, { stickyMode: this.stickyMode })\n            );\n        }\n    }\n\n    showAt(point) {\n        this.point = point;\n        this.moveLine();\n        this.line.visible(true);\n\n        if (this.tooltip) {\n            this.tooltip.showAt(point);\n        }\n    }\n\n    hide() {\n        this.line.visible(false);\n\n        if (this.tooltip) {\n            this.tooltip.hide();\n        }\n    }\n\n    moveLine() {\n        const { axis, point } = this;\n        const vertical = axis.options.vertical;\n        const box = this.getBox();\n        const dim = vertical ? Y : X;\n        const lineStart = new geom.Point(box.x1, box.y1);\n        let lineEnd;\n\n        if (vertical) {\n            lineEnd = new geom.Point(box.x2, box.y1);\n        } else {\n            lineEnd = new geom.Point(box.x1, box.y2);\n        }\n\n        if (point) {\n            if (this.stickyMode) {\n                const slot = axis.getSlot(axis.pointCategoryIndex(point));\n                lineStart[dim] = lineEnd[dim] = slot.center()[dim];\n            } else {\n                lineStart[dim] = lineEnd[dim] = point[dim];\n            }\n        }\n\n        this.box = box;\n\n        this.line.moveTo(lineStart).lineTo(lineEnd);\n    }\n\n    getBox() {\n        const axis = this.axis;\n        const axes = axis.pane.axes;\n        const length = axes.length;\n        const vertical = axis.options.vertical;\n        const box = axis.lineBox().clone();\n        const dim = vertical ? X : Y;\n        let axisLineBox;\n\n        for (let i = 0; i < length; i++) {\n            const currentAxis = axes[i];\n            if (currentAxis.options.vertical !== vertical) {\n                if (!axisLineBox) {\n                    axisLineBox = currentAxis.lineBox().clone();\n                } else {\n                    axisLineBox.wrap(currentAxis.lineBox());\n                }\n            }\n        }\n\n        box[dim + 1] = axisLineBox[dim + 1];\n        box[dim + 2] = axisLineBox[dim + 2];\n\n        return box;\n    }\n\n    createVisual() {\n        super.createVisual();\n\n        const options = this.options;\n        this.line = new draw.Path({\n            stroke: {\n                color: options.color,\n                width: options.width,\n                opacity: options.opacity,\n                dashType: options.dashType\n            },\n            visible: false\n        });\n\n        this.moveLine();\n        this.visual.append(this.line);\n    }\n\n    destroy() {\n        if (this.tooltip) {\n            this.tooltip.destroy();\n        }\n\n        super.destroy();\n    }\n}\n\nsetDefaultOptions(Crosshair, {\n    color: BLACK,\n    width: 2,\n    zIndex: -1,\n    tooltip: {\n        visible: false\n    }\n});\n\nexport default Crosshair;","import { drawing as draw } from '@progress/kendo-drawing';\n\nimport { ChartElement } from '../core';\n\nclass ChartContainer extends ChartElement {\n    constructor(options, pane) {\n        super(options);\n        this.pane = pane;\n    }\n\n    shouldClip() {\n        const children = this.children;\n        const length = children.length;\n\n        for (let i = 0; i < length; i++) {\n            if (children[i].options.clip === true) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    _clipBox() {\n        return this.pane.chartsBox();\n    }\n\n    createVisual() {\n        this.visual = new draw.Group({\n            zIndex: 0\n        });\n\n        if (this.shouldClip()) {\n            const clipBox = this.clipBox = this._clipBox();\n            const clipRect = clipBox.toRect();\n            const clipPath = draw.Path.fromRect(clipRect);\n\n            this.visual.clip(clipPath);\n            this.unclipLabels();\n        }\n    }\n\n    stackRoot() {\n        return this;\n    }\n\n    unclipLabels() {\n        const { children: charts, clipBox } = this;\n\n        for (let i = 0; i < charts.length; i++) {\n            const points = charts[i].points || {};\n            const length = points.length;\n\n            for (let j = 0; j < length; j++) {\n                const point = points[j];\n                if (point && point.overlapsBox && point.overlapsBox(clipBox)) {\n                    const label = point.label;\n                    const note = point.note;\n\n                    if (label && label.options.visible) {\n                        if (label.alignToClipBox) {\n                            label.alignToClipBox(clipBox);\n                        }\n                        label.options.noclip = true;\n                    }\n\n                    if (note && note.options.visible) {\n                        note.options.noclip = true;\n                    }\n                }\n            }\n        }\n    }\n\n    destroy() {\n        super.destroy();\n\n        delete this.parent;\n    }\n}\n\nChartContainer.prototype.isStackRoot = true;\n\nexport default ChartContainer;","import { ChartElement, BoxElement, Title, Box } from '../core';\nimport ChartContainer from './chart-container';\n\nimport { TOP, LEFT, X, Y } from '../common/constants';\nimport { append, deepExtend, isObject, last, setDefaultOptions } from '../common';\n\nclass Pane extends BoxElement {\n    constructor(options) {\n        super(options);\n\n        this.id = paneID();\n\n        this.createTitle();\n\n        this.content = new ChartElement();\n\n        this.chartContainer = new ChartContainer({}, this);\n        this.append(this.content);\n\n        this.axes = [];\n        this.charts = [];\n    }\n\n    createTitle() {\n        let titleOptions = this.options.title;\n        if (isObject(titleOptions)) {\n            titleOptions = deepExtend({}, titleOptions, {\n                align: titleOptions.position,\n                position: TOP\n            });\n        }\n\n        this.title = Title.buildTitle(titleOptions, this, Pane.prototype.options.title);\n    }\n\n    appendAxis(axis) {\n        this.content.append(axis);\n        this.axes.push(axis);\n        axis.pane = this;\n    }\n\n    appendChart(chart) {\n        if (this.chartContainer.parent !== this.content) {\n            this.content.append(this.chartContainer);\n        }\n\n        this.charts.push(chart);\n        this.chartContainer.append(chart);\n        chart.pane = this;\n    }\n\n    empty() {\n        const plotArea = this.parent;\n\n        if (plotArea) {\n            for (let i = 0; i < this.axes.length; i++) {\n                plotArea.removeAxis(this.axes[i]);\n            }\n\n            for (let i = 0; i < this.charts.length; i++) {\n                plotArea.removeChart(this.charts[i]);\n            }\n        }\n\n        this.axes = [];\n        this.charts = [];\n\n        this.content.destroy();\n        this.content.children = [];\n        this.chartContainer.children = [];\n    }\n\n    reflow(targetBox) {\n        // Content (such as charts) is rendered, but excluded from reflows\n        let content;\n        if (last(this.children) === this.content) {\n            content = this.children.pop();\n        }\n\n        super.reflow(targetBox);\n\n        if (content) {\n            this.children.push(content);\n        }\n\n        if (this.title) {\n            this.contentBox.y1 += this.title.box.height();\n        }\n    }\n\n    visualStyle() {\n        const style = super.visualStyle();\n        style.zIndex = -10;\n\n        return style;\n    }\n\n    renderComplete() {\n        if (this.options.visible) {\n            this.createGridLines();\n        }\n    }\n\n    stackRoot() {\n        return this;\n    }\n\n    clipRoot() {\n        return this;\n    }\n\n    createGridLines() {\n        const axes = this.axes;\n        const allAxes = axes.concat(this.parent.axes);\n        const vGridLines = [];\n        const hGridLines = [];\n\n        // TODO\n        // Is full combination really necessary?\n        for (let i = 0; i < axes.length; i++) {\n            const axis = axes[i];\n            const vertical = axis.options.vertical;\n            const gridLines = vertical ? vGridLines : hGridLines;\n            for (let j = 0; j < allAxes.length; j++) {\n                if (gridLines.length === 0) {\n                    const altAxis = allAxes[j];\n                    if (vertical !== altAxis.options.vertical) {\n                        append(gridLines, axis.createGridLines(altAxis));\n                    }\n                }\n            }\n        }\n    }\n\n    refresh() {\n        this.visual.clear();\n\n        this.content.parent = null;\n        this.content.createGradient = this.createGradient.bind(this);\n        this.content.renderVisual();\n        this.content.parent = this;\n\n        if (this.title) {\n            this.visual.append(this.title.visual);\n        }\n\n        this.visual.append(this.content.visual);\n\n        this.renderComplete();\n    }\n\n    chartsBox() {\n        const axes = this.axes;\n        const length = axes.length;\n        const chartsBox = new Box();\n\n        for (let idx = 0; idx < length; idx++) {\n            const axis = axes[idx];\n            const axisValueField = axis.options.vertical ? Y : X;\n            const lineBox = axis.lineBox();\n            chartsBox[axisValueField + 1] = lineBox[axisValueField + 1];\n            chartsBox[axisValueField + 2] = lineBox[axisValueField + 2];\n        }\n\n        if (chartsBox.x2 === 0) {\n            const allAxes = this.parent.axes;\n            const length = allAxes.length;\n\n            for (let idx = 0; idx < length; idx++) {\n                const axis = allAxes[idx];\n                if (!axis.options.vertical) {\n                    const lineBox = axis.lineBox();\n                    chartsBox.x1 = lineBox.x1;\n                    chartsBox.x2 = lineBox.x2;\n                }\n            }\n        }\n        return chartsBox;\n    }\n\n    clipBox() {\n        return this.chartContainer.clipBox;\n    }\n}\n\nlet ID = 1;\n\nfunction paneID() {\n    return \"pane\" + ID++;\n}\n\nPane.prototype.isStackRoot = true;\n\nsetDefaultOptions(Pane, {\n    zIndex: -1,\n    shrinkToFit: true,\n    title: {\n        align: LEFT\n    },\n    visible: true\n});\n\nexport default Pane;","import { drawing as draw } from '@progress/kendo-drawing';\n\nimport { ChartElement, Box } from '../../core';\nimport Crosshair from '../crosshair/crosshair';\nimport Pane from '../pane';\n\nimport { WHITE, BLACK, X, Y, COORD_PRECISION, TOP, BOTTOM, LEFT, RIGHT } from '../../common/constants';\nimport { append, deepExtend, defined, getSpacing, getTemplate, inArray, isFunction, isString, round, setDefaultOptions } from '../../common';\n\nclass PlotAreaBase extends ChartElement {\n    constructor(series, options, chartService) {\n        super(options);\n\n        this.initFields(series, options);\n        this.series = series;\n        this.initSeries();\n        this.charts = [];\n        this.options.legend.items = [];\n        this.axes = [];\n        this.crosshairs = [];\n        this.chartService = chartService;\n\n        this.createPanes();\n        this.render();\n        this.createCrosshairs();\n    }\n\n    initFields() { }\n\n    initSeries() {\n        const series = this.series;\n\n        for (let i = 0; i < series.length; i++) {\n            series[i].index = i;\n        }\n    }\n\n    createPanes() {\n        const defaults = { title: { color: (this.options.title || {}).color } };\n        const panes = [];\n        const paneOptions = this.options.panes || [];\n        const panesLength = Math.max(paneOptions.length, 1);\n\n        function setTitle(options, defaults) {\n            if (isString(options.title)) {\n                options.title = {\n                    text: options.title\n                };\n            }\n\n            options.title = deepExtend({}, defaults.title, options.title);\n        }\n\n        for (let i = 0; i < panesLength; i++) {\n            const options = paneOptions[i] || {};\n            setTitle(options, defaults);\n\n            const currentPane = new Pane(options);\n            currentPane.paneIndex = i;\n\n            panes.push(currentPane);\n            this.append(currentPane);\n        }\n\n        this.panes = panes;\n    }\n\n    createCrosshairs(panes = this.panes) {\n        for (let i = 0; i < panes.length; i++) {\n            const pane = panes[i];\n            for (let j = 0; j < pane.axes.length; j++) {\n                const axis = pane.axes[j];\n                if (axis.options.crosshair && axis.options.crosshair.visible) {\n                    const currentCrosshair = new Crosshair(this.chartService, axis, axis.options.crosshair);\n\n                    this.crosshairs.push(currentCrosshair);\n                    pane.content.append(currentCrosshair);\n                }\n            }\n        }\n    }\n\n    removeCrosshairs(pane) {\n        const crosshairs = this.crosshairs;\n        const axes = pane.axes;\n\n        for (let i = crosshairs.length - 1; i >= 0; i--) {\n            for (let j = 0; j < axes.length; j++) {\n                if (crosshairs[i].axis === axes[j]) {\n                    crosshairs.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    }\n\n    hideCrosshairs() {\n        const crosshairs = this.crosshairs;\n        for (let idx = 0; idx < crosshairs.length; idx++) {\n            crosshairs[idx].hide();\n        }\n    }\n\n    findPane(name) {\n        const panes = this.panes;\n        let matchingPane;\n\n        for (let i = 0; i < panes.length; i++) {\n            if (panes[i].options.name === name) {\n                matchingPane = panes[i];\n                break;\n            }\n        }\n\n        return matchingPane || panes[0];\n    }\n\n    findPointPane(point) {\n        const panes = this.panes;\n        let matchingPane;\n\n        for (let i = 0; i < panes.length; i++) {\n            if (panes[i].box.containsPoint(point)) {\n                matchingPane = panes[i];\n                break;\n            }\n        }\n\n        return matchingPane;\n    }\n\n    appendAxis(axis) {\n        const pane = this.findPane(axis.options.pane);\n\n        pane.appendAxis(axis);\n        this.axes.push(axis);\n        axis.plotArea = this;\n    }\n\n    removeAxis(axisToRemove) {\n        const filteredAxes = [];\n\n        for (let i = 0; i < this.axes.length; i++) {\n            const axis = this.axes[i];\n            if (axisToRemove !== axis) {\n                filteredAxes.push(axis);\n            } else {\n                axis.destroy();\n            }\n        }\n\n        this.axes = filteredAxes;\n    }\n\n    appendChart(chart, pane) {\n        this.charts.push(chart);\n        if (pane) {\n            pane.appendChart(chart);\n        } else {\n            this.append(chart);\n        }\n    }\n\n    removeChart(chartToRemove) {\n        const filteredCharts = [];\n\n        for (let i = 0; i < this.charts.length; i++) {\n            const chart = this.charts[i];\n            if (chart !== chartToRemove) {\n                filteredCharts.push(chart);\n            } else {\n                chart.destroy();\n            }\n        }\n\n        this.charts = filteredCharts;\n    }\n\n    addToLegend(series) {\n        const count = series.length;\n        const legend = this.options.legend;\n        const labels = legend.labels || {};\n        const inactiveItems = legend.inactiveItems || {};\n        const inactiveItemsLabels = inactiveItems.labels || {};\n        const data = [];\n\n        for (let i = 0; i < count; i++) {\n            const currentSeries = series[i];\n            const seriesVisible = currentSeries.visible !== false;\n            if (currentSeries.visibleInLegend === false) {\n                continue;\n            }\n\n            let text = currentSeries.name || \"\";\n            const labelTemplate = seriesVisible ? getTemplate(labels) : getTemplate(inactiveItemsLabels) || getTemplate(labels);\n            if (labelTemplate) {\n                text = labelTemplate({\n                    text: text,\n                    series: currentSeries\n                });\n            }\n\n            const defaults = currentSeries._defaults;\n            let color = currentSeries.color;\n            if (isFunction(color) && defaults) {\n                color = defaults.color;\n            }\n\n            let itemLabelOptions, markerColor;\n            if (seriesVisible) {\n                itemLabelOptions = {};\n                markerColor = color;\n            } else {\n                itemLabelOptions = {\n                    color: inactiveItemsLabels.color,\n                    font: inactiveItemsLabels.font\n                };\n                markerColor = inactiveItems.markers.color;\n            }\n\n            if (text) {\n                data.push({\n                    text: text,\n                    labels: itemLabelOptions,\n                    markerColor: markerColor,\n                    series: currentSeries,\n                    active: seriesVisible\n                });\n            }\n        }\n\n        append(legend.items, data);\n    }\n\n    groupAxes(panes) {\n        const xAxes = [];\n        const yAxes = [];\n\n        for (let paneIx = 0; paneIx < panes.length; paneIx++) {\n            const paneAxes = panes[paneIx].axes;\n            for (let axisIx = 0; axisIx < paneAxes.length; axisIx++) {\n                const axis = paneAxes[axisIx];\n                if (axis.options.vertical) {\n                    yAxes.push(axis);\n                } else {\n                    xAxes.push(axis);\n                }\n            }\n        }\n\n        return { x: xAxes, y: yAxes, any: xAxes.concat(yAxes) };\n    }\n\n    groupSeriesByPane() {\n        const series = this.series;\n        const seriesByPane = {};\n\n        for (let i = 0; i < series.length; i++) {\n            const currentSeries = series[i];\n            const pane = this.seriesPaneName(currentSeries);\n\n            if (seriesByPane[pane]) {\n                seriesByPane[pane].push(currentSeries);\n            } else {\n                seriesByPane[pane] = [ currentSeries ];\n            }\n        }\n\n        return seriesByPane;\n    }\n\n    filterVisibleSeries(series) {\n        const result = [];\n\n        for (let i = 0; i < series.length; i++) {\n            const currentSeries = series[i];\n            if (currentSeries.visible !== false) {\n                result.push(currentSeries);\n            }\n        }\n\n        return result;\n    }\n\n    reflow(targetBox) {\n        const options = this.options.plotArea;\n        const panes = this.panes;\n        const margin = getSpacing(options.margin);\n\n        this.box = targetBox.clone().unpad(margin);\n        this.reflowPanes();\n\n        this.reflowAxes(panes);\n        this.reflowCharts(panes);\n    }\n\n    redraw(panes) {\n        const panesArray = [].concat(panes);\n        this.initSeries();\n\n        for (let i = 0; i < panesArray.length; i++) {\n            this.removeCrosshairs(panesArray[i]);\n            panesArray[i].empty();\n        }\n\n        this.render(panesArray);\n        this.reflowAxes(this.panes);\n        this.reflowCharts(panesArray);\n\n        this.createCrosshairs(panesArray);\n\n        for (let i = 0; i < panesArray.length; i++) {\n            panesArray[i].refresh();\n        }\n    }\n\n    axisCrossingValues(axis, crossingAxes) {\n        const options = axis.options;\n        const crossingValues = [].concat(\n            options.axisCrossingValues || options.axisCrossingValue\n        );\n        const valuesToAdd = crossingAxes.length - crossingValues.length;\n        const defaultValue = crossingValues[0] || 0;\n\n        for (let i = 0; i < valuesToAdd; i++) {\n            crossingValues.push(defaultValue);\n        }\n\n        return crossingValues;\n    }\n\n    alignAxisTo(axis, targetAxis, crossingValue, targetCrossingValue) {\n        const slot = axis.getSlot(crossingValue, crossingValue, true);\n        const slotEdge = axis.options.reverse ? 2 : 1;\n        const targetSlot = targetAxis.getSlot(targetCrossingValue, targetCrossingValue, true);\n        const targetEdge = targetAxis.options.reverse ? 2 : 1;\n        const axisBox = axis.box.translate(\n            targetSlot[X + targetEdge] - slot[X + slotEdge],\n            targetSlot[Y + targetEdge] - slot[Y + slotEdge]\n        );\n\n        if (axis.pane !== targetAxis.pane) {\n            axisBox.translate(0, axis.pane.box.y1 - targetAxis.pane.box.y1);\n        }\n\n        axis.reflow(axisBox);\n    }\n\n    alignAxes(xAxes, yAxes) {\n        const xAnchor = xAxes[0];\n        const yAnchor = yAxes[0];\n        const xAnchorCrossings = this.axisCrossingValues(xAnchor, yAxes);\n        const yAnchorCrossings = this.axisCrossingValues(yAnchor, xAxes);\n        const leftAnchors = {};\n        const rightAnchors = {};\n        const topAnchors = {};\n        const bottomAnchors = {};\n\n        for (let i = 0; i < yAxes.length; i++) {\n            const axis = yAxes[i];\n            const pane = axis.pane;\n            const paneId = pane.id;\n\n            // Locate pane anchor, if any, and use its axisCrossingValues\n            const anchor = paneAnchor(xAxes, pane) || xAnchor;\n            let anchorCrossings = xAnchorCrossings;\n\n            if (anchor !== xAnchor) {\n                anchorCrossings = this.axisCrossingValues(anchor, yAxes);\n            }\n\n            this.alignAxisTo(axis, anchor, yAnchorCrossings[i], anchorCrossings[i]);\n\n            if (axis.options._overlap) {\n                continue;\n            }\n\n            if (round(axis.lineBox().x1) === round(anchor.lineBox().x1)) {\n                // Push the axis to the left the previous y-axis so they don't overlap\n                if (leftAnchors[paneId]) {\n                    axis.reflow(axis.box\n                        .alignTo(leftAnchors[paneId].box, LEFT)\n                        .translate(-axis.options.margin, 0)\n                    );\n                }\n\n                leftAnchors[paneId] = axis;\n            }\n\n            if (round(axis.lineBox().x2) === round(anchor.lineBox().x2)) {\n                // Flip the labels on the right if we're at the right end of the pane\n                if (!axis._mirrored) {\n                    axis.options.labels.mirror = !axis.options.labels.mirror;\n                    axis._mirrored = true;\n                }\n                this.alignAxisTo(axis, anchor, yAnchorCrossings[i], anchorCrossings[i]);\n\n                // Push the axis to the right the previous y-axis so they don't overlap\n                if (rightAnchors[paneId]) {\n                    axis.reflow(axis.box\n                        .alignTo(rightAnchors[paneId].box, RIGHT)\n                        .translate(axis.options.margin, 0)\n                    );\n                }\n\n                rightAnchors[paneId] = axis;\n            }\n\n            if (i !== 0 && yAnchor.pane === axis.pane) {\n                axis.alignTo(yAnchor);\n                axis.reflow(axis.box);\n            }\n        }\n\n        for (let i = 0; i < xAxes.length; i++) {\n            const axis = xAxes[i];\n            const pane = axis.pane;\n            const paneId = pane.id;\n\n            // Locate pane anchor and use its axisCrossingValues\n            const anchor = paneAnchor(yAxes, pane) || yAnchor;\n            let anchorCrossings = yAnchorCrossings;\n            if (anchor !== yAnchor) {\n                anchorCrossings = this.axisCrossingValues(anchor, xAxes);\n            }\n\n            this.alignAxisTo(axis, anchor, xAnchorCrossings[i], anchorCrossings[i]);\n\n            if (axis.options._overlap) {\n                continue;\n            }\n\n            if (round(axis.lineBox().y1) === round(anchor.lineBox().y1)) {\n                // Flip the labels on top if we're at the top of the pane\n                if (!axis._mirrored) {\n                    axis.options.labels.mirror = !axis.options.labels.mirror;\n                    axis._mirrored = true;\n                }\n                this.alignAxisTo(axis, anchor, xAnchorCrossings[i], anchorCrossings[i]);\n\n                // Push the axis above the previous x-axis so they don't overlap\n                if (topAnchors[paneId]) {\n                    axis.reflow(axis.box\n                        .alignTo(topAnchors[paneId].box, TOP)\n                        .translate(0, -axis.options.margin)\n                    );\n                }\n\n                topAnchors[paneId] = axis;\n            }\n\n            if (round(axis.lineBox().y2, COORD_PRECISION) === round(anchor.lineBox().y2, COORD_PRECISION)) {\n                // Push the axis below the previous x-axis so they don't overlap\n                if (bottomAnchors[paneId]) {\n                    axis.reflow(axis.box\n                        .alignTo(bottomAnchors[paneId].box, BOTTOM)\n                        .translate(0, axis.options.margin)\n                    );\n                }\n\n                bottomAnchors[paneId] = axis;\n            }\n\n            if (i !== 0) {\n                axis.alignTo(xAnchor);\n                axis.reflow(axis.box);\n            }\n        }\n    }\n\n    shrinkAxisWidth(panes) {\n        const axes = this.groupAxes(panes).any;\n        const axisBox = axisGroupBox(axes);\n        let overflowX = 0;\n\n        for (let i = 0; i < panes.length; i++) {\n            const currentPane = panes[i];\n\n            if (currentPane.axes.length > 0) {\n                overflowX = Math.max(\n                    overflowX,\n                    axisBox.width() - currentPane.contentBox.width()\n                );\n            }\n        }\n\n        if (overflowX !== 0) {\n            for (let i = 0; i < axes.length; i++) {\n                const currentAxis = axes[i];\n\n                if (!currentAxis.options.vertical) {\n                    currentAxis.reflow(currentAxis.box.shrink(overflowX, 0));\n                }\n            }\n        }\n    }\n\n    shrinkAxisHeight(panes) {\n        let shrinked;\n\n        for (let i = 0; i < panes.length; i++) {\n            const currentPane = panes[i];\n            const axes = currentPane.axes;\n            const overflowY = Math.max(0, axisGroupBox(axes).height() - currentPane.contentBox.height());\n\n            if (overflowY !== 0) {\n                for (let j = 0; j < axes.length; j++) {\n                    const currentAxis = axes[j];\n\n                    if (currentAxis.options.vertical) {\n                        currentAxis.reflow(\n                            currentAxis.box.shrink(0, overflowY)\n                        );\n                    }\n                }\n                shrinked = true;\n            }\n        }\n\n        return shrinked;\n    }\n\n    fitAxes(panes) {\n        const axes = this.groupAxes(panes).any;\n        let offsetX = 0;\n\n        for (let i = 0; i < panes.length; i++) {\n            const currentPane = panes[i];\n            const paneAxes = currentPane.axes;\n            const paneBox = currentPane.contentBox;\n\n            if (paneAxes.length > 0) {\n                const axisBox = axisGroupBox(paneAxes);\n                // OffsetY is calculated and applied per pane\n                const offsetY = Math.max(paneBox.y1 - axisBox.y1, paneBox.y2 - axisBox.y2);\n\n                // OffsetX is calculated and applied globally\n                offsetX = Math.max(offsetX, paneBox.x1 - axisBox.x1);\n\n\n                for (let j = 0; j < paneAxes.length; j++) {\n                    const currentAxis = paneAxes[j];\n\n                    currentAxis.reflow(\n                        currentAxis.box.translate(0, offsetY)\n                    );\n                }\n            }\n        }\n\n        for (let i = 0; i < axes.length; i++) {\n            const currentAxis = axes[i];\n\n            currentAxis.reflow(\n                currentAxis.box.translate(offsetX, 0)\n            );\n        }\n    }\n\n    reflowAxes(panes) {\n        const axes = this.groupAxes(panes);\n\n        for (let i = 0; i < panes.length; i++) {\n            this.reflowPaneAxes(panes[i]);\n        }\n\n        if (axes.x.length > 0 && axes.y.length > 0) {\n            this.alignAxes(axes.x, axes.y);\n            this.shrinkAxisWidth(panes);\n\n            this.autoRotateAxisLabels(axes);\n\n            this.alignAxes(axes.x, axes.y);\n            if (this.shrinkAxisWidth(panes)) {\n                this.alignAxes(axes.x, axes.y);\n            }\n\n            this.shrinkAxisHeight(panes);\n            this.alignAxes(axes.x, axes.y);\n\n            if (this.shrinkAxisHeight(panes)) {\n                this.alignAxes(axes.x, axes.y);\n            }\n\n            this.fitAxes(panes);\n        }\n    }\n\n    autoRotateAxisLabels(groupedAxes) {\n        const { axes, panes } = this;\n        let rotated;\n\n        for (let idx = 0; idx < axes.length; idx++) {\n            const axis = axes[idx];\n            if (axis.autoRotateLabels()) {\n                rotated = true;\n            }\n        }\n\n        if (rotated) {\n            for (let idx = 0; idx < panes.length; idx++) {\n                this.reflowPaneAxes(panes[idx]);\n            }\n\n            if (groupedAxes.x.length > 0 && groupedAxes.y.length > 0) {\n                this.alignAxes(groupedAxes.x, groupedAxes.y);\n                this.shrinkAxisWidth(panes);\n            }\n        }\n    }\n\n    reflowPaneAxes(pane) {\n        const axes = pane.axes;\n        const length = axes.length;\n\n        if (length > 0) {\n            for (let i = 0; i < length; i++) {\n                axes[i].reflow(pane.contentBox);\n            }\n        }\n    }\n\n    reflowCharts(panes) {\n        const charts = this.charts;\n        const count = charts.length;\n        const box = this.box;\n\n        for (let i = 0; i < count; i++) {\n            const chartPane = charts[i].pane;\n            if (!chartPane || inArray(chartPane, panes)) {\n                charts[i].reflow(box);\n            }\n        }\n    }\n\n    reflowPanes() {\n        const { box, panes } = this;\n        const panesLength = panes.length;\n        let remainingHeight = box.height();\n        let remainingPanes = panesLength;\n        let autoHeightPanes = 0;\n        let top = box.y1;\n\n        for (let i = 0; i < panesLength; i++) {\n            const currentPane = panes[i];\n            const height = currentPane.options.height;\n\n            currentPane.options.width = box.width();\n\n            if (!currentPane.options.height) {\n                autoHeightPanes++;\n            } else {\n                if (height.indexOf && height.indexOf(\"%\")) {\n                    const percents = parseInt(height, 10) / 100;\n                    currentPane.options.height = percents * box.height();\n                }\n\n                currentPane.reflow(box.clone());\n\n                remainingHeight -= currentPane.options.height;\n            }\n        }\n\n        for (let i = 0; i < panesLength; i++) {\n            const currentPane = panes[i];\n\n            if (!currentPane.options.height) {\n                currentPane.options.height = remainingHeight / autoHeightPanes;\n            }\n        }\n\n        for (let i = 0; i < panesLength; i++) {\n            const currentPane = panes[i];\n            const paneBox = box\n                .clone()\n                .move(box.x1, top);\n\n            currentPane.reflow(paneBox);\n\n            remainingPanes--;\n            top += currentPane.options.height;\n        }\n    }\n\n    backgroundBox() {\n        const axes = this.axes;\n        const axesCount = axes.length;\n        let box;\n\n        for (let i = 0; i < axesCount; i++) {\n            const axisA = axes[i];\n\n            for (let j = 0; j < axesCount; j++) {\n                const axisB = axes[j];\n\n                if (axisA.options.vertical !== axisB.options.vertical) {\n                    const lineBox = axisA.lineBox().clone().wrap(axisB.lineBox());\n\n                    if (!box) {\n                        box = lineBox;\n                    } else {\n                        box = box.wrap(lineBox);\n                    }\n                }\n            }\n        }\n\n        return box || this.box;\n    }\n\n    chartsBoxes() {\n        const panes = this.panes;\n        const boxes = [];\n\n        for (let idx = 0; idx < panes.length; idx++) {\n            boxes.push(panes[idx].chartsBox());\n        }\n\n        return boxes;\n    }\n\n    addBackgroundPaths(multipath) {\n        const boxes = this.chartsBoxes();\n        for (let idx = 0; idx < boxes.length; idx++) {\n            multipath.paths.push(draw.Path.fromRect(boxes[idx].toRect()));\n        }\n    }\n\n    backgroundContainsPoint(point) {\n        const boxes = this.chartsBoxes();\n        for (let idx = 0; idx < boxes.length; idx++) {\n            if (boxes[idx].containsPoint(point)) {\n                return true;\n            }\n        }\n    }\n\n    createVisual() {\n        super.createVisual();\n\n        const options = this.options.plotArea;\n        let { opacity, background, border = {} } = options;\n        if (isTransparent(background)) {\n            background = WHITE;\n            opacity = 0;\n        }\n\n        const bg = this._bgVisual = new draw.MultiPath({\n            fill: {\n                color: background,\n                opacity: opacity\n            },\n            stroke: {\n                color: border.width ? border.color : \"\",\n                width: border.width,\n                dashType: border.dashType\n            },\n            zIndex: -1\n        });\n\n        this.addBackgroundPaths(bg);\n\n        this.appendVisual(bg);\n    }\n\n    pointsByCategoryIndex(categoryIndex) {\n        const charts = this.charts;\n        const result = [];\n\n        if (categoryIndex !== null) {\n            for (let i = 0; i < charts.length; i++) {\n                const chart = charts[i];\n                if (chart.pane.options.name === \"_navigator\") {\n                    continue;\n                }\n\n                const points = charts[i].categoryPoints[categoryIndex];\n                if (points && points.length) {\n                    for (let j = 0; j < points.length; j++) {\n                        const point = points[j];\n                        if (point && defined(point.value) && point.value !== null) {\n                            result.push(point);\n                        }\n                    }\n                }\n            }\n        }\n\n        return result;\n    }\n\n    pointsBySeriesIndex(seriesIndex) {\n        return this.filterPoints(function(point) {\n            return point.series.index === seriesIndex;\n        });\n    }\n\n    pointsBySeriesName(name) {\n        return this.filterPoints(function(point) {\n            return point.series.name === name;\n        });\n    }\n\n    filterPoints(callback) {\n        const charts = this.charts;\n        const result = [];\n\n        for (let i = 0; i < charts.length; i++) {\n            const chart = charts[i];\n            const points = chart.points;\n            for (let j = 0; j < points.length; j++) {\n                const point = points[j];\n                if (point && callback(point)) {\n                    result.push(point);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    findPoint(callback) {\n        const charts = this.charts;\n\n        for (let i = 0; i < charts.length; i++) {\n            const chart = charts[i];\n            const points = chart.points;\n            for (let j = 0; j < points.length; j++) {\n                const point = points[j];\n                if (point && callback(point)) {\n                    return point;\n                }\n            }\n        }\n    }\n\n    paneByPoint(point) {\n        const panes = this.panes;\n\n        for (let i = 0; i < panes.length; i++) {\n            const pane = panes[i];\n            if (pane.box.containsPoint(point)) {\n                return pane;\n            }\n        }\n    }\n}\n\nfunction axisGroupBox(axes) {\n    const length = axes.length;\n    let box;\n\n    if (length > 0) {\n        for (let i = 0; i < length; i++) {\n            const axisBox = axes[i].contentBox();\n\n            if (!box) {\n                box = axisBox.clone();\n            } else {\n                box.wrap(axisBox);\n            }\n        }\n    }\n\n    return box || new Box();\n}\n\nfunction paneAnchor(axes, pane) {\n    for (let i = 0; i < axes.length; i++) {\n        const anchor = axes[i];\n        if (anchor && anchor.pane === pane) {\n            return anchor;\n        }\n    }\n}\n\nfunction isTransparent(color) {\n    return color === \"\" || color === null || color === \"none\" || color === \"transparent\" || !defined(color);\n}\n\n\nsetDefaultOptions(PlotAreaBase, {\n    series: [],\n    plotArea: {\n        margin: {}\n    },\n    background: \"\",\n    border: {\n        color: BLACK,\n        width: 0\n    },\n    legend: {\n        inactiveItems: {\n            labels: {\n                color: \"#919191\"\n            },\n            markers: {\n                color: \"#919191\"\n            }\n        }\n    }\n});\n\nexport default PlotAreaBase;","import { PLOT_AREA_HOVER, PLOT_AREA_CLICK } from '../constants';\n\nconst PlotAreaEventsMixin = {\n    hover: function(chart, e) {\n        this._dispatchEvent(chart, e, PLOT_AREA_HOVER);\n    },\n\n    click: function(chart, e) {\n        this._dispatchEvent(chart, e, PLOT_AREA_CLICK);\n    }\n};\n\nexport default PlotAreaEventsMixin;","import Aggregates from './aggregates';\n\nimport { Class, defined, inArray, isArray, isFunction, isNumber, isObject } from '../../common';\n\nclass SeriesAggregator extends Class {\n    constructor(series, binder, defaultAggregates) {\n        super();\n\n        const canonicalFields = binder.canonicalFields(series);\n        const valueFields = binder.valueFields(series);\n        const sourceFields = binder.sourceFields(series, canonicalFields);\n        const seriesFields = this._seriesFields = [];\n        const defaults = defaultAggregates.query(series.type);\n        const rootAggregate = series.aggregate || defaults;\n\n        this._series = series;\n        this._binder = binder;\n\n        for (let i = 0; i < canonicalFields.length; i++) {\n            const field = canonicalFields[i];\n            let fieldAggregate;\n\n            if (isObject(rootAggregate)) {\n                fieldAggregate = rootAggregate[field];\n            } else if (i === 0 || inArray(field, valueFields)) {\n                fieldAggregate = rootAggregate;\n            } else {\n                break;\n            }\n\n            if (fieldAggregate) {\n                seriesFields.push({\n                    canonicalName: field,\n                    name: sourceFields[i],\n                    transform: isFunction(fieldAggregate) ? fieldAggregate : Aggregates[fieldAggregate]\n                });\n            }\n        }\n    }\n\n    aggregatePoints(srcPoints, group) {\n        const { _series: series, _seriesFields: seriesFields } = this;\n        const data = this._bindPoints(srcPoints || []);\n        const firstDataItem = data.dataItems[0];\n        let result = {};\n\n        if (firstDataItem && !isNumber(firstDataItem) && !isArray(firstDataItem)) {\n            const fn = function() {};\n            fn.prototype = firstDataItem;\n            result = new fn();\n        }\n\n        for (let i = 0; i < seriesFields.length; i++) {\n            const field = seriesFields[i];\n            const srcValues = this._bindField(data.values, field.canonicalName);\n            const value = field.transform(srcValues, series, data.dataItems, group);\n\n            if (value !== null && isObject(value) && !defined(value.length) && !(value instanceof Date)) {\n                result = value;\n                break;\n            } else {\n                if (defined(value)) {\n                    setValue(field.name, result, value);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    _bindPoints(points) {\n        const { _binder: binder, _series: series } = this;\n        const values = [];\n        const dataItems = [];\n\n        for (let i = 0; i < points.length; i++) {\n            const pointIx = points[i];\n\n            values.push(binder.bindPoint(series, pointIx));\n            dataItems.push(series.data[pointIx]);\n        }\n\n        return {\n            values: values,\n            dataItems: dataItems\n        };\n    }\n\n    _bindField(data, field) {\n        const values = [];\n        const count = data.length;\n\n        for (let i = 0; i < count; i++) {\n            const item = data[i];\n            const valueFields = item.valueFields;\n            let value;\n\n            if (defined(valueFields[field])) {\n                value = valueFields[field];\n            } else {\n                value = item.fields[field];\n            }\n\n            values.push(value);\n        }\n\n        return values;\n    }\n}\n\nfunction setValue(fieldName, target, value) {\n    let parentObj = target;\n    let field = fieldName;\n\n    if (fieldName.indexOf(\".\") > -1) {\n        const parts = fieldName.split(\".\");\n\n        while (parts.length > 1) {\n            field = parts.shift();\n            if (!defined(parentObj[field])) {\n                parentObj[field] = {};\n            }\n            parentObj = parentObj[field];\n        }\n        field = parts.shift();\n    }\n\n    parentObj[field] = value;\n}\n\nexport default SeriesAggregator;","import { Class } from '../../common';\n\nclass DefaultAggregates extends Class {\n    constructor() {\n        super();\n\n        this._defaults = {};\n    }\n\n    register(seriesTypes, aggregates) {\n        for (let i = 0; i < seriesTypes.length; i++) {\n            this._defaults[seriesTypes[i]] = aggregates;\n        }\n    }\n\n    query(seriesType) {\n        return this._defaults[seriesType];\n    }\n}\n\nDefaultAggregates.current = new DefaultAggregates();\n\nexport default DefaultAggregates;","import Bar from '../bar-chart/bar';\nimport BarLabel from '../bar-chart/bar-label';\n\nimport { deepExtend, getTemplate } from '../../common';\n\nclass RangeBar extends Bar {\n    createLabel() {\n        const labels = this.options.labels;\n        const fromOptions = deepExtend({}, labels, labels.from);\n        const toOptions = deepExtend({}, labels, labels.to);\n\n        if (fromOptions.visible) {\n            this.labelFrom = this._createLabel(fromOptions);\n            this.append(this.labelFrom);\n        }\n\n        if (toOptions.visible) {\n            this.labelTo = this._createLabel(toOptions);\n            this.append(this.labelTo);\n        }\n    }\n\n    _createLabel(options) {\n        const labelTemplate = getTemplate(options);\n        let labelText;\n\n        if (labelTemplate) {\n            labelText = labelTemplate({\n                dataItem: this.dataItem,\n                category: this.category,\n                value: this.value,\n                percentage: this.percentage,\n                runningTotal: this.runningTotal,\n                total: this.total,\n                series: this.series\n            });\n        } else {\n            labelText = this.formatValue(options.format);\n        }\n\n        return new BarLabel(labelText,\n            deepExtend({\n                vertical: this.options.vertical\n            },\n            options\n        ));\n    }\n\n    reflow(targetBox) {\n        this.render();\n\n        const { labelFrom, labelTo, value } = this;\n\n        this.box = targetBox;\n\n        if (labelFrom) {\n            labelFrom.options.aboveAxis = value.from > value.to;\n            labelFrom.reflow(targetBox);\n        }\n\n        if (labelTo) {\n            labelTo.options.aboveAxis = value.to > value.from;\n            labelTo.reflow(targetBox);\n        }\n\n        if (this.note) {\n            this.note.reflow(targetBox);\n        }\n    }\n}\n\nRangeBar.prototype.defaults = deepExtend({}, RangeBar.prototype.defaults, {\n    labels: {\n        format: \"{0} - {1}\"\n    },\n    tooltip: {\n        format: \"{1}\"\n    }\n});\n\nexport default RangeBar;","import BarChart from '../bar-chart/bar-chart';\nimport RangeBar from './range-bar';\nimport CategoricalChart from '../categorical-chart';\n\nimport { MIN_VALUE, MAX_VALUE } from '../../common/constants';\nimport { isNumber } from '../../common';\n\nclass RangeBarChart extends BarChart {\n    pointType() {\n        return RangeBar;\n    }\n\n    pointValue(data) {\n        return data.valueFields;\n    }\n\n    formatPointValue(point, format) {\n        if (point.value.from === null && point.value.to === null) {\n            return \"\";\n        }\n\n        return this.chartService.format.auto(format, point.value.from, point.value.to);\n    }\n\n    plotRange(point) {\n        if (!point) {\n            return 0;\n        }\n\n        return [ point.value.from, point.value.to ];\n    }\n\n    updateRange(value, fields) {\n        const axisName = fields.series.axis;\n        const { from, to } = value;\n        let axisRange = this.valueAxisRanges[axisName];\n\n        if (value !== null && isNumber(from) && isNumber(to)) {\n            axisRange = this.valueAxisRanges[axisName] = axisRange || { min: MAX_VALUE, max: MIN_VALUE };\n\n            axisRange.min = Math.min(axisRange.min, from);\n            axisRange.max = Math.max(axisRange.max, from);\n\n            axisRange.min = Math.min(axisRange.min, to);\n            axisRange.max = Math.max(axisRange.max, to);\n        }\n    }\n\n    aboveAxis(point) {\n        const value = point.value;\n        return value.from < value.to;\n    }\n}\n\nRangeBarChart.prototype.plotLimits = CategoricalChart.prototype.plotLimits;\n\nexport default RangeBarChart;","import Candlestick from '../candlestick-chart/candlestick';\n\nclass OHLCPoint extends Candlestick {\n    reflow(box) {\n        const { options, value, owner: chart } = this;\n        const valueAxis = chart.seriesValueAxis(options);\n        const oPoints = [];\n        const cPoints = [];\n        const lhPoints = [];\n\n        const lhSlot = valueAxis.getSlot(value.low, value.high);\n        const oSlot = valueAxis.getSlot(value.open, value.open);\n        const cSlot = valueAxis.getSlot(value.close, value.close);\n\n        oSlot.x1 = cSlot.x1 = lhSlot.x1 = box.x1;\n        oSlot.x2 = cSlot.x2 = lhSlot.x2 = box.x2;\n\n        const mid = lhSlot.center().x;\n\n        oPoints.push([ oSlot.x1, oSlot.y1 ]);\n        oPoints.push([ mid, oSlot.y1 ]);\n        cPoints.push([ mid, cSlot.y1 ]);\n        cPoints.push([ cSlot.x2, cSlot.y1 ]);\n        lhPoints.push([ mid, lhSlot.y1 ]);\n        lhPoints.push([ mid, lhSlot.y2 ]);\n\n        this.lines = [\n            oPoints, cPoints, lhPoints\n        ];\n\n        this.box = lhSlot.clone().wrap(oSlot.clone().wrap(cSlot));\n\n        this.reflowNote();\n    }\n\n    createBody() {}\n}\n\nexport default OHLCPoint;","import CandlestickChart from '../candlestick-chart/candlestick-chart';\nimport OHLCPoint from './ohlc-point';\n\nclass OHLCChart extends CandlestickChart {\n    pointType() {\n        return OHLCPoint;\n    }\n}\n\nexport default OHLCChart;","import { drawing as draw } from '@progress/kendo-drawing';\n\nimport { ChartElement } from '../../core';\n\nimport { FADEIN, INITIAL_ANIMATION_DURATION } from '../constants';\n\nimport { alignPathToPixel, setDefaultOptions } from '../../common';\n\nclass WaterfallSegment extends ChartElement {\n    constructor(from, to, series) {\n        super();\n\n        this.from = from;\n        this.to = to;\n        this.series = series;\n    }\n\n    linePoints() {\n        const from = this.from;\n        const { from: { box: fromBox }, to: { box: toBox } } = this;\n        const points = [];\n\n        if (from.isVertical) {\n            const y = from.aboveAxis ? fromBox.y1 : fromBox.y2;\n            points.push(\n                [ fromBox.x1, y ],\n                [ toBox.x2, y ]\n            );\n        } else {\n            const x = from.aboveAxis ? fromBox.x2 : fromBox.x1;\n            points.push(\n                [ x, fromBox.y1 ],\n                [ x, toBox.y2 ]\n            );\n        }\n\n        return points;\n    }\n\n    createVisual() {\n        super.createVisual();\n\n        const line = this.series.line || {};\n\n        const path = draw.Path.fromPoints(this.linePoints(), {\n            stroke: {\n                color: line.color,\n                width: line.width,\n                opacity: line.opacity,\n                dashType: line.dashType\n            }\n        });\n\n        alignPathToPixel(path);\n        this.visual.append(path);\n    }\n}\n\nsetDefaultOptions(WaterfallSegment, {\n    animation: {\n        type: FADEIN,\n        delay: INITIAL_ANIMATION_DURATION\n    }\n});\n\nexport default WaterfallSegment;","import BarChart from '../bar-chart/bar-chart';\nimport SeriesBinder from '../series-binder';\nimport WaterfallSegment from './waterfall-segment';\n\nimport categoriesCount from '../utils/categories-count';\n\nimport { isNumber } from '../../common';\n\nclass WaterfallChart extends BarChart {\n    render() {\n        super.render();\n        this.createSegments();\n    }\n\n    traverseDataPoints(callback) {\n        const series = this.options.series;\n        const categories = this.categoryAxis.options.categories || [];\n        const totalCategories = categoriesCount(series);\n        const isVertical = !this.options.invertAxes;\n\n        for (let seriesIx = 0; seriesIx < series.length; seriesIx++) {\n            const currentSeries = series[seriesIx];\n            let total = 0;\n            let runningTotal = 0;\n\n            for (let categoryIx = 0; categoryIx < totalCategories; categoryIx++) {\n                const data = SeriesBinder.current.bindPoint(currentSeries, categoryIx);\n                const value = data.valueFields.value;\n                const summary = data.fields.summary;\n                let from = total;\n                let to;\n\n                if (summary) {\n                    if (summary.toLowerCase() === \"total\") {\n                        data.valueFields.value = total;\n                        from = 0;\n                        to = total;\n                    } else {\n                        data.valueFields.value = runningTotal;\n                        to = from - runningTotal;\n                        runningTotal = 0;\n                    }\n                } else if (isNumber(value)) {\n                    runningTotal += value;\n                    total += value;\n                    to = total;\n                }\n\n                callback(data, {\n                    category: categories[categoryIx],\n                    categoryIx: categoryIx,\n                    series: currentSeries,\n                    seriesIx: seriesIx,\n                    total: total,\n                    runningTotal: runningTotal,\n                    from: from,\n                    to: to,\n                    isVertical: isVertical\n                });\n            }\n        }\n    }\n\n    updateRange(value, fields) {\n        super.updateRange({ value: fields.to }, fields);\n    }\n\n    aboveAxis(point) {\n        return point.value >= 0;\n    }\n\n    plotRange(point) {\n        return [ point.from, point.to ];\n    }\n\n    createSegments() {\n        const series = this.options.series;\n        const seriesPoints = this.seriesPoints;\n        const segments = this.segments = [];\n\n        for (let seriesIx = 0; seriesIx < series.length; seriesIx++) {\n            const currentSeries = series[seriesIx];\n            const points = seriesPoints[seriesIx];\n\n            if (points) {\n                let prevPoint;\n                for (let pointIx = 0; pointIx < points.length; pointIx++) {\n                    const point = points[pointIx];\n\n                    if (point && prevPoint) {\n                        const segment = new WaterfallSegment(prevPoint, point, currentSeries);\n                        segments.push(segment);\n                        this.append(segment);\n                    }\n\n                    prevPoint = point;\n                }\n            }\n        }\n    }\n}\n\nexport default WaterfallChart;","import { inArray } from '../../common';\n\nexport default function filterSeriesByType(series, types) {\n    const result = [];\n\n    const seriesTypes = [].concat(types);\n    for (let idx = 0; idx < series.length; idx++) {\n        const currentSeries = series[idx];\n        if (inArray(currentSeries.type, seriesTypes)) {\n            result.push(currentSeries);\n        }\n    }\n\n    return result;\n}","export default function equalsIgnoreCase(a, b) {\n    if (a && b) {\n        return a.toLowerCase() === b.toLowerCase();\n    }\n\n    return a === b;\n}","import equalsIgnoreCase from './equals-ignore-case';\n\nimport { DATE } from '../../common/constants';\n\nexport default function isDateAxis(axisOptions, sampleCategory) {\n    const type = axisOptions.type;\n    const dateCategory = sampleCategory instanceof Date;\n\n    return (!type && dateCategory) || equalsIgnoreCase(type, DATE);\n}","export default function appendIfNotNull(array, element) {\n    if (element !== null) {\n        array.push(element);\n    }\n}","export default function singleItemOrArray(array) {\n    return array.length === 1 ? array[0] : array;\n}","import { parseDate } from '../../date-utils';\nimport { getter } from '../../common';\n\nexport default function getDateField(field, row, intlService) {\n    if (row === null) {\n        return row;\n    }\n\n    const key = \"_date_\" + field;\n    let value = row[key];\n\n    if (!value) {\n        value = parseDate(intlService, getter(field, true)(row));\n        row[key] = value;\n    }\n\n    return value;\n}","import PlotAreaBase from './plotarea-base';\nimport AxisGroupRangeTracker from '../axis-group-range-tracker';\nimport PlotAreaEventsMixin from '../mixins/plotarea-events-mixin';\nimport SeriesAggregator from '../aggregates/series-aggregator';\nimport DefaultAggregates from '../aggregates/default-aggregates';\nimport SeriesBinder from '../series-binder';\nimport BarChart from '../bar-chart/bar-chart';\nimport RangeBarChart from '../range-bar-chart/range-bar-chart';\nimport BulletChart from '../bullet-chart/bullet-chart';\nimport LineChart from '../line-chart/line-chart';\nimport AreaChart from '../area-chart/area-chart';\nimport OHLCChart from '../ohlc-chart/ohlc-chart';\nimport CandlestickChart from '../candlestick-chart/candlestick-chart';\nimport BoxPlotChart from '../box-plot-chart/box-plot-chart';\nimport WaterfallChart from '../waterfall-chart/waterfall-chart';\n\nimport { CategoryAxis, DateCategoryAxis, NumericAxis, LogarithmicAxis, Point } from '../../core';\n\nimport filterSeriesByType from '../utils/filter-series-by-type';\nimport equalsIgnoreCase from '../utils/equals-ignore-case';\nimport categoriesCount from '../utils/categories-count';\nimport getField from '../utils/get-field';\nimport isDateAxis from '../utils/is-date-axis';\nimport appendIfNotNull from '../utils/append-if-not-null';\nimport singleItemOrArray from '../utils/single-item-or-array';\nimport getDateField from '../utils/get-date-field';\n\nimport { BAR, COLUMN, BULLET, VERTICAL_BULLET, LINE, VERTICAL_LINE, AREA, VERTICAL_AREA,\n    RANGE_COLUMN, RANGE_BAR, WATERFALL, HORIZONTAL_WATERFALL, BOX_PLOT, VERTICAL_BOX_PLOT,\n    OHLC, CANDLESTICK, LOGARITHMIC, STEP, EQUALLY_SPACED_SERIES } from '../constants';\n\nimport { DATE, MIN_VALUE, MAX_VALUE } from '../../common/constants';\nimport { setDefaultOptions, inArray, isNumber, deepExtend, defined, eventElement, grep } from '../../common';\n\nclass CategoricalPlotArea extends PlotAreaBase {\n    initFields(series) {\n        this.namedCategoryAxes = {};\n        this.namedValueAxes = {};\n        this.valueAxisRangeTracker = new AxisGroupRangeTracker();\n\n        if (series.length > 0) {\n            this.invertAxes = inArray(\n                series[0].type, [ BAR, BULLET, VERTICAL_LINE, VERTICAL_AREA,\n                                 RANGE_BAR, HORIZONTAL_WATERFALL, VERTICAL_BOX_PLOT ]\n            );\n\n            for (let i = 0; i < series.length; i++) {\n                const stack = series[i].stack;\n                if (stack && stack.type === \"100%\") {\n                    this.stack100 = true;\n                    break;\n                }\n            }\n        }\n\n    }\n\n    render(panes = this.panes) {\n        this.createCategoryAxes(panes);\n        this.aggregateCategories(panes);\n        this.createCategoryAxesLabels(panes);\n        this.createCharts(panes);\n        this.createValueAxes(panes);\n    }\n\n    removeAxis(axis) {\n        const axisName = axis.options.name;\n\n        super.removeAxis(axis);\n\n        if (axis instanceof CategoryAxis) {\n            delete this.namedCategoryAxes[axisName];\n        } else {\n            this.valueAxisRangeTracker.reset(axisName);\n            delete this.namedValueAxes[axisName];\n        }\n\n        if (axis === this.categoryAxis) {\n            delete this.categoryAxis;\n        }\n\n        if (axis === this.valueAxis) {\n            delete this.valueAxis;\n        }\n    }\n\n    createCharts(panes) {\n        const seriesByPane = this.groupSeriesByPane();\n\n        for (let i = 0; i < panes.length; i++) {\n            const pane = panes[i];\n            const paneSeries = seriesByPane[pane.options.name || \"default\"] || [];\n            this.addToLegend(paneSeries);\n\n            const visibleSeries = this.filterVisibleSeries(paneSeries);\n            if (!visibleSeries) {\n                continue;\n            }\n\n            const groups = this.groupSeriesByCategoryAxis(visibleSeries);\n            for (let groupIx = 0; groupIx < groups.length; groupIx++) {\n                this.createChartGroup(groups[groupIx], pane);\n            }\n        }\n    }\n\n    createChartGroup(series, pane) {\n        this.createAreaChart(\n            filterSeriesByType(series, [ AREA, VERTICAL_AREA ]), pane\n        );\n\n        this.createBarChart(\n            filterSeriesByType(series, [ COLUMN, BAR ]), pane\n        );\n\n        this.createRangeBarChart(\n            filterSeriesByType(series, [ RANGE_COLUMN, RANGE_BAR ]), pane\n        );\n\n        this.createBulletChart(\n            filterSeriesByType(series, [ BULLET, VERTICAL_BULLET ]), pane\n        );\n\n        this.createCandlestickChart(\n            filterSeriesByType(series, CANDLESTICK), pane\n        );\n\n        this.createBoxPlotChart(\n            filterSeriesByType(series, [ BOX_PLOT, VERTICAL_BOX_PLOT ]), pane\n        );\n\n        this.createOHLCChart(\n            filterSeriesByType(series, OHLC), pane\n        );\n\n        this.createWaterfallChart(\n            filterSeriesByType(series, [ WATERFALL, HORIZONTAL_WATERFALL ]), pane\n        );\n\n        this.createLineChart(\n            filterSeriesByType(series, [ LINE, VERTICAL_LINE ]), pane\n        );\n    }\n\n    aggregateCategories(panes) {\n        const series = this.srcSeries || this.series;\n        const processedSeries = [];\n\n        for (let i = 0; i < series.length; i++) {\n            let currentSeries = series[i];\n            const categoryAxis = this.seriesCategoryAxis(currentSeries);\n            const axisPane = this.findPane(categoryAxis.options.pane);\n            const dateAxis = equalsIgnoreCase(categoryAxis.options.type, DATE);\n\n            if ((dateAxis || currentSeries.categoryField) && inArray(axisPane, panes)) {\n                currentSeries = this.aggregateSeries(currentSeries, categoryAxis);\n            } else if (isNumber(categoryAxis.options.min) || isNumber(categoryAxis.options.max)) {\n                currentSeries = this.filterSeries(currentSeries, categoryAxis);\n            }\n\n            processedSeries.push(currentSeries);\n        }\n\n        this.srcSeries = series;\n        this.series = processedSeries;\n    }\n\n    filterSeries(series, categoryAxis) {\n        const range = categoryAxis.totalRangeIndices();\n        const justified = categoryAxis.options.justified;\n        const outOfRangePoints = inArray(series.type, [ LINE, VERTICAL_LINE, AREA, VERTICAL_AREA ]);\n\n        range.min = isNumber(categoryAxis.options.min) ? Math.floor(range.min) : 0;\n        if (isNumber(categoryAxis.options.max)) {\n            range.max = justified ? Math.floor(range.max) + 1 : Math.ceil(range.max);\n        } else {\n            range.max = series.data.length;\n        }\n\n        const currentSeries = deepExtend({}, series);\n\n        if (outOfRangePoints) {\n            const minCategory = range.min - 1;\n            const srcCategories = categoryAxis.options.srcCategories || [];\n            if (minCategory >= 0 && minCategory < currentSeries.data.length) {\n                currentSeries._outOfRangeMinPoint = {\n                    item: currentSeries.data[minCategory],\n                    category: srcCategories[minCategory],\n                    categoryIx: -1\n                };\n            }\n\n            if (range.max < currentSeries.data.length) {\n                currentSeries._outOfRangeMaxPoint = {\n                    item: currentSeries.data[range.max],\n                    category: srcCategories[range.max],\n                    categoryIx: range.max - range.min\n                };\n            }\n        }\n\n        categoryAxis._seriesMax = Math.max(categoryAxis._seriesMax || 0, currentSeries.data.length);\n\n        currentSeries.data = (currentSeries.data || []).slice(range.min, range.max);\n\n        return currentSeries;\n    }\n\n    aggregateSeries(series, categoryAxis) {\n        const outOfRangePoints = inArray(series.type, [ LINE, VERTICAL_LINE, AREA, VERTICAL_AREA ]);\n        const { categories, srcCategories = categories, dataItems = [] } = categoryAxis.options;\n        const dateAxis = equalsIgnoreCase(categoryAxis.options.type, DATE);\n        const aggregatorSeries = deepExtend({}, series);\n        const result = deepExtend({}, series);\n        const srcData = series.data;\n        const srcPoints = [];\n        let outOfRangeMinIdx = MIN_VALUE;\n        let outOfRangeMaxIdx = MAX_VALUE;\n        let getFn = getField;\n        let outOfRangeMinCategory, outOfRangeMaxCategory;\n\n        if (dateAxis) {\n            getFn = getDateField;\n        }\n\n        for (let i = 0; i < srcData.length; i++) {\n            let category;\n            if (series.categoryField) {\n                category = getFn(series.categoryField, srcData[i], this.chartService.intl);\n            } else {\n                category = srcCategories[i];\n            }\n\n            if (defined(category)) {\n                const categoryIx = categoryAxis.categoryIndex(category);\n                if (0 <= categoryIx && categoryIx < categories.length) {\n                    srcPoints[categoryIx] = srcPoints[categoryIx] || [];\n                    srcPoints[categoryIx].push(i);\n                } else if (outOfRangePoints) {\n                    if (categoryIx < 0) {\n                        if (categoryIx === outOfRangeMinIdx) {\n                            outOfRangeMinCategory.points.push(i);\n                        } else if (categoryIx > outOfRangeMinIdx) {\n                            outOfRangeMinIdx = categoryIx;\n                            outOfRangeMinCategory = {\n                                category: category,\n                                points: [ i ]\n                            };\n                        }\n                    } else if (categoryIx >= categories.length) {\n                        if (categoryIx === outOfRangeMaxIdx) {\n                            outOfRangeMaxCategory.points.push(i);\n                        } else if (categoryIx < outOfRangeMaxIdx) {\n                            outOfRangeMaxIdx = categoryIx;\n                            outOfRangeMaxCategory = {\n                                category: category,\n                                points: [ i ]\n                            };\n                        }\n                    }\n                }\n            }\n        }\n\n        const aggregator = new SeriesAggregator(aggregatorSeries, SeriesBinder.current, DefaultAggregates.current);\n        const data = result.data = [];\n        for (let i = 0; i < categories.length; i++) {\n            data[i] = aggregator.aggregatePoints(\n                srcPoints[i], categories[i]\n            );\n            if (srcPoints[i]) {\n                dataItems[i] = data[i];\n            }\n        }\n\n        if (outOfRangeMinCategory && data.length) {\n            result._outOfRangeMinPoint = {\n                item: aggregator.aggregatePoints(\n                    outOfRangeMinCategory.points, outOfRangeMinCategory.category\n                ),\n                categoryIx: outOfRangeMinIdx,\n                category: outOfRangeMinCategory.category\n            };\n        }\n\n        if (outOfRangeMaxCategory && data.length) {\n            result._outOfRangeMaxPoint = {\n                item: aggregator.aggregatePoints(\n                    outOfRangeMaxCategory.points, outOfRangeMaxCategory.category\n                ),\n                categoryIx: outOfRangeMaxIdx,\n                category: outOfRangeMaxCategory.category\n            };\n        }\n        categoryAxis.options.dataItems = dataItems;\n\n        return result;\n    }\n\n    appendChart(chart, pane) {\n        const series = chart.options.series;\n        const categoryAxis = this.seriesCategoryAxis(series[0]);\n        const categories = categoryAxis.options.categories;\n        let categoriesToAdd = Math.max(0, categoriesCount(series) - categories.length);\n\n        while (categoriesToAdd--) {\n            categories.push(\"\");\n        }\n\n        this.valueAxisRangeTracker.update(chart.valueAxisRanges);\n\n        super.appendChart(chart, pane);\n    }\n\n    // TODO: Refactor, optionally use series.pane option\n    seriesPaneName(series) {\n        const options = this.options;\n        const axisName = series.axis;\n        const axisOptions = [].concat(options.valueAxis);\n        const axis = grep(axisOptions, function(a) { return a.name === axisName; })[0];\n        const panes = options.panes || [ {} ];\n        const defaultPaneName = (panes[0] || {}).name || \"default\";\n        const paneName = (axis || {}).pane || defaultPaneName;\n\n        return paneName;\n    }\n\n    seriesCategoryAxis(series) {\n        const axisName = series.categoryAxis;\n        const axis = axisName ? this.namedCategoryAxes[axisName] : this.categoryAxis;\n\n        if (!axis) {\n            throw new Error(\"Unable to locate category axis with name \" + axisName);\n        }\n\n        return axis;\n    }\n\n    stackableChartOptions(firstSeries, pane) {\n        const stack = firstSeries.stack;\n        const isStacked100 = stack && stack.type === \"100%\";\n        const clip = pane.options.clip;\n\n        return {\n            isStacked: stack,\n            isStacked100: isStacked100,\n            clip: clip\n        };\n    }\n\n    groupSeriesByCategoryAxis(series) {\n        const categoryAxes = [];\n        const unique = {};\n        for (let idx = 0; idx < series.length; idx++) {\n            const name = series[idx].categoryAxis || \"$$default$$\";\n            if (!unique.hasOwnProperty(name)) {\n                unique[name] = true;\n                categoryAxes.push(name);\n            }\n        }\n\n        const groups = [];\n        for (let axisIx = 0; axisIx < categoryAxes.length; axisIx++) {\n            const axis = categoryAxes[axisIx];\n            const axisSeries = groupSeries(series, axis, axisIx);\n            if (axisSeries.length === 0) {\n                continue;\n            }\n\n            groups.push(axisSeries);\n        }\n\n        return groups;\n    }\n\n    createBarChart(series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        const firstSeries = series[0];\n        const barChart = new BarChart(this, Object.assign({\n            series: series,\n            invertAxes: this.invertAxes,\n            gap: firstSeries.gap,\n            spacing: firstSeries.spacing\n        }, this.stackableChartOptions(firstSeries, pane)));\n\n        this.appendChart(barChart, pane);\n    }\n\n    createRangeBarChart(series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        const firstSeries = series[0];\n        const rangeColumnChart = new RangeBarChart(this, {\n            series: series,\n            invertAxes: this.invertAxes,\n            gap: firstSeries.gap,\n            spacing: firstSeries.spacing\n        });\n\n        this.appendChart(rangeColumnChart, pane);\n    }\n\n    createBulletChart(series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        const firstSeries = series[0];\n        const bulletChart = new BulletChart(this, {\n            series: series,\n            invertAxes: this.invertAxes,\n            gap: firstSeries.gap,\n            spacing: firstSeries.spacing,\n            clip: pane.options.clip\n        });\n\n        this.appendChart(bulletChart, pane);\n    }\n\n    createLineChart(series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        const firstSeries = series[0];\n        const lineChart = new LineChart(this, Object.assign({\n            invertAxes: this.invertAxes,\n            series: series\n        }, this.stackableChartOptions(firstSeries, pane)));\n\n        this.appendChart(lineChart, pane);\n    }\n\n    createAreaChart(series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        const firstSeries = series[0];\n        const areaChart = new AreaChart(this, Object.assign({\n            invertAxes: this.invertAxes,\n            series: series\n        }, this.stackableChartOptions(firstSeries, pane)));\n\n        this.appendChart(areaChart, pane);\n    }\n\n    createOHLCChart(series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        const firstSeries = series[0];\n        const chart = new OHLCChart(this, {\n            invertAxes: this.invertAxes,\n            gap: firstSeries.gap,\n            series: series,\n            spacing: firstSeries.spacing,\n            clip: pane.options.clip\n        });\n\n        this.appendChart(chart, pane);\n    }\n\n    createCandlestickChart(series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        const firstSeries = series[0];\n        const chart = new CandlestickChart(this, {\n            invertAxes: this.invertAxes,\n            gap: firstSeries.gap,\n            series: series,\n            spacing: firstSeries.spacing,\n            clip: pane.options.clip\n        });\n\n        this.appendChart(chart, pane);\n    }\n\n    createBoxPlotChart(series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        const firstSeries = series[0];\n        const chart = new BoxPlotChart(this, {\n            invertAxes: this.invertAxes,\n            gap: firstSeries.gap,\n            series: series,\n            spacing: firstSeries.spacing,\n            clip: pane.options.clip\n        });\n\n        this.appendChart(chart, pane);\n    }\n\n    createWaterfallChart(series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        const firstSeries = series[0];\n        const waterfallChart = new WaterfallChart(this, {\n            series: series,\n            invertAxes: this.invertAxes,\n            gap: firstSeries.gap,\n            spacing: firstSeries.spacing\n        });\n\n        this.appendChart(waterfallChart, pane);\n    }\n\n    axisRequiresRounding(categoryAxisName, categoryAxisIndex) {\n        const centeredSeries = filterSeriesByType(this.series, EQUALLY_SPACED_SERIES);\n\n        for (let seriesIx = 0; seriesIx < this.series.length; seriesIx++) {\n            const currentSeries = this.series[seriesIx];\n            if (currentSeries.type === LINE || currentSeries.type === AREA) {\n                const line = currentSeries.line;\n                if (line && line.style === STEP) {\n                    centeredSeries.push(currentSeries);\n                }\n            }\n        }\n\n        for (let seriesIx = 0; seriesIx < centeredSeries.length; seriesIx++) {\n            const seriesAxis = centeredSeries[seriesIx].categoryAxis || \"\";\n            if (seriesAxis === categoryAxisName || (!seriesAxis && categoryAxisIndex === 0)) {\n                return true;\n            }\n        }\n    }\n\n    aggregatedAxis(categoryAxisName, categoryAxisIndex) {\n        const series = this.series;\n\n        for (let seriesIx = 0; seriesIx < series.length; seriesIx++) {\n            const seriesAxis = series[seriesIx].categoryAxis || \"\";\n            if ((seriesAxis === categoryAxisName || (!seriesAxis && categoryAxisIndex === 0)) && series[seriesIx].categoryField) {\n                return true;\n            }\n        }\n    }\n\n    createCategoryAxesLabels() {\n        const axes = this.axes;\n        for (let i = 0; i < axes.length; i++) {\n            if (axes[i] instanceof CategoryAxis) {\n                axes[i].createLabels();\n            }\n        }\n    }\n\n    createCategoryAxes(panes) {\n        const invertAxes = this.invertAxes;\n        const definitions = [].concat(this.options.categoryAxis);\n        const axes = [];\n\n        for (let i = 0; i < definitions.length; i++) {\n            let axisOptions = definitions[i];\n            const axisPane = this.findPane(axisOptions.pane);\n\n            if (inArray(axisPane, panes)) {\n                const { name, categories = [] } = axisOptions;\n                axisOptions = deepExtend({\n                    vertical: invertAxes,\n                    axisCrossingValue: invertAxes ? MAX_VALUE : 0\n                }, axisOptions);\n\n                if (!defined(axisOptions.justified)) {\n                    axisOptions.justified = this.isJustified();\n                }\n\n                if (this.axisRequiresRounding(name, i)) {\n                    axisOptions.justified = false;\n                }\n\n                let categoryAxis;\n\n                if (isDateAxis(axisOptions, categories[0])) {\n                    categoryAxis = new DateCategoryAxis(axisOptions, this.chartService);\n                } else {\n                    categoryAxis = new CategoryAxis(axisOptions, this.chartService);\n                }\n\n                if (name) {\n                    if (this.namedCategoryAxes[name]) {\n                        throw new Error(`Category axis with name ${ name } is already defined`);\n                    }\n                    this.namedCategoryAxes[name] = categoryAxis;\n                }\n\n                categoryAxis.axisIndex = i;\n                axes.push(categoryAxis);\n                this.appendAxis(categoryAxis);\n            }\n        }\n\n        const primaryAxis = this.categoryAxis || axes[0];\n        this.categoryAxis = primaryAxis;\n\n        if (invertAxes) {\n            this.axisY = primaryAxis;\n        } else {\n            this.axisX = primaryAxis;\n        }\n    }\n\n    isJustified() {\n        const series = this.series;\n\n        for (let i = 0; i < series.length; i++) {\n            const currentSeries = series[i];\n            if (!inArray(currentSeries.type, [ AREA, VERTICAL_AREA ])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    createValueAxes(panes) {\n        const tracker = this.valueAxisRangeTracker;\n        const defaultRange = tracker.query();\n        const definitions = [].concat(this.options.valueAxis);\n        const invertAxes = this.invertAxes;\n        const baseOptions = { vertical: !invertAxes };\n        const axes = [];\n\n        if (this.stack100) {\n            baseOptions.roundToMajorUnit = false;\n            baseOptions.labels = { format: \"P0\" };\n        }\n\n        for (let i = 0; i < definitions.length; i++) {\n            const axisOptions = definitions[i];\n            const axisPane = this.findPane(axisOptions.pane);\n\n            if (inArray(axisPane, panes)) {\n                const name = axisOptions.name;\n                const defaultAxisRange = equalsIgnoreCase(axisOptions.type, LOGARITHMIC) ? { min: 0.1, max: 1 } : { min: 0, max: 1 };\n                const range = tracker.query(name) || defaultRange || defaultAxisRange;\n\n                if (i === 0 && range && defaultRange) {\n                    range.min = Math.min(range.min, defaultRange.min);\n                    range.max = Math.max(range.max, defaultRange.max);\n                }\n\n                let axisType;\n                if (equalsIgnoreCase(axisOptions.type, LOGARITHMIC)) {\n                    axisType = LogarithmicAxis;\n                } else {\n                    axisType = NumericAxis;\n                }\n\n                const valueAxis = new axisType(range.min, range.max,\n                    deepExtend({}, baseOptions, axisOptions),\n                    this.chartService\n                );\n\n                if (name) {\n                    if (this.namedValueAxes[name]) {\n                        throw new Error(`Value axis with name ${ name } is already defined`);\n                    }\n                    this.namedValueAxes[name] = valueAxis;\n                }\n                valueAxis.axisIndex = i;\n\n                axes.push(valueAxis);\n                this.appendAxis(valueAxis);\n            }\n        }\n\n        const primaryAxis = this.valueAxis || axes[0];\n        this.valueAxis = primaryAxis;\n\n        if (invertAxes) {\n            this.axisX = primaryAxis;\n        } else {\n            this.axisY = primaryAxis;\n        }\n    }\n\n    _dispatchEvent(chart, e, eventType) {\n        const coords = chart._eventCoordinates(e);\n        const point = new Point(coords.x, coords.y);\n        const pane = this.pointPane(point);\n        const categories = [];\n        const values = [];\n\n        if (!pane) {\n            return;\n        }\n\n        const allAxes = pane.axes;\n        for (let i = 0; i < allAxes.length; i++) {\n            const axis = allAxes[i];\n            if (axis.getValue) {\n                appendIfNotNull(values, axis.getValue(point));\n            } else {\n                appendIfNotNull(categories, axis.getCategory(point));\n            }\n        }\n\n        if (categories.length === 0) {\n            appendIfNotNull(categories, this.categoryAxis.getCategory(point));\n        }\n\n        if (categories.length > 0 && values.length > 0) {\n            chart.trigger(eventType, {\n                element: eventElement(e),\n                originalEvent: e,\n                category: singleItemOrArray(categories),\n                value: singleItemOrArray(values)\n            });\n        }\n    }\n\n    pointPane(point) {\n        const panes = this.panes;\n\n        for (let i = 0; i < panes.length; i++) {\n            const currentPane = panes[i];\n            if (currentPane.contentBox.containsPoint(point)) {\n                return currentPane;\n            }\n        }\n    }\n\n    updateAxisOptions(axis, options) {\n        const axesOptions = axis instanceof CategoryAxis ? [].concat(this.options.categoryAxis) : [].concat(this.options.valueAxis);\n        deepExtend(axesOptions[axis.axisIndex], options);\n    }\n}\n\nfunction groupSeries(series, axis, axisIx) {\n    return grep(series, function(s) {\n        return (axisIx === 0 && !s.categoryAxis) || (s.categoryAxis === axis);\n    });\n}\n\nsetDefaultOptions(CategoricalPlotArea, {\n    categoryAxis: {\n        categories: []\n    },\n    valueAxis: {}\n});\n\ndeepExtend(CategoricalPlotArea.prototype, PlotAreaEventsMixin);\n\nexport default CategoricalPlotArea;","import { Class } from '../common';\n\nclass Highlight extends Class {\n    constructor() {\n        super();\n\n        this._points = [];\n    }\n\n    destroy() {\n        this._points = [];\n    }\n\n    show(points) {\n        const arrayPoints = [].concat(points);\n        this.hide();\n\n        for (let i = 0; i < arrayPoints.length; i++) {\n            const point = arrayPoints[i];\n            if (point && point.toggleHighlight && point.hasHighlight()) {\n                this.togglePointHighlight(point, true);\n                this._points.push(point);\n            }\n        }\n    }\n\n    togglePointHighlight(point, show) {\n        const toggleHandler = (point.options.highlight || {}).toggle;\n        if (toggleHandler) {\n            const eventArgs = {\n                category: point.category,\n                series: point.series,\n                dataItem: point.dataItem,\n                value: point.value,\n                stackValue: point.stackValue,\n                preventDefault: preventDefault,\n                visual: point.highlightVisual(),\n                show: show\n            };\n            toggleHandler(eventArgs);\n            if (!eventArgs._defaultPrevented) {\n                point.toggleHighlight(show);\n            }\n        } else {\n            point.toggleHighlight(show);\n        }\n    }\n\n    hide() {\n        const points = this._points;\n        while (points.length) {\n            this.togglePointHighlight(points.pop(), false);\n        }\n    }\n\n    isHighlighted(element) {\n        const points = this._points;\n\n        for (let i = 0; i < points.length; i++) {\n            const point = points[i];\n            if (element === point) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nfunction preventDefault() {\n    this._defaultPrevented = true;\n}\n\nexport default Highlight;","export default function acceptKey(e, mouseKey) {\n    const key = (mouseKey || \"\").toLowerCase();\n    const event = e.event;\n    const accept = (key === \"none\" && !(event.ctrlKey || event.shiftKey || event.altKey)) || event[key + \"Key\"];\n\n    return accept;\n}","export default function toChartAxisRanges(axisRanges) {\n    const ranges = {};\n    for (let idx = 0; idx < axisRanges.length; idx++) {\n        const axisRange = axisRanges[idx];\n        if (axisRange.axis.options.name) {\n            ranges[axisRange.axis.options.name] = {\n                min: axisRange.range.min,\n                max: axisRange.range.max\n            };\n        }\n    }\n    return ranges;\n}","import acceptKey from './accept-key';\nimport toChartAxisRanges from './to-chart-axis-ranges';\n\nimport { X, Y } from '../../common/constants';\nimport { Class, deepExtend } from '../../common';\n\nclass Pannable extends Class {\n    constructor(plotArea, options) {\n        super();\n\n        this.plotArea = plotArea;\n        this.options = deepExtend({}, this.options, options);\n    }\n\n    start(e) {\n        this._active = acceptKey(e, this.options.key);\n        return this._active;\n    }\n\n    move(e) {\n        if (this._active) {\n            const axisRanges = this.axisRanges = this._panAxes(e, X).concat(this._panAxes(e, Y));\n            if (axisRanges.length) {\n                this.axisRanges = axisRanges;\n                return toChartAxisRanges(axisRanges);\n            }\n        }\n    }\n\n    end() {\n        const active = this._active;\n        this._active = false;\n\n        return active;\n    }\n\n    pan() {\n        const { plotArea, axisRanges } = this;\n        if (axisRanges.length) {\n            for (let idx = 0; idx < axisRanges.length; idx++) {\n                const range = axisRanges[idx];\n                plotArea.updateAxisOptions(range.axis, range.range);\n            }\n            plotArea.redraw(plotArea.panes);\n        }\n    }\n\n    destroy() {\n        delete this.plotArea;\n    }\n\n    _panAxes(e, position) {\n        const plotArea = this.plotArea;\n        const delta = -e[position].delta;\n        const lock = (this.options.lock || \"\").toLowerCase();\n        const updatedAxes = [];\n\n        if (delta !== 0 && (lock || \"\").toLowerCase() !== position) {\n            const axes = plotArea.axes;\n            for (let idx = 0; idx < axes.length; idx++) {\n                const axis = axes[idx];\n\n                if (position === X && !axis.options.vertical || position === Y && axis.options.vertical) {\n                    const range = axis.pan(delta);\n\n                    if (range) {\n                        range.limitRange = true;\n                        updatedAxes.push({\n                            axis: axis,\n                            range: range\n                        });\n                    }\n                }\n            }\n        }\n\n        return updatedAxes;\n    }\n}\n\nPannable.prototype.options = {\n    key: \"none\",\n    lock: \"none\"\n};\n\nexport default Pannable;","import acceptKey from './accept-key';\nimport toChartAxisRanges from './to-chart-axis-ranges';\n\nimport { X, Y } from '../../common/constants';\nimport { Class, deepExtend, elementStyles, elementOffset } from '../../common';\n\nclass ZoomSelection extends Class {\n    constructor(chart, options) {\n        super();\n\n        this.chart = chart;\n        this.options = deepExtend({}, this.options, options);\n        this.createElement();\n    }\n\n    createElement() {\n        const marquee = this._marquee = document.createElement(\"div\");\n        marquee.className = \"k-marquee\";\n        const marqueeColor = document.createElement(\"div\");\n        marqueeColor.className = \"k-marquee-color\";\n        marquee.appendChild(marqueeColor);\n    }\n\n    removeElement() {\n        if (this._marquee.parentNode) {\n            this._marquee.parentNode.removeChild(this._marquee);\n        }\n    }\n\n    setStyles(styles) {\n        elementStyles(this._marquee, styles);\n    }\n\n    start(e) {\n        if (acceptKey(e, this.options.key)) {\n            const chart = this.chart;\n            const point = chart._eventCoordinates(e);\n            const zoomPane = this._zoomPane = chart._plotArea.paneByPoint(point);\n            if (zoomPane && zoomPane.clipBox()) {\n                const clipBox = zoomPane.clipBox().clone();\n                const offset = this._elementOffset();\n\n                clipBox.translate(offset.left, offset.top);\n                this._zoomPaneClipBox = clipBox;\n\n                document.body.appendChild(this._marquee);\n                this.setStyles({\n                    left: e.pageX + 1,\n                    top: e.pageY + 1,\n                    width: 0,\n                    height: 0\n                });\n\n                return true;\n            }\n        }\n        return false;\n    }\n\n    _elementOffset() {\n        const chartElement = this.chart.element;\n        const { paddingLeft, paddingTop } = elementStyles(chartElement, [ \"paddingLeft\", \"paddingTop\" ]);\n        const offset = elementOffset(chartElement);\n\n        return {\n            left: paddingLeft + offset.left,\n            top: paddingTop + offset.top\n        };\n    }\n\n    move(e) {\n        const zoomPane = this._zoomPane;\n        if (zoomPane) {\n            this.setStyles(this._selectionPosition(e));\n        }\n    }\n\n    end(e) {\n        const zoomPane = this._zoomPane;\n        if (zoomPane) {\n            const elementOffset = this._elementOffset();\n            const selectionPosition = this._selectionPosition(e);\n            selectionPosition.left -= elementOffset.left;\n            selectionPosition.top -= elementOffset.top;\n\n            const start = { x: selectionPosition.left, y: selectionPosition.top };\n            const end = { x: selectionPosition.left + selectionPosition.width, y: selectionPosition.top + selectionPosition.height };\n            this._updateAxisRanges(start, end);\n\n            this.removeElement();\n            delete this._zoomPane;\n\n            return toChartAxisRanges(this.axisRanges);\n        }\n    }\n\n    zoom() {\n        const axisRanges = this.axisRanges;\n        if (axisRanges && axisRanges.length) {\n            const plotArea = this.chart._plotArea;\n            for (let idx = 0; idx < axisRanges.length; idx++) {\n                const axisRange = axisRanges[idx];\n                plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n            }\n            plotArea.redraw(plotArea.panes);\n        }\n    }\n\n    destroy() {\n        this.removeElement();\n        delete this._marquee;\n        delete this.chart;\n    }\n\n    _updateAxisRanges(start, end) {\n        const lock = (this.options.lock || \"\").toLowerCase();\n        const axisRanges = [];\n\n        const axes = this._zoomPane.axes;\n        for (let idx = 0; idx < axes.length; idx++) {\n            const axis = axes[idx];\n            const vertical = axis.options.vertical;\n            if (!(lock === X && !vertical) && !(lock === Y && vertical)) {\n                const range = axis.pointsRange(start, end);\n                if (range) {\n                    axisRanges.push({\n                        axis: axis,\n                        range: range\n                    });\n                }\n            }\n        }\n\n        this.axisRanges = axisRanges;\n    }\n\n    _selectionPosition(e) {\n        const clipBox = this._zoomPaneClipBox;\n        const startLocation = {\n            x: e.x.startLocation,\n            y: e.y.startLocation\n        };\n        const { x: { location: pageX }, y: { location: pageY } } = e;\n        const lock = (this.options.lock || \"\").toLowerCase();\n        let left = Math.min(startLocation.x, pageX);\n        let top = Math.min(startLocation.y, pageY);\n        let width = Math.abs(startLocation.x - pageX);\n        let height = Math.abs(startLocation.y - pageY);\n\n        if (lock === X) {\n            left = clipBox.x1;\n            width = clipBox.width();\n        }\n        if (lock === Y) {\n            top = clipBox.y1;\n            height = clipBox.height();\n        }\n\n        if (pageX > clipBox.x2) {\n            width = clipBox.x2 - startLocation.x;\n        }\n\n        if (pageX < clipBox.x1) {\n            width = startLocation.x - clipBox.x1;\n        }\n\n        if (pageY > clipBox.y2) {\n            height = clipBox.y2 - startLocation.y;\n        }\n\n        if (pageY < clipBox.y1) {\n            height = startLocation.y - clipBox.y1;\n        }\n\n        return {\n            left: Math.max(left, clipBox.x1),\n            top: Math.max(top, clipBox.y1),\n            width: width,\n            height: height\n        };\n    }\n}\n\nZoomSelection.prototype.options = {\n    key: \"shift\",\n    lock: \"none\"\n};\n\nexport default ZoomSelection;","\nimport toChartAxisRanges from './to-chart-axis-ranges';\n\nimport { X, Y } from '../../common/constants';\nimport { Class, deepExtend } from '../../common';\n\nclass MousewheelZoom extends Class {\n    constructor(chart, options) {\n        super();\n\n        this.chart = chart;\n        this.options = deepExtend({}, this.options, options);\n    }\n\n    updateRanges(delta) {\n        const lock = (this.options.lock || \"\").toLowerCase();\n        const axisRanges = [];\n        const axes = this.chart._plotArea.axes;\n\n        for (let idx = 0; idx < axes.length; idx++) {\n            const axis = axes[idx];\n            const vertical = axis.options.vertical;\n\n            if (!(lock === X && !vertical) && !(lock === Y && vertical)) {\n                const range = axis.zoomRange(-delta);\n\n                if (range) {\n                    axisRanges.push({\n                        axis: axis,\n                        range: range\n                    });\n                }\n            }\n        }\n\n        this.axisRanges = axisRanges;\n        return toChartAxisRanges(axisRanges);\n    }\n\n    zoom() {\n        const axisRanges = this.axisRanges;\n        if (axisRanges && axisRanges.length) {\n            const plotArea = this.chart._plotArea;\n            for (let idx = 0; idx < axisRanges.length; idx++) {\n                const axisRange = axisRanges[idx];\n                plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n            }\n            plotArea.redraw(plotArea.panes);\n        }\n    }\n\n    destroy() {\n        delete this.chart;\n    }\n}\n\nexport default MousewheelZoom;","import { drawing as draw } from '@progress/kendo-drawing';\n\nimport { ChartElement, Box, rectToBox } from '../../core';\n\nclass LegendLayout extends ChartElement {\n\n    constructor(options, chartService) {\n        super(options);\n\n        this.chartService = chartService;\n    }\n\n    render() {\n        const { children, options } = this;\n        const vertical = options.vertical;\n\n        this.visual = new draw.Layout(null, {\n            spacing: vertical ? 0 : options.spacing,\n            lineSpacing: vertical ? options.spacing : 0,\n            orientation: vertical ? \"vertical\" : \"horizontal\"\n        });\n\n        for (let idx = 0; idx < children.length; idx++) {\n            let legendItem = children[idx];\n            legendItem.reflow(new Box());\n            legendItem.renderVisual();\n        }\n    }\n\n    reflow(box) {\n        this.visual.rect(box.toRect());\n        this.visual.reflow();\n        const bbox = this.visual.clippedBBox();\n\n        if (bbox) {\n            this.box = rectToBox(bbox);\n        } else {\n            this.box = new Box();\n        }\n    }\n\n    renderVisual() {\n        this.addVisual();\n    }\n\n    createVisual() {}\n}\n\nexport default LegendLayout;","import { drawing as draw } from '@progress/kendo-drawing';\n\nimport { BoxElement, FloatElement, ShapeElement, TextBox } from '../../core';\nimport { LEGEND_ITEM_CLICK, LEGEND_ITEM_HOVER } from '../constants';\nimport { CENTER, WHITE } from '../../common/constants';\nimport { deepExtend, eventElement } from '../../common';\n\nclass LegendItem extends BoxElement {\n    constructor(options) {\n        super(options);\n\n        this.createContainer();\n        this.createMarker();\n        this.createLabel();\n    }\n\n    createContainer() {\n        this.container = new FloatElement({ vertical: false, wrap: false, align: CENTER });\n        this.append(this.container);\n    }\n\n    createMarker() {\n        this.container.append(new ShapeElement(this.markerOptions()));\n    }\n\n    markerOptions() {\n        const options = this.options;\n        const markerColor = options.markerColor;\n        return deepExtend({}, options.markers, {\n            background: markerColor,\n            border: {\n                color: markerColor\n            }\n        });\n    }\n\n    createLabel() {\n        const options = this.options;\n        const labelOptions = deepExtend({}, options.labels);\n\n        this.container.append(new TextBox(options.text, labelOptions));\n    }\n\n    renderComplete() {\n        super.renderComplete();\n\n        const cursor = this.options.cursor || {};\n        const eventSink = this._itemOverlay = draw.Path.fromRect(this.container.box.toRect(), {\n            fill: {\n                color: WHITE,\n                opacity: 0\n            },\n            stroke: null,\n            cursor: cursor.style || cursor\n        });\n\n        this.appendVisual(eventSink);\n    }\n\n    click(widget, e) {\n        const args = this.eventArgs(e);\n\n        if (!widget.trigger(LEGEND_ITEM_CLICK, args)) {\n            e.preventDefault();\n        }\n    }\n\n    hover(widget, e) {\n        const args = this.eventArgs(e);\n\n        if (!widget.trigger(LEGEND_ITEM_HOVER, args)) {\n            e.preventDefault();\n            widget._legendItemHover(args.seriesIndex, args.pointIndex);\n        }\n\n        // Don't trigger point hover for legend items\n        return true;\n    }\n\n    leave(widget) {\n        widget._unsetActivePoint();\n    }\n\n    eventArgs(e) {\n        const options = this.options;\n\n        return {\n            element: eventElement(e),\n            text: options.text,\n            series: options.series,\n            seriesIndex: options.series.index,\n            pointIndex: options.pointIndex\n        };\n    }\n\n    renderVisual() {\n        const options = this.options;\n        const customVisual = options.visual;\n\n        if (customVisual) {\n            this.visual = customVisual({\n                active: options.active,\n                series: options.series,\n                sender: this.getSender(),\n                pointIndex: options.pointIndex,\n                options: {\n                    markers: this.markerOptions(),\n                    labels: options.labels\n                },\n                createVisual: () => {\n                    this.createVisual();\n                    this.renderChildren();\n                    this.renderComplete();\n\n                    const defaultVisual = this.visual;\n\n                    delete this.visual;\n\n                    return defaultVisual;\n                }\n            });\n            this.addVisual();\n        } else {\n            super.renderVisual();\n        }\n    }\n}\n\nexport default LegendItem;\n","\nimport { ChartElement, BoxElement, Box } from '../../core';\nimport LegendLayout from './legend-layout';\nimport LegendItem from './legend-item';\n\nimport { TOP, RIGHT, BOTTOM, LEFT, CENTER, X, Y, BLACK } from '../../common/constants';\nimport { deepExtend, defined, getSpacing, inArray, setDefaultOptions } from '../../common';\n\nconst HORIZONTAL = \"horizontal\";\nconst POINTER = \"pointer\";\nconst CUSTOM = \"custom\";\n\nclass Legend extends ChartElement {\n    constructor(options, chartService) {\n        super(options);\n\n        this.chartService = chartService;\n\n        if (!inArray(this.options.position, [ TOP, RIGHT, BOTTOM, LEFT, CUSTOM ])) {\n            this.options.position = RIGHT;\n        }\n\n        this.createContainer();\n\n        this.createItems();\n    }\n\n    createContainer() {\n        const options = this.options;\n        const { position, align: userAlign } = options;\n        let align = position;\n        let vAlign = CENTER;\n\n        if (position === CUSTOM) {\n            align = LEFT;\n        } else if (inArray(position, [ TOP, BOTTOM ])) {\n            if (userAlign === \"start\") {\n                align = LEFT;\n            } else if (userAlign === \"end\") {\n                align = RIGHT;\n            } else {\n                align = CENTER;\n            }\n            vAlign = position;\n        } else if (userAlign) {\n            if (userAlign === \"start\") {\n                vAlign = TOP;\n            } else if (userAlign === \"end\") {\n                vAlign = BOTTOM;\n            }\n        }\n\n        this.container = new BoxElement({\n            margin: options.margin,\n            padding: options.padding,\n            background: options.background,\n            border: options.border,\n            vAlign: vAlign,\n            align: align,\n            zIndex: options.zIndex,\n            shrinkToFit: true\n        });\n\n        this.append(this.container);\n    }\n\n    createItems() {\n        const chartService = this.getService();\n        const options = this.options;\n        const vertical = this.isVertical();\n        const innerElement = new LegendLayout({\n            vertical: vertical,\n            spacing: options.spacing\n        }, chartService);\n        let items = options.items;\n\n        if (options.reverse) {\n            items = items.slice(0).reverse();\n        }\n\n        const count = items.length;\n\n        for (let i = 0; i < count; i++) {\n            let item = items[i];\n\n            innerElement.append(new LegendItem(deepExtend({}, {\n                markers: options.markers,\n                labels: options.labels\n            }, options.item, item)));\n        }\n\n        innerElement.render();\n\n        this.container.append(innerElement);\n    }\n\n    isVertical() {\n        const { orientation, position } = this.options;\n        const vertical = (position === CUSTOM && orientation !== HORIZONTAL) ||\n               (defined(orientation) ? orientation !== HORIZONTAL : inArray(position, [ LEFT, RIGHT ]));\n\n        return vertical;\n    }\n\n    hasItems() {\n        return this.container.children[0].children.length > 0;\n    }\n\n    reflow(targetBox) {\n        const options = this.options;\n        const legendBox = targetBox.clone();\n\n        if (!this.hasItems()) {\n            this.box = legendBox;\n            return;\n        }\n\n        if (options.position === CUSTOM) {\n            this.containerCustomReflow(legendBox);\n            this.box = legendBox;\n        } else {\n            this.containerReflow(legendBox);\n        }\n    }\n\n    containerReflow(targetBox) {\n        const { options, container } = this;\n        const { position, width, height } = options;\n        const pos = position === TOP || position === BOTTOM ? X : Y;\n        const vertical = this.isVertical();\n        const alignTarget = targetBox.clone();\n        let containerBox = targetBox.clone();\n\n        if (position === LEFT || position === RIGHT) {\n            containerBox.y1 = alignTarget.y1 = 0;\n        }\n\n        if (vertical && height) {\n            containerBox.y2 = containerBox.y1 + height;\n            containerBox.align(alignTarget, Y, container.options.vAlign);\n        } else if (!vertical && width) {\n            containerBox.x2 = containerBox.x1 + width;\n            containerBox.align(alignTarget, X, container.options.align);\n        }\n\n        container.reflow(containerBox);\n        containerBox = container.box;\n\n        const box = containerBox.clone();\n\n        if (options.offsetX || options.offsetY) {\n            containerBox.translate(options.offsetX, options.offsetY);\n            this.container.reflow(containerBox);\n        }\n\n        box[pos + 1] = targetBox[pos + 1];\n        box[pos + 2] = targetBox[pos + 2];\n\n        this.box = box;\n    }\n\n    containerCustomReflow(targetBox) {\n        const { options, container } = this;\n        const { offsetX, offsetY, width, height } = options;\n        const vertical = this.isVertical();\n        let containerBox = targetBox.clone();\n\n        if (vertical && height) {\n            containerBox.y2 = containerBox.y1 + height;\n        } else if (!vertical && width) {\n            containerBox.x2 = containerBox.x1 + width;\n        }\n        container.reflow(containerBox);\n        containerBox = container.box;\n\n        container.reflow(new Box(\n            offsetX, offsetY,\n            offsetX + containerBox.width(), offsetY + containerBox.height()\n        ));\n    }\n\n    renderVisual() {\n        if (this.hasItems()) {\n            super.renderVisual();\n        }\n    }\n}\n\nsetDefaultOptions(Legend, {\n    position: RIGHT,\n    items: [],\n    labels: {\n        margin: {\n            left: 6\n        }\n    },\n    offsetX: 0,\n    offsetY: 0,\n    margin: getSpacing(5),\n    padding: getSpacing(5),\n    border: {\n        color: BLACK,\n        width: 0\n    },\n    item: {\n        cursor: POINTER\n    },\n    spacing: 6,\n    background: \"\",\n    zIndex: 1,\n    markers: {\n        border: {\n            width: 0\n        },\n        width: 15,\n        height: 3,\n        type: \"rect\",\n        align: LEFT,\n        vAlign: CENTER\n    }\n});\n\nexport default Legend;","import filterSeriesByType from '../utils/filter-series-by-type';\nimport { Class } from '../../common';\n\nclass PlotAreaFactory extends Class {\n\n    constructor() {\n        super();\n\n        this._registry = [];\n    }\n\n    register(type, seriesTypes) {\n        this._registry.push({\n            type: type,\n            seriesTypes: seriesTypes\n        });\n    }\n\n    create(srcSeries, options, chartService) {\n        const registry = this._registry;\n        let match = registry[0];\n        let series;\n\n        for (let idx = 0; idx < registry.length; idx++) {\n            const entry = registry[idx];\n            series = filterSeriesByType(srcSeries, entry.seriesTypes);\n\n            if (series.length > 0) {\n                match = entry;\n                break;\n            }\n        }\n\n        return new match.type(series, options, chartService);\n    }\n}\n\nPlotAreaFactory.current = new PlotAreaFactory();\n\nexport default PlotAreaFactory;","import { DomEventsBuilder } from '../services';\n\nimport { DateCategoryAxis, Point } from '../core';\n\nimport { MOUSEWHEEL_DELAY, MOUSEWHEEL, SELECT_START, SELECT, SELECT_END } from './constants';\n\nimport { LEFT, RIGHT, MIN_VALUE, MAX_VALUE } from '../common/constants';\nimport { addClass, Class, removeClass, deepExtend, elementStyles, eventElement, setDefaultOptions, limitValue, round, bindEvents, unbindEvents, mousewheelDelta, hasClasses } from '../common';\nimport { parseDate } from '../date-utils';\n\nconst ZOOM_ACCELERATION = 3;\nconst SELECTOR_HEIGHT_ADJUST = 0.1;\n\nfunction createDiv(className) {\n    const element = document.createElement(\"div\");\n    if (className) {\n        element.className = className;\n    }\n\n    return element;\n}\n\nfunction closestHandle(element) {\n    let current = element;\n    while (current && !hasClasses(current, \"k-handle\")) {\n        current = current.parentNode;\n    }\n\n    return current;\n}\n\nclass Selection extends Class {\n    constructor(chart, categoryAxis, options, observer) {\n        super();\n\n        const chartElement = chart.element;\n        const valueAxis = this.getValueAxis(categoryAxis);\n        this.options = deepExtend({}, this.options, options);\n        this.chart = chart;\n        this.observer = observer;\n        this.chartElement = chartElement;\n        this.categoryAxis = categoryAxis;\n        this._dateAxis = this.categoryAxis instanceof DateCategoryAxis;\n        this.valueAxis = valueAxis;\n\n        this.initOptions();\n\n        if (this.options.visible) {\n            this.createElements();\n\n            this.set(this._index(this.options.from), this._index(this.options.to));\n\n            this.bindEvents();\n        }\n    }\n\n    createElements() {\n        const options = this.options;\n        const wrapper = this.wrapper = createDiv(\"k-selector\");\n        elementStyles(wrapper, {\n            top: options.offset.top,\n            left: options.offset.left,\n            width: options.width,\n            height: options.height\n        });\n        const selection = this.selection = createDiv(\"k-selection\");\n        this.leftMask = createDiv(\"k-mask\");\n        this.rightMask = createDiv(\"k-mask\");\n\n        wrapper.appendChild(this.leftMask);\n        wrapper.appendChild(this.rightMask);\n        wrapper.appendChild(selection);\n\n        selection.appendChild(createDiv(\"k-selection-bg\"));\n\n        const leftHandle = this.leftHandle = createDiv(\"k-handle k-left-handle\");\n        const rightHandle = this.rightHandle = createDiv(\"k-handle k-right-handle\");\n        leftHandle.appendChild(createDiv());\n        rightHandle.appendChild(createDiv());\n\n        selection.appendChild(leftHandle);\n        selection.appendChild(rightHandle);\n\n        this.chartElement.appendChild(wrapper);\n        const selectionStyles = elementStyles(selection, [ \"borderLeftWidth\", \"borderRightWidth\", \"height\" ]);\n        const leftHandleHeight = elementStyles(leftHandle, \"height\").height;\n        const rightHandleHeight = elementStyles(rightHandle, \"height\").height;\n\n        options.selection = {\n            border: {\n                left: selectionStyles.borderLeftWidth,\n                right: selectionStyles.borderRightWidth\n            }\n        };\n\n        elementStyles(leftHandle, {\n            top: (selectionStyles.height - leftHandleHeight) / 2\n        });\n\n        elementStyles(rightHandle, {\n            top: (selectionStyles.height - rightHandleHeight) / 2\n        });\n\n        wrapper.style.cssText = wrapper.style.cssText;\n    }\n\n    bindEvents() {\n        this._mousewheelHandler = this.options.mousewheel !== false ? this._mousewheel.bind(this) : stopPropagation;\n\n        bindEvents(this.wrapper, {\n            [ MOUSEWHEEL ]: this._mousewheelHandler\n        });\n\n        this._domEvents = DomEventsBuilder.create(this.wrapper, {\n            start: this._start.bind(this),\n            move: this._move.bind(this),\n            end: this._end.bind(this),\n            tap: this._tap.bind(this),\n            press: this._press.bind(this),\n            gesturestart: this._gesturestart.bind(this),\n            gesturechange: this._gesturechange.bind(this),\n            gestureend: this._gestureend.bind(this)\n        });\n    }\n\n    initOptions() {\n        const { options, categoryAxis, valueAxis } = this;\n        const categoryAxisLineBox = categoryAxis.lineBox();\n        const valueAxisLineBox = valueAxis.lineBox();\n        const intlService = this.chart.chartService.intl;\n\n        if (this._dateAxis) {\n            deepExtend(options, {\n                min: parseDate(intlService, options.min),\n                max: parseDate(intlService, options.max),\n                from: parseDate(intlService, options.from),\n                to: parseDate(intlService, options.to)\n            });\n        }\n\n        const { paddingLeft, paddingTop } = elementStyles(this.chartElement, [ \"paddingLeft\", \"paddingTop\" ]);\n\n        this.options = deepExtend({}, {\n            width: categoryAxisLineBox.width(),\n            height: valueAxisLineBox.height() + SELECTOR_HEIGHT_ADJUST, //workaround for sub-pixel hover on the paths in chrome\n            padding: {\n                left: paddingLeft,\n                top: paddingTop\n            },\n            offset: {\n                left: valueAxisLineBox.x2 + paddingLeft,\n                top: valueAxisLineBox.y1 + paddingTop\n            },\n            from: options.min,\n            to: options.max\n        }, options);\n    }\n\n    destroy() {\n        if (this._domEvents) {\n            this._domEvents.destroy();\n            delete this._domEvents;\n        }\n\n        clearTimeout(this._mwTimeout);\n        this._state = null;\n\n        if (this.wrapper) {\n            unbindEvents(this.wrapper, {\n                [ MOUSEWHEEL ]: this._mousewheelHandler\n            });\n            this.chartElement.removeChild(this.wrapper);\n        }\n    }\n\n    _rangeEventArgs(range) {\n\n        return {\n            axis: this.categoryAxis.options,\n            from: this._value(range.from),\n            to: this._value(range.to)\n        };\n    }\n\n    _start(e) {\n        const options = this.options;\n        const target = eventElement(e);\n\n        if (this._state || !target) {\n            return;\n        }\n\n        this.chart._unsetActivePoint();\n        this._state = {\n            moveTarget: closestHandle(target) || target,\n            startLocation: e.x ? e.x.location : 0,\n            range: {\n                from: this._index(options.from),\n                to: this._index(options.to)\n            }\n        };\n\n        const args = this._rangeEventArgs({\n            from: this._index(options.from),\n            to: this._index(options.to)\n        });\n\n        if (this.trigger(SELECT_START, args)) {\n            this._state = null;\n        }\n    }\n\n    _press(e) {\n        let handle;\n        if (this._state) {\n            handle = this._state.moveTarget;\n        } else {\n            handle = closestHandle(eventElement(e));\n        }\n        if (handle) {\n            addClass(handle, \"k-handle-active\");\n        }\n    }\n\n    _move(e) {\n        if (!this._state) {\n            return;\n        }\n\n        const { _state: state, options, categoryAxis: { options: { categories } } } = this;\n        const { range, moveTarget: target } = state;\n        const from = this._index(options.from);\n        const to = this._index(options.to);\n        const min = this._index(options.min);\n        const max = this._index(options.max);\n        const delta = state.startLocation - e.x.location;\n        const oldRange = { from: range.from, to: range.to };\n        const span = range.to - range.from;\n        const scale = elementStyles(this.wrapper, \"width\").width / (categories.length - 1);\n        const offset = Math.round(delta / scale);\n\n        if (!target) {\n            return;\n        }\n\n        if (hasClasses(target, \"k-selection k-selection-bg\")) {\n            range.from = Math.min(\n                Math.max(min, from - offset),\n                max - span\n            );\n            range.to = Math.min(\n                range.from + span,\n                max\n            );\n        } else if (hasClasses(target, \"k-left-handle\")) {\n            range.from = Math.min(\n                Math.max(min, from - offset),\n                max - 1\n            );\n            range.to = Math.max(range.from + 1, range.to);\n        } else if (hasClasses(target, \"k-right-handle\")) {\n            range.to = Math.min(\n                Math.max(min + 1, to - offset),\n                max\n            );\n            range.from = Math.min(range.to - 1, range.from);\n        }\n\n        if (range.from !== oldRange.from || range.to !== oldRange.to) {\n            this.move(range.from, range.to);\n            this.trigger(SELECT, this._rangeEventArgs(range));\n        }\n    }\n\n    _end() {\n        if (this._state) {\n            const moveTarget = this._state.moveTarget;\n            if (moveTarget) {\n                removeClass(moveTarget, \"k-handle-active\");\n            }\n\n            const range = this._state.range;\n            this.set(range.from, range.to);\n            this.trigger(SELECT_END, this._rangeEventArgs(range));\n\n            delete this._state;\n        }\n    }\n\n    _tap(e) {\n        const { options, categoryAxis } = this;\n        const coords = this.chart._eventCoordinates(e);\n        const categoryIx = categoryAxis.pointCategoryIndex(new Point(coords.x, categoryAxis.box.y1));\n        const from = this._index(options.from);\n        const to = this._index(options.to);\n        const min = this._index(options.min);\n        const max = this._index(options.max);\n        const span = to - from;\n        const mid = from + span / 2;\n        const range = {};\n        const rightClick = e.event.which === 3;\n        let offset = Math.round(mid - categoryIx);\n\n        if (this._state || rightClick) {\n            return;\n        }\n\n\n        this.chart._unsetActivePoint();\n\n        if (!categoryAxis.options.justified) {\n            offset--;\n        }\n\n        range.from = Math.min(\n            Math.max(min, from - offset),\n            max - span\n        );\n\n        range.to = Math.min(range.from + span, max);\n\n        this._start(e);\n        if (this._state) {\n            this._state.range = range;\n            this.trigger(SELECT, this._rangeEventArgs(range));\n            this._end();\n        }\n    }\n\n    _mousewheel(e) {\n        let delta = mousewheelDelta(e);\n\n        this._start({ target: this.selection });\n\n        if (this._state) {\n            const range = this._state.range;\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            if (Math.abs(delta) > 1) {\n                delta *= ZOOM_ACCELERATION;\n            }\n\n            if (this.options.mousewheel.reverse) {\n                delta *= -1;\n            }\n\n            if (this.expand(delta)) {\n                this.trigger(SELECT, {\n                    axis: this.categoryAxis.options,\n                    delta: delta,\n                    originalEvent: e,\n                    from: this._value(range.from),\n                    to: this._value(range.to)\n                });\n            }\n\n            if (this._mwTimeout) {\n                clearTimeout(this._mwTimeout);\n            }\n\n            this._mwTimeout = setTimeout(() => {\n                this._end();\n            }, MOUSEWHEEL_DELAY);\n        }\n    }\n\n    _gesturestart(e) {\n        const options = this.options;\n\n        this._state = {\n            range: {\n                from: this._index(options.from),\n                to: this._index(options.to)\n            }\n        };\n        const args = this._rangeEventArgs(this._state.range);\n\n        if (this.trigger(SELECT_START, args)) {\n            this._state = null;\n        } else {\n            e.preventDefault();\n        }\n    }\n\n    _gestureend() {\n        if (this._state) {\n            this.trigger(SELECT_END, this._rangeEventArgs(this._state.range));\n            delete this._state;\n        }\n    }\n\n    _gesturechange(e) {\n        const { chart, _state: state, options, categoryAxis } = this;\n        const range = state.range;\n        const p0 = chart._toModelCoordinates(e.touches[0].x.location).x;\n        const p1 = chart._toModelCoordinates(e.touches[1].x.location).x;\n        const left = Math.min(p0, p1);\n        const right = Math.max(p0, p1);\n\n        e.preventDefault();\n\n        range.from = categoryAxis.pointCategoryIndex(new Point(left)) || options.min;\n\n        range.to = categoryAxis.pointCategoryIndex(new Point(right)) || options.max;\n\n        this.move(range.from, range.to);\n\n        this.trigger(SELECT, this._rangeEventArgs(range));\n    }\n\n    _index(value) {\n        let index = value;\n\n        if (value instanceof Date) {\n            index = this.categoryAxis.categoryIndex(value);\n        }\n\n        return index;\n    }\n\n    _value(index) {\n        const categories = this.categoryAxis.options.categories;\n        let value = index;\n\n        if (this._dateAxis) {\n            if (index > categories.length - 1) {\n                value = this.options.max;\n            } else {\n                value = categories[Math.ceil(index)];\n            }\n        }\n\n        return value;\n    }\n\n    _slot(value) {\n        const categoryAxis = this.categoryAxis;\n        const index = this._index(value);\n\n        return categoryAxis.getSlot(index, index, true);\n    }\n\n    move(from, to) {\n        const options = this.options;\n        const { offset, padding, selection: { border } } = options;\n        let box = this._slot(from);\n        const leftMaskWidth = round(box.x1 - offset.left + padding.left);\n\n        elementStyles(this.leftMask, {\n            width: leftMaskWidth\n        });\n        elementStyles(this.selection, {\n            left: leftMaskWidth\n        });\n\n\n        box = this._slot(to);\n\n        const rightMaskWidth = round(options.width - (box.x1 - offset.left + padding.left));\n        elementStyles(this.rightMask, {\n            width: rightMaskWidth\n        });\n\n        let distance = options.width - rightMaskWidth;\n        if (distance !== options.width) {\n            distance += border.right;\n        }\n\n        elementStyles(this.rightMask, {\n            left: distance\n        });\n        elementStyles(this.selection, {\n            width: Math.max(options.width - (leftMaskWidth + rightMaskWidth) - border.right, 0)\n        });\n    }\n\n    set(from, to) {\n        const options = this.options;\n        const min = this._index(options.min);\n        const max = this._index(options.max);\n        const fromValue = limitValue(this._index(from), min, max);\n        const toValue = limitValue(this._index(to), fromValue + 1, max);\n\n        if (options.visible) {\n            this.move(fromValue, toValue);\n        }\n\n        options.from = this._value(fromValue);\n        options.to = this._value(toValue);\n    }\n\n    expand(delta) {\n        const options = this.options;\n        const min = this._index(options.min);\n        const max = this._index(options.max);\n        const zDir = options.mousewheel.zoom;\n        const from = this._index(options.from);\n        const to = this._index(options.to);\n        let range = { from: from, to: to };\n        const oldRange = deepExtend({}, range);\n\n        if (this._state) {\n            range = this._state.range;\n        }\n\n        if (zDir !== RIGHT) {\n            range.from = limitValue(\n                limitValue(from - delta, 0, to - 1),\n                min, max\n            );\n        }\n\n        if (zDir !== LEFT) {\n            range.to = limitValue(\n                limitValue(to + delta, range.from + 1, max),\n                min,\n                max\n             );\n        }\n\n        if (range.from !== oldRange.from || range.to !== oldRange.to) {\n            this.set(range.from, range.to);\n            return true;\n        }\n    }\n\n    getValueAxis(categoryAxis) {\n        const axes = categoryAxis.pane.axes;\n        const axesCount = axes.length;\n\n        for (let i = 0; i < axesCount; i++) {\n            const axis = axes[i];\n\n            if (axis.options.vertical !== categoryAxis.options.vertical) {\n                return axis;\n            }\n        }\n    }\n\n    trigger(name, args) {\n        return (this.observer || this.chart).trigger(name, args);\n    }\n}\n\nfunction stopPropagation(e) {\n    e.stopPropagation();\n}\n\nsetDefaultOptions(Selection, {\n    visible: true,\n    mousewheel: {\n        zoom: \"both\"\n    },\n    min: MIN_VALUE,\n    max: MAX_VALUE\n});\n\nexport default Selection;\n","import BaseTooltip from './base-tooltip';\n\nimport { deepExtend } from '../../common';\n\nclass Tooltip extends BaseTooltip {\n    show(point) {\n        if (!point || !point.tooltipAnchor || (this._current && this._current === point)) {\n            return;\n        }\n\n        const options = deepExtend({}, this.options, point.options.tooltip);\n        const anchor = point.tooltipAnchor();\n\n        if (anchor) {\n            this._current = point;\n            super.show({\n                point: point,\n                anchor: anchor\n            }, options, point);\n        } else {\n            this.hide();\n        }\n    }\n\n    hide() {\n        delete this._current;\n        super.hide();\n    }\n}\n\nexport default Tooltip;","import BaseTooltip from './base-tooltip';\nimport { Point } from '../../core';\n\nimport { grep, setDefaultOptions } from '../../common';\n\nclass SharedTooltip extends BaseTooltip {\n    constructor(plotArea, options) {\n        super(plotArea.chartService, options);\n\n        this.plotArea = plotArea;\n        this.formatService = plotArea.chartService.format;\n    }\n\n    showAt(points, coords) {\n        const tooltipPoints = grep(points, function(point) {\n            const tooltip = point.series.tooltip;\n            const excluded = tooltip && tooltip.visible === false;\n\n            return !excluded;\n        });\n\n        if (tooltipPoints.length > 0) {\n            const point = tooltipPoints[0];\n            const slot = this.plotArea.categoryAxis.getSlot(point.categoryIx);\n\n            const anchor = coords ? this._slotAnchor(coords, slot) : this._defaultAnchor(point, slot);\n\n            this.show({\n                anchor: anchor,\n                shared: true,\n                points: points,\n                category: point.category,\n                categoryText: this.formatService.auto(this.options.categoryFormat, point.category),\n                series: this.plotArea.series\n            }, this.options);\n        }\n    }\n\n    _slotAnchor(point, slot) {\n        const axis = this.plotArea.categoryAxis;\n        const align = {\n            horizontal: \"left\",\n            vertical: \"center\"\n        };\n\n        if (!axis.options.vertical) {\n            point.x = slot.center().x;\n        }\n\n        return {\n            point: point,\n            align: align\n        };\n    }\n\n    _defaultAnchor(point, slot) {\n        const box = point.owner.pane.chartsBox();\n        const vertical = this.plotArea.categoryAxis.options.vertical;\n        const center = box.center();\n        const slotCenter = slot.center();\n        const align = {\n            horizontal: \"center\",\n            vertical: \"center\"\n        };\n\n        let centerPoint;\n        if (vertical) {\n            centerPoint = new Point(center.x, slotCenter.y);\n        } else {\n            centerPoint = new Point(slotCenter.x, center.y);\n        }\n\n        return {\n            point: centerPoint,\n            align: align\n        };\n    }\n}\n\nsetDefaultOptions(SharedTooltip, {\n    categoryFormat: '{0:d}'\n});\n\nexport default SharedTooltip;","import { drawing as draw, geometry as geom } from '@progress/kendo-drawing';\n\nimport { INITIAL_ANIMATION_DURATION, BAR, START_SCALE } from '../constants';\n\nimport { X, Y } from '../../common/constants';\nimport { interpolateValue, setDefaultOptions } from '../../common';\n\nclass BarChartAnimation extends draw.Animation {\n\n    setup() {\n        const { element, options } = this;\n        const bbox = element.bbox();\n\n        if (bbox) {\n            this.origin = options.origin;\n            const axis = options.vertical ? Y : X;\n\n            const fromScale = this.fromScale = new geom.Point(1, 1);\n            fromScale[axis] = START_SCALE;\n\n            element.transform(geom.transform()\n                .scale(fromScale.x, fromScale.y)\n            );\n        } else {\n            this.abort();\n        }\n    }\n\n    step(pos) {\n        const scaleX = interpolateValue(this.fromScale.x, 1, pos);\n        const scaleY = interpolateValue(this.fromScale.y, 1, pos);\n\n        this.element.transform(geom.transform()\n            .scale(scaleX, scaleY, this.origin)\n        );\n    }\n\n    abort() {\n        super.abort();\n        this.element.transform(null);\n    }\n}\n\nsetDefaultOptions(BarChartAnimation, {\n    duration: INITIAL_ANIMATION_DURATION\n});\n\ndraw.AnimationFactory.current.register(BAR, BarChartAnimation);\n\nexport default BarChartAnimation;","import { drawing as draw, geometry as geom } from '@progress/kendo-drawing';\n\nimport { START_SCALE, BUBBLE } from '../constants';\n\nimport { setDefaultOptions } from '../../common';\n\nclass BubbleAnimation extends draw.Animation {\n    setup() {\n        const center = this.center = this.element.bbox().center();\n        this.element.transform(geom.transform()\n            .scale(START_SCALE, START_SCALE, center)\n        );\n    }\n\n    step(pos) {\n        this.element.transform(geom.transform()\n            .scale(pos, pos, this.center)\n        );\n    }\n}\n\nsetDefaultOptions(BubbleAnimation, {\n    easing: \"easeOutElastic\"\n});\n\ndraw.AnimationFactory.current.register(BUBBLE, BubbleAnimation);\n\nexport default BubbleAnimation;","import { drawing as draw } from '@progress/kendo-drawing';\n\nimport { FADEIN } from '../constants';\n\nimport { setDefaultOptions } from '../../common';\n\nclass FadeInAnimation extends draw.Animation {\n    setup() {\n        this.fadeTo = this.element.opacity();\n        this.element.opacity(0);\n    }\n\n    step(pos) {\n        this.element.opacity(pos * this.fadeTo);\n    }\n}\n\nsetDefaultOptions(FadeInAnimation, {\n    duration: 200,\n    easing: \"linear\"\n});\n\ndraw.AnimationFactory.current.register(FADEIN, FadeInAnimation);\n\nexport default FadeInAnimation;","import { drawing as draw, geometry as geom } from '@progress/kendo-drawing';\n\nimport { START_SCALE, INITIAL_ANIMATION_DURATION, PIE } from '../constants';\n\nimport { setDefaultOptions } from '../../common';\n\nclass PieAnimation extends draw.Animation {\n    setup() {\n        this.element.transform(geom.transform()\n            .scale(START_SCALE, START_SCALE, this.options.center)\n        );\n    }\n\n    step(pos) {\n        this.element.transform(geom.transform()\n            .scale(pos, pos, this.options.center)\n        );\n    }\n}\n\nsetDefaultOptions(PieAnimation, {\n    easing: \"easeOutElastic\",\n    duration: INITIAL_ANIMATION_DURATION\n});\n\ndraw.AnimationFactory.current.register(PIE, PieAnimation);\n\nexport default PieAnimation;","import ScatterChart from './scatter-chart';\nimport LineChartMixin from '../mixins/line-chart-mixin';\nimport LineSegment from '../line-chart/line-segment';\nimport SplineSegment from '../line-chart/spline-segment';\n\nimport { SMOOTH, ZERO } from '../constants';\n\nimport hasValue from '../utils/has-value';\n\nimport { deepExtend } from '../../common';\n\nclass ScatterLineChart extends ScatterChart {\n    render() {\n        super.render();\n\n        this.renderSegments();\n    }\n\n    createSegment(linePoints, currentSeries, seriesIx) {\n        const style = currentSeries.style;\n        let pointType;\n\n        if (style === SMOOTH) {\n            pointType = SplineSegment;\n        } else {\n            pointType = LineSegment;\n        }\n\n        return new pointType(linePoints, currentSeries, seriesIx);\n    }\n\n    animationPoints() {\n        const points = super.animationPoints();\n        return points.concat(this._segments);\n    }\n\n    createMissingValue(value, missingValues) {\n        if (missingValues === ZERO) {\n            const missingValue = {\n                x: value.x,\n                y: value.y\n            };\n            if (!hasValue(missingValue.x)) {\n                missingValue.x = 0;\n            }\n            if (!hasValue(missingValue.y)) {\n                missingValue.y = 0;\n            }\n            return missingValue;\n        }\n    }\n}\n\ndeepExtend(ScatterLineChart.prototype, LineChartMixin);\n\nexport default ScatterLineChart;","import PlotAreaBase from './plotarea-base';\nimport AxisGroupRangeTracker from '../axis-group-range-tracker';\nimport PlotAreaEventsMixin from '../mixins/plotarea-events-mixin';\nimport ScatterChart from '../scatter-charts/scatter-chart';\nimport ScatterLineChart from '../scatter-charts/scatter-line-chart';\nimport BubbleChart from '../bubble-chart/bubble-chart';\nimport SeriesBinder from '../series-binder';\n\nimport { NumericAxis, LogarithmicAxis, DateValueAxis, Point } from '../../core';\n\nimport filterSeriesByType from '../utils/filter-series-by-type';\nimport equalsIgnoreCase from '../utils/equals-ignore-case';\nimport singleItemOrArray from '../utils/single-item-or-array';\n\nimport { SCATTER, SCATTER_LINE, BUBBLE, LOGARITHMIC } from '../constants';\n\nimport { DATE } from '../../common/constants';\nimport { deepExtend, eventElement, grep, inArray, setDefaultOptions } from '../../common';\n\nclass XYPlotArea extends PlotAreaBase {\n    initFields() {\n        this.namedXAxes = {};\n        this.namedYAxes = {};\n\n        this.xAxisRangeTracker = new AxisGroupRangeTracker();\n        this.yAxisRangeTracker = new AxisGroupRangeTracker();\n    }\n\n    render(panes = this.panes) {\n        const seriesByPane = this.groupSeriesByPane();\n\n        for (let i = 0; i < panes.length; i++) {\n            const pane = panes[i];\n            const paneSeries = seriesByPane[pane.options.name || \"default\"] || [];\n            this.addToLegend(paneSeries);\n            const filteredSeries = this.filterVisibleSeries(paneSeries);\n\n            if (!filteredSeries) {\n                continue;\n            }\n\n            this.createScatterChart(\n                filterSeriesByType(filteredSeries, SCATTER),\n                pane\n            );\n\n            this.createScatterLineChart(\n                filterSeriesByType(filteredSeries, SCATTER_LINE),\n                pane\n            );\n\n            this.createBubbleChart(\n                filterSeriesByType(filteredSeries, BUBBLE),\n                pane\n            );\n        }\n\n        this.createAxes(panes);\n    }\n\n    appendChart(chart, pane) {\n        this.xAxisRangeTracker.update(chart.xAxisRanges);\n        this.yAxisRangeTracker.update(chart.yAxisRanges);\n\n        super.appendChart(chart, pane);\n    }\n\n    removeAxis(axis) {\n        const axisName = axis.options.name;\n\n        super.removeAxis(axis);\n\n        if (axis.options.vertical) {\n            this.yAxisRangeTracker.reset(axisName);\n            delete this.namedYAxes[axisName];\n        } else {\n            this.xAxisRangeTracker.reset(axisName);\n            delete this.namedXAxes[axisName];\n        }\n\n        if (axis === this.axisX) {\n            delete this.axisX;\n        }\n\n        if (axis === this.axisY) {\n            delete this.axisY;\n        }\n    }\n\n    // TODO: Refactor, optionally use series.pane option\n    seriesPaneName(series) {\n        const options = this.options;\n        const xAxisName = series.xAxis;\n        const xAxisOptions = [].concat(options.xAxis);\n        const xAxis = grep(xAxisOptions, function(a) { return a.name === xAxisName; })[0];\n        const yAxisName = series.yAxis;\n        const yAxisOptions = [].concat(options.yAxis);\n        const yAxis = grep(yAxisOptions, function(a) { return a.name === yAxisName; })[0];\n        const panes = options.panes || [ {} ];\n        const defaultPaneName = panes[0].name || \"default\";\n        const paneName = (xAxis || {}).pane || (yAxis || {}).pane || defaultPaneName;\n\n        return paneName;\n    }\n\n    createScatterChart(series, pane) {\n        if (series.length > 0) {\n            this.appendChart(\n                new ScatterChart(this, { series: series, clip: pane.options.clip }),\n                pane\n            );\n        }\n    }\n\n    createScatterLineChart(series, pane) {\n        if (series.length > 0) {\n            this.appendChart(\n                new ScatterLineChart(this, { series: series, clip: pane.options.clip }),\n                pane\n            );\n        }\n    }\n\n    createBubbleChart(series, pane) {\n        if (series.length > 0) {\n            this.appendChart(\n                new BubbleChart(this, { series: series, clip: pane.options.clip }),\n                pane\n            );\n        }\n    }\n\n    createXYAxis(options, vertical, axisIndex) {\n        const axisName = options.name;\n        const namedAxes = vertical ? this.namedYAxes : this.namedXAxes;\n        const tracker = vertical ? this.yAxisRangeTracker : this.xAxisRangeTracker;\n        const axisOptions = deepExtend({}, options, { vertical: vertical });\n        const isLog = equalsIgnoreCase(axisOptions.type, LOGARITHMIC);\n        const defaultRange = tracker.query();\n        const defaultAxisRange = isLog ? { min: 0.1, max: 1 } : { min: 0, max: 1 };\n        const range = tracker.query(axisName) || defaultRange || defaultAxisRange;\n        const typeSamples = [ axisOptions.min, axisOptions.max ];\n        const series = this.series;\n\n        for (let seriesIx = 0; seriesIx < series.length; seriesIx++) {\n            const currentSeries = series[seriesIx];\n            const seriesAxisName = currentSeries[vertical ? \"yAxis\" : \"xAxis\"];\n            if ((seriesAxisName === axisOptions.name) || (axisIndex === 0 && !seriesAxisName)) {\n                const firstPointValue = SeriesBinder.current.bindPoint(currentSeries, 0).valueFields;\n                typeSamples.push(firstPointValue[vertical ? \"y\" : \"x\"]);\n\n                break;\n            }\n        }\n\n        if (axisIndex === 0 && defaultRange) {\n            range.min = Math.min(range.min, defaultRange.min);\n            range.max = Math.max(range.max, defaultRange.max);\n        }\n\n        let inferredDate;\n\n        for (let i = 0; i < typeSamples.length; i++) {\n            if (typeSamples[i] instanceof Date) {\n                inferredDate = true;\n                break;\n            }\n        }\n\n        let axisType;\n        if (equalsIgnoreCase(axisOptions.type, DATE) || (!axisOptions.type && inferredDate)) {\n            axisType = DateValueAxis;\n        } else if (isLog) {\n            axisType = LogarithmicAxis;\n        } else {\n            axisType = NumericAxis;\n        }\n\n        const axis = new axisType(range.min, range.max, axisOptions, this.chartService);\n        axis.axisIndex = axisIndex;\n\n        if (axisName) {\n            if (namedAxes[axisName]) {\n                throw new Error(`${ vertical ? \"Y\" : \"X\" } axis with name ${ axisName } is already defined`);\n            }\n            namedAxes[axisName] = axis;\n        }\n\n        this.appendAxis(axis);\n\n        return axis;\n    }\n\n    createAxes(panes) {\n        const options = this.options;\n        const xAxesOptions = [].concat(options.xAxis);\n        const xAxes = [];\n        const yAxesOptions = [].concat(options.yAxis);\n        const yAxes = [];\n\n        for (let idx = 0; idx < xAxesOptions.length; idx++) {\n            const axisPane = this.findPane(xAxesOptions[idx].pane);\n            if (inArray(axisPane, panes)) {\n                xAxes.push(this.createXYAxis(xAxesOptions[idx], false, idx));\n            }\n        }\n\n        for (let idx = 0; idx < yAxesOptions.length; idx++) {\n            const axisPane = this.findPane(yAxesOptions[idx].pane);\n            if (inArray(axisPane, panes)) {\n                yAxes.push(this.createXYAxis(yAxesOptions[idx], true, idx));\n            }\n        }\n\n        this.axisX = this.axisX || xAxes[0];\n        this.axisY = this.axisY || yAxes[0];\n    }\n\n    _dispatchEvent(chart, e, eventType) {\n        const coords = chart._eventCoordinates(e);\n        const point = new Point(coords.x, coords.y);\n        const allAxes = this.axes;\n        const length = allAxes.length;\n        const xValues = [];\n        const yValues = [];\n\n        for (let i = 0; i < length; i++) {\n            const axis = allAxes[i];\n            const values = axis.options.vertical ? yValues : xValues;\n            const currentValue = axis.getValue(point);\n            if (currentValue !== null) {\n                values.push(currentValue);\n            }\n        }\n\n        if (xValues.length > 0 && yValues.length > 0) {\n            chart.trigger(eventType, {\n                element: eventElement(e),\n                originalEvent: e,\n                x: singleItemOrArray(xValues),\n                y: singleItemOrArray(yValues)\n            });\n        }\n    }\n\n    updateAxisOptions(axis, options) {\n        const vertical = axis.options.vertical;\n        const axes = this.groupAxes(this.panes);\n        const index = (vertical ? axes.y : axes.x).indexOf(axis);\n        const axisOptions = ([].concat(vertical ? this.options.yAxis : this.options.xAxis))[index];\n        deepExtend(axisOptions, options);\n    }\n}\n\nsetDefaultOptions(XYPlotArea, {\n    xAxis: {},\n    yAxis: {}\n});\n\ndeepExtend(XYPlotArea.prototype, PlotAreaEventsMixin);\n\nexport default XYPlotArea;","import { drawing as draw, geometry as geom, Color } from '@progress/kendo-drawing';\n\nimport { ChartElement, ShapeBuilder, TextBox, Box } from '../../core';\n\nimport PointEventsMixin from '../mixins/point-events-mixin';\n\nimport { OUTSIDE_END, INSIDE_END, PIE, FADEIN, TOOLTIP_OFFSET } from '../constants';\nimport hasGradientOverlay from '../utils/has-gradient-overlay';\n\nimport { TOP, BOTTOM, LEFT, RIGHT, DEFAULT_FONT, CIRCLE, WHITE, BLACK, CENTER, DEFAULT_PRECISION } from '../../common/constants';\nimport { setDefaultOptions, getSpacing, getTemplate, deepExtend, round, rad } from '../../common';\n\nclass PieSegment extends ChartElement {\n    constructor(value, sector, options) {\n        super(options);\n\n        this.value = value;\n        this.sector = sector;\n    }\n\n    render() {\n        const labels = this.options.labels;\n        const chartService = this.owner.chartService;\n        let labelText = this.value;\n\n        if (this._rendered || this.visible === false) {\n            return;\n        }\n        this._rendered = true;\n\n        const labelTemplate = getTemplate(labels);\n        if (labelTemplate) {\n            labelText = labelTemplate({\n                dataItem: this.dataItem,\n                category: this.category,\n                value: this.value,\n                series: this.series,\n                percentage: this.percentage\n            });\n        } else if (labels.format) {\n            labelText = chartService.format.auto(labels.format, labelText);\n        }\n\n        if (labels.visible && labelText) {\n            if (labels.position === CENTER || labels.position === INSIDE_END) {\n                if (!labels.color) {\n                    const brightnessValue = new Color(this.options.color).percBrightness();\n                    if (brightnessValue > 180) {\n                        labels.color = BLACK;\n                    } else {\n                        labels.color = WHITE;\n                    }\n                }\n                if (!labels.background) {\n                    labels.background = this.options.color;\n                }\n            } else {\n                const themeLabels = chartService.theme.seriesDefaults.labels;\n                labels.color = labels.color || themeLabels.color;\n                labels.background = labels.background || themeLabels.background;\n            }\n\n\n            this.label = new TextBox(labelText, deepExtend({}, labels, {\n                align: CENTER,\n                vAlign: \"\",\n                animation: {\n                    type: FADEIN,\n                    delay: this.animationDelay\n                }\n            }));\n\n            this.append(this.label);\n        }\n    }\n\n    reflow(targetBox) {\n        this.render();\n        this.box = targetBox;\n        this.reflowLabel();\n    }\n\n    reflowLabel() {\n        const { options: { labels: labelsOptions }, label } = this;\n        const sector = this.sector.clone();\n        const labelsDistance = labelsOptions.distance;\n        const angle = sector.middle();\n\n        if (label) {\n            const labelHeight = label.box.height();\n            const labelWidth = label.box.width();\n            let lp;\n\n            if (labelsOptions.position === CENTER) {\n                sector.radius = Math.abs((sector.radius - labelHeight) / 2) + labelHeight;\n                lp = sector.point(angle);\n                label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n            } else if (labelsOptions.position === INSIDE_END) {\n                sector.radius = sector.radius - labelHeight / 2;\n                lp = sector.point(angle);\n                label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n            } else {\n                let x1;\n                lp = sector.clone().expand(labelsDistance).point(angle);\n                if (lp.x >= sector.center.x) {\n                    x1 = lp.x + labelWidth;\n                    label.orientation = RIGHT;\n                } else {\n                    x1 = lp.x - labelWidth;\n                    label.orientation = LEFT;\n                }\n                label.reflow(new Box(x1, lp.y - labelHeight, lp.x, lp.y));\n            }\n        }\n    }\n\n    createVisual() {\n        const { sector, options } = this;\n\n        super.createVisual();\n\n        if (this.value) {\n            if (options.visual) {\n                const startAngle = (sector.startAngle + 180) % 360;\n                const visual = options.visual({\n                    category: this.category,\n                    dataItem: this.dataItem,\n                    value: this.value,\n                    series: this.series,\n                    percentage: this.percentage,\n                    center: new geom.Point(sector.center.x, sector.center.y),\n                    radius: sector.radius,\n                    innerRadius: sector.innerRadius,\n                    startAngle: startAngle,\n                    endAngle: startAngle + sector.angle,\n                    options: options,\n                    sender: this.getSender(),\n                    createVisual: () => {\n                        const group = new draw.Group();\n                        this.createSegmentVisual(group);\n\n                        return group;\n                    }\n                });\n\n                if (visual) {\n                    this.visual.append(visual);\n                }\n            } else {\n                this.createSegmentVisual(this.visual);\n            }\n        }\n    }\n\n    createSegmentVisual(group) {\n        const { sector, options } = this;\n        const borderOptions = options.border || {};\n        const border = borderOptions.width > 0 ? {\n            stroke: {\n                color: borderOptions.color,\n                width: borderOptions.width,\n                opacity: borderOptions.opacity,\n                dashType: borderOptions.dashType\n            }\n        } : {};\n        const color = options.color;\n        const fill = {\n            color: color,\n            opacity: options.opacity\n        };\n        const visual = this.createSegment(sector, deepExtend({\n            fill: fill,\n            stroke: {\n                opacity: options.opacity\n            },\n            zIndex: options.zIndex\n        }, border));\n\n        group.append(visual);\n\n        if (hasGradientOverlay(options)) {\n            group.append(this.createGradientOverlay(visual, {\n                baseColor: color,\n                fallbackFill: fill\n            }, deepExtend({\n                center: [ sector.center.x, sector.center.y ],\n                innerRadius: sector.innerRadius,\n                radius: sector.radius,\n                userSpace: true\n            }, options.overlay)));\n        }\n    }\n\n    createSegment(sector, options) {\n        if (options.singleSegment) {\n            return new draw.Circle(new geom.Circle(new geom.Point(sector.center.x, sector.center.y), sector.radius), options);\n        }\n\n        return ShapeBuilder.current.createRing(sector, options);\n    }\n\n    createAnimation() {\n        const { options, sector: { center } } = this;\n\n        deepExtend(options, {\n            animation: {\n                center: [ center.x, center.y ],\n                delay: this.animationDelay\n            }\n        });\n\n        super.createAnimation();\n    }\n\n    createHighlight(options) {\n        const highlight = this.options.highlight || {};\n        const border = highlight.border || {};\n\n        return this.createSegment(this.sector, deepExtend({}, options, {\n            fill: {\n                color: highlight.color,\n                opacity: highlight.opacity\n            },\n            stroke: {\n                opacity: border.opacity,\n                width: border.width,\n                color: border.color\n            }\n        }));\n    }\n\n    highlightVisual() {\n        return this.visual.children[0];\n    }\n\n    highlightVisualArgs() {\n        const sector = this.sector;\n\n        return {\n            options: this.options,\n            radius: sector.radius,\n            innerRadius: sector.innerRadius,\n            center: new geom.Point(sector.center.x, sector.center.y),\n            startAngle: sector.startAngle,\n            endAngle: sector.angle + sector.startAngle,\n            visual: this.visual\n        };\n    }\n\n    tooltipAnchor() {\n        const sector = this.sector.clone().expand(TOOLTIP_OFFSET);\n        const midAndle = sector.middle();\n        const midPoint = sector.point(midAndle);\n\n        return {\n            point: midPoint,\n            align: tooltipAlignment(midAndle + 180)\n        };\n    }\n\n    formatValue(format) {\n        return this.owner.formatPointValue(this, format);\n    }\n}\n\nconst RAD_30 = round(rad(30), DEFAULT_PRECISION);\nconst RAD_60 = round(rad(60), DEFAULT_PRECISION);\n\nfunction tooltipAlignment(angle) {\n    const radians = rad(angle);\n    const sine = round(Math.sin(radians), DEFAULT_PRECISION);\n    const cosine = round(Math.cos(radians), DEFAULT_PRECISION);\n\n\n    let horizontal;\n    if (Math.abs(sine) > RAD_60) {\n        horizontal = CENTER;\n    } else if (cosine < 0) {\n        horizontal = RIGHT;\n    } else {\n        horizontal = LEFT;\n    }\n\n    let vertical;\n    if (Math.abs(sine) < RAD_30) {\n        vertical = CENTER;\n    } else if (sine < 0) {\n        vertical = BOTTOM;\n    } else {\n        vertical = TOP;\n    }\n\n    return {\n        horizontal: horizontal,\n        vertical: vertical\n    };\n}\n\nsetDefaultOptions(PieSegment, {\n    color: WHITE,\n    overlay: {\n        gradient: \"roundedBevel\"\n    },\n    border: {\n        width: 0.5\n    },\n    labels: {\n        visible: false,\n        distance: 35,\n        font: DEFAULT_FONT,\n        margin: getSpacing(0.5),\n        align: CIRCLE,\n        zIndex: 1,\n        position: OUTSIDE_END\n    },\n    animation: {\n        type: PIE\n    },\n    highlight: {\n        visible: true,\n        border: {\n            width: 1\n        }\n    },\n    visible: true\n});\n\ndeepExtend(PieSegment.prototype, PointEventsMixin);\n\nexport default PieSegment;","import { getTemplate } from '../../common';\n\nconst PieChartMixin = {\n    createLegendItem: function(value, point, options) {\n        const legendOptions = this.options.legend || {};\n        const labelsOptions = legendOptions.labels || {};\n        const inactiveItems = legendOptions.inactiveItems || {};\n        const inactiveItemsLabels = inactiveItems.labels || {};\n\n        if (options && options.visibleInLegend !== false) {\n            const pointVisible = options.visible !== false;\n            const labelTemplate = pointVisible ? getTemplate(labelsOptions) :\n                getTemplate(inactiveItemsLabels) || getTemplate(labelsOptions);\n            let text = options.category || \"\";\n\n            if (labelTemplate) {\n                text = labelTemplate({\n                    text: text,\n                    series: options.series,\n                    dataItem: options.dataItem,\n                    percentage: options.percentage,\n                    value: value\n                });\n            }\n\n            let itemLabelOptions, markerColor;\n            if (pointVisible) {\n                itemLabelOptions = {};\n                markerColor = point.color;\n            } else {\n                itemLabelOptions = {\n                    color: inactiveItemsLabels.color,\n                    font: inactiveItemsLabels.font\n                };\n                markerColor = (inactiveItems.markers || {}).color;\n            }\n\n            if (text) {\n                this.legendItems.push({\n                    pointIndex: options.index,\n                    text: text,\n                    series: options.series,\n                    markerColor: markerColor,\n                    labels: itemLabelOptions\n                });\n            }\n        }\n    }\n};\n\nexport default PieChartMixin;","import { defined } from '../../common';\n\nexport default function segmentVisible(series, fields, index) {\n    const visible = fields.visible;\n    if (defined(visible)) {\n        return visible;\n    }\n\n    const pointVisibility = series.pointVisibility;\n    if (pointVisibility) {\n        return pointVisibility[index];\n    }\n}\n\n","import SeriesBinder from '../series-binder';\n\nimport { isNumber, isString } from '../../common';\nimport segmentVisible from './segment-visible';\n\nexport default function seriesTotal(series) {\n    const data = series.data;\n    let sum = 0;\n\n    for (let i = 0; i < data.length; i++) {\n        const pointData = SeriesBinder.current.bindPoint(series, i);\n        let value = pointData.valueFields.value;\n\n        if (isString(value)) {\n            value = parseFloat(value);\n        }\n\n        const visible = segmentVisible(series, pointData.fields, i);\n        if (isNumber(value) && visible !== false) {\n            sum += Math.abs(value);\n        }\n    }\n\n    return sum;\n}\n","import { drawing as draw } from '@progress/kendo-drawing';\n\nimport SeriesBinder from '../series-binder';\nimport PieSegment from './pie-segment';\nimport PieChartMixin from '../mixins/pie-chart-mixin';\nimport { ChartElement, Ring, Box, Point } from '../../core';\n\nimport { OUTSIDE_END, FADEIN, COLUMN } from '../constants';\nimport seriesTotal from '../utils/series-total';\nimport segmentVisible from '../utils/segment-visible';\nimport evalOptions from '../utils/eval-options';\n\nimport { CIRCLE, RIGHT, CENTER } from '../../common/constants';\nimport { deepExtend, defined, isFunction, last, round, setDefaultOptions, valueOrDefault } from '../../common';\n\nconst PIE_SECTOR_ANIM_DELAY = 70;\n\nclass PieChart extends ChartElement {\n    constructor(plotArea, options) {\n        super(options);\n\n        this.plotArea = plotArea;\n        this.chartService = plotArea.chartService;\n        this.points = [];\n        this.legendItems = [];\n        this.render();\n    }\n\n    render() {\n        this.traverseDataPoints(this.addValue.bind(this));\n    }\n\n    traverseDataPoints(callback) {\n        const { options, plotArea: { options: { seriesColors = [] } } } = this;\n        const colorsCount = seriesColors.length;\n        const series = options.series;\n        const seriesCount = series.length;\n\n        for (let seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n            const currentSeries = series[seriesIx];\n            const data = currentSeries.data;\n            const total = seriesTotal(currentSeries);\n            const anglePerValue = 360 / total;\n            let currentAngle;\n\n            if (defined(currentSeries.startAngle)) {\n                currentAngle = currentSeries.startAngle;\n            } else {\n                currentAngle = options.startAngle;\n            }\n\n            if (seriesIx !== seriesCount - 1) {\n                if (currentSeries.labels.position === OUTSIDE_END) {\n                    currentSeries.labels.position = CENTER;\n                }\n            }\n\n            for (let i = 0; i < data.length; i++) {\n                const pointData = SeriesBinder.current.bindPoint(currentSeries, i);\n                const value = pointData.valueFields.value;\n                const plotValue = Math.abs(value);\n                const fields = pointData.fields;\n                const angle = plotValue * anglePerValue;\n                const explode = data.length !== 1 && Boolean(fields.explode);\n\n                if (!isFunction(currentSeries.color)) {\n                    currentSeries.color = fields.color || seriesColors[i % colorsCount];\n                }\n\n                let visible = segmentVisible(currentSeries, fields, i);\n\n                callback(value, new Ring(null, 0, 0, currentAngle, angle), {\n                    owner: this,\n                    category: fields.category || \"\",\n                    index: i,\n                    series: currentSeries,\n                    seriesIx: seriesIx,\n                    dataItem: data[i],\n                    percentage: total !== 0 ? plotValue / total : 0,\n                    explode: explode,\n                    visibleInLegend: fields.visibleInLegend,\n                    visible: visible,\n                    zIndex: seriesCount - seriesIx,\n                    animationDelay: this.animationDelay(i, seriesIx, seriesCount)\n                });\n\n                if (visible !== false) {\n                    currentAngle += angle;\n                }\n            }\n        }\n    }\n\n    evalSegmentOptions(options, value, fields) {\n        const series = fields.series;\n\n        evalOptions(options, {\n            value: value,\n            series: series,\n            dataItem: fields.dataItem,\n            category: fields.category,\n            percentage: fields.percentage\n        }, { defaults: series._defaults, excluded: [ \"data\", \"content\", \"template\", \"visual\", \"toggle\" ] });\n    }\n\n    addValue(value, sector, fields) {\n        const segmentOptions = deepExtend({}, fields.series, { index: fields.index });\n        this.evalSegmentOptions(segmentOptions, value, fields);\n\n        this.createLegendItem(value, segmentOptions, fields);\n\n        if (fields.visible === false) {\n            return;\n        }\n\n        const segment = new PieSegment(value, sector, segmentOptions);\n        Object.assign(segment, fields);\n        this.append(segment);\n        this.points.push(segment);\n    }\n\n    reflow(targetBox) {\n        const { options, points, seriesConfigs = [] } = this;\n        const count = points.length;\n        const box = targetBox.clone();\n        const space = 5;\n        const minWidth = Math.min(box.width(), box.height());\n        const halfMinWidth = minWidth / 2;\n        const defaultPadding = minWidth - minWidth * 0.85;\n        const newBox = new Box(box.x1, box.y1, box.x1 + minWidth, box.y1 + minWidth);\n        const newBoxCenter = newBox.center();\n        const boxCenter = box.center();\n        const seriesCount = options.series.length;\n        const leftSideLabels = [];\n        const rightSideLabels = [];\n        let padding = valueOrDefault(options.padding, defaultPadding);\n\n        padding = padding > halfMinWidth - space ? halfMinWidth - space : padding;\n        newBox.translate(boxCenter.x - newBoxCenter.x, boxCenter.y - newBoxCenter.y);\n\n        const radius = halfMinWidth - padding;\n        const center = new Point(\n            radius + newBox.x1 + padding,\n            radius + newBox.y1 + padding\n        );\n\n        for (let i = 0; i < count; i++) {\n            const segment = points[i];\n            const sector = segment.sector;\n            const seriesIndex = segment.seriesIx;\n            sector.radius = radius;\n            sector.center = center;\n\n            if (seriesConfigs.length) {\n                const seriesConfig = seriesConfigs[seriesIndex];\n                sector.innerRadius = seriesConfig.innerRadius;\n                sector.radius = seriesConfig.radius;\n            }\n\n            if (seriesIndex === seriesCount - 1 && segment.explode) {\n                sector.center = sector.clone().setRadius(sector.radius * 0.15).point(sector.middle());\n            }\n\n            segment.reflow(newBox);\n\n            const label = segment.label;\n            if (label) {\n                if (label.options.position === OUTSIDE_END) {\n                    if (seriesIndex === seriesCount - 1) {\n                        if (label.orientation === RIGHT) {\n                            rightSideLabels.push(label);\n                        } else {\n                            leftSideLabels.push(label);\n                        }\n                    }\n                }\n            }\n        }\n\n        if (leftSideLabels.length > 0) {\n            leftSideLabels.sort(this.labelComparator(true));\n            this.leftLabelsReflow(leftSideLabels);\n        }\n\n        if (rightSideLabels.length > 0) {\n            rightSideLabels.sort(this.labelComparator(false));\n            this.rightLabelsReflow(rightSideLabels);\n        }\n\n        this.box = newBox;\n    }\n\n    leftLabelsReflow(labels) {\n        const distances = this.distanceBetweenLabels(labels);\n\n        this.distributeLabels(distances, labels);\n    }\n\n    rightLabelsReflow(labels) {\n        const distances = this.distanceBetweenLabels(labels);\n\n        this.distributeLabels(distances, labels);\n    }\n\n    distanceBetweenLabels(labels) {\n        const segment = last(this.points);\n        const sector = segment.sector;\n        const count = labels.length - 1;\n        const lr = sector.radius + segment.options.labels.distance;\n        const distances = [];\n        let firstBox = labels[0].box;\n        let distance = round(firstBox.y1 - (sector.center.y - lr - firstBox.height() - firstBox.height() / 2));\n\n        distances.push(distance);\n\n        for (let i = 0; i < count; i++) {\n            const secondBox = labels[i + 1].box;\n\n            firstBox = labels[i].box;\n            distance = round(secondBox.y1 - firstBox.y2);\n            distances.push(distance);\n        }\n        distance = round(sector.center.y + lr - labels[count].box.y2 - labels[count].box.height() / 2);\n        distances.push(distance);\n\n        return distances;\n    }\n\n    distributeLabels(distances, labels) {\n        const count = distances.length;\n        let left, right, remaining;\n\n        for (let i = 0; i < count; i++) {\n            remaining = -distances[i];\n            left = right = i;\n\n            while (remaining > 0 && (left >= 0 || right < count)) {\n                remaining = this._takeDistance(distances, i, --left, remaining);\n                remaining = this._takeDistance(distances, i, ++right, remaining);\n            }\n        }\n\n        this.reflowLabels(distances, labels);\n    }\n\n    _takeDistance(distances, anchor, position, amount) {\n        let result = amount;\n        if (distances[position] > 0) {\n            const available = Math.min(distances[position], result);\n            result -= available;\n            distances[position] -= available;\n            distances[anchor] += available;\n        }\n\n        return result;\n    }\n\n    reflowLabels(distances, labels) {\n        const segment = last(this.points);\n        const sector = segment.sector;\n        const labelOptions = segment.options.labels;\n        const labelsCount = labels.length;\n        const labelDistance = labelOptions.distance;\n        let boxY = sector.center.y - (sector.radius + labelDistance) - labels[0].box.height();\n        let boxX;\n\n        distances[0] += 2;\n        for (let i = 0; i < labelsCount; i++) {\n            const label = labels[i];\n            const box = label.box;\n\n            boxY += distances[i];\n            boxX = this.hAlignLabel(\n                box.x2,\n                sector.clone().expand(labelDistance),\n                boxY,\n                boxY + box.height(),\n                label.orientation === RIGHT);\n\n            if (label.orientation === RIGHT) {\n                if (labelOptions.align !== CIRCLE) {\n                    boxX = sector.radius + sector.center.x + labelDistance;\n                }\n                label.reflow(new Box(boxX + box.width(), boxY, boxX, boxY));\n            } else {\n                if (labelOptions.align !== CIRCLE) {\n                    boxX = sector.center.x - sector.radius - labelDistance;\n                }\n                label.reflow(new Box(boxX - box.width(), boxY, boxX, boxY));\n            }\n\n            boxY += box.height();\n        }\n    }\n\n    createVisual() {\n        const { options: { connectors }, points } = this;\n        const count = points.length;\n        const space = 4;\n\n        super.createVisual();\n\n        this._connectorLines = [];\n\n        for (let i = 0; i < count; i++) {\n            const segment = points[i];\n            const { sector, label } = segment;\n            const angle = sector.middle();\n            const connectorsColor = (segment.options.connectors || {}).color || connectors.color;\n\n            if (label) {\n                const connectorLine = new draw.Path({\n                    stroke: {\n                        color: connectorsColor,\n                        width: connectors.width\n                    },\n                    animation: {\n                        type: FADEIN,\n                        delay: segment.animationDelay\n                    }\n                });\n\n                if (label.options.position === OUTSIDE_END && segment.value !== 0) {\n                    const box = label.box;\n                    const centerPoint = sector.center;\n                    let start = sector.point(angle);\n                    let middle = new Point(box.x1, box.center().y);\n                    let sr, end, crossing;\n\n                    start = sector.clone().expand(connectors.padding).point(angle);\n                    connectorLine.moveTo(start.x, start.y);\n                    // TODO: Extract into a method to remove duplication\n                    if (label.orientation === RIGHT) {\n                        end = new Point(box.x1 - connectors.padding, box.center().y);\n                        crossing = intersection(centerPoint, start, middle, end);\n                        middle = new Point(end.x - space, end.y);\n                        crossing = crossing || middle;\n                        crossing.x = Math.min(crossing.x, middle.x);\n\n                        if (this.pointInCircle(crossing, sector.center, sector.radius + space) ||\n                            crossing.x < sector.center.x) {\n                            sr = sector.center.x + sector.radius + space;\n                            if (segment.options.labels.align !== COLUMN) {\n                                if (sr < middle.x) {\n                                    connectorLine.lineTo(sr, start.y);\n                                } else {\n                                    connectorLine.lineTo(start.x + space * 2, start.y);\n                                }\n                            } else {\n                                connectorLine.lineTo(sr, start.y);\n                            }\n                            connectorLine.lineTo(middle.x, end.y);\n                        } else {\n                            crossing.y = end.y;\n                            connectorLine.lineTo(crossing.x, crossing.y);\n                        }\n                    } else {\n                        end = new Point(box.x2 + connectors.padding, box.center().y);\n                        crossing = intersection(centerPoint, start, middle, end);\n                        middle = new Point(end.x + space, end.y);\n                        crossing = crossing || middle;\n                        crossing.x = Math.max(crossing.x, middle.x);\n\n                        if (this.pointInCircle(crossing, sector.center, sector.radius + space) ||\n                            crossing.x > sector.center.x) {\n                            sr = sector.center.x - sector.radius - space;\n                            if (segment.options.labels.align !== COLUMN) {\n                                if (sr > middle.x) {\n                                    connectorLine.lineTo(sr, start.y);\n                                } else {\n                                    connectorLine.lineTo(start.x - space * 2, start.y);\n                                }\n                            } else {\n                                connectorLine.lineTo(sr, start.y);\n                            }\n                            connectorLine.lineTo(middle.x, end.y);\n                        } else {\n                            crossing.y = end.y;\n                            connectorLine.lineTo(crossing.x, crossing.y);\n                        }\n                    }\n\n                    connectorLine.lineTo(end.x, end.y);\n\n                    this._connectorLines.push(connectorLine);\n                    this.visual.append(connectorLine);\n                }\n            }\n        }\n    }\n\n    labelComparator(reverse) {\n        const reverseValue = reverse ? -1 : 1;\n\n        return function(a, b) {\n            const first = (a.parent.sector.middle() + 270) % 360;\n            const second = (b.parent.sector.middle() + 270) % 360;\n            return (first - second) * reverseValue;\n        };\n    }\n\n    hAlignLabel(originalX, sector, y1, y2, direction) {\n        const { radius, center: { x: cx, y: cy } } = sector;\n        const t = Math.min(Math.abs(cy - y1), Math.abs(cy - y2));\n\n        if (t > radius) {\n            return originalX;\n        }\n\n        return cx + Math.sqrt((radius * radius) - (t * t)) * (direction ? 1 : -1);\n    }\n\n    pointInCircle(point, center, radius) {\n        return Math.pow(center.x - point.x, 2) + Math.pow(center.y - point.y, 2) < Math.pow(radius, 2);\n    }\n\n    formatPointValue(point, format) {\n        return this.chartService.format.auto(format, point.value);\n    }\n\n    animationDelay(categoryIndex) {\n        return categoryIndex * PIE_SECTOR_ANIM_DELAY;\n    }\n}\n\nfunction intersection(a1, a2, b1, b2) {\n    const uat = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x);\n    const ub = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n\n    let result;\n    if (ub !== 0) {\n        const ua = (uat / ub);\n\n        result = new Point(\n            a1.x + ua * (a2.x - a1.x),\n            a1.y + ua * (a2.y - a1.y)\n        );\n    }\n\n    return result;\n}\n\nsetDefaultOptions(PieChart, {\n    startAngle: 90,\n    connectors: {\n        width: 2,\n        color: \"#939393\",\n        padding: 8\n    },\n    inactiveItems: {\n        markers: {},\n        labels: {}\n    }\n});\n\ndeepExtend(PieChart.prototype, PieChartMixin);\n\nexport default PieChart;\n","import PlotAreaBase from './plotarea-base';\nimport PieChart from '../pie-chart/pie-chart';\n\nimport { append } from '../../common';\n\nclass PiePlotArea extends PlotAreaBase {\n    render() {\n        this.createPieChart(this.series);\n    }\n\n    createPieChart(series) {\n        const firstSeries = series[0];\n        const pieChart = new PieChart(this, {\n            series: series,\n            padding: firstSeries.padding,\n            startAngle: firstSeries.startAngle,\n            connectors: firstSeries.connectors,\n            legend: this.options.legend\n        });\n\n        this.appendChart(pieChart);\n    }\n\n    appendChart(chart, pane) {\n        super.appendChart(chart, pane);\n        append(this.options.legend.items, chart.legendItems);\n    }\n}\n\nexport default PiePlotArea;","import PieSegment from '../pie-chart/pie-segment';\nimport PointEventsMixin from '../mixins/point-events-mixin';\n\nimport { PIE } from '../constants';\n\nimport { ShapeBuilder, Box } from '../../core';\n\nimport { CENTER } from '../../common/constants';\nimport { deepExtend, setDefaultOptions } from '../../common';\n\nclass DonutSegment extends PieSegment {\n    reflowLabel() {\n        const { options: { labels: labelsOptions }, label } = this;\n        const sector = this.sector.clone();\n        const angle = sector.middle();\n\n        if (label) {\n            const labelHeight = label.box.height();\n            if (labelsOptions.position === CENTER) {\n                sector.radius -= (sector.radius - sector.innerRadius) / 2;\n\n                const lp = sector.point(angle);\n\n                label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n            } else {\n                super.reflowLabel();\n            }\n        }\n    }\n\n    createSegment(sector, options) {\n        return ShapeBuilder.current.createRing(sector, options);\n    }\n}\n\nsetDefaultOptions(DonutSegment, {\n    overlay: {\n        gradient: \"roundedGlass\"\n    },\n    labels: {\n        position: CENTER\n    },\n    animation: {\n        type: PIE\n    }\n});\n\ndeepExtend(DonutSegment.prototype, PointEventsMixin);\n\n\nexport default DonutSegment;\n","import PieChart from '../pie-chart/pie-chart';\nimport DonutSegment from './donut-segment';\n\nimport { INITIAL_ANIMATION_DURATION } from '../constants';\n\nimport { deepExtend, defined, setDefaultOptions, valueOrDefault } from '../../common';\n\nconst DONUT_SECTOR_ANIM_DELAY = 50;\n\nclass DonutChart extends PieChart {\n    addValue(value, sector, fields) {\n        const segmentOptions = deepExtend({}, fields.series, { index: fields.index });\n        this.evalSegmentOptions(segmentOptions, value, fields);\n\n        this.createLegendItem(value, segmentOptions, fields);\n\n        if (!value || fields.visible === false) {\n            return;\n        }\n\n        const segment = new DonutSegment(value, sector, segmentOptions);\n\n        Object.assign(segment, fields);\n        this.append(segment);\n        this.points.push(segment);\n    }\n\n    reflow(targetBox) {\n        const options = this.options;\n        const box = targetBox.clone();\n        const space = 5;\n        const minWidth = Math.min(box.width(), box.height());\n        const halfMinWidth = minWidth / 2;\n        const defaultPadding = minWidth - minWidth * 0.85;\n        const series = options.series;\n        const seriesCount = series.length;\n\n        let padding = valueOrDefault(options.padding, defaultPadding);\n        padding = padding > halfMinWidth - space ? halfMinWidth - space : padding;\n\n        let totalSize = halfMinWidth - padding;\n        let seriesWithoutSize = 0;\n        let holeSize;\n\n        for (let i = 0; i < seriesCount; i++) {\n            const currentSeries = series[i];\n            if (i === 0) {\n                if (defined(currentSeries.holeSize)) {\n                    holeSize = currentSeries.holeSize;\n                    totalSize -= currentSeries.holeSize;\n                }\n            }\n\n            if (defined(currentSeries.size)) {\n                totalSize -= currentSeries.size;\n            } else {\n                seriesWithoutSize++;\n            }\n\n            if (defined(currentSeries.margin) && i !== seriesCount - 1) {\n                totalSize -= currentSeries.margin;\n            }\n        }\n\n        if (!defined(holeSize)) {\n            const currentSize = (halfMinWidth - padding) / (seriesCount + 0.75);\n            holeSize = currentSize * 0.75;\n            totalSize -= holeSize;\n        }\n\n        let innerRadius = holeSize;\n        let margin = 0;\n        let size, radius;\n\n        this.seriesConfigs = [];\n\n        for (let i = 0; i < seriesCount; i++) {\n            const currentSeries = series[i];\n            size = valueOrDefault(currentSeries.size, totalSize / seriesWithoutSize);\n            innerRadius += margin;\n            radius = innerRadius + size;\n            this.seriesConfigs.push({ innerRadius: innerRadius, radius: radius });\n            margin = currentSeries.margin || 0;\n            innerRadius = radius;\n        }\n\n        super.reflow(targetBox);\n    }\n\n    animationDelay(categoryIndex, seriesIndex, seriesCount) {\n        return categoryIndex * DONUT_SECTOR_ANIM_DELAY +\n            (INITIAL_ANIMATION_DURATION * (seriesIndex + 1) / (seriesCount + 1));\n    }\n}\n\n\nsetDefaultOptions(DonutChart, {\n    startAngle: 90,\n    connectors: {\n        width: 2,\n        color: \"#939393\",\n        padding: 8\n    }\n});\n\nexport default DonutChart;","import PiePlotArea from './pie-plotarea';\nimport DonutChart from '../donut-chart/donut-chart';\n\nclass DonutPlotArea extends PiePlotArea {\n    render() {\n        this.createDonutChart(this.series);\n    }\n\n    createDonutChart(series) {\n        const firstSeries = series[0];\n        const donutChart = new DonutChart(this, {\n            series: series,\n            padding: firstSeries.padding,\n            connectors: firstSeries.connectors,\n            legend: this.options.legend\n        });\n\n        this.appendChart(donutChart);\n    }\n}\n\nexport default DonutPlotArea;","import PlotAreaBase from './plotarea-base';\nimport AxisGroupRangeTracker from '../axis-group-range-tracker';\nimport { RadarLogarithmicAxis, RadarNumericAxis } from '../../core';\n\nimport { LOGARITHMIC } from '../constants';\n\nimport { getSpacing } from '../../common';\n\nconst DEFAULT_PADDING = 0.15;\n\nclass PolarPlotAreaBase extends PlotAreaBase {\n    initFields() {\n        this.valueAxisRangeTracker = new AxisGroupRangeTracker();\n    }\n\n    render() {\n        this.addToLegend(this.series);\n        this.createPolarAxis();\n        this.createCharts();\n        this.createValueAxis();\n    }\n\n    alignAxes() {\n        const axis = this.valueAxis;\n        const range = axis.range();\n        const crossingValue = axis.options.reverse ? range.max : range.min;\n        const slot = axis.getSlot(crossingValue);\n        const center = this.polarAxis.getSlot(0).center;\n        const axisBox = axis.box.translate(\n            center.x - slot.x1,\n            center.y - slot.y1\n        );\n\n        axis.reflow(axisBox);\n    }\n\n    createValueAxis() {\n        const tracker = this.valueAxisRangeTracker;\n        const defaultRange = tracker.query();\n        const axisOptions = this.valueAxisOptions({\n            roundToMajorUnit: false,\n            zIndex: -1\n        });\n        let axisType, axisDefaultRange;\n\n        if (axisOptions.type === LOGARITHMIC) {\n            axisType = RadarLogarithmicAxis;\n            axisDefaultRange = { min: 0.1, max: 1 };\n        } else {\n            axisType = RadarNumericAxis;\n            axisDefaultRange = { min: 0, max: 1 };\n        }\n\n        const range = tracker.query(name) || defaultRange || axisDefaultRange;\n\n        if (range && defaultRange) {\n            range.min = Math.min(range.min, defaultRange.min);\n            range.max = Math.max(range.max, defaultRange.max);\n        }\n\n        const valueAxis = new axisType(\n            range.min, range.max,\n            axisOptions,\n            this.chartService\n        );\n\n        this.valueAxis = valueAxis;\n        this.appendAxis(valueAxis);\n    }\n\n    reflowAxes() {\n        const { options: { plotArea: options }, valueAxis, polarAxis, box } = this;\n        const defaultPadding = Math.min(box.width(), box.height()) * DEFAULT_PADDING;\n        const padding = getSpacing(options.padding || {}, defaultPadding);\n        const axisBox = box.clone().unpad(padding);\n        const valueAxisBox = axisBox.clone().shrink(0, axisBox.height() / 2);\n\n        polarAxis.reflow(axisBox);\n        valueAxis.reflow(valueAxisBox);\n        const heightDiff = valueAxis.lineBox().height() - valueAxis.box.height();\n        valueAxis.reflow(valueAxis.box.unpad({ top: heightDiff }));\n\n        this.axisBox = axisBox;\n        this.alignAxes(axisBox);\n    }\n\n    backgroundBox() {\n        return this.box;\n    }\n}\n\nexport default PolarPlotAreaBase;","import ScatterChart from '../scatter-charts/scatter-chart';\n\nimport { Point, Box } from '../../core';\n\nimport { setDefaultOptions } from '../../common';\n\nclass PolarScatterChart extends ScatterChart {\n    pointSlot(slotX, slotY) {\n        const valueRadius = slotX.center.y - slotY.y1;\n        const slot = Point.onCircle(slotX.center, slotX.startAngle, valueRadius);\n\n        return new Box(slot.x, slot.y, slot.x, slot.y);\n    }\n}\n\nsetDefaultOptions(PolarScatterChart, {\n    clip: false\n});\n\nexport default PolarScatterChart;","import ScatterLineChart from '../scatter-charts/scatter-line-chart';\nimport PolarScatterChart from '../polar-scatter-chart/polar-scatter-chart';\n\nimport { setDefaultOptions } from '../../common';\n\nclass PolarLineChart extends ScatterLineChart {\n}\n\nPolarLineChart.prototype.pointSlot = PolarScatterChart.prototype.pointSlot;\n\nsetDefaultOptions(PolarLineChart, {\n    clip: false\n});\n\nexport default PolarLineChart;","import SplineAreaSegment from '../area-chart/spline-area-segment';\nimport LineSegment from '../line-chart/line-segment';\nimport { CurveProcessor } from '../../core';\n\nclass SplinePolarAreaSegment extends SplineAreaSegment {\n    closeFill(fillPath) {\n        const center = this._polarAxisCenter();\n        fillPath.lineTo(center.x, center.y);\n    }\n\n    _polarAxisCenter() {\n        const polarAxis = this.parent.plotArea.polarAxis;\n        const center = polarAxis.box.center();\n        return center;\n    }\n\n    strokeSegments() {\n        let segments = this._strokeSegments;\n\n        if (!segments) {\n            const center = this._polarAxisCenter();\n            const curveProcessor = new CurveProcessor(false);\n            const linePoints = LineSegment.prototype.points.call(this);\n\n            linePoints.push(center);\n            segments = this._strokeSegments = curveProcessor.process(linePoints);\n            segments.pop();\n        }\n\n        return segments;\n    }\n}\n\nexport default SplinePolarAreaSegment;","import AreaSegment from '../area-chart/area-segment';\nimport LineSegment from '../line-chart/line-segment';\n\nclass PolarAreaSegment extends AreaSegment {\n    points() {\n        const { parent: { plotArea: { polarAxis } }, stackPoints } = this;\n        const center = polarAxis.box.center();\n        const points = LineSegment.prototype.points.call(this, stackPoints);\n\n        points.unshift([ center.x, center.y ]);\n        points.push([ center.x, center.y ]);\n\n        return points;\n    }\n}\n\nexport default PolarAreaSegment;","import PolarLineChart from '../polar-line-chart/polar-line-chart';\nimport SplinePolarAreaSegment from './spline-polar-area-segment';\nimport PolarAreaSegment from './polar-area-segment';\n\nimport { SMOOTH, INTERPOLATE, ZERO, GAP } from '../constants';\n\nimport hasValue from '../utils/has-value';\n\nclass PolarAreaChart extends PolarLineChart {\n    createSegment(linePoints, currentSeries, seriesIx) {\n        const style = (currentSeries.line || {}).style;\n        let segment;\n\n        if (style === SMOOTH) {\n            segment = new SplinePolarAreaSegment(linePoints, null, false, currentSeries, seriesIx);\n        } else {\n            segment = new PolarAreaSegment(linePoints, [], currentSeries, seriesIx);\n        }\n        return segment;\n    }\n\n    createMissingValue(value, missingValues) {\n        let missingValue;\n\n        if (hasValue(value.x) && missingValues !== INTERPOLATE) {\n            missingValue = {\n                x: value.x,\n                y: value.y\n            };\n            if (missingValues === ZERO) {\n                missingValue.y = 0;\n            }\n        }\n\n        return missingValue;\n    }\n\n    seriesMissingValues(series) {\n        return series.missingValues || ZERO;\n    }\n\n    _hasMissingValuesGap() {\n        const series = this.options.series;\n\n        for (let idx = 0; idx < series.length; idx++) {\n            if (this.seriesMissingValues(series[idx]) === GAP) {\n                return true;\n            }\n        }\n    }\n\n    sortPoints(points) {\n        points.sort(xComparer);\n\n        if (this._hasMissingValuesGap()) {\n            for (let idx = 0; idx < points.length; idx++) {\n                const point = points[idx];\n                if (point) {\n                    const value = point.value;\n                    if (!hasValue(value.y) && this.seriesMissingValues(point.series) === GAP) {\n                        delete points[idx];\n                    }\n                }\n            }\n        }\n\n        return points;\n    }\n}\n\nfunction xComparer(a, b) {\n    return a.value.x - b.value.x;\n}\n\nexport default PolarAreaChart;","import PolarPlotAreaBase from './polar-plotarea-base';\nimport PlotAreaBase from './plotarea-base';\nimport PolarLineChart from '../polar-line-chart/polar-line-chart';\nimport PolarScatterChart from '../polar-scatter-chart/polar-scatter-chart';\nimport PolarAreaChart from '../polar-area-chart/polar-area-chart';\nimport PlotAreaEventsMixin from '../mixins/plotarea-events-mixin';\n\nimport { PolarAxis, Point } from '../../core';\n\nimport { POLAR_AREA, POLAR_LINE, POLAR_SCATTER } from '../constants';\n\nimport filterSeriesByType from '../utils/filter-series-by-type';\n\nimport { ARC } from '../../common/constants';\nimport { deepExtend, eventElement, setDefaultOptions } from '../../common';\n\nclass PolarPlotArea extends PolarPlotAreaBase {\n    createPolarAxis() {\n        const polarAxis = new PolarAxis(this.options.xAxis, this.chartService);\n\n        this.polarAxis = polarAxis;\n        this.axisX = polarAxis;\n        this.appendAxis(polarAxis);\n    }\n\n    valueAxisOptions(defaults) {\n        return deepExtend(defaults, {\n            majorGridLines: { type: ARC },\n            minorGridLines: { type: ARC }\n        }, this.options.yAxis);\n    }\n\n    createValueAxis() {\n        super.createValueAxis();\n        this.axisY = this.valueAxis;\n    }\n\n    appendChart(chart, pane) {\n        this.valueAxisRangeTracker.update(chart.yAxisRanges);\n\n        PlotAreaBase.prototype.appendChart.call(this, chart, pane);\n    }\n\n    createCharts() {\n        const series = this.filterVisibleSeries(this.series);\n        const pane = this.panes[0];\n\n        this.createLineChart(\n            filterSeriesByType(series, [ POLAR_LINE ]),\n            pane\n        );\n\n        this.createScatterChart(\n            filterSeriesByType(series, [ POLAR_SCATTER ]),\n            pane\n        );\n\n        this.createAreaChart(\n            filterSeriesByType(series, [ POLAR_AREA ]),\n            pane\n        );\n    }\n\n    createLineChart(series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        const lineChart = new PolarLineChart(this, { series: series });\n\n        this.appendChart(lineChart, pane);\n    }\n\n    createScatterChart(series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        const scatterChart = new PolarScatterChart(this, { series: series });\n\n        this.appendChart(scatterChart, pane);\n    }\n\n    createAreaChart(series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        const areaChart = new PolarAreaChart(this, { series: series });\n\n        this.appendChart(areaChart, pane);\n    }\n\n    _dispatchEvent(chart, e, eventType) {\n        const coords = chart._eventCoordinates(e);\n        const point = new Point(coords.x, coords.y);\n        const xValue = this.axisX.getValue(point);\n        const yValue = this.axisY.getValue(point);\n\n        if (xValue !== null && yValue !== null) {\n            chart.trigger(eventType, {\n                element: eventElement(e),\n                x: xValue,\n                y: yValue\n            });\n        }\n    }\n\n    createCrosshairs() {}\n}\n\nsetDefaultOptions(PolarPlotArea, {\n    xAxis: {},\n    yAxis: {}\n});\n\ndeepExtend(PolarPlotArea.prototype, PlotAreaEventsMixin);\n\nexport default PolarPlotArea;","import LineChart from '../line-chart/line-chart';\nimport SplineSegment from '../line-chart/spline-segment';\nimport LineSegment from '../line-chart/line-segment';\n\nimport { Point, Box } from '../../core';\n\nimport { SMOOTH } from '../constants';\n\nimport { setDefaultOptions } from '../../common';\n\nclass RadarLineChart extends LineChart {\n\n    pointSlot(categorySlot, valueSlot) {\n        const valueRadius = categorySlot.center.y - valueSlot.y1;\n        const slot = Point.onCircle(categorySlot.center, categorySlot.middle(), valueRadius);\n\n        return new Box(slot.x, slot.y, slot.x, slot.y);\n    }\n\n    createSegment(linePoints, currentSeries, seriesIx) {\n        const style = currentSeries.style;\n        let pointType;\n\n        if (style === SMOOTH) {\n            pointType = SplineSegment;\n        } else {\n            pointType = LineSegment;\n        }\n\n        const segment = new pointType(linePoints, currentSeries, seriesIx);\n\n        if (linePoints.length === currentSeries.data.length) {\n            segment.options.closed = true;\n        }\n\n        return segment;\n    }\n}\n\nsetDefaultOptions(RadarLineChart, {\n    clip: false\n});\n\nexport default RadarLineChart;","import SplineAreaSegment from '../area-chart/spline-area-segment';\n\nclass SplineRadarAreaSegment extends SplineAreaSegment {\n    closeFill() {}\n}\n\nexport default SplineRadarAreaSegment;","import AreaSegment from '../area-chart/area-segment';\nimport LineSegment from '../line-chart/line-segment';\n\nclass RadarAreaSegment extends AreaSegment {\n    points() {\n        return LineSegment.prototype.points.call(this, this.stackPoints);\n    }\n}\n\nexport default RadarAreaSegment;","import RadarLineChart from '../radar-line-chart/radar-line-chart';\nimport SplineRadarAreaSegment from './spline-radar-area-segment';\nimport RadarAreaSegment from './radar-area-segment';\n\nimport { SMOOTH, ZERO } from '../constants';\n\nclass RadarAreaChart extends RadarLineChart {\n    createSegment(linePoints, currentSeries, seriesIx, prevSegment) {\n        const isStacked = this.options.isStacked;\n        const style = (currentSeries.line || {}).style;\n        let segment;\n\n        if (style === SMOOTH) {\n            segment = new SplineRadarAreaSegment(linePoints, prevSegment, isStacked, currentSeries, seriesIx);\n            segment.options.closed = true;\n        } else {\n            let stackPoints;\n            if (isStacked && seriesIx > 0 && prevSegment) {\n                stackPoints = prevSegment.linePoints.slice(0).reverse();\n            }\n\n            linePoints.push(linePoints[0]);\n            segment = new RadarAreaSegment(linePoints, stackPoints, currentSeries, seriesIx);\n        }\n\n        return segment;\n    }\n\n    seriesMissingValues(series) {\n        return series.missingValues || ZERO;\n    }\n}\n\nexport default RadarAreaChart;","import DonutSegment from '../donut-chart/donut-segment';\n\nimport { setDefaultOptions } from '../../common';\n\nclass RadarSegment extends DonutSegment {\n    constructor(value, options) {\n        super(value, null, options);\n    }\n}\n\nsetDefaultOptions(RadarSegment, {\n    overlay: {\n        gradient: \"none\"\n    },\n    labels: {\n        distance: 10\n    }\n});\n\nexport default RadarSegment;","import { ChartElement } from '../../core';\n\nimport { setDefaultOptions } from '../../common';\n\nclass RadarClusterLayout extends ChartElement {\n    reflow(sector) {\n        const { options, children } = this;\n        const { gap, spacing } = options;\n        const count = children.length;\n        const slots = count + gap + (spacing * (count - 1));\n        const slotAngle = sector.angle / slots;\n        let angle = sector.startAngle + slotAngle * (gap / 2);\n\n        for (let i = 0; i < count; i++) {\n            const slotSector = sector.clone();\n            slotSector.startAngle = angle;\n            slotSector.angle = slotAngle;\n\n            if (children[i].sector) {\n                slotSector.radius = children[i].sector.radius;\n            }\n\n            children[i].reflow(slotSector);\n            children[i].sector = slotSector;\n\n            angle += slotAngle + (slotAngle * spacing);\n        }\n    }\n}\n\nsetDefaultOptions(RadarClusterLayout, {\n    gap: 1,\n    spacing: 0\n});\n\nexport default RadarClusterLayout;","import { ChartElement, Box } from '../../core';\n\nclass RadarStackLayout extends ChartElement {\n    reflow(sector) {\n        const { options: { reverse }, children } = this;\n        const childrenCount = children.length;\n        const first = reverse ? childrenCount - 1 : 0;\n        const step = reverse ? -1 : 1;\n\n        this.box = new Box();\n\n        for (let i = first; i >= 0 && i < childrenCount; i += step) {\n            const childSector = children[i].sector;\n            childSector.startAngle = sector.startAngle;\n            childSector.angle = sector.angle;\n        }\n    }\n}\n\nexport default RadarStackLayout;","import BarChart from '../bar-chart/bar-chart';\nimport RadarSegment from './radar-segment';\nimport RadarClusterLayout from '../layout/radar-cluster-layout';\nimport RadarStackLayout from '../layout/radar-stack-layout';\nimport CategoricalChart from '../categorical-chart';\n\nimport { setDefaultOptions } from '../../common';\n\nclass RadarBarChart extends BarChart {\n    pointType() {\n        return RadarSegment;\n    }\n\n    clusterType() {\n        return RadarClusterLayout;\n    }\n\n    stackType() {\n        return RadarStackLayout;\n    }\n\n    categorySlot(categoryAxis, categoryIx) {\n        return categoryAxis.getSlot(categoryIx);\n    }\n\n    pointSlot(categorySlot, valueSlot) {\n        const slot = categorySlot.clone();\n        const y = categorySlot.center.y;\n\n        slot.radius = y - valueSlot.y1;\n        slot.innerRadius = y - valueSlot.y2;\n\n        return slot;\n    }\n\n    reflowPoint(point, pointSlot) {\n        point.sector = pointSlot;\n        point.reflow();\n    }\n\n    createAnimation() {\n        this.options.animation.center = this.box.toRect().center();\n        super.createAnimation();\n    }\n}\n\nRadarBarChart.prototype.reflow = CategoricalChart.prototype.reflow;\n\nsetDefaultOptions(RadarBarChart, {\n    clip: false,\n    animation: {\n        type: \"pie\"\n    }\n});\n\nexport default RadarBarChart;","import PolarPlotAreaBase from './polar-plotarea-base';\nimport CategoricalPlotArea from './categorical-plotarea';\nimport RadarAreaChart from '../radar-area-chart/radar-area-chart';\nimport RadarLineChart from '../radar-line-chart/radar-line-chart';\nimport RadarBarChart from '../radar-bar-chart/radar-bar-chart';\nimport PlotAreaEventsMixin from '../mixins/plotarea-events-mixin';\n\nimport { RadarCategoryAxis, Point } from '../../core';\n\nimport { RADAR_AREA, RADAR_LINE, RADAR_COLUMN } from '../constants';\n\nimport filterSeriesByType from '../utils/filter-series-by-type';\n\nimport { ARC } from '../../common/constants';\nimport { eventElement, deepExtend, setDefaultOptions } from '../../common';\n\nclass RadarPlotArea extends PolarPlotAreaBase {\n    createPolarAxis() {\n        const categoryAxis = new RadarCategoryAxis(this.options.categoryAxis, this.chartService);\n\n        this.polarAxis = categoryAxis;\n        this.categoryAxis = categoryAxis;\n        this.appendAxis(categoryAxis);\n        this.aggregateCategories();\n        this.createCategoryAxesLabels();\n    }\n\n    valueAxisOptions(defaults) {\n        if (this._hasBarCharts) {\n            deepExtend(defaults, {\n                majorGridLines: { type: ARC },\n                minorGridLines: { type: ARC }\n            });\n        }\n\n        if (this._isStacked100) {\n            deepExtend(defaults, {\n                roundToMajorUnit: false,\n                labels: { format: \"P0\" }\n            });\n        }\n\n        return deepExtend(defaults, this.options.valueAxis);\n    }\n\n    aggregateCategories() {\n        // No separate panes in radar charts\n        CategoricalPlotArea.prototype.aggregateCategories.call(this, this.panes);\n    }\n\n    createCategoryAxesLabels() {\n        CategoricalPlotArea.prototype.createCategoryAxesLabels.call(this, this.panes);\n    }\n\n    filterSeries(currentSeries) {\n        // Not supported for radar charts\n        return currentSeries;\n    }\n\n    createCharts() {\n        const series = this.filterVisibleSeries(this.series);\n        const pane = this.panes[0];\n\n        this.createAreaChart(\n            filterSeriesByType(series, [ RADAR_AREA ]),\n            pane\n        );\n\n        this.createLineChart(\n            filterSeriesByType(series, [ RADAR_LINE ]),\n            pane\n        );\n\n        this.createBarChart(\n            filterSeriesByType(series, [ RADAR_COLUMN ]),\n            pane\n        );\n    }\n\n    chartOptions(series) {\n        const options = { series: series };\n        const firstSeries = series[0];\n        if (firstSeries) {\n            const filteredSeries = this.filterVisibleSeries(series);\n            const stack = firstSeries.stack;\n            options.isStacked = stack && filteredSeries.length > 1;\n            options.isStacked100 = stack && stack.type === \"100%\" && filteredSeries.length > 1;\n\n            if (options.isStacked100) {\n                this._isStacked100 = true;\n            }\n        }\n\n        return options;\n    }\n\n    createAreaChart(series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        const areaChart = new RadarAreaChart(this, this.chartOptions(series));\n        this.appendChart(areaChart, pane);\n    }\n\n    createLineChart(series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        const lineChart = new RadarLineChart(this, this.chartOptions(series));\n        this.appendChart(lineChart, pane);\n    }\n\n    createBarChart(series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        const firstSeries = series[0];\n        const options = this.chartOptions(series);\n        options.gap = firstSeries.gap;\n        options.spacing = firstSeries.spacing;\n\n        const barChart = new RadarBarChart(this, options);\n        this.appendChart(barChart, pane);\n\n        this._hasBarCharts = true;\n    }\n\n    seriesCategoryAxis() {\n        return this.categoryAxis;\n    }\n\n    _dispatchEvent(chart, e, eventType) {\n        const coords = chart._eventCoordinates(e);\n        const point = new Point(coords.x, coords.y);\n        const category = this.categoryAxis.getCategory(point);\n        const value = this.valueAxis.getValue(point);\n\n        if (category !== null && value !== null) {\n            chart.trigger(eventType, {\n                element: eventElement(e),\n                category: category,\n                value: value\n            });\n        }\n    }\n\n    createCrosshairs() {}\n}\n\ndeepExtend(RadarPlotArea.prototype, PlotAreaEventsMixin, {\n    appendChart: CategoricalPlotArea.prototype.appendChart,\n    aggregateSeries: CategoricalPlotArea.prototype.aggregateSeries\n});\n\nsetDefaultOptions(RadarPlotArea, {\n    categoryAxis: {\n        categories: []\n    },\n    valueAxis: {}\n});\n\nexport default RadarPlotArea;","import { drawing as draw } from '@progress/kendo-drawing';\n\nimport { ChartElement, Box, Point } from '../../core';\nimport PointEventsMixin from '../mixins/point-events-mixin';\n\nimport { WHITE } from '../../common/constants';\nimport { deepExtend, setDefaultOptions } from '../../common';\n\nclass FunnelSegment extends ChartElement {\n    constructor(value, options, segmentOptions) {\n        super(options);\n\n        this.value = value;\n        this.options.index = segmentOptions.index;\n    }\n\n    reflow(chartBox) {\n        const points = this.points;\n        const label = this.children[0];\n\n        this.box = new Box(points[0].x, points[0].y, points[1].x, points[2].y);\n\n        if (label) {\n            label.reflow(new Box(chartBox.x1, points[0].y, chartBox.x2, points[2].y));\n        }\n    }\n\n    createVisual() {\n        const options = this.options;\n        let visual;\n\n        super.createVisual();\n\n        if (options.visual) {\n            visual = options.visual({\n                category: this.category,\n                dataItem: this.dataItem,\n                value: this.value,\n                series: this.series,\n                percentage: this.percentage,\n                points: this.points,\n                options: options,\n                sender: this.getSender(),\n                createVisual: () => this.createPath()\n            });\n        } else {\n            visual = this.createPath();\n        }\n\n        if (visual) {\n            this.visual.append(visual);\n        }\n    }\n\n    createPath() {\n        const options = this.options;\n        const border = options.border;\n        const path = draw.Path.fromPoints(this.points, {\n            fill: {\n                color: options.color,\n                opacity: options.opacity\n            },\n            stroke: {\n                color: border.color,\n                opacity: border.opacity,\n                width: border.width\n            }\n        }).close();\n\n        return path;\n    }\n\n    createHighlight(style) {\n        return draw.Path.fromPoints(this.points, style);\n    }\n\n    highlightVisual() {\n        return this.visual.children[0];\n    }\n\n    highlightVisualArgs() {\n        const path = draw.Path.fromPoints(this.points).close();\n\n        return {\n            options: this.options,\n            path: path\n        };\n    }\n\n    tooltipAnchor() {\n        const box = this.box;\n        return {\n            point: new Point(box.center().x, box.y1),\n            align: {\n                horizontal: \"center\",\n                vertical: \"top\"\n            }\n        };\n    }\n\n    formatValue(format) {\n        const point = this;\n        return point.owner.formatPointValue(point, format);\n    }\n}\n\nsetDefaultOptions(FunnelSegment, {\n    color: WHITE,\n    border: {\n        width: 1\n    }\n});\n\ndeepExtend(FunnelSegment.prototype, PointEventsMixin);\n\nexport default FunnelSegment;","import { geometry as geom, Color } from '@progress/kendo-drawing';\n\nimport { ChartElement, TextBox } from '../../core';\nimport PieChartMixin from '../mixins/pie-chart-mixin';\nimport SeriesBinder from '../series-binder';\nimport FunnelSegment from './funnel-segment';\n\nimport seriesTotal from '../utils/series-total';\nimport evalOptions from '../utils/eval-options';\nimport segmentVisible from '../utils/segment-visible';\n\nimport { BLACK, WHITE, CENTER, LEFT } from '../../common/constants';\nimport { deepExtend, isFunction, getTemplate, limitValue, setDefaultOptions } from '../../common';\n\nclass FunnelChart extends ChartElement {\n    constructor(plotArea, options) {\n        super(options);\n\n        this.plotArea = plotArea;\n        this.points = [];\n        this.labels = [];\n        this.legendItems = [];\n        this.render();\n    }\n\n    formatPointValue(point, format) {\n        return this.chartService.format.auto(format,point.value);\n    }\n\n    render() {\n        const { options, plotArea: { options: { seriesColors = [] } } } = this;\n        const series = options.series[0];\n        const data = series.data;\n\n        if (!data) {\n            return;\n        }\n\n        const total = seriesTotal(series);\n\n        for (let i = 0; i < data.length; i++) {\n            const pointData = SeriesBinder.current.bindPoint(series, i);\n            const value = pointData.valueFields.value;\n\n            if (value === null || value === undefined) {\n                continue;\n            }\n\n            let fields = pointData.fields;\n\n            if (!isFunction(series.color)) {\n                series.color = fields.color || seriesColors[i % seriesColors.length];\n            }\n\n            const visible = segmentVisible(series, fields, i);\n            fields = deepExtend({\n                index: i,\n                owner: this,\n                series: series,\n                dataItem: data[i],\n                percentage: Math.abs(value) / total\n            }, fields, { visible: visible });\n\n            const segment = this.createSegment(value, fields);\n            const label = this.createLabel(value, fields);\n\n            if (segment && label) {\n                segment.append(label);\n            }\n        }\n    }\n\n    evalSegmentOptions(options, value, fields) {\n        const series = fields.series;\n\n        evalOptions(options, {\n            value: value,\n            series: series,\n            dataItem: fields.dataItem,\n            index: fields.index\n        }, { defaults: series._defaults, excluded: [ \"data\", \"content\", \"template\", \"toggle\", \"visual\" ] });\n    }\n\n    createSegment(value, fields) {\n        const seriesOptions = deepExtend({}, fields.series);\n        this.evalSegmentOptions(seriesOptions, value, fields);\n\n        this.createLegendItem(value, seriesOptions, fields);\n\n        if (fields.visible !== false) {\n\n            const segment = new FunnelSegment(value, seriesOptions, fields);\n            Object.assign(segment, fields);\n\n            this.append(segment);\n            this.points.push(segment);\n\n            return segment;\n        }\n    }\n\n    createLabel(value, fields) {\n        const { series, dataItem } = fields;\n        const labels = deepExtend({}, this.options.labels, series.labels);\n        let text = value;\n\n        if (labels.visible) {\n            const labelTemplate = getTemplate(labels);\n            if (labelTemplate) {\n                text = labelTemplate({\n                    dataItem: dataItem,\n                    value: value,\n                    percentage: fields.percentage,\n                    category: fields.category,\n                    series: series\n                });\n            } else if (labels.format) {\n                text = this.plotArea.chartService.format.auto(labels.format, text);\n            }\n\n            if (!labels.color) {\n                const brightnessValue = new Color(series.color).percBrightness();\n                if (brightnessValue > 180) {\n                    labels.color = BLACK;\n                } else {\n                    labels.color = WHITE;\n                }\n                if (!labels.background) {\n                    labels.background = series.color;\n                }\n            }\n\n            this.evalSegmentOptions(labels, value, fields);\n            const textBox = new TextBox(text, deepExtend({\n                vAlign: labels.position\n            }, labels));\n\n            this.labels.push(textBox);\n\n            return textBox;\n        }\n    }\n\n    labelPadding() {\n        const labels = this.labels;\n        const padding = { left: 0, right: 0 };\n\n        for (let i = 0; i < labels.length; i++) {\n            const label = labels[i];\n            const align = label.options.align;\n            if (align !== CENTER) {\n                const width = labels[i].box.width();\n\n                if (align === LEFT) {\n                    padding.left = Math.max(padding.left, width);\n                } else {\n                    padding.right = Math.max(padding.right, width);\n                }\n            }\n        }\n\n        return padding;\n    }\n\n    dynamicSlopeReflow(box, width, totalHeight) {\n        const { options, points: segments } = this;\n        const count = segments.length;\n        const firstSegment = segments[0];\n        let maxSegment = firstSegment;\n\n        for (let idx = 0; idx < segments.length; idx++) {\n            if (segments[idx].percentage > maxSegment.percentage) {\n                maxSegment = segments[idx];\n            }\n        }\n\n        let lastUpperSide = (firstSegment.percentage / maxSegment.percentage) * width;\n        let previousOffset = (width - lastUpperSide) / 2;\n        let previousHeight = 0;\n\n        for (let idx = 0; idx < count; idx++) {\n            const percentage = segments[idx].percentage;\n            const nextSegment = segments[idx + 1];\n            const nextPercentage = (nextSegment ? nextSegment.percentage : percentage);\n            const points = segments[idx].points = [];\n            const height = (options.dynamicHeight) ? (totalHeight * percentage) : (totalHeight / count);\n            let offset;\n\n            if (!percentage) {\n                offset = nextPercentage ? 0 : width / 2;\n            } else {\n                offset = (width - lastUpperSide * (nextPercentage / percentage)) / 2;\n            }\n\n            offset = limitValue(offset, 0, width);\n\n            points.push(new geom.Point(box.x1 + previousOffset, box.y1 + previousHeight));\n            points.push(new geom.Point(box.x1 + width - previousOffset, box.y1 + previousHeight));\n            points.push(new geom.Point(box.x1 + width - offset, box.y1 + height + previousHeight));\n            points.push(new geom.Point(box.x1 + offset, box.y1 + height + previousHeight));\n\n            previousOffset = offset;\n            previousHeight += height + options.segmentSpacing;\n            lastUpperSide = limitValue(width - 2 * offset, 0, width);\n        }\n    }\n\n    constantSlopeReflow(box, width, totalHeight) {\n        const { options, points: segments } = this;\n        const count = segments.length;\n        const decreasingWidth = options.neckRatio <= 1;\n        const neckRatio = decreasingWidth ? options.neckRatio * width : width;\n        let previousOffset = decreasingWidth ? 0 : (width - width / options.neckRatio) / 2;\n        const topMostWidth = decreasingWidth ? width : width - previousOffset * 2;\n        const finalNarrow = (topMostWidth - neckRatio) / 2;\n        let previousHeight = 0;\n\n        for (let idx = 0; idx < count; idx++) {\n            const points = segments[idx].points = [];\n            const percentage = segments[idx].percentage;\n            const offset = (options.dynamicHeight) ? (finalNarrow * percentage) : (finalNarrow / count);\n            const height = (options.dynamicHeight) ? (totalHeight * percentage) : (totalHeight / count);\n\n            points.push(new geom.Point(box.x1 + previousOffset, box.y1 + previousHeight));\n            points.push(new geom.Point(box.x1 + width - previousOffset, box.y1 + previousHeight));\n            points.push(new geom.Point(box.x1 + width - previousOffset - offset, box.y1 + height + previousHeight));\n            points.push(new geom.Point(box.x1 + previousOffset + offset,box.y1 + height + previousHeight));\n            previousOffset += offset;\n            previousHeight += height + options.segmentSpacing;\n        }\n    }\n\n    reflow(chartBox) {\n        const points = this.points;\n        const count = points.length;\n\n        if (!count) {\n            return;\n        }\n\n        const options = this.options;\n        const box = chartBox.clone().unpad(this.labelPadding());\n        const totalHeight = box.height() - options.segmentSpacing * (count - 1);\n        const width = box.width();\n\n        if (options.dynamicSlope) {\n            this.dynamicSlopeReflow(box, width, totalHeight);\n        } else {\n            this.constantSlopeReflow(box, width, totalHeight);\n        }\n\n        for (let idx = 0; idx < count; idx++) {\n            points[idx].reflow(chartBox);\n        }\n    }\n}\n\nsetDefaultOptions(FunnelChart, {\n    neckRatio: 0.3,\n    width: 300,\n    dynamicSlope: false,\n    dynamicHeight: true,\n    segmentSpacing: 0,\n    labels: {\n        visible: false,\n        align: CENTER,\n        position: CENTER,\n        zIndex: 1\n    }\n});\n\ndeepExtend(FunnelChart.prototype, PieChartMixin);\n\nexport default FunnelChart;\n","import PlotAreaBase from './plotarea-base';\nimport FunnelChart from '../funnel-chart/funnel-chart';\n\nimport { append } from '../../common';\n\nclass FunnelPlotArea extends PlotAreaBase {\n    render() {\n        this.createFunnelChart(this.series);\n    }\n\n    createFunnelChart(series) {\n        const firstSeries = series[0];\n        const funnelChart = new FunnelChart(this, {\n            series: series,\n            legend: this.options.legend,\n            neckRatio: firstSeries.neckRatio,\n            dynamicHeight: firstSeries.dynamicHeight,\n            dynamicSlope: firstSeries.dynamicSlope,\n            segmentSpacing: firstSeries.segmentSpacing,\n            highlight: firstSeries.highlight\n        });\n\n        this.appendChart(funnelChart);\n    }\n\n    appendChart(chart, pane) {\n        super.appendChart(chart, pane);\n        append(this.options.legend.items, chart.legendItems);\n    }\n}\n\nexport default FunnelPlotArea;","import PlotAreaFactory from './plotarea/plotarea-factory';\nimport SeriesBinder from './series-binder';\nimport DefaultAggregates from './aggregates/default-aggregates';\nimport CategoricalPlotArea from './plotarea/categorical-plotarea';\nimport XYPlotArea from './plotarea/xy-plotarea';\nimport PiePlotArea from './plotarea/pie-plotarea';\nimport DonutPlotArea from './plotarea/donut-plotarea';\nimport PolarPlotArea from './plotarea/polar-plotarea';\nimport RadarPlotArea from './plotarea/radar-plotarea';\nimport FunnelPlotArea from './plotarea/funnel-plotarea';\n\nimport { COLUMN, DONUT, PIE, FUNNEL, BAR, LINE, VERTICAL_LINE, AREA, VERTICAL_AREA,\n    CANDLESTICK, OHLC, BULLET, VERTICAL_BULLET, BOX_PLOT, VERTICAL_BOX_PLOT, RANGE_COLUMN,\n    RANGE_BAR, WATERFALL, HORIZONTAL_WATERFALL, SCATTER, SCATTER_LINE, BUBBLE,\n    POLAR_AREA, POLAR_LINE, POLAR_SCATTER, RADAR_AREA, RADAR_COLUMN, RADAR_LINE, CATEGORY,\n    X_ERROR_LOW_FIELD, X_ERROR_HIGH_FIELD, Y_ERROR_LOW_FIELD, Y_ERROR_HIGH_FIELD, ERROR_LOW_FIELD, ERROR_HIGH_FIELD } from './constants';\nimport { X, Y, VALUE } from '../common/constants';\n\nconst COLOR = \"color\";\nconst FIRST = \"first\";\nconst FROM = \"from\";\nconst MAX = \"max\";\nconst MIN = \"min\";\nconst NOTE_TEXT = \"noteText\";\nconst SUMMARY_FIELD = \"summary\";\nconst TO = \"to\";\n\nPlotAreaFactory.current.register(CategoricalPlotArea, [\n    BAR, COLUMN, LINE, VERTICAL_LINE, AREA, VERTICAL_AREA,\n    CANDLESTICK, OHLC, BULLET, VERTICAL_BULLET, BOX_PLOT, VERTICAL_BOX_PLOT,\n    RANGE_COLUMN, RANGE_BAR, WATERFALL, HORIZONTAL_WATERFALL\n]);\n\nPlotAreaFactory.current.register(XYPlotArea, [\n    SCATTER, SCATTER_LINE, BUBBLE\n]);\n\nPlotAreaFactory.current.register(PiePlotArea, [ PIE ]);\nPlotAreaFactory.current.register(DonutPlotArea, [ DONUT ]);\nPlotAreaFactory.current.register(FunnelPlotArea, [ FUNNEL ]);\n\nPlotAreaFactory.current.register(PolarPlotArea, [ POLAR_AREA, POLAR_LINE, POLAR_SCATTER ]);\nPlotAreaFactory.current.register(RadarPlotArea, [ RADAR_AREA, RADAR_COLUMN, RADAR_LINE ]);\n\nSeriesBinder.current.register(\n    [ BAR, COLUMN, LINE, VERTICAL_LINE, AREA, VERTICAL_AREA ],\n    [ VALUE ], [ CATEGORY, COLOR, NOTE_TEXT, ERROR_LOW_FIELD, ERROR_HIGH_FIELD ]\n);\n\nSeriesBinder.current.register(\n    [ RANGE_COLUMN, RANGE_BAR ],\n    [ FROM, TO ], [ CATEGORY, COLOR, NOTE_TEXT ]\n);\n\nSeriesBinder.current.register(\n    [ WATERFALL, HORIZONTAL_WATERFALL ],\n    [ VALUE ], [ CATEGORY, COLOR, NOTE_TEXT, SUMMARY_FIELD ]\n);\n\nSeriesBinder.current.register([ POLAR_AREA, POLAR_LINE, POLAR_SCATTER ], [ X, Y ], [ COLOR ]);\nSeriesBinder.current.register([ RADAR_AREA, RADAR_COLUMN, RADAR_LINE ], [ VALUE ], [ COLOR ]);\n\nSeriesBinder.current.register(\n    [ FUNNEL ],\n    [ VALUE ], [ CATEGORY, COLOR, \"visibleInLegend\", \"visible\" ]\n);\n\nDefaultAggregates.current.register(\n    [ BAR, COLUMN, LINE, VERTICAL_LINE, AREA, VERTICAL_AREA, WATERFALL, HORIZONTAL_WATERFALL ],\n    { value: MAX, color: FIRST, noteText: FIRST, errorLow: MIN, errorHigh: MAX }\n);\n\nDefaultAggregates.current.register(\n    [ RANGE_COLUMN, RANGE_BAR ],\n    { from: MIN, to: MAX, color: FIRST, noteText: FIRST }\n);\n\nDefaultAggregates.current.register(\n    [ RADAR_AREA, RADAR_COLUMN, RADAR_LINE ],\n    { value: MAX, color: FIRST }\n);\n\nSeriesBinder.current.register(\n    [ SCATTER, SCATTER_LINE, BUBBLE ],\n    [ X, Y ], [ COLOR, NOTE_TEXT, X_ERROR_LOW_FIELD, X_ERROR_HIGH_FIELD, Y_ERROR_LOW_FIELD, Y_ERROR_HIGH_FIELD ]\n);\n\nSeriesBinder.current.register(\n    [ BUBBLE ], [ X, Y, \"size\" ], [ COLOR, CATEGORY, NOTE_TEXT ]\n);\n\nSeriesBinder.current.register(\n    [ CANDLESTICK, OHLC ],\n    [ \"open\", \"high\", \"low\", \"close\" ], [ CATEGORY, COLOR, \"downColor\", NOTE_TEXT ]\n);\n\nDefaultAggregates.current.register(\n    [ CANDLESTICK, OHLC ],\n    { open: MAX, high: MAX, low: MIN, close: MAX,\n      color: FIRST, downColor: FIRST, noteText: FIRST }\n);\n\nSeriesBinder.current.register(\n    [ BOX_PLOT, VERTICAL_BOX_PLOT ],\n    [ \"lower\", \"q1\", \"median\", \"q3\", \"upper\", \"mean\", \"outliers\" ], [ CATEGORY, COLOR, NOTE_TEXT ]\n);\n\nDefaultAggregates.current.register(\n    [ BOX_PLOT, VERTICAL_BOX_PLOT ],\n    { lower: MAX, q1: MAX, median: MAX, q3: MAX, upper: MAX, mean: MAX, outliers: FIRST,\n      color: FIRST, noteText: FIRST }\n);\n\nSeriesBinder.current.register(\n    [ BULLET, VERTICAL_BULLET ],\n    [ \"current\", \"target\" ], [ CATEGORY, COLOR, \"visibleInLegend\", NOTE_TEXT ]\n);\n\nDefaultAggregates.current.register(\n    [ BULLET, VERTICAL_BULLET ],\n    { current: MAX, target: MAX, color: FIRST, noteText: FIRST }\n);\n\nSeriesBinder.current.register(\n    [ PIE, DONUT ],\n    [ VALUE ], [ CATEGORY, COLOR, \"explode\", \"visibleInLegend\", \"visible\" ]\n);","import { drawing as draw, throttle } from '@progress/kendo-drawing';\n\nimport { RootElement, Title, CategoryAxis, DateCategoryAxis, Point } from '../core';\n\nimport Highlight from './highlight';\nimport Pannable from './pan-and-zoom/pannable';\nimport ZoomSelection from './pan-and-zoom/zoom-selection';\nimport MousewheelZoom from './pan-and-zoom/mousewheel-zoom';\nimport Legend from './legend/legend';\nimport PlotAreaFactory from './plotarea/plotarea-factory';\nimport Selection from './selection';\nimport SeriesBinder from './series-binder';\nimport Tooltip from './tooltip/tooltip';\nimport SharedTooltip from './tooltip/shared-tooltip';\nimport CategoricalPlotArea from './plotarea/categorical-plotarea';\nimport PlotAreaBase from './plotarea/plotarea-base';\nimport { ChartService, DomEventsBuilder } from '../services';\nimport getField from './utils/get-field';\nimport isDateAxis from './utils/is-date-axis';\nimport getDateField from './utils/get-date-field';\nimport { ChartAxis, ChartPane, ChartPlotArea } from './api-elements';\n\nimport { X, Y, VALUE, DEFAULT_WIDTH, DEFAULT_HEIGHT } from '../common/constants';\nimport { addClass, Class, setDefaultOptions, deepExtend, defined, isObject, isFunction, elementSize, elementOffset,\n    elementStyles, eventCoordinates, bindEvents, unbindEvents, mousewheelDelta, FontLoader, inArray, last, round } from '../common';\n\nimport { addDuration, dateComparer } from '../date-utils';\n\nimport { SERIES_HOVER, DRAG_START, DRAG, DRAG_END, ZOOM_START, ZOOM, ZOOM_END, SELECT_START, SELECT, SELECT_END,\n    PLOT_AREA_HOVER, RENDER, CATEGORY, PIE, DONUT, FUNNEL, COLUMN, MOUSEWHEEL, MOUSEWHEEL_DELAY, SHOW_TOOLTIP } from './constants';\n\nimport './animations';\nimport './register-charts';\n\nconst AXIS_NAMES = [ CATEGORY, VALUE, X, Y ];\n\nconst MOUSEMOVE = \"mousemove\";\nconst CONTEXTMENU = \"contextmenu\";\nconst MOUSEMOVE_DELAY = 20;\n\nclass Chart extends Class {\n    constructor(element, userOptions, themeOptions, context = {}) {\n        super();\n\n        this.observers = [];\n        this.addObserver(context.observer);\n        this.chartService = new ChartService(this, context);\n        this.chartService.theme = themeOptions;\n\n        this._initElement(element);\n\n        const options = deepExtend({}, this.options, userOptions);\n        this._originalOptions = deepExtend({}, options);\n        this._theme = themeOptions;\n        this._initTheme(options, themeOptions);\n\n        this._initSurface();\n\n        this._initHandlers();\n\n        this.bindCategories();\n        FontLoader.preloadFonts(userOptions, () => {\n            if (!this._destroyed) {\n                this._redraw();\n                this._attachEvents();\n            }\n        });\n    }\n\n    _initElement(element) {\n        this._setElementClass(element);\n        element.style.position = \"relative\";\n        while (element.firstChild) {\n            element.removeChild(element.firstChild);\n        }\n        this.element = element;\n    }\n\n    _setElementClass(element) {\n        addClass(element, \"k-chart\");\n    }\n\n    _initTheme(options, themeOptions) {\n        const seriesCopies = [];\n        const series = options.series || [];\n\n        for (let i = 0; i < series.length; i++) {\n            seriesCopies.push(Object.assign({}, series[i]));\n        }\n        options.series = seriesCopies;\n\n        resolveAxisAliases(options);\n        this.applyDefaults(options, themeOptions);\n\n        // Clean up default if not overriden by data attributes\n        if (options.seriesColors === null) {\n            delete options.seriesColors;\n        }\n\n        this.options = deepExtend({}, themeOptions, options);\n        this.applySeriesColors();\n    }\n\n    getSize() {\n        return { width: this.element.offsetWidth, height: this.element.offsetHeight };\n        // return kendo.dimensions(this.element);\n    }\n\n    resize(force) {\n        const size = this.getSize();\n        const currentSize = this._size;\n\n        if (force || (size.width > 0 || size.height > 0) && (!currentSize || size.width !== currentSize.width || size.height !== currentSize.height)) {\n            this._size = size;\n            this._resize(size, force);\n            this.trigger(\"resize\", size);\n        }\n    }\n\n    _resize() {\n        this._noTransitionsRedraw();\n    }\n\n    redraw(paneName) {\n        this.applyDefaults(this.options);\n        this.applySeriesColors();\n\n        if (paneName) {\n            const plotArea = this._model._plotArea;\n            const pane = plotArea.findPane(paneName);\n            plotArea.redraw(pane);\n        } else {\n            this._redraw();\n        }\n    }\n\n    getAxis(name) {\n        const axes = this._plotArea.axes;\n\n        for (let idx = 0; idx < axes.length; idx++) {\n            if (axes[idx].options.name === name) {\n                return new ChartAxis(axes[idx]);\n            }\n        }\n    }\n\n    findAxisByName(name) {\n        return this.getAxis(name);\n    }\n\n    findPaneByName(name) {\n        const panes = this._plotArea.panes;\n\n        for (let idx = 0; idx < panes.length; idx++) {\n            if (panes[idx].options.name === name) {\n                return new ChartPane(panes[idx]);\n            }\n        }\n    }\n\n    findPaneByIndex(idx) {\n        const panes = this._plotArea.panes;\n        if (panes[idx]) {\n            return new ChartPane(panes[idx]);\n        }\n    }\n\n    plotArea() {\n        return new ChartPlotArea(this._plotArea);\n    }\n\n    toggleHighlight(show, filter) {\n        const plotArea = this._plotArea;\n        const firstSeries = (plotArea.srcSeries || plotArea.series || [])[0];\n        let points;\n\n        if (isFunction(filter)) {\n            points = plotArea.filterPoints(filter);\n        } else {\n            let seriesName, categoryName;\n            if (isObject(filter)) {\n                seriesName = filter.series;\n                categoryName = filter.category;\n            } else {\n                seriesName = categoryName = filter;\n            }\n\n            if (firstSeries.type === DONUT) {\n                points = pointByCategoryName(plotArea.pointsBySeriesName(seriesName), categoryName);\n            } else if (firstSeries.type === PIE || firstSeries.type === FUNNEL) {\n                points = pointByCategoryName((plotArea.charts[0] || {}).points, categoryName);\n            } else {\n                points = plotArea.pointsBySeriesName(seriesName);\n            }\n        }\n\n        if (points) {\n            this.togglePointsHighlight(show, points);\n        }\n    }\n\n    togglePointsHighlight(show, points) {\n        const highlight = this._highlight;\n        for (let idx = 0; idx < points.length; idx++) {\n            highlight.togglePointHighlight(points[idx], show);\n        }\n    }\n\n    showTooltip(filter) {\n        const shared = this._sharedTooltip();\n        const { _tooltip: tooltip, _plotArea: plotArea } = this;\n        let point, categoryIndex;\n\n        if (isFunction(filter)) {\n            point = plotArea.findPoint(filter);\n            if (point && shared) {\n                categoryIndex = point.categoryIx;\n            }\n        } else if (shared && defined(filter)) {\n            categoryIndex = plotArea.categoryAxis.categoryIndex(filter);\n        }\n\n        if (shared) {\n            if (categoryIndex >= 0) {\n                const points = this._plotArea.pointsByCategoryIndex(categoryIndex);\n                tooltip.showAt(points);\n            }\n        } else if (point) {\n            tooltip.show(point);\n        }\n    }\n\n    hideTooltip() {\n        this._tooltip.hide();\n    }\n\n    _initSurface() {\n        const surface = this.surface;\n        const wrap = this._surfaceWrap();\n\n        const chartArea = this.options.chartArea;\n        if (chartArea.width) {\n            elementSize(wrap, { width: chartArea.width });\n        }\n        if (chartArea.height) {\n            elementSize(wrap, { height: chartArea.height });\n        }\n\n        if (!surface || surface.options.type !== this.options.renderAs) {\n            if (surface) {\n                surface.destroy();\n            }\n\n            this.surface = draw.Surface.create(wrap, {\n                type: this.options.renderAs\n            });\n\n        } else {\n            this.surface.clear();\n            this.surface.resize();\n        }\n    }\n\n    _surfaceWrap() {\n        return this.element;\n    }\n\n    _redraw() {\n        const model = this._getModel();\n\n        this._destroyView();\n\n        this._model = model;\n        this._plotArea = model._plotArea;\n\n        model.renderVisual();\n\n        if (this.options.transitions !== false) {\n            model.traverse(function(element) {\n                if (element.animation) {\n                    element.animation.setup();\n                }\n            });\n        }\n\n        this._initSurface();\n        this.surface.draw(model.visual);\n\n        if (this.options.transitions !== false) {\n            model.traverse(function(element) {\n                if (element.animation) {\n                    element.animation.play();\n                }\n            });\n        }\n\n        this._tooltip = this._createTooltip();\n        this._highlight = new Highlight();\n        this._setupSelection();\n        this._createPannable();\n        this._createZoomSelection();\n        this._createMousewheelZoom();\n\n        this.trigger(RENDER);\n\n        if (!this._navState) {\n            this._cancelDomEvents();\n        }\n    }\n\n    exportVisual(options) {\n        let visual;\n        if (options && (options.width || options.height)) {\n            const chartArea = this.options.chartArea;\n            const originalChartArea = this._originalOptions.chartArea;\n\n            deepExtend(chartArea, options);\n\n            const model = this._getModel();\n\n            chartArea.width = originalChartArea.width;\n            chartArea.height = originalChartArea.height;\n\n            model.renderVisual();\n\n            visual = model.visual;\n        } else {\n            visual = this.surface.exportVisual();\n        }\n\n        return visual;\n    }\n\n    _sharedTooltip() {\n        return this._plotArea instanceof CategoricalPlotArea && this.options.tooltip.shared;\n    }\n\n    _createPannable() {\n        const options = this.options;\n        if (options.pannable !== false) {\n            this._pannable = new Pannable(this._plotArea, options.pannable);\n        }\n    }\n\n    _createZoomSelection() {\n        const zoomable = this.options.zoomable;\n        const selection = (zoomable || {}).selection;\n        if (zoomable !== false && selection !== false) {\n            this._zoomSelection = new ZoomSelection(this, selection);\n        }\n    }\n\n    _toggleDomDrag() {\n        if (!this.domEvents || !this.domEvents.toggleDrag) {\n            return;\n        }\n\n        const pannable = this.options.pannable;\n        const zoomable = this.options.zoomable;\n        const selection = (zoomable || {}).selection;\n        if (!pannable && (zoomable === false || selection === false) && !this.requiresHandlers([ DRAG_START, DRAG, DRAG_END ])) {\n            this.domEvents.toggleDrag(false);\n        } else {\n            this.domEvents.toggleDrag(true);\n        }\n    }\n\n    _createMousewheelZoom() {\n        const zoomable = this.options.zoomable;\n        const mousewheel = (zoomable || {}).mousewheel;\n        if (zoomable !== false && mousewheel !== false) {\n            this._mousewheelZoom = new MousewheelZoom(this, mousewheel);\n        }\n    }\n\n    _toggleDomZoom() {\n        if (!this.domEvents || !this.domEvents.toggleZoom) {\n            return;\n        }\n\n        const zoomable = this.options.zoomable;\n        const mousewheel = (zoomable || {}).mousewheel;\n        if ((zoomable === false || mousewheel === false) && !this.requiresHandlers([ ZOOM_START, ZOOM, ZOOM_END ])) {\n            this.domEvents.toggleZoom(false);\n        } else {\n            this.domEvents.toggleZoom(true);\n        }\n    }\n\n    _createTooltip() {\n        const { options: { tooltip: tooltipOptions } } = this;\n        let tooltip;\n\n        if (this._sharedTooltip()) {\n            tooltip = this._createSharedTooltip(tooltipOptions);\n        } else {\n            tooltip = new Tooltip(this.chartService, tooltipOptions);\n        }\n\n        return tooltip;\n    }\n\n    _createSharedTooltip(options) {\n        return new SharedTooltip(this._plotArea, options);\n    }\n\n    applyDefaults(options, themeOptions) {\n        applyAxisDefaults(options, themeOptions);\n        applySeriesDefaults(options, themeOptions);\n    }\n\n    applySeriesColors() {\n        const options = this.options;\n        const series = options.series;\n        const colors = options.seriesColors || [];\n\n        for (let i = 0; i < series.length; i++) {\n            const currentSeries = series[i];\n            const seriesColor = colors[i % colors.length];\n            const defaults = currentSeries._defaults;\n\n            currentSeries.color = currentSeries.color || seriesColor;\n            if (defaults) {\n                defaults.color = defaults.color || seriesColor;\n            }\n        }\n    }\n\n    _getModel() {\n        const options = this.options;\n        const plotArea = this._createPlotArea();\n        const model = new RootElement(this._modelOptions());\n        model.chart = this;\n        model._plotArea = plotArea;\n\n        Title.buildTitle(options.title, model);\n\n        if (options.legend.visible) {\n            model.append(new Legend(plotArea.options.legend, this.chartService));\n        }\n        model.append(plotArea);\n        model.reflow();\n\n        return model;\n    }\n\n    _modelOptions() {\n        const { options, element } = this;\n        const size = elementSize(element);\n\n        this._size = null;\n\n        return deepExtend({\n            width: Math.floor(size.width) || DEFAULT_WIDTH,\n            height: Math.floor(size.height) || DEFAULT_HEIGHT,\n            transitions: options.transitions\n        }, options.chartArea);\n    }\n\n    _createPlotArea(skipSeries) {\n        const options = this.options;\n\n        const plotArea = PlotAreaFactory.current.create(skipSeries ? [] : options.series, options, this.chartService);\n\n        return plotArea;\n    }\n\n    _hasSelection() {\n        return this._selections && this._selections.length;\n    }\n\n    _setupSelection() {\n        const { _plotArea: { axes } } = this;\n        const selections = this._selections = [];\n\n        for (let i = 0; i < axes.length; i++) {\n            const axis = axes[i];\n            const options = axis.options;\n            if (axis instanceof CategoryAxis && options.select && !options.vertical) {\n                let min = 0;\n                let max = options.categories.length - 1;\n\n                if (axis instanceof DateCategoryAxis) {\n                    min = options.categories[min];\n                    max = options.categories[max];\n                }\n\n                if (!options.justified) {\n                    if (axis instanceof DateCategoryAxis) {\n                        max = addDuration(max, 1, options.baseUnit, options.weekStartDay);\n                    } else {\n                        max++;\n                    }\n                }\n\n                const selection = new Selection(this, axis,\n                    deepExtend({ min: min, max: max }, options.select)\n                );\n\n                selections.push(selection);\n            }\n        }\n    }\n\n    _selectStart(e) {\n        return this.trigger(SELECT_START, e);\n    }\n\n    _select(e) {\n        return this.trigger(SELECT, e);\n    }\n\n    _selectEnd(e) {\n        return this.trigger(SELECT_END, e);\n    }\n\n    _initHandlers() {\n        this._clickHandler = this._click.bind(this);\n        this._mousewheelHandler = this._mousewheel.bind(this);\n        this._surfaceMouseenterHandler = this._mouseover.bind(this);\n        this._surfaceMouseleaveHandler = this._mouseout.bind(this);\n\n        this._mousemove = throttle(\n            this._mousemove.bind(this),\n            MOUSEMOVE_DELAY\n        );\n    }\n\n    addObserver(observer) {\n        if (observer) {\n            this.observers.push(observer);\n        }\n    }\n\n    removeObserver(observer) {\n        const index = this.observers.indexOf(observer);\n        if (index >= 0) {\n            this.observers.splice(index, 1);\n        }\n    }\n\n    requiresHandlers(eventNames) {\n        const observers = this.observers;\n        for (let idx = 0; idx < observers.length; idx++) {\n            if (observers[idx].requiresHandlers(eventNames)) {\n                return true;\n            }\n        }\n    }\n\n    trigger(name, args = {}) {\n        if (name === SHOW_TOOLTIP) {\n            args.anchor.point = this._toDocumentCoordinates(args.anchor.point);\n        }\n        args.sender = this;\n\n        const observers = this.observers;\n        let isDefaultPrevented = false;\n        for (let idx = 0; idx < observers.length; idx++) {\n            if (observers[idx].trigger(name, args)) {\n                isDefaultPrevented = true;\n            }\n        }\n\n        return isDefaultPrevented;\n    }\n\n    _attachEvents() {\n        const { element, surface } = this;\n\n        surface.bind(\"mouseenter\", this._surfaceMouseenterHandler);\n        surface.bind(\"mouseleave\", this._surfaceMouseleaveHandler);\n        bindEvents(element, {\n            [ CONTEXTMENU ]: this._clickHandler,\n            [ MOUSEWHEEL ]: this._mousewheelHandler\n        });\n\n        if (this._shouldAttachMouseMove()) {\n            bindEvents(element, { [ MOUSEMOVE ]: this._mousemove });\n        }\n\n        this.domEvents = DomEventsBuilder.create(this.element, {\n            start: this._start.bind(this),\n            move: this._move.bind(this),\n            end: this._end.bind(this),\n            tap: this._tap.bind(this),\n            gesturestart: this._gesturestart.bind(this),\n            gesturechange: this._gesturechange.bind(this),\n            gestureend: this._gestureend.bind(this)\n        });\n\n        this._toggleDomDrag();\n        this._toggleDomZoom();\n    }\n\n    _cancelDomEvents() {\n        if (this.domEvents && this.domEvents.cancel) {\n            this.domEvents.cancel();\n        }\n    }\n\n    _gesturestart(e) {\n        if (this._mousewheelZoom && !this._stopDragEvent(e)) {\n            this._gestureDistance = e.distance;\n            this._unsetActivePoint();\n            this.surface.suspendTracking();\n        }\n    }\n\n    _gestureend(e) {\n        if (this._zooming && !this._stopDragEvent(e)) {\n            if (this.surface) {\n                this.surface.resumeTracking();\n            }\n            this._zooming = false;\n            this.trigger(ZOOM_END, {});\n        }\n    }\n\n    _gesturechange(e) {\n        const mousewheelZoom = this._mousewheelZoom;\n\n        if (mousewheelZoom && !this._stopDragEvent(e)) {\n            e.preventDefault();\n            const previousGestureDistance = this._gestureDistance;\n            let scaleDelta = -e.distance / previousGestureDistance + 1;\n\n            if (Math.abs(scaleDelta) >= 0.1) {\n                scaleDelta = Math.round(scaleDelta * 10);\n\n                this._gestureDistance = e.distance;\n                const args = { delta: scaleDelta, axisRanges: axisRanges(this._plotArea.axes), originalEvent: e };\n                if (this._zooming || !this.trigger(ZOOM_START, args)) {\n\n                    if (!this._zooming) {\n                        this._zooming = true;\n                    }\n\n                    const ranges = args.axisRanges = mousewheelZoom.updateRanges(scaleDelta);\n                    if (ranges && !this.trigger(ZOOM, args)) {\n                        mousewheelZoom.zoom();\n                    }\n                }\n            }\n        }\n    }\n\n    _mouseout(e) {\n        if (e.element) {\n            const element = this._drawingChartElement(e.element, e);\n\n            if (element && element.leave) {\n                element.leave(this, e.originalEvent);\n            }\n        }\n    }\n\n    _start(e) {\n        const coords = this._eventCoordinates(e);\n\n        if (this._stopDragEvent(e) || !this._plotArea.backgroundContainsPoint(coords)) {\n            return;\n        }\n\n\n        if (this.requiresHandlers([ DRAG_START, DRAG, DRAG_END ])) {\n            this._startNavigation(e, coords, DRAG_START);\n        }\n\n        if (this._pannable && this._pannable.start(e)) {\n            this.surface.suspendTracking();\n            this._unsetActivePoint();\n            this._suppressHover = true;\n        }\n\n        if (this._zoomSelection) {\n            if (this._zoomSelection.start(e)) {\n                this.trigger(ZOOM_START, { axisRanges: axisRanges(this._plotArea.axes), originalEvent: e });\n            }\n        }\n    }\n\n    _move(e) {\n        let { _navState: state, _pannable: pannable } = this;\n\n        if (this._stopDragEvent(e)) {\n            return;\n        }\n\n        if (pannable) {\n            const ranges = pannable.move(e);\n\n            if (ranges && !this.trigger(DRAG, { axisRanges: ranges, originalEvent: e })) {\n                pannable.pan();\n            }\n        } else if (state) {\n            const ranges = {};\n            const axes = state.axes;\n\n            for (let i = 0; i < axes.length; i++) {\n                const currentAxis = axes[i];\n                const axisName = currentAxis.options.name;\n                if (axisName) {\n                    const axis = currentAxis.options.vertical ? e.y : e.x;\n                    const delta = axis.startLocation - axis.location;\n\n                    if (delta !== 0) {\n                        ranges[currentAxis.options.name] = currentAxis.translateRange(delta);\n                    }\n                }\n            }\n\n            state.axisRanges = ranges;\n            this.trigger(DRAG, {\n                axisRanges: ranges,\n                originalEvent: e\n            });\n        }\n\n        if (this._zoomSelection) {\n            this._zoomSelection.move(e);\n        }\n    }\n\n    _end(e) {\n        if (this._stopDragEvent(e)) {\n            return;\n        }\n\n        const pannable = this._pannable;\n        if (pannable && pannable.end(e)) {\n            this.surface.resumeTracking();\n            this.trigger(DRAG_END, {\n                axisRanges: axisRanges(this._plotArea.axes),\n                originalEvent: e\n            });\n            this._suppressHover = false;\n        } else {\n            this._endNavigation(e, DRAG_END);\n        }\n\n        if (this._zoomSelection) {\n            const ranges = this._zoomSelection.end(e);\n            if (ranges && !this.trigger(ZOOM, { axisRanges: ranges, originalEvent: e })) {\n                this._zoomSelection.zoom();\n                this.trigger(ZOOM_END, { axisRanges: ranges, originalEvent: e });\n            }\n        }\n    }\n\n    _stopDragEvent() {\n        return this._hasSelection();\n    }\n\n    _mousewheel(e) {\n        const delta = mousewheelDelta(e);\n        const mousewheelZoom = this._mousewheelZoom;\n        const coords = this._eventCoordinates(e);\n\n        if (!this._plotArea.backgroundContainsPoint(coords)) {\n            return;\n        }\n\n        if (mousewheelZoom) {\n            const args = { delta: delta, axisRanges: axisRanges(this._plotArea.axes), originalEvent: e };\n            if (this._zooming || !this.trigger(ZOOM_START, args)) {\n                e.preventDefault();\n\n                if (!this._zooming) {\n                    this._unsetActivePoint();\n                    this.surface.suspendTracking();\n                    this._zooming = true;\n                }\n\n                if (this._mwTimeout) {\n                    clearTimeout(this._mwTimeout);\n                }\n\n                args.axisRanges = mousewheelZoom.updateRanges(delta);\n                if (args.axisRanges && !this.trigger(ZOOM, args)) {\n                    mousewheelZoom.zoom();\n                }\n\n                this._mwTimeout = setTimeout(() => {\n                    this.trigger(ZOOM_END, args);\n                    this._zooming = false;\n                    if (this.surface) {\n                        this.surface.resumeTracking();\n                    }\n                }, MOUSEWHEEL_DELAY);\n            }\n        } else {\n            let state = this._navState;\n            if (!state) {\n                const prevented = this._startNavigation(e, coords, ZOOM_START);\n                if (!prevented) {\n                    state = this._navState;\n                }\n            }\n\n            if (state) {\n                const totalDelta = state.totalDelta || delta;\n                state.totalDelta = totalDelta + delta;\n\n                const axes = this._navState.axes;\n                const ranges = {};\n\n                for (let i = 0; i < axes.length; i++) {\n                    const currentAxis = axes[i];\n                    const axisName = currentAxis.options.name;\n                    if (axisName) {\n                        ranges[axisName] = currentAxis.scaleRange(-totalDelta);\n                    }\n                }\n\n                this.trigger(ZOOM, {\n                    delta: delta,\n                    axisRanges: ranges,\n                    originalEvent: e\n                });\n\n                if (this._mwTimeout) {\n                    clearTimeout(this._mwTimeout);\n                }\n\n                this._mwTimeout = setTimeout(() => {\n                    this._endNavigation(e, ZOOM_END);\n                }, MOUSEWHEEL_DELAY);\n            }\n        }\n    }\n\n    _startNavigation(e, coords, chartEvent) {\n        const plotArea = this._model._plotArea;\n        const pane = plotArea.findPointPane(coords);\n        const axes = plotArea.axes.slice(0);\n\n        if (!pane) {\n            return;\n        }\n\n        const ranges = axisRanges(axes);\n\n        const prevented = this.trigger(chartEvent, {\n            axisRanges: ranges,\n            originalEvent: e\n        });\n\n        if (prevented) {\n            this._cancelDomEvents();\n        } else {\n            this._suppressHover = true;\n            this._unsetActivePoint();\n            this._navState = {\n                axisRanges: ranges,\n                pane: pane,\n                axes: axes\n            };\n        }\n    }\n\n    _endNavigation(e, chartEvent) {\n        if (this._navState) {\n            this.trigger(chartEvent, {\n                axisRanges: this._navState.axisRanges,\n                originalEvent: e\n            });\n            this._suppressHover = false;\n            this._navState = null;\n        }\n    }\n\n    _getChartElement(e, match) {\n        const element = this.surface.eventTarget(e);\n        if (element) {\n            return this._drawingChartElement(element, e, match);\n        }\n    }\n\n    _drawingChartElement(element, e, match) {\n        let current = element;\n        let chartElement;\n        while (current && !chartElement) {\n            chartElement = current.chartElement;\n            current = current.parent;\n        }\n\n        if (chartElement) {\n            if (chartElement.aliasFor) {\n                chartElement = chartElement.aliasFor(e, this._eventCoordinates(e));\n            }\n\n            if (match) {\n                chartElement = chartElement.closest(match);\n            }\n\n            return chartElement;\n        }\n    }\n\n    _eventCoordinates(e) {\n        const coordinates = eventCoordinates(e);\n        return this._toModelCoordinates(coordinates.x, coordinates.y);\n    }\n\n    _elementPadding() {\n        if (!this._padding) {\n            const { paddingLeft, paddingTop } = elementStyles(this.element, [ \"paddingLeft\", \"paddingTop\" ]);\n            this._padding = {\n                top: paddingTop,\n                left: paddingLeft\n            };\n        }\n\n        return this._padding;\n    }\n\n    _toDocumentCoordinates(point) {\n        const padding = this._elementPadding();\n        const offset = elementOffset(this.element);\n\n        return {\n            left: round(point.x + padding.left + offset.left),\n            top: round(point.y + padding.top + offset.top)\n        };\n    }\n\n    _toModelCoordinates(clientX, clientY) {\n        const element = this.element;\n        const offset = elementOffset(element);\n        const padding = this._elementPadding();\n\n        return new Point(\n            clientX - offset.left - padding.left,\n            clientY - offset.top - padding.top\n        );\n    }\n\n    _tap(e) {\n        const drawingElement = this.surface.eventTarget(e);\n        const element = this._drawingChartElement(drawingElement, e);\n\n        if (this._activePoint === element) {\n            this._propagateClick(element, e);\n        } else {\n            if (!this._startHover(drawingElement, e)) {\n                this._unsetActivePoint();\n            }\n\n            this._propagateClick(element, e);\n        }\n\n        //part of fix for hover issue on windows touch\n        this.handlingTap = true;\n        setTimeout(() => {\n            this.handlingTap = false;\n        }, 0);\n    }\n\n    _click(e) {\n        const element = this._getChartElement(e);\n        this._propagateClick(element, e);\n    }\n\n    _propagateClick(element, e) {\n        let current = element;\n        while (current) {\n            if (current.click) {\n                current.click(this, e);\n            }\n\n            current = current.parent;\n        }\n    }\n\n    _startHover(element, e) {\n        const chartElement = this._drawingChartElement(element, e);\n        const { _tooltip: tooltip, _highlight: highlight } = this;\n\n        if (this._suppressHover || !highlight || highlight.isHighlighted(chartElement) || this._sharedTooltip()) {\n            return false;\n        }\n\n        const point = this._drawingChartElement(element, e, function(element) {\n            return element.hover && !(element instanceof PlotAreaBase);\n        });\n\n        if (point && !point.hover(this, e)) {\n            this._activePoint = point;\n\n            const tooltipOptions = deepExtend({}, tooltipOptions, point.options.tooltip);\n            if (tooltipOptions.visible) {\n                tooltip.show(point);\n            }\n\n            highlight.show(point);\n\n            return point;\n        }\n    }\n\n    _mouseover(e) {\n        const point = this._startHover(e.element, e.originalEvent);\n\n        if (point && point.tooltipTracking) {\n            this._mouseMoveTrackHandler = this._mouseMoveTrackHandler || this._mouseMoveTracking.bind(this);\n            bindEvents(document, {\n                [ MOUSEMOVE ]: this._mouseMoveTrackHandler\n            });\n        }\n    }\n\n    _mouseMoveTracking(e) {\n        const { options, _tooltip: tooltip, _highlight: highlight, _activePoint: point } = this;\n        const coords = this._eventCoordinates(e);\n\n        if (this._plotArea.box.containsPoint(coords)) {\n            if (point && point.tooltipTracking && point.series && point.parent.getNearestPoint) {\n                const seriesPoint = point.parent.getNearestPoint(coords.x, coords.y, point.seriesIx);\n                if (seriesPoint && seriesPoint !== point) {\n                    seriesPoint.hover(this, e);\n                    this._activePoint = seriesPoint;\n\n                    const tooltipOptions = deepExtend({}, options.tooltip, point.options.tooltip);\n                    if (tooltipOptions.visible) {\n                        tooltip.show(seriesPoint);\n                    }\n\n                    highlight.show(seriesPoint);\n                }\n            }\n        } else {\n            unbindEvents(document, {\n                [ MOUSEMOVE ]: this._mouseMoveTrackHandler\n            });\n            this._unsetActivePoint();\n        }\n    }\n\n    _mousemove(e) {\n        const coords = this._eventCoordinates(e);\n\n        this._trackCrosshairs(coords);\n\n        if (this._plotArea.hover) {\n            this._plotArea.hover(this, e);\n        }\n\n        if (this._sharedTooltip()) {\n            this._trackSharedTooltip(coords, e);\n        }\n    }\n\n    _trackCrosshairs(coords) {\n        const crosshairs = this._plotArea.crosshairs;\n\n        for (let i = 0; i < crosshairs.length; i++) {\n            const current = crosshairs[i];\n\n            if (current.box.containsPoint(coords)) {\n                current.showAt(coords);\n            } else {\n                current.hide();\n            }\n        }\n    }\n\n    _trackSharedTooltip(coords, e) {\n        const { options: { tooltip: tooltipOptions }, _plotArea: plotArea, _plotArea: { categoryAxis }, _tooltip: tooltip, _highlight: highlight } = this;\n\n        if (plotArea.box.containsPoint(coords)) {\n            const index = categoryAxis.pointCategoryIndex(coords);\n            if (index !== this._tooltipCategoryIx) {\n                const points = plotArea.pointsByCategoryIndex(index);\n\n                const pointArgs = points.map(function(point) {\n                    return point.eventArgs(e);\n                });\n\n                const hoverArgs = pointArgs[0] || {};\n                hoverArgs.categoryPoints = pointArgs;\n\n                if (points.length > 0 && !this.trigger(SERIES_HOVER, hoverArgs)) {\n                    if (tooltipOptions.visible) {\n                        tooltip.showAt(points, coords);\n                    }\n\n                    highlight.show(points);\n                } else {\n                    tooltip.hide();\n                }\n\n                this._tooltipCategoryIx = index;\n            }\n        }\n    }\n\n    hideElements() {\n        const { _plotArea: plotArea, _tooltip: tooltip, _highlight: highlight } = this;\n        this._mousemove.cancel();\n\n        plotArea.hideCrosshairs();\n\n        highlight.hide();\n\n        tooltip.hide();\n\n        delete this._tooltipCategoryIx;\n    }\n\n    _unsetActivePoint() {\n        const { _tooltip: tooltip, _highlight: highlight } = this;\n\n        this._activePoint = null;\n\n        if (tooltip) {\n            tooltip.hide();\n        }\n\n        if (highlight) {\n            highlight.hide();\n        }\n    }\n\n    _deferRedraw() {\n        this._redraw();\n    }\n\n    _clearRedrawTimeout() {\n        if (this._redrawTimeout) {\n            clearInterval(this._redrawTimeout);\n            this._redrawTimeout = null;\n        }\n    }\n\n    bindCategories() {\n        const options = this.options;\n        const definitions = [].concat(options.categoryAxis);\n\n        for (let axisIx = 0; axisIx < definitions.length; axisIx++) {\n            const axis = definitions[axisIx];\n            if (axis.autoBind !== false) {\n                this.bindCategoryAxisFromSeries(axis, axisIx);\n            }\n        }\n    }\n\n    bindCategoryAxisFromSeries(axis, axisIx) {\n        const series = this.options.series;\n        const seriesLength = series.length;\n        const uniqueCategories = {};\n        let items = [];\n        let dateAxis;\n\n        for (let seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n            const s = series[seriesIx];\n            const onAxis = s.categoryAxis === axis.name || (!s.categoryAxis && axisIx === 0);\n            const data = s.data;\n            const dataLength = data.length;\n\n            if (s.categoryField && onAxis && dataLength > 0) {\n                dateAxis = isDateAxis(axis, getField(s.categoryField, data[0]));\n\n                const getFn = dateAxis ? getDateField : getField;\n\n                for (let dataIx = 0; dataIx < dataLength; dataIx++) {\n                    const dataRow = data[dataIx];\n                    const category = getFn(s.categoryField, dataRow, this.chartService.intl);\n\n                    if (dateAxis || !uniqueCategories[category]) {\n                        items.push([ category, dataRow ]);\n\n                        if (!dateAxis) {\n                            uniqueCategories[category] = true;\n                        }\n                    }\n                }\n            }\n        }\n\n        if (items.length > 0) {\n            if (dateAxis) {\n                items = uniqueDates(items, function(a, b) {\n                    return dateComparer(a[0], b[0]);\n                });\n            }\n\n            const result = transpose(items);\n            axis.categories = result[0];\n        }\n    }\n\n    _isBindable(series) {\n        const valueFields = SeriesBinder.current.valueFields(series);\n        let result = true;\n\n        for (let i = 0; i < valueFields.length; i++) {\n            let field = valueFields[i];\n            if (field === VALUE) {\n                field = \"field\";\n            } else {\n                field = field + \"Field\";\n            }\n\n            if (!defined(series[field])) {\n                result = false;\n                break;\n            }\n        }\n\n        return result;\n    }\n\n    _noTransitionsRedraw() {\n        const options = this.options;\n        let transitionsState;\n\n        if (options.transitions) {\n            options.transitions = false;\n            transitionsState = true;\n        }\n\n        this._redraw();\n\n        if (transitionsState) {\n            options.transitions = true;\n        }\n    }\n\n    _legendItemHover(seriesIndex, pointIndex) {\n        const { _plotArea: plotArea, _highlight: highlight } = this;\n        const currentSeries = (plotArea.srcSeries || plotArea.series)[seriesIndex];\n        let items;\n\n        if (inArray(currentSeries.type, [ PIE, DONUT, FUNNEL ])) {\n            items = plotArea.findPoint(function(point) {\n                return point.series.index === seriesIndex && point.index === pointIndex;\n            });\n        } else {\n            items = plotArea.pointsBySeriesIndex(seriesIndex);\n        }\n\n        highlight.show(items);\n    }\n\n    _shouldAttachMouseMove() {\n        return this._plotArea.crosshairs.length || (this._tooltip && this._sharedTooltip()) || this.requiresHandlers([ PLOT_AREA_HOVER ]);\n    }\n\n    updateMouseMoveHandler() {\n        unbindEvents(this.element, {\n            [ MOUSEMOVE ]: this._mousemove\n        });\n\n        if (this._shouldAttachMouseMove()) {\n            bindEvents(this.element, {\n                [ MOUSEMOVE ]: this._mousemove\n            });\n        }\n    }\n\n    applyOptions(options, theme) {\n        clearMissingValues(this._originalOptions, options);\n        this._originalOptions = deepExtend(this._originalOptions, options);\n        this.options = deepExtend({}, this._originalOptions);\n\n        if (theme) {\n            this._theme = theme;\n            this.chartService.theme = theme;\n        }\n        this._initTheme(this.options, this._theme);\n    }\n\n    setOptions(options, theme) {\n        this.applyOptions(options, theme);\n        this.bindCategories();\n        this.redraw();\n        this.updateMouseMoveHandler();\n\n        this._toggleDomDrag();\n        this._toggleDomZoom();\n    }\n\n    destroy() {\n        this._destroyed = true;\n\n        unbindEvents(this.element, {\n            [ CONTEXTMENU ]: this._clickHandler,\n            [ MOUSEWHEEL ]: this._mousewheelHandler,\n            [ MOUSEMOVE ]: this._mousemove\n        });\n\n        if (this.domEvents) {\n            this.domEvents.destroy();\n            delete this.domEvents;\n        }\n\n        unbindEvents(document, {\n            [ MOUSEMOVE ]: this._mouseMoveTrackHandler\n        });\n\n        this._destroyView();\n\n        if (this.surface) {\n            this.surface.destroy();\n            this.surface = null;\n        }\n\n        this._clearRedrawTimeout();\n    }\n\n    _destroyView() {\n        const { _model: model, _selections: selections } = this;\n\n        if (model) {\n            model.destroy();\n            this._model = null;\n        }\n\n        if (selections) {\n            while (selections.length > 0) {\n                selections.shift().destroy();\n            }\n        }\n\n        this._unsetActivePoint();\n\n        if (this._tooltip) {\n            this._tooltip.destroy();\n        }\n\n        if (this._highlight) {\n            this._highlight.destroy();\n        }\n\n        if (this._zoomSelection) {\n            this._zoomSelection.destroy();\n            delete this._zoomSelection;\n        }\n\n        if (this._pannable) {\n            this._pannable.destroy();\n            delete this._pannable;\n        }\n\n        if (this._mousewheelZoom) {\n            this._mousewheelZoom.destroy();\n            delete this._mousewheelZoom;\n        }\n    }\n}\n\nfunction resolveAxisAliases(options) {\n    const aliases = AXIS_NAMES;\n\n    for (let idx = 0; idx < aliases.length; idx++) {\n        const alias = aliases[idx] + \"Axes\";\n        if (options[alias]) {\n            options[aliases[idx] + \"Axis\"] = options[alias];\n            delete options[alias];\n        }\n    }\n}\n\nfunction pointByCategoryName(points, name) {\n    if (points) {\n        for (let idx = 0; idx < points.length; idx++) {\n            if (points[idx].category === name) {\n                return [ points[idx] ];\n            }\n        }\n    }\n}\n\nfunction applyAxisDefaults(options, themeOptions) {\n    const themeAxisDefaults = ((themeOptions || {}).axisDefaults) || {};\n    let axisName, axisDefaults, axes;\n\n    function mapAxisOptions(axisOptions) {\n        const axisColor = (axisOptions || {}).color || axisDefaults.color;\n        const result = deepExtend({},\n            themeAxisDefaults,\n            themeAxisDefaults[axisName],\n            axisDefaults,\n            axisDefaults[axisName], {\n                line: { color: axisColor },\n                labels: { color: axisColor },\n                title: { color: axisColor }\n            },\n            axisOptions\n        );\n\n        delete result[axisName];\n\n        return result;\n    }\n\n    for (let idx = 0; idx < AXIS_NAMES.length; idx++) {\n        axisName = AXIS_NAMES[idx] + \"Axis\";\n        axisDefaults = options.axisDefaults || {};\n        axes = [].concat(options[axisName]);\n\n        axes = axes.map(mapAxisOptions);\n\n        options[axisName] = axes.length > 1 ? axes : axes[0];\n    }\n}\n\nfunction applySeriesDefaults(options, themeOptions) {\n    const series = options.series;\n    const seriesLength = series.length;\n    const seriesDefaults = options.seriesDefaults;\n    const commonDefaults = deepExtend({}, options.seriesDefaults);\n    const themeSeriesDefaults = themeOptions ? deepExtend({}, themeOptions.seriesDefaults) : {};\n    const commonThemeDefaults = deepExtend({}, themeSeriesDefaults);\n\n    cleanupNestedSeriesDefaults(commonDefaults);\n    cleanupNestedSeriesDefaults(commonThemeDefaults);\n\n    for (let i = 0; i < seriesLength; i++) {\n        const seriesType = series[i].type || options.seriesDefaults.type;\n\n        const baseOptions = deepExtend(\n            { data: [] },\n            commonThemeDefaults,\n            themeSeriesDefaults[seriesType],\n            { tooltip: options.tooltip },\n            commonDefaults,\n            seriesDefaults[seriesType]\n        );\n\n        series[i]._defaults = baseOptions;\n        series[i] = deepExtend({}, baseOptions, series[i]);\n    }\n}\n\nfunction cleanupNestedSeriesDefaults(seriesDefaults) {\n    delete seriesDefaults.bar;\n    delete seriesDefaults.column;\n    delete seriesDefaults.rangeColumn;\n    delete seriesDefaults.line;\n    delete seriesDefaults.verticalLine;\n    delete seriesDefaults.pie;\n    delete seriesDefaults.donut;\n    delete seriesDefaults.area;\n    delete seriesDefaults.verticalArea;\n    delete seriesDefaults.scatter;\n    delete seriesDefaults.scatterLine;\n    delete seriesDefaults.bubble;\n    delete seriesDefaults.candlestick;\n    delete seriesDefaults.ohlc;\n    delete seriesDefaults.boxPlot;\n    delete seriesDefaults.bullet;\n    delete seriesDefaults.verticalBullet;\n    delete seriesDefaults.polarArea;\n    delete seriesDefaults.polarLine;\n    delete seriesDefaults.radarArea;\n    delete seriesDefaults.radarLine;\n    delete seriesDefaults.waterfall;\n}\n\n\nfunction axisRanges(axes) {\n    const ranges = {};\n\n    for (let i = 0; i < axes.length; i++) {\n        const axis = axes[i];\n        const axisName = axis.options.name;\n        if (axisName) {\n            ranges[axisName] = axis.range();\n        }\n    }\n\n    return ranges;\n}\n\nfunction sortDates(dates, comparer = dateComparer) {\n    for (let i = 1, length = dates.length; i < length; i++) {\n        if (comparer(dates[i], dates[i - 1]) < 0) {\n            dates.sort(comparer);\n            break;\n        }\n    }\n\n    return dates;\n}\n\nfunction uniqueDates(srcDates, comparer = dateComparer) {\n    const dates = sortDates(srcDates, comparer);\n    const length = dates.length;\n    const result = length > 0 ? [ dates[0] ] : [];\n\n    for (let i = 1; i < length; i++) {\n        if (comparer(dates[i], last(result)) !== 0) {\n            result.push(dates[i]);\n        }\n    }\n\n    return result;\n}\n\nfunction transpose(rows) {\n    const rowCount = rows.length;\n    const result = [];\n\n    for (let rowIx = 0; rowIx < rowCount; rowIx++) {\n        const row = rows[rowIx];\n        const colCount = row.length;\n\n        for (let colIx = 0; colIx < colCount; colIx++) {\n            result[colIx] = result[colIx] || [];\n            result[colIx].push(row[colIx]);\n        }\n    }\n\n    return result;\n}\n\nfunction clearMissingValues(originalOptions, options) {\n    for (let field in options) {\n        const fieldValue = options[field];\n        const originalValue = originalOptions[field];\n        if (defined(originalValue)) {\n            const nullValue = fieldValue === null;\n            if ((nullValue || !defined(fieldValue))) {\n                delete originalOptions[field];\n                if (nullValue) {\n                    delete options[field];\n                }\n            } else if (originalValue && isObject(fieldValue)) {\n                if (isObject(originalValue)) {\n                    clearMissingValues(originalValue, fieldValue);\n                }\n            }\n        }\n    }\n}\n\nsetDefaultOptions(Chart, {\n    renderAs: \"\",\n    chartArea: {},\n    legend: {\n        visible: true,\n        labels: {}\n    },\n    categoryAxis: {},\n    seriesDefaults: {\n        type: COLUMN,\n        data: [],\n        highlight: {\n            visible: true\n        },\n        labels: {},\n        negativeValues: {\n            visible: false\n        }\n    },\n    series: [],\n    seriesColors: null,\n    tooltip: {\n        visible: false\n    },\n    transitions: true,\n    valueAxis: {},\n    plotArea: {},\n    title: {},\n    xAxis: {},\n    yAxis: {},\n    panes: [ {} ],\n    pannable: false,\n    zoomable: false\n});\n\nexport default Chart;\n","import { SharedTooltip as ChartSharedTooltip } from '../chart';\nimport { Point } from '../core';\nconst TOP_OFFSET = -2;\n\nclass SharedTooltip extends ChartSharedTooltip {\n    _slotAnchor(coords, slot) {\n        const axis = this.plotArea.categoryAxis;\n        const vertical = axis.options.vertical;\n        const align = vertical ? {\n            horizontal: \"left\",\n            vertical: \"center\"\n        } : {\n            horizontal: \"center\",\n            vertical: \"bottom\"\n        };\n\n        let point;\n\n        if (vertical) {\n            point = new Point(this.plotArea.box.x2, slot.center().y);\n        } else {\n            point = new Point(slot.center().x, TOP_OFFSET);\n        }\n\n        return {\n            point: point,\n            align: align\n        };\n    }\n\n    _defaultAnchor(point, slot) {\n        return this._slotAnchor({}, slot);\n    }\n}\n\nexport default SharedTooltip;","import { Chart } from '../chart';\nimport { BAR, BULLET, PIE, COLUMN, VERTICAL_BULLET } from '../chart/constants';\nimport{ addClass, deepExtend, elementSize, getSpacing, inArray, isArray, isNumber, setDefaultOptions } from '../common';\nimport SharedTooltip from './shared-tooltip';\n\nconst DEAULT_BAR_WIDTH = 150;\nconst DEAULT_BULLET_WIDTH = 150;\nconst NO_CROSSHAIR = [ BAR, BULLET ];\n\nfunction hide(children) {\n    const state = [];\n    for (let idx = 0; idx < children.length; idx++) {\n        const child = children[idx];\n        state[idx] = child.style.display;\n        child.style.display = \"none\";\n    }\n\n    return state;\n}\n\nfunction show(children, state) {\n    for (let idx = 0; idx < children.length; idx++) {\n        children[idx].style.display = state[idx];\n    }\n}\n\nfunction wrapNumber(value) {\n    return isNumber(value) ? [ value ] : value;\n}\n\nclass Sparkline extends Chart {\n    _setElementClass(element) {\n        addClass(element, 'k-sparkline');\n    }\n\n    _initElement(element) {\n        super._initElement(element);\n\n        this._initialWidth = Math.floor(elementSize(element).width);\n    }\n\n    _resize() {\n        const element = this.element;\n        const state = hide(element.childNodes);\n\n        this._initialWidth = Math.floor(elementSize(element).width);\n\n        show(element.childNodes, state);\n\n        super._resize();\n    }\n\n    _modelOptions() {\n        const chartOptions = this.options;\n        const stage = this._surfaceWrap();\n        const displayState = hide(stage.childNodes);\n\n        const space = document.createElement('span');\n        space.innerHTML = '&nbsp;';\n\n        stage.appendChild(space);\n\n        const options = deepExtend({\n            width: this._autoWidth,\n            height: elementSize(stage).height,\n            transitions: chartOptions.transitions\n        }, chartOptions.chartArea, {\n            inline: true,\n            align: false\n        });\n\n        elementSize(stage, {\n            width: options.width,\n            height: options.height\n        });\n\n        stage.removeChild(space);\n\n        show(stage.childNodes, displayState);\n        this.surface.resize();\n\n        return options;\n    }\n\n    _surfaceWrap() {\n        if (!this.stage) {\n            const stage = this.stage = document.createElement('span');\n            this.element.appendChild(stage);\n        }\n        return this.stage;\n    }\n\n    _createPlotArea(skipSeries) {\n        const plotArea = super._createPlotArea(skipSeries);\n        this._autoWidth = this._initialWidth || this._calculateWidth(plotArea);\n\n        return plotArea;\n    }\n\n    _calculateWidth(plotArea) {\n        const options = this.options;\n        const margin = getSpacing(options.chartArea.margin);\n        const charts = plotArea.charts;\n        const stage = this._surfaceWrap();\n        let total = 0;\n\n\n        for (let i = 0; i < charts.length; i++) {\n            const currentChart = charts[i];\n            const firstSeries = (currentChart.options.series || [])[0];\n            if (!firstSeries) {\n                continue;\n            }\n\n            if (firstSeries.type === BAR) {\n                return DEAULT_BAR_WIDTH;\n            }\n\n            if (firstSeries.type === BULLET) {\n                return DEAULT_BULLET_WIDTH;\n            }\n\n            if (firstSeries.type === PIE) {\n                return elementSize(stage).height;\n            }\n\n            const categoryAxis = currentChart.categoryAxis;\n            if (categoryAxis) {\n                const pointsCount = categoryAxis.options.categories.length *\n                    (!currentChart.options.isStacked && inArray(firstSeries.type, [ COLUMN, VERTICAL_BULLET ]) ? currentChart.seriesOptions.length : 1);\n\n                total = Math.max(total, pointsCount);\n            }\n        }\n\n        let size = total * options.pointWidth;\n        if (size > 0) {\n            size += margin.left + margin.right;\n        }\n\n        return size;\n    }\n\n    _createSharedTooltip(options) {\n        return new SharedTooltip(this._plotArea, options);\n    }\n\n    static normalizeOptions(userOptions) {\n        let options = wrapNumber(userOptions);\n\n        if (isArray(options)) {\n            options = { seriesDefaults: { data: options } };\n        } else {\n            options = deepExtend({}, options);\n        }\n\n        if (!options.series) {\n            options.series = [ { data: wrapNumber(options.data) } ];\n        }\n\n        deepExtend(options, {\n            seriesDefaults: {\n                type: options.type\n            }\n        });\n\n        if (inArray(options.series[0].type, NO_CROSSHAIR) ||\n            inArray(options.seriesDefaults.type, NO_CROSSHAIR)) {\n            options = deepExtend({}, {\n                categoryAxis: {\n                    crosshair: {\n                        visible: false\n                    }\n                }\n            }, options);\n        }\n\n        return options;\n    }\n}\n\nsetDefaultOptions(Sparkline, {\n    chartArea: {\n        margin: 2\n    },\n    axisDefaults: {\n        visible: false,\n        majorGridLines: {\n            visible: false\n        },\n        valueAxis: {\n            narrowRange: true\n        }\n    },\n    seriesDefaults: {\n        type: \"line\",\n        area: {\n            line: {\n                width: 0.5\n            }\n        },\n        bar: {\n            stack: true\n        },\n        padding: 2,\n        width: 0.5,\n        overlay: {\n            gradient: null\n        },\n        highlight: {\n            visible: false\n        },\n        border: {\n            width: 0\n        },\n        markers: {\n            size: 2,\n            visible: false\n        }\n    },\n    tooltip: {\n        visible: true,\n        shared: true\n    },\n    categoryAxis: {\n        crosshair: {\n            visible: true,\n            tooltip: {\n                visible: false\n            }\n        }\n    },\n    legend: {\n        visible: false\n    },\n    transitions: false,\n\n    pointWidth: 5,\n\n    panes: [ { clip: false } ]\n});\n\nexport default Sparkline;","import { drawing as draw } from '@progress/kendo-drawing';\n\nimport { interpolateValue, elementStyles } from '../common';\n\nclass FadeOutAnimation extends draw.Animation {\n\n    setup() {\n        this._initialOpacity = parseFloat(elementStyles(this.element, 'opacity').opacity);\n    }\n\n    step(pos) {\n        elementStyles(this.element, {\n            opacity: String(interpolateValue(this._initialOpacity, 0, pos))\n        });\n    }\n\n    abort() {\n        super.abort();\n        elementStyles(this.element, {\n            display: 'none',\n            opacity: String(this._initialOpacity)\n        });\n    }\n\n    cancel() {\n        super.abort();\n        elementStyles(this.element, {\n            opacity: String(this._initialOpacity)\n        });\n    }\n}\n\nexport default FadeOutAnimation;","import { Class, deepExtend, elementStyles, getTemplate, setDefaultOptions } from '../common';\nimport { toDate, toTime } from '../date-utils';\nimport FadeOutAnimation from './fade-out-animation';\n\nfunction createDiv(className, style) {\n    const div = document.createElement(\"div\");\n    div.className = className;\n    if (style) {\n        div.style.cssText = style;\n    }\n\n    return div;\n}\n\nclass NavigatorHint extends Class {\n    constructor(container, chartService, options) {\n        super();\n\n        this.options = deepExtend({}, this.options, options);\n        this.container = container;\n        this.chartService = chartService;\n\n        const padding = elementStyles(container, [ \"paddingLeft\", \"paddingTop\" ]);\n        this.chartPadding = {\n            top: padding.paddingTop,\n            left: padding.paddingLeft\n        };\n\n        this.createElements();\n        container.appendChild(this.element);\n    }\n\n    createElements() {\n        const element = this.element = createDiv('k-navigator-hint', 'display: none; position: absolute; top: 1px; left: 1px;');\n        const tooltip = this.tooltip = createDiv('k-tooltip k-chart-tooltip');\n        const scroll = this.scroll = createDiv('k-scroll');\n\n        tooltip.innerHTML = '&nbsp;';\n\n        element.appendChild(tooltip);\n        element.appendChild(scroll);\n    }\n\n    show(from, to, bbox) {\n        const { element, options, scroll, tooltip } = this;\n        const middle = toDate(toTime(from) + toTime(to - from) / 2);\n        const scrollWidth = bbox.width() * 0.4;\n        const minPos = bbox.center().x - scrollWidth;\n        const maxPos = bbox.center().x;\n        const posRange = maxPos - minPos;\n        const range = options.max - options.min;\n        const scale = posRange / range;\n        const offset = middle - options.min;\n        let text = this.chartService.intl.format(options.format, from, to);\n        const template = getTemplate(options);\n\n        this.clearHideTimeout();\n\n        if (!this._visible) {\n            elementStyles(element, {\n                visibility: 'hidden',\n                display: 'block'\n            });\n            this._visible = true;\n        }\n\n        if (template) {\n            text = template({\n                from: from,\n                to: to\n            });\n        }\n\n        tooltip.innerHTML = text;\n        elementStyles(tooltip, {\n            left: bbox.center().x - tooltip.offsetWidth / 2,\n            top: bbox.y1\n        });\n\n        const tooltipStyle = elementStyles(tooltip, [ 'marginTop', 'borderTopWidth', 'height' ]);\n\n        elementStyles(scroll, {\n            width: scrollWidth,\n            left: minPos + offset * scale,\n            top: bbox.y1 + tooltipStyle.marginTop + tooltipStyle.borderTopWidth + tooltipStyle.height / 2\n        });\n\n        elementStyles(element, {\n            visibility: 'visible'\n        });\n    }\n\n    clearHideTimeout() {\n        if (this._hideTimeout) {\n            clearTimeout(this._hideTimeout);\n        }\n\n        if (this._hideAnimation) {\n            this._hideAnimation.cancel();\n        }\n    }\n\n    hide() {\n        this.clearHideTimeout();\n\n        this._hideTimeout = setTimeout(() => {\n            this._visible = false;\n            this._hideAnimation = new FadeOutAnimation(this.element);\n            this._hideAnimation.setup();\n            this._hideAnimation.play();\n        }, this.options.hideDelay);\n    }\n\n    destroy() {\n        this.clearHideTimeout();\n        if (this.container) {\n            this.container.removeChild(this.element);\n        }\n        delete this.container;\n        delete this.chartService;\n        delete this.element;\n        delete this.tooltip;\n        delete this.scroll;\n    }\n}\n\nsetDefaultOptions(NavigatorHint, {\n    format: \"{0:d} - {1:d}\",\n    hideDelay: 500\n});\n\nexport default NavigatorHint;","const NAVIGATOR_PANE = \"_navigator\";\nconst NAVIGATOR_AXIS = NAVIGATOR_PANE;\n\nexport { NAVIGATOR_AXIS, NAVIGATOR_PANE };","import NavigatorHint from './navigator-hint';\nimport { Selection, filterSeriesByType } from '../chart';\nimport { DRAG, DRAG_END, EQUALLY_SPACED_SERIES, ZOOM, ZOOM_END } from '../chart/constants';\nimport { DateCategoryAxis } from '../core';\nimport { addDuration, lteDateIndex, parseDate, toDate, toTime } from '../date-utils';\nimport { Class, deepExtend, defined, getTemplate, InstanceObserver, last, limitValue, valueOrDefault } from '../common';\nimport { NAVIGATOR_AXIS, NAVIGATOR_PANE } from './constants';\n\nconst ZOOM_ACCELERATION = 3;\n\nclass Navigator extends Class {\n    constructor(chart) {\n        super();\n\n        this.chart = chart;\n        const options = this.options = deepExtend({}, this.options, chart.options.navigator);\n        const select = options.select;\n        if (select) {\n            select.from = this.parseDate(select.from);\n            select.to = this.parseDate(select.to);\n        }\n\n        if (!defined(options.hint.visible)) {\n            options.hint.visible = options.visible;\n        }\n\n        this.chartObserver = new InstanceObserver(this, {\n            [DRAG]: '_drag',\n            [DRAG_END]: '_dragEnd',\n            [ZOOM]: '_zoom',\n            [ZOOM_END]: '_zoomEnd'\n        });\n        chart.addObserver(this.chartObserver);\n    }\n\n    parseDate(value) {\n        return parseDate(this.chart.chartService.intl, value);\n    }\n\n    destroy() {\n        if (this.chart) {\n            this.chart.removeObserver(this.chartObserver);\n            delete this.chart;\n        }\n\n        if (this.selection) {\n            this.selection.destroy();\n            delete this.selection;\n        }\n\n        if (this.hint) {\n            this.hint.destroy();\n            delete this.hint;\n        }\n    }\n\n    redraw() {\n        this._redrawSelf();\n        this.initSelection();\n    }\n\n    initSelection() {\n        const { chart, options } = this;\n        const axis = this.mainAxis();\n        const { min, max } = axis.range();\n        const { from, to, mousewheel } = options.select;\n        const axisClone = clone(axis);\n        const groups = axis.options.categories;\n        let selection = this.selection;\n\n        if (groups.length === 0) {\n            return;\n        }\n\n        if (selection) {\n            selection.destroy();\n        }\n\n        // \"Freeze\" the selection axis position until the next redraw\n        axisClone.box = axis.box;\n\n        selection = this.selection = new Selection(chart, axisClone, {\n            min: min,\n            max: max,\n            from: from || min,\n            to: to || max,\n            mousewheel: valueOrDefault(mousewheel, { zoom: \"left\" }),\n            visible: options.visible\n        }, new InstanceObserver(this, {\n            selectStart: '_selectStart',\n            select: '_select',\n            selectEnd: '_selectEnd'\n        }));\n\n        if (this.hint) {\n            this.hint.destroy();\n        }\n\n        if (options.hint.visible) {\n            this.hint = new NavigatorHint(chart.element, chart.chartService, {\n                min: min,\n                max: max,\n                template: getTemplate(options.hint),\n                format: options.hint.format\n            });\n        }\n    }\n\n    setRange() {\n        const plotArea = this.chart._createPlotArea(true);\n        const axis = plotArea.namedCategoryAxes[NAVIGATOR_AXIS];\n\n        const { min, max } = axis.range();\n\n        const select = this.options.select || {};\n        let from = select.from || min;\n        if (from < min) {\n            from = min;\n        }\n\n        let to = select.to || max;\n        if (to > max) {\n            to = max;\n        }\n\n        this.options.select = deepExtend({}, select, {\n            from: from,\n            to: to\n        });\n\n        this.filterAxes();\n    }\n\n    _redrawSelf(silent) {\n        const plotArea = this.chart._plotArea;\n\n        if (plotArea) {\n            plotArea.redraw(last(plotArea.panes), silent);\n        }\n    }\n\n    redrawSlaves() {\n        const chart = this.chart;\n        const plotArea = chart._plotArea;\n        const slavePanes = plotArea.panes.slice(0, -1);\n\n        // Update the original series and categoryAxis before partial refresh.\n        plotArea.srcSeries = chart.options.series;\n        plotArea.options.categoryAxis = chart.options.categoryAxis;\n\n        plotArea.redraw(slavePanes);\n    }\n\n    _drag(e) {\n        const { chart, selection } = this;\n        const coords = chart._eventCoordinates(e.originalEvent);\n        const navigatorAxis = this.mainAxis();\n        const naviRange = navigatorAxis.datesRange();\n        const inNavigator = navigatorAxis.pane.box.containsPoint(coords);\n        const axis = chart._plotArea.categoryAxis;\n        const range = e.axisRanges[axis.options.name];\n        const select = this.options.select;\n        let duration;\n\n        if (!range || inNavigator || !selection) {\n            return;\n        }\n\n        if (select.from && select.to) {\n            duration = toTime(select.to) - toTime(select.from);\n        } else {\n            duration = toTime(selection.options.to) - toTime(selection.options.from);\n        }\n\n        const from = toDate(limitValue(\n            toTime(range.min),\n            naviRange.min, toTime(naviRange.max) - duration\n        ));\n\n        const to = toDate(limitValue(\n            toTime(from) + duration,\n            toTime(naviRange.min) + duration, naviRange.max\n        ));\n\n        this.options.select = { from: from, to: to };\n\n        if (this.options.liveDrag) {\n            this.filterAxes();\n            this.redrawSlaves();\n        }\n\n        selection.set(from, to);\n\n        this.showHint(from, to);\n    }\n\n    _dragEnd() {\n        this.filterAxes();\n        this.filter();\n        this.redrawSlaves();\n\n        if (this.hint) {\n            this.hint.hide();\n        }\n    }\n\n    readSelection() {\n        const { selection: { options: { from, to } }, options: { select } } = this;\n\n        select.from = from;\n        select.to = to;\n    }\n\n    filterAxes() {\n        const { options: { select = { } }, chart } = this;\n        const allAxes = chart.options.categoryAxis;\n        const { from, to } = select;\n\n        for (let idx = 0; idx < allAxes.length; idx++) {\n            const axis = allAxes[idx];\n            if (axis.pane !== NAVIGATOR_PANE) {\n                axis.min = from;\n                axis.max = to;\n            }\n        }\n    }\n\n    filter() {\n        const { chart, options: { select } } = this;\n        if (chart.requiresHandlers([ \"navigatorFilter\" ])) {\n            const axisOptions = new DateCategoryAxis(deepExtend({\n                baseUnit: \"fit\"\n            }, chart.options.categoryAxis[0], {\n                categories: [ select.from, select.to ]\n            }), chart.chartService).options;\n\n            this.chart.trigger(\"navigatorFilter\", {\n                from: addDuration(axisOptions.min, -axisOptions.baseUnitStep, axisOptions.baseUnit),\n                to: addDuration(axisOptions.max, axisOptions.baseUnitStep, axisOptions.baseUnit)\n            });\n        }\n    }\n\n    _zoom(e) {\n        const { chart: { _plotArea: { categoryAxis: axis } }, selection, options: { select, liveDrag } } = this;\n        const categories = this.mainAxis().options.categories;\n        let delta = e.delta;\n\n        if (!selection) {\n            return;\n        }\n\n        const fromIx = lteDateIndex(selection.options.from, categories);\n        const toIx = lteDateIndex(selection.options.to, categories);\n\n        e.originalEvent.preventDefault();\n\n        if (Math.abs(delta) > 1) {\n            delta *= ZOOM_ACCELERATION;\n        }\n\n        if (toIx - fromIx > 1) {\n            selection.expand(delta);\n            this.readSelection();\n        } else {\n            axis.options.min = select.from;\n            select.from = axis.scaleRange(-e.delta).min;\n        }\n\n        if (liveDrag) {\n            this.filterAxes();\n            this.redrawSlaves();\n        }\n\n        selection.set(select.from, select.to);\n\n        this.showHint(this.options.select.from, this.options.select.to);\n    }\n\n    _zoomEnd(e) {\n        this._dragEnd(e);\n    }\n\n    showHint(from, to) {\n        const plotArea = this.chart._plotArea;\n\n        if (this.hint) {\n            this.hint.show(from, to, plotArea.backgroundBox());\n        }\n    }\n\n    _selectStart(e) {\n        return this.chart._selectStart(e);\n    }\n\n    _select(e) {\n        this.showHint(e.from, e.to);\n\n        return this.chart._select(e);\n    }\n\n    _selectEnd(e) {\n        if (this.hint) {\n            this.hint.hide();\n        }\n\n        this.readSelection();\n        this.filterAxes();\n        this.filter();\n        this.redrawSlaves();\n\n        return this.chart._selectEnd(e);\n    }\n\n    mainAxis() {\n        const plotArea = this.chart._plotArea;\n\n        if (plotArea) {\n            return plotArea.namedCategoryAxes[NAVIGATOR_AXIS];\n        }\n    }\n\n    select(from, to) {\n        const select = this.options.select;\n\n        if (from && to) {\n            select.from = this.parseDate(from);\n            select.to = this.parseDate(to);\n\n            this.filterAxes();\n            this.filter();\n            this.redrawSlaves();\n\n            this.selection.set(from, to);\n        }\n\n        return {\n            from: select.from,\n            to: select.to\n        };\n    }\n\n    static setup(options = {}, themeOptions = {}) {\n        if (options.__navi) {\n            return;\n        }\n        options.__navi = true;\n\n        const naviOptions = deepExtend({}, themeOptions.navigator, options.navigator);\n        const panes = options.panes = [].concat(options.panes);\n        const paneOptions = deepExtend({}, naviOptions.pane, { name: NAVIGATOR_PANE });\n\n        if (!naviOptions.visible) {\n            paneOptions.visible = false;\n            paneOptions.height = 0.1;\n        }\n\n        panes.push(paneOptions);\n\n        Navigator.attachAxes(options, naviOptions);\n        Navigator.attachSeries(options, naviOptions, themeOptions);\n    }\n\n    static attachAxes(options, naviOptions) {\n        const series = naviOptions.series || [];\n        const categoryAxes = options.categoryAxis = [].concat(options.categoryAxis);\n        const valueAxes = options.valueAxis = [].concat(options.valueAxis);\n\n        const equallySpacedSeries = filterSeriesByType(series, EQUALLY_SPACED_SERIES);\n        const justifyAxis = equallySpacedSeries.length === 0;\n\n        const base = deepExtend({\n            type: \"date\",\n            pane: NAVIGATOR_PANE,\n            roundToBaseUnit: !justifyAxis,\n            justified: justifyAxis,\n            _collapse: false,\n            majorTicks: { visible: true },\n            tooltip: { visible: false },\n            labels: { step: 1 },\n            autoBind: naviOptions.autoBindElements,\n            autoBaseUnitSteps: {\n                minutes: [ 1 ],\n                hours: [ 1, 2 ],\n                days: [ 1, 2 ],\n                weeks: [],\n                months: [ 1 ],\n                years: [ 1 ]\n            }\n        });\n        const user = naviOptions.categoryAxis;\n\n        categoryAxes.push(\n            deepExtend({}, base, {\n                maxDateGroups: 200\n            }, user, {\n                name: NAVIGATOR_AXIS,\n                title: null,\n                baseUnit: \"fit\",\n                baseUnitStep: \"auto\",\n                labels: { visible: false },\n                majorTicks: { visible: false }\n            }), deepExtend({}, base, user, {\n                name: NAVIGATOR_AXIS + \"_labels\",\n                maxDateGroups: 20,\n                baseUnitStep: \"auto\",\n                plotBands: [],\n                autoBaseUnitSteps: {\n                    minutes: []\n                },\n                _overlap: true\n            }), deepExtend({}, base, user, {\n                name: NAVIGATOR_AXIS + \"_ticks\",\n                maxDateGroups: 200,\n                majorTicks: {\n                    width: 0.5\n                },\n                plotBands: [],\n                title: null,\n                labels: { visible: false, mirror: true },\n                _overlap: true\n            })\n        );\n\n        valueAxes.push(deepExtend({\n            name: NAVIGATOR_AXIS,\n            pane: NAVIGATOR_PANE,\n            majorGridLines: {\n                visible: false\n            },\n            visible: false\n        }, naviOptions.valueAxis));\n    }\n\n    static attachSeries(options, naviOptions, themeOptions) {\n        const series = options.series = options.series || [];\n        const navigatorSeries = [].concat(naviOptions.series || []);\n        const seriesColors = themeOptions.seriesColors;\n        const defaults = naviOptions.seriesDefaults;\n\n        for (let idx = 0; idx < navigatorSeries.length; idx++) {\n            series.push(\n                deepExtend({\n                    color: seriesColors[idx % seriesColors.length],\n                    categoryField: naviOptions.dateField,\n                    visibleInLegend: false,\n                    tooltip: {\n                        visible: false\n                    }\n                }, defaults, navigatorSeries[idx], {\n                    axis: NAVIGATOR_AXIS,\n                    categoryAxis: NAVIGATOR_AXIS,\n                    autoBind: naviOptions.autoBindElements\n                })\n            );\n        }\n    }\n}\n\nfunction ClonedObject() { }\nfunction clone(obj) {\n    ClonedObject.prototype = obj;\n    return new ClonedObject();\n}\n\nexport default Navigator;","import { Chart } from '../chart';\n\nimport Navigator from './navigator';\nimport { DEFAULT_WIDTH } from '../common/constants';\nimport { addClass, deepExtend, elementSize, grep, setDefaultOptions } from '../common';\nimport { NAVIGATOR_AXIS, NAVIGATOR_PANE } from './constants';\n\nconst AUTO_CATEGORY_WIDTH = 28;\n\nclass StockChart extends Chart {\n\n    applyDefaults(options, themeOptions) {\n        const width = elementSize(this.element).width || DEFAULT_WIDTH;\n        let theme = themeOptions;\n\n        const stockDefaults = {\n            seriesDefaults: {\n                categoryField: options.dateField\n            },\n            axisDefaults: {\n                categoryAxis: {\n                    name: \"default\",\n                    majorGridLines: {\n                        visible: false\n                    },\n                    labels: {\n                        step: 2\n                    },\n                    majorTicks: {\n                        visible: false\n                    },\n                    maxDateGroups: Math.floor(width / AUTO_CATEGORY_WIDTH)\n                }\n            }\n        };\n\n        if (theme) {\n            theme = deepExtend({}, theme, stockDefaults);\n        }\n\n        Navigator.setup(options, theme);\n\n        super.applyDefaults(options, theme);\n    }\n\n    _setElementClass(element) {\n        addClass(element, 'k-chart k-stockchart');\n    }\n\n    setOptions(options) {\n        this.destroyNavigator();\n        super.setOptions(options);\n    }\n\n    _resize() {\n        const transitions = this.options.transitions;\n\n        this.options.transitions = false;\n        this._fullRedraw();\n        this.options.transitions = transitions;\n    }\n\n    _redraw() {\n        const navigator = this.navigator;\n\n        if (!this._dirty() && navigator && navigator.options.partialRedraw) {\n            navigator.redrawSlaves();\n        } else {\n            this._fullRedraw();\n        }\n    }\n\n    _dirty() {\n        const options = this.options;\n        const series = [].concat(options.series, options.navigator.series);\n        const seriesCount = grep(series, function(s) { return s && s.visible; }).length;\n        const dirty = this._seriesCount !== seriesCount;\n        this._seriesCount = seriesCount;\n\n        return dirty;\n    }\n\n    _fullRedraw() {\n        let navigator = this.navigator;\n\n        if (!navigator) {\n            navigator = this.navigator = new Navigator(this);\n            this.trigger(\"navigatorCreated\", { navigator: navigator });\n        }\n\n        navigator.setRange();\n        super._redraw();\n        navigator.initSelection();\n    }\n\n    _trackSharedTooltip(coords) {\n        const plotArea = this._plotArea;\n        const pane = plotArea.paneByPoint(coords);\n\n        if (pane && pane.options.name === NAVIGATOR_PANE) {\n            this._unsetActivePoint();\n        } else {\n            super._trackSharedTooltip(coords);\n        }\n    }\n\n    bindCategories() {\n        super.bindCategories();\n        this.copyNavigatorCategories();\n    }\n\n    copyNavigatorCategories() {\n        const definitions = [].concat(this.options.categoryAxis);\n        let categories;\n\n        for (let axisIx = 0; axisIx < definitions.length; axisIx++) {\n            const axis = definitions[axisIx];\n            if (axis.name === NAVIGATOR_AXIS) {\n                categories = axis.categories;\n            } else if (categories && axis.pane === NAVIGATOR_PANE) {\n                axis.categories = categories;\n            }\n        }\n    }\n\n    destroyNavigator() {\n        if (this.navigator) {\n            this.navigator.destroy();\n            this.navigator = null;\n        }\n    }\n\n    destroy() {\n        this.destroyNavigator();\n        super.destroy();\n    }\n\n    _stopDragEvent(e) {\n        const coords = this._eventCoordinates(e);\n        const pane = this._plotArea.paneByPoint(coords);\n\n        return super._stopDragEvent(e) || (pane && pane.options.name === NAVIGATOR_PANE);\n    }\n}\n\nsetDefaultOptions(StockChart, {\n    dateField: \"date\",\n    axisDefaults: {\n        categoryAxis: {\n            type: \"date\",\n            baseUnit: \"fit\",\n            justified: true\n        },\n        valueAxis: {\n            narrowRange: true,\n            labels: {\n                format: \"C\"\n            }\n        }\n    },\n    navigator: {\n        select: {},\n        seriesDefaults: {\n            markers: {\n                visible: false\n            },\n            tooltip: {\n                visible: true\n            },\n            line: {\n                width: 2\n            }\n        },\n        hint: {},\n        visible: true\n    },\n    tooltip: {\n        visible: true\n    },\n    legend: {\n        visible: false\n    }\n});\n\nexport default StockChart;","const BAR_GAP = 1.5;\nconst BAR_SPACING = 0.4;\nconst BLACK = '#000';\nconst SANS = 'Arial, Helvetica, sans-serif';\nconst SANS11 = \"11px \" + SANS;\nconst SANS12 = '12px ' + SANS;\nconst SANS16 = '16px ' + SANS;\nconst TRANSPARENT = 'transparent';\nconst WHITE = '#fff';\n\nconst notes = () => ({\n    icon: {\n        border: {\n            width: 1\n        }\n    },\n    label: {\n        font: SANS12,\n        padding: 3\n    },\n    line: {\n        length: 10,\n        width: 2\n    },\n    visible: true\n});\n\nconst axisDefaults = () => ({\n    labels: {\n        font: SANS12\n    },\n    notes: notes(),\n    title: {\n        font: SANS16,\n        margin: 5\n    }\n});\n\nconst areaSeries = () => ({\n    highlight: {\n        markers: {\n            border: {}\n        }\n    },\n    line: {\n        opacity: 1,\n        width: 0\n    },\n    markers: {\n        size: 6,\n        visible: false\n    },\n    opacity: 0.4\n});\n\nconst barSeries = () => ({\n    gap: BAR_GAP,\n    spacing: BAR_SPACING\n});\n\nconst boxPlotSeries = () => ({\n    outliersField: \"\",\n    meanField: \"\",\n    border: {\n        _brightness: 0.8,\n        width: 1\n    },\n    downColor: WHITE,\n    gap: 1,\n    highlight: {\n        border: {\n            opacity: 1,\n            width: 2\n        },\n        whiskers: {\n            width: 3\n        },\n        mean: {\n            width: 2\n        },\n        median: {\n            width: 2\n        }\n    },\n    mean: {\n        width: 2\n    },\n    median: {\n        width: 2\n    },\n    spacing: 0.3,\n    whiskers: {\n        width: 2\n    }\n});\n\nconst bubbleSeries = () => ({\n    border: {\n        width: 0\n    },\n    labels: {\n        background: TRANSPARENT\n    },\n    opacity: 0.6\n});\n\nconst bulletSeries = () => ({\n    gap: BAR_GAP,\n    spacing: BAR_SPACING,\n    target: {\n        color: \"#ff0000\"\n    }\n});\n\nconst candlestickSeries = () => ({\n    border: {\n        _brightness: 0.8,\n        width: 1\n    },\n    downColor: WHITE,\n    gap: 1,\n    highlight: {\n        border: {\n            opacity: 1,\n            width: 2\n        },\n        line: {\n            width: 2\n        }\n    },\n    line: {\n        color: BLACK,\n        width: 1\n    },\n    spacing: 0.3\n});\n\nconst columnSeries = () => ({\n    gap: BAR_GAP,\n    spacing: BAR_SPACING\n});\n\nconst donutSeries = () => ({\n    margin: 1\n});\n\nconst lineSeries = () => ({\n    width: 2\n});\n\nconst ohlcSeries = () => ({\n    gap: 1,\n    highlight: {\n        line: {\n            opacity: 1,\n            width: 3\n        }\n    },\n    line: {\n        width: 1\n    },\n    spacing: 0.3\n});\n\nconst radarAreaSeries = () => ({\n    line: {\n        opacity: 1,\n        width: 0\n    },\n    markers: {\n        size: 6,\n        visible: false\n    },\n    opacity: 0.5\n});\n\nconst radarLineSeries = () => ({\n    markers: {\n        visible: false\n    },\n    width: 2\n});\n\nconst rangeBarSeries = () => ({\n    gap: BAR_GAP,\n    spacing: BAR_SPACING\n});\n\nconst rangeColumnSeries = () => ({\n    gap: BAR_GAP,\n    spacing: BAR_SPACING\n});\n\nconst scatterLineSeries = () => ({\n    width: 1\n});\n\nconst waterfallSeries = () => ({\n    gap: 0.5,\n    line: {\n        color: BLACK,\n        width: 1\n    },\n    spacing: BAR_SPACING\n});\n\nconst pieSeries = () => ({\n    labels: {\n        background: '',\n        color: '',\n        padding: {\n            top: 5,\n            bottom: 5,\n            left: 7,\n            right: 7\n        }\n    }\n});\n\nconst funnelSeries = () => ({\n    labels: {\n        background: '',\n        color: '',\n        padding: {\n            top: 5,\n            bottom: 5,\n            left: 7,\n            right: 7\n        }\n    }\n});\n\nconst seriesDefaults = (options) => ({\n    visible: true,\n    labels: {\n        font: SANS11\n    },\n    overlay: options.gradients ? {} : {\n        gradient: \"none\"\n    },\n    area: areaSeries(),\n    bar: barSeries(),\n    boxPlot: boxPlotSeries(),\n    bubble: bubbleSeries(),\n    bullet: bulletSeries(),\n    candlestick: candlestickSeries(),\n    column: columnSeries(),\n    pie: pieSeries(),\n    donut: donutSeries(),\n    funnel: funnelSeries(),\n    horizontalWaterfall: waterfallSeries(),\n    line: lineSeries(),\n    notes: notes(),\n    ohlc: ohlcSeries(),\n    radarArea: radarAreaSeries(),\n    radarLine: radarLineSeries(),\n    polarArea: radarAreaSeries(),\n    polarLine: radarLineSeries(),\n    rangeBar: rangeBarSeries(),\n    rangeColumn: rangeColumnSeries(),\n    scatterLine: scatterLineSeries(),\n    verticalArea: areaSeries(),\n    verticalBoxPlot: boxPlotSeries(),\n    verticalBullet: bulletSeries(),\n    verticalLine: lineSeries(),\n    waterfall: waterfallSeries()\n});\n\nconst title = () => ({\n    font: SANS16\n});\n\nconst legend = () => ({\n    labels: {\n        font: SANS12\n    }\n});\n\nexport const baseTheme = (options = {}) => ({\n    axisDefaults: axisDefaults(),\n    categoryAxis: {\n        majorGridLines: {\n            visible: true\n        }\n    },\n    navigator: {\n        pane: {\n            height: 90,\n            margin: {\n                top: 10\n            }\n        }\n    },\n    seriesDefaults: seriesDefaults(options),\n    title: title(),\n    legend: legend()\n});\n\n"],"names":["const","let","drawing","OBJECT","arguments","field","prototypeAccessors","current","this","append","elementSize","logToConsole","super","Class","geom","draw","idx","round","applyDefaults","autoAxisMax","autoAxisMin","NumericAxis","LogarithmicAxis","tangent","controlPoints","support","seriesIx","Color","i","length","axis","lineBox","pane","paneId","anchor","anchorCrossings","currentAxis","currentPane","elementOffset","axisPane","currentSeries","throttle","ranges","SharedTooltip","ChartSharedTooltip","hide","show","createDiv","ZOOM_ACCELERATION","clone","duration","BLACK","WHITE"],"mappings":";;;;;;AAAAA,IAAM,CAAC,GAAG,GAAG,CAAC;AACdA,IAAM,CAAC,GAAG,GAAG,CAAC;AACdA,IAAM,GAAG,GAAG,KAAK,CAAC;AAClBA,IAAM,MAAM,GAAG,QAAQ,CAAC;AACxBA,IAAM,IAAI,GAAG,MAAM,CAAC;AACpBA,IAAM,KAAK,GAAG,OAAO,CAAC;AACtBA,IAAM,MAAM,GAAG,QAAQ,CAAC;AACxBA,IAAM,KAAK,GAAG,OAAO,CAAC;AACtBA,IAAM,MAAM,GAAG,QAAQ,CAAC;AACxBA,IAAM,eAAe,GAAG,CAAC,CAAC;AAC1BA,IAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;AACnCA,IAAM,SAAS,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;AACpCA,IAAM,aAAa,GAAG,GAAG,CAAC;AAC1BA,IAAM,cAAc,GAAG,GAAG,CAAC;AAC3BA,IAAM,KAAK,GAAG,MAAM,CAAC;AACrBA,IAAM,KAAK,GAAG,MAAM,CAAC;AACrBA,IAAM,YAAY,GAAG,iBAAiB,CAAC;AACvCA,IAAM,iBAAiB,GAAG,EAAE,CAAC;AAC7BA,IAAM,gBAAgB,GAAG,gBAAgB,CAAC;AAC1CA,IAAM,UAAU,GAAG,WAAW,CAAC;AAC/BA,IAAM,UAAU,GAAG,WAAW,CAAC;AAC/BA,IAAM,OAAO,GAAG,SAAS,CAAC;AAC1BA,IAAM,IAAI,GAAG,MAAM,CAAC;AACpBA,IAAM,MAAM,GAAG,QAAQ,CAAC;AACxBA,IAAM,QAAQ,GAAG,UAAU,CAAC;AAC5BA,IAAM,KAAK,GAAG,OAAO,CAAC;AACtBA,IAAM,GAAG,GAAG,KAAK,CAAC;AAClBA,IAAM,MAAM,GAAG,QAAQ,CAAC;AACxBA,IAAM,KAAK,GAAG,OAAO,CAAC;AACtBA,IAAM,MAAM,GAAG,QAAQ,CAAC;AACxBA,IAAM,MAAM,GAAG,QAAQ,CAAC;AACxBA,IAAM,IAAI,GAAG,MAAM,CAAC;AACpBA,IAAM,YAAY,GAAG,SAAS,CAAC,AAE/B,AAWE;;AC7Ca,SAAS,OAAO,CAAC,KAAK,EAAE;IACnC,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;;;ACCjB,SAAS,QAAQ,CAAC,OAAO,EAAE,OAAO,EAAE;IAC/CA,IAAM,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,GAAG,EAAE,OAAO,EAAE,CAAC;;IAE5D,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,UAAU,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;QAC9CD,IAAM,SAAS,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;QAClC,IAAI,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;YAC7C,OAAO,CAAC,SAAS,IAAI,GAAG,GAAG,SAAS,CAAC;SACxC;KACJ;;;ACVLA,IAAM,WAAW,GAAG,MAAM,CAAC;;AAE3B,AAAe,SAAS,WAAW,CAAC,OAAO,EAAE,SAAS,EAAE;IACpD,IAAI,OAAO,IAAI,OAAO,CAAC,SAAS,EAAE;QAC9B,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;KAC1F;;;ACHU,SAAS,gBAAgB,CAAC,IAAI,EAAE;IAC3CC,IAAI,MAAM,GAAG,GAAG,CAAC;IACjB,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,IAAIC,8BAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;QACxE,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;YACrC,MAAM,GAAG,CAAC,CAAC;SACd;KACJ;;IAED,KAAKD,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC3C,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;KAChE;;IAED,OAAO,IAAI,CAAC;;;ACdD,SAAS,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE;;;;IAI9C,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;;;ACJ3C,SAAS,UAAU,CAAC,EAAE,EAAE;IACnC,OAAO,OAAO,EAAE,KAAK,UAAU,CAAC;;;ACCpCD,IAAMG,QAAM,GAAG,QAAQ,CAAC;AACxBH,IAAM,SAAS,GAAG,WAAW,CAAC;;AAE9B,SAAS,aAAa,CAAC,WAAW,EAAE,MAAM,EAAE;;IAExC,KAAKC,IAAI,QAAQ,IAAI,MAAM,EAAE;QACzBA,IAAI,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;QACjCA,IAAI,QAAQ,GAAG,OAAO,SAAS,CAAC;;QAEhCA,IAAI,QAAQ,WAAA,CAAC;QACb,IAAI,QAAQ,KAAKE,QAAM,IAAI,SAAS,KAAK,IAAI,EAAE;YAC3C,QAAQ,GAAG,SAAS,CAAC,WAAW,CAAC;SACpC,MAAM;YACH,QAAQ,GAAG,IAAI,CAAC;SACnB;;QAED,IAAI,QAAQ,IAAI,QAAQ,KAAK,KAAK,EAAE;;YAEhC,IAAI,SAAS,YAAY,IAAI,EAAE;gBAC3B,WAAW,CAAC,QAAQ,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;aACzD,MAAM,IAAI,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;gBACpC,WAAW,CAAC,QAAQ,CAAC,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;aAC7C,MAAM;gBACHF,IAAI,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC;gBACrC,IAAI,OAAO,CAAC,QAAQ,CAAC,KAAKE,QAAM,EAAE;oBAC9B,WAAW,CAAC,QAAQ,CAAC,GAAG,QAAQ,IAAI,EAAE,CAAC;iBAC1C,MAAM;oBACH,WAAW,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;iBAC9B;gBACD,aAAa,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC,CAAC;aACnD;SACJ,MAAM,IAAI,QAAQ,KAAK,SAAS,EAAE;YAC/B,WAAW,CAAC,QAAQ,CAAC,GAAG,SAAS,CAAC;SACrC;KACJ;;IAED,OAAO,WAAW,CAAC;CACtB;;AAED,AAAe,SAAS,UAAU,CAAC,WAAW,EAAE;;;IAC5CH,IAAM,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;;IAEhC,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;QAC7B,aAAa,CAAC,WAAW,EAAEG,WAAS,CAAC,CAAC,CAAC,CAAC,CAAC;KAC5C;;IAED,OAAO,WAAW,CAAC;;;AChDR,SAAS,QAAQ,CAAC,KAAK,EAAE;IACpC,OAAO,OAAO,KAAK,KAAK,QAAQ,CAAC;;;ACCtB,SAAS,QAAQ,CAAC,KAAK,EAAE;IACpC,OAAO,OAAO,KAAK,KAAK,MAAM,CAAC;;;ACHpB,SAAS,QAAQ,CAAC,KAAK,EAAE;IACpC,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;;;ACCvC,SAAS,UAAU,CAAC,KAAK,EAAE;IACtC,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;QACjB,OAAO,KAAK,GAAG,IAAI,CAAC;KACvB;IACD,OAAO,KAAK,CAAC;;;ACDjBJ,IAAM,iBAAiB,GAAG,qCAAqC,CAAC;;AAEhE,SAAS,WAAW,CAAC,KAAK,EAAE;IACxB,OAAO,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;CACxC;;AAED,AAAe,SAAS,aAAa,CAAC,OAAO,EAAE,MAAM,EAAE;IACnDA,IAAM,WAAW,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,GAAG,MAAM,CAAC;;IAE3D,IAAI,OAAO,CAAC,WAAW,CAAC,EAAE;QACtBA,IAAM,MAAM,GAAG,EAAE,CAAC;QAClBA,IAAM,KAAK,GAAG,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;;QAE/C,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,WAAW,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YAC/CA,IAAI,KAAK,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;YAC7B,MAAM,CAAC,KAAK,CAAC,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;SAChF;;QAED,OAAO,MAAM,CAAC;KACjB,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;QACzB,KAAKA,IAAII,OAAK,IAAI,MAAM,EAAE;YACtB,OAAO,CAAC,KAAK,CAACA,OAAK,CAAC,GAAG,UAAU,CAAC,MAAM,CAACA,OAAK,CAAC,CAAC,CAAC;SACpD;KACJ;;;AC1BU,SAAS,UAAU,CAAC,KAAK,EAAE,cAAkB,EAAE;mDAAN,GAAG,CAAC;;IACxDL,IAAM,OAAO,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;;IAEzD,IAAI,MAAM,CAAC,KAAK,CAAC,KAAK,QAAQ,EAAE;QAC5B,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;KAC3E,MAAM;QACH,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,cAAc,CAAC;QAC5C,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,cAAc,CAAC;QAChD,OAAO,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,cAAc,CAAC;QAClD,OAAO,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC;KACjD;;IAED,OAAO,OAAO,CAAC;;;ACdnBA,IAAM,qBAAqB,GAAG;IAC1B,MAAM,EAAE,UAAC,MAAM,EAAE,KAAK,EAAE,SAAG,KAAK,GAAA;;IAEhC,QAAQ,EAAE,UAAC,KAAK,EAAE,SAAG,KAAK,GAAA;;IAE1B,SAAS,EAAE,UAAC,KAAK,EAAE,SAAG,IAAI,IAAI,CAAC,KAAK,CAAC,GAAA;CACxC,CAAC;;AAEFC,IAAI,OAAO,GAAG,qBAAqB,CAAC;;AAEpC,IAAM,WAAW,GAAC;;;;AAAA,YACd,QAAe,sBAAC,kBAAkB,EAAE;IACpC,OAAW,GAAG,kBAAkB,CAAC;CAChC,CAAA;;AAEL,gBAAI,cAAyB,mBAAG;IAC5B,OAAW,OAAO,CAAC;CAClB,CAAA;;wDACJ,AAED,AAA2B;;ACjB3BD,IAAM,oBAAoB,GAAG,sBAAsB,CAAC;;AAEpD,IAAM,aAAa,GAAC,sBACL,CAAC,WAAW,EAAE;IACzB,IAAQ,CAAC,YAAY,GAAG,WAAW,CAAC;CACnC;;+CAAA;;AAELM,qBAAI,WAAe,mBAAG;IAClB,OAAW,IAAI,CAAC,YAAY,IAAI,WAAW,CAAC,cAAc,CAAC;CAC1D,CAAA;;AAEL,wBAAI,IAAI,kBAAC,YAAY,EAAa;;;;IAC9B,IAAU,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;;IAElC,IAAQ,YAAY,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE;QACtC,OAAW,IAAI,CAAC,MAAM,MAAA,CAAC,QAAA,YAAY,WAAE,MAAS,EAAA,CAAC,CAAC;KAC/C;;IAEL,OAAW,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;CACjD,CAAA;;AAEL,wBAAI,UAAU,wBAAC,YAAY,EAAE,MAAM,EAAE,MAAM,EAAE;IACzC,IAAU,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;IAClC,IAAQ,MAAM,CAAC;;IAEf,IAAQ,YAAY,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE;QACtC,MAAU,GAAG,YAAY,CAAC,OAAO,CAAC,oBAAoB,EAAE,SAAS,KAAK,EAAE,KAAK,EAAE,iBAAiB,EAAE;YAC9F,IAAQ,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;;YAE5C,OAAW,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,iBAAiB,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,CAAC;SAChG,CAAC,CAAC;KACN,MAAM;QACP,MAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC;KAC3D;;IAEL,OAAW,MAAM,CAAC;CACjB,CAAA;;yEACJ,AAED;;ACvCA,IAAM,YAAY,GAAC,qBACJ,CAAC,KAAK,EAAE,OAAY,EAAE;qCAAP,GAAG,EAAE;;IAC/B,IAAQ,CAAC,YAAY,GAAG,OAAO,CAAC,WAAW,CAAC;IAC5C,IAAQ,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,KAAK,CAAC;IAC1C,IAAQ,CAAC,MAAM,GAAG,IAAI,aAAa,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IACzD,IAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;CACtB;;sCAAA;;AAEL,mBAAI,IAAQ,mBAAG;IACX,OAAW,IAAI,CAAC,YAAY,IAAI,WAAW,CAAC,cAAc,CAAC;CAC1D,CAAA;;AAEL,uBAAI,MAAM,oBAAC,IAAI,EAAE,IAAI,EAAE;IACnB,IAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;CAClC,CAAA;;sEACJ,AAED;;ACpBAL,IAAIM,SAAO,CAAC;;AAEZ,IAAM,gBAAgB,GAAC;;AAAA,iBACnB,QAAe,sBAAC,kBAAkB,EAAE;IACpCA,SAAW,GAAG,kBAAkB,CAAC;CAChC,CAAA;;AAEL,iBAAI,MAAa,oBAAC,OAAO,EAAE,MAAM,EAAE;IAC/B,IAAQA,SAAO,EAAE;QACb,OAAWA,SAAO,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;KAC1C;CACJ,CAAA,AAGL,AAAgC;;ACdhCN,IAAIM,SAAO,GAAG;IACV,OAAO,EAAE,SAAS,QAAQ,EAAE;QACxB,OAAO,QAAQ,CAAC;KACnB;CACJ,CAAC;;AAEF,IAAM,eAAe,GAAC;;AAAA,gBAClB,QAAe,sBAAC,kBAAkB,EAAE;IACpCA,SAAW,GAAG,kBAAkB,CAAC;CAChC,CAAA;;AAEL,gBAAI,OAAc,qBAAC,QAAQ,EAAE;IACzB,OAAWA,SAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;CACpC,CAAA,AAGL,AAA+B;;ACbhB,SAAS,WAAW,CAAC,OAAY,EAAE;qCAAP,GAAG,EAAE;;IAC5CN,IAAI,QAAQ,CAAC;IACb,IAAI,OAAO,CAAC,QAAQ,EAAE;QAClB,OAAO,CAAC,QAAQ,GAAG,QAAQ,GAAG,eAAe,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;KAC3E,MAAM,IAAI,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QACpC,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC;KAC9B;;IAED,OAAO,QAAQ,CAAC;;;ACTpBD,IAAM,WAAW,GAAG,qDAAqD,CAAC;AAC1EA,IAAM,WAAW,GAAG,EAAE,CAAC;;AAEvB,WAAW,CAAC,WAAW,CAAC,GAAG,SAAS,GAAG,EAAE;IACrC,OAAO,GAAG,CAAC;CACd,CAAC;;AAEF,AAAe,SAAS,MAAM,CAAC,KAAK,EAAE;IAClC,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE;QACpB,OAAO,WAAW,CAAC,KAAK,CAAC,CAAC;KAC7B;;IAEDA,IAAM,MAAM,GAAG,EAAE,CAAC;IAClB,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,SAAS,KAAK,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE;QACpE,MAAM,CAAC,IAAI,CAACE,8BAAO,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC,aAAa,IAAI,KAAK,CAAC,CAAC,CAAC;KAC/E,CAAC,CAAC;;IAEH,WAAW,CAAC,KAAK,CAAC,GAAG,SAAS,GAAG,EAAE;QAC/BD,IAAI,MAAM,GAAG,GAAG,CAAC;QACjB,KAAKA,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,IAAI,MAAM,EAAE,GAAG,EAAE,EAAE;YACpD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;SAChC;;QAED,OAAO,MAAM,CAAC;KACjB,CAAC;;IAEF,OAAO,WAAW,CAAC,KAAK,CAAC,CAAC;;;AC5Bf,SAAS,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE;IAC1CD,IAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;IAC5BA,IAAM,MAAM,GAAG,EAAE,CAAC;IAClB,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,EAAE,GAAG,EAAE,EAAE;QACnC,IAAI,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;YACtB,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;SAC5B;KACJ;;IAED,OAAO,MAAM,CAAC;;;ACTH,SAAS,UAAU,CAAC,OAAO,EAAE,UAAU,EAAE;IACpD,IAAI,OAAO,CAAC,SAAS,EAAE;QACnBD,IAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACpC,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YACzC,IAAI,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;gBAC9C,OAAO,IAAI,CAAC;aACf;SACJ;KACJ;;;ACRU,SAAS,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE;IAC1C,IAAI,KAAK,EAAE;QACP,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;KACtC;;;ACAU,SAAS,gBAAgB,CAAC,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE;IAC3D,OAAOC,8BAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,QAAQ,EAAE,eAAe,CAAC,CAAC;;;ACFjFF,IAAM,OAAO,GAAG,SAAS,CAAC;;AAE1B,IAAM,gBAAgB,GAAC,yBACR,CAAC,QAAQ,EAAE,QAAQ,EAAE;IAChC,IAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,IAAQ,CAAC,UAAU,GAAG,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;CAC/D,CAAA;;AAEL,2BAAI,OAAO,qBAAC,IAAI,EAAE,IAAI,EAAE;IACpB,OAAkC,GAAG,IAAI;QAA7B,IAAA,QAAQ;QAAE,IAAA,UAAU,kBAAtB;IACV,IAAQ,kBAAkB,CAAC;IAC3B,IAAQ,UAAU,CAAC,IAAI,CAAC,EAAE;QACtB,kBAAsB,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;KAClE,MAAM,IAAI,QAAQ,CAAC,OAAO,CAAC,EAAE;QAC9B,kBAAsB,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;KAC/D;;IAEL,OAAW,kBAAkB,CAAC;CAC7B,CAAA;;AAEL,2BAAI,YAAY,0BAAC,MAAM,EAAW;;;;IAC9B,OAAW,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;CAC3D,CAAA;;AAEL,2BAAI,gBAAgB,8BAAC,KAAK,EAAE;;;IACxB,IAAQ,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE;QACpC,OAAW,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAChD;;IAEL,KAASC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;QAC7C,IAAQO,MAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;YACjC,OAAW,IAAI,CAAC;SACf;KACJ;CACJ,CAAA,AAGL;;ACrCe,SAAS,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE;IACzCR,IAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;IAC5BA,IAAM,MAAM,GAAG,EAAE,CAAC;IAClB,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,EAAE,GAAG,EAAE,EAAE;QACnCA,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;QACjC,IAAIC,8BAAO,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACtB;KACJ;IACD,OAAO,MAAM,CAAC;;;ACTH,SAAS,eAAe,CAAC,CAAC,EAAE;IACvCD,IAAI,KAAK,GAAG,CAAC,CAAC;;IAEd,IAAI,CAAC,CAAC,UAAU,EAAE;QACd,KAAK,GAAG,CAAC,CAAC,CAAC,UAAU,GAAG,GAAG,CAAC;QAC5B,KAAK,GAAG,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KAC5D;;IAED,IAAI,CAAC,CAAC,MAAM,EAAE;QACV,KAAK,GAAGC,8BAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KAC5C;;IAED,OAAO,KAAK,CAAC;;;ACZjB,SAA6K,GAAGA,8BAAO,CAAC,IAAI;AAApL,IAAAO,QAAM;AAAE,IAAA,UAAU;AAAE,IAAA,OAAO;AAAE,IAAA,GAAG;AAAE,IAAA,aAAa;AAAE,IAAAC,aAAW;AAAE,IAAA,YAAY;AAAE,IAAA,gBAAgB;AAAE,IAAA,IAAI;AAAE,IAAA,UAAU;AAAE,IAAA,SAAS;AAAE,IAAA,GAAG;AAAE,IAAA,KAAK;AAAE,IAAA,YAAY;AAAE,IAAA,cAAc,wBAArK,AAEN;;ACFA,IAAM,UAAU,GAAC;;AAAA,WACb,UAAiB,wBAAC,OAAO,EAAE,KAAK,EAAE,KAAoB,EAAE;qCAAjB,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE;;IACtD,IAAU,SAAS,GAAG,CAAC,CAAC;;IAExB,IAAQ,CAAC,OAAO,IAAI,KAAK,CAAC,KAAK,GAAG,SAAS,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;QAC5D,OAAW;KACV;;IAEL,MAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,SAAS,GAAG,EAAE;QAC3C,IAAU,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAQ,GAAG,KAAK,YAAY,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE;YACtD,OAAW;SACV;;QAEL,IAAQ,GAAG,KAAK,MAAM,EAAE;YACpB,KAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACrB,MAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YACtC,KAAS,CAAC,KAAK,EAAE,CAAC;YAClB,UAAc,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;YAC/C,KAAS,CAAC,KAAK,EAAE,CAAC;SACjB;KACJ,CAAC,CAAC;CACN,CAAA;;AAEL,WAAI,SAAgB,uBAAC,KAAK,EAAE,QAAQ,EAAE;IAClC,IAAQ,QAAQ,GAAG,EAAE,CAAC;;IAEtB,IAAQ,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,QAAQ,CAAC,KAAK,EAAE;QACxC,IAAQ;YACJ,QAAY,GAAG,KAAK,CAAC,GAAG,CAAC,SAAS,IAAI,EAAE;gBACpC,OAAW,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACpC,CAAC,CAAC;SACN,CAAC,OAAO,CAAC,EAAE;;YAEZC,mCAAgB,CAAC,CAAC,CAAC,CAAC;SACnB;;QAEL,OAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;KAClD,MAAM;QACP,QAAY,EAAE,CAAC;KACd;CACJ,CAAA;;AAEL,WAAI,YAAmB,0BAAC,OAAO,EAAE,QAAQ,EAAE;IACvC,IAAU,KAAK,GAAG,EAAE,CAAC;IACrB,UAAc,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;;IAE1C,UAAc,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;CACzC,CAAA,AAGL;;ACnDe,SAAS,iBAAiB,CAAC,IAAI,EAAE,OAAO,EAAE;IACrDX,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;IAC7B,IAAI,KAAK,CAAC,OAAO,EAAE;QACf,KAAK,CAAC,OAAO,GAAG,UAAU,CAAC,EAAE,EAAE,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;KAC1D,MAAM;QACH,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;KAC3B;;;ACNU,SAAS,iBAAiB,CAAC,GAAG,EAAE;IAC3CC,IAAI,GAAG,GAAG,SAAS,CAAC;IACpBA,IAAI,GAAG,GAAG,SAAS,CAAC;;IAEpB,KAAKA,IAAI,GAAG,GAAG,CAAC,EAAE,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,GAAG,MAAM,EAAE,GAAG,EAAE,EAAE;QACxDD,IAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;QACvB,IAAI,KAAK,KAAK,IAAI,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;YACnC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;YAC3B,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;SAC9B;KACJ;;IAED,OAAO;QACH,GAAG,EAAE,GAAG,KAAK,SAAS,GAAG,SAAS,GAAG,GAAG;QACxC,GAAG,EAAE,GAAG,KAAK,SAAS,GAAG,SAAS,GAAG,GAAG;KAC3C,CAAC;;;ACdN,IAAM,KAAK,GAAc;IAAC,cACX,CAAC,CAAC,EAAE,CAAC,EAAE;QACdY,QAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAER,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAChB,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KACnB;;;;wCAAA;;IAED,gBAAA,KAAK,qBAAG;QACJ,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;KACpC,CAAA;;IAED,gBAAA,MAAM,oBAAC,KAAK,EAAE;QACV,OAAO,KAAK,IAAI,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;KAC5D,CAAA;;IAED,gBAAA,MAAM,oBAAC,MAAM,EAAE,OAAO,EAAE;QACpBZ,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;QAC3BA,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC7BA,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAW,EAAE;QAAK,IAAA,EAAE,YAAd;QACN,OAAc,GAAG,IAAI;QAAb,IAAA,CAAC;QAAE,IAAA,CAAC,SAAN;;QAEN,IAAI,CAAC,CAAC,GAAG,KAAK;YACV,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI;YACtC,eAAe;SAClB,CAAC;;QAEF,IAAI,CAAC,CAAC,GAAG,KAAK;YACV,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI;YACtC,eAAe;SAClB,CAAC;;QAEF,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,gBAAA,QAAQ,sBAAC,CAAC,EAAE;;QAER,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;QACZ,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;;QAEZ,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,gBAAA,UAAU,wBAAC,KAAK,EAAE;QACdA,IAAM,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;QAC5BA,IAAM,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;;QAE5B,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;KACvC,CAAA;;IAED,MAAA,QAAe,sBAAC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE;QACnCA,IAAM,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;;QAE3B,OAAO,IAAI,KAAK;YACZ,MAAM,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC;YACrC,MAAM,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC;SACxC,CAAC;KACL,CAAA;;;EA1Dea,4BA2DnB,GAAA,AAGD;;AC1DA,IAAM,GAAG,GAAc;IAAC,YACT,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;QACxBD,QAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAER,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KACrB;;;;oCAAA;;IAED,cAAA,KAAK,qBAAG;QACJ,OAAO,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;KAC5B,CAAA;;IAED,cAAA,MAAM,sBAAG;QACL,OAAO,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;KAC5B,CAAA;;IAED,cAAA,SAAS,uBAAC,EAAE,EAAE,EAAE,EAAE;QACd,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC;QACd,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC;QACd,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC;QACd,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC;;QAEd,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,cAAA,IAAI,kBAAC,CAAC,EAAE,CAAC,EAAE;QACPZ,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QAC7BA,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;;QAE3B,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;YACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;SAC7B;;QAED,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;YACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC;SAC9B;;QAED,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,cAAA,IAAI,kBAAC,SAAS,EAAE;QACZ,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC;QAC1C,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC;QAC1C,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC;QAC1C,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC;;QAE1C,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,cAAA,SAAS,uBAAC,KAAK,EAAE;QACbA,IAAM,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;QAClCA,IAAM,CAAC,GAAG,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;QAC1CA,IAAM,CAAC,GAAG,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;QAC1C,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;QAE/B,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,cAAA,MAAM,oBAAC,SAAS,EAAE,IAAI,EAAE;;QAEpB,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE;YACrB,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC;YACvB,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC;SAC1B;;QAED,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE;YACrB,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC;YACvB,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC;SAC1B;;QAED,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,cAAA,OAAO,qBAAC,SAAS,EAAE,MAAM,EAAE;QACvBA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QAC7BA,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QAC3BA,IAAM,IAAI,GAAG,MAAM,KAAK,GAAG,IAAI,MAAM,KAAK,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;QACzDA,IAAM,MAAM,GAAG,IAAI,KAAK,CAAC,GAAG,MAAM,GAAG,KAAK,CAAC;;QAE3C,IAAI,MAAM,KAAK,MAAM,EAAE;YACnBA,IAAM,YAAY,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC;YACxCA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;;YAE7B,IAAI,CAAC,EAAE,IAAI,YAAY,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,EAAE,IAAI,YAAY,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;SACxC,MAAM,IAAI,MAAM,KAAK,GAAG,IAAI,MAAM,KAAK,IAAI,EAAE;YAC1C,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;SACjD,MAAM;YACH,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;SACxC;;QAED,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC;;QAE3B,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,cAAA,MAAM,oBAAC,EAAE,EAAE,EAAE,EAAE;;QAEX,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC;QACd,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC;;QAEd,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,cAAA,MAAM,oBAAC,EAAE,EAAE,EAAE,EAAE;QACX,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;QACtB,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,cAAA,GAAG,iBAAC,OAAO,EAAE;QACTA,IAAM,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC;;QAEpC,IAAI,CAAC,EAAE,IAAI,OAAO,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,EAAE,IAAI,OAAO,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,EAAE,IAAI,OAAO,CAAC,GAAG,CAAC;QACvB,IAAI,CAAC,EAAE,IAAI,OAAO,CAAC,MAAM,CAAC;;QAE1B,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,cAAA,KAAK,mBAAC,OAAO,EAAE;QACXA,IAAM,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC;;QAEpC,OAAO,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC;QAC7B,OAAO,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC;QAC3B,OAAO,CAAC,KAAK,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC;QAC/B,OAAO,CAAC,MAAM,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;;QAEjC,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;KAC5B,CAAA;;IAED,cAAA,KAAK,qBAAG;QACJ,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;KACtD,CAAA;;IAED,cAAA,MAAM,sBAAG;QACL,OAAO,IAAI,KAAK;YACZ,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC;YAC1B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC;SAC9B,CAAC;KACL,CAAA;;IAED,cAAA,aAAa,2BAAC,KAAK,EAAE;;QAEjB,OAAO,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE;eACxC,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC;KACnD,CAAA;;IAED,cAAA,MAAM,sBAAG;QACL,OAAO;YACH,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC;YAC3B,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC;YAC3B,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC;YAC3B,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC;SAC9B,CAAC;KACL,CAAA;;IAED,cAAA,OAAO,uBAAG;QACN,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC3D,CAAA;;IAED,cAAA,QAAQ,sBAAC,GAAG,EAAE;QACV,OAAO,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;KAC1F,CAAA;;IAED,cAAA,MAAM,oBAAC,QAAQ,EAAE;QACbC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QACzBA,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QAC3B,OAAsB,GAAG,IAAI,CAAC,MAAM,EAAE;QAA3B,IAAA,EAAE;QAAK,IAAA,EAAE,SAAd;;QAEND,IAAM,EAAE,GAAG,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC;QAC/CA,IAAM,EAAE,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC;QACnDA,IAAM,EAAE,GAAG,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC;QACxDA,IAAM,EAAE,GAAG,WAAW,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC;;QAEpD,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QAC5E,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;;QAE7E,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC;;QAE3B,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,cAAA,MAAM,sBAAG;QACL,OAAO,IAAIc,+BAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;KAC/E,CAAA;;IAED,cAAA,OAAO,uBAAG;QACN,OAAO,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;KACpD,CAAA;;IAED,cAAA,KAAK,mBAAC,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE;QAC9Bd,IAAM,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC;QACpBA,IAAM,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC;QACpBA,IAAM,QAAQ,GAAG,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC;QAC7CA,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;;QAE9B,IAAI,OAAO,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE;YACnC,IAAI,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC;YACzB,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;SAC9B,MAAM,IAAI,OAAO,CAAC,SAAS,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE;YAC9C,IAAI,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC;YACzB,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;SAC9B,MAAM,IAAI,SAAS,KAAK,MAAM,EAAE;YAC7B,IAAI,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;YAC9D,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;SAC9B;KACJ,CAAA;;;EArNaa,4BAsNjB,GAAA;;AAED,SAAS,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE;IACtCb,IAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;;IAEzB,OAAO,IAAI,KAAK;QACZ,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;QAC5D,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;KAC/D,CAAC;CACL,AAED,AAAmB;;ACnOnB,IAAM,IAAI,GAAc;IAAC,aAEV,CAAC,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE;QACxDY,QAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAER,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACtB;;;;sCAAA;;IAED,eAAA,KAAK,qBAAG;QACJ,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;KAC5F,CAAA;;IAED,eAAA,MAAM,sBAAG;QACL,OAAO,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;KAC3C,CAAA;;IAED,eAAA,SAAS,uBAAC,SAAS,EAAE,WAAW,EAAE;QAC9B,IAAI,WAAW,EAAE;YACb,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;SAChC,MAAM;YACH,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;SAC3B;;QAED,OAAO,IAAI,CAAC;KACf,CAAA;;;IAGD,eAAA,KAAK,mBAAC,KAAK,EAAE,WAAW,EAAE;QACtBZ,IAAM,WAAW,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;QAC/BA,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACjCA,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACjCA,IAAM,MAAM,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC;QAC5DA,IAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,eAAe,CAAC,CAAC;QAChEA,IAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,eAAe,CAAC,CAAC;;QAEhE,OAAO,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KAC1B,CAAA;;IAED,eAAA,WAAW,yBAAC,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE;QACjCA,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC7CA,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QACjCA,IAAM,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACxCA,IAAM,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC;QACrBA,IAAM,EAAE,GAAG,MAAM,GAAG,CAAC,CAAC;QACtBA,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnCA,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnCC,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC;QACxBA,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC;;QAExB,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE;YACpB,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;SAChC;;QAED,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE;YACpB,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;SAChC;;QAED,OAAO,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC;KAC/C,CAAA;;IAED,eAAA,aAAa,2BAAC,CAAC,EAAE;QACbD,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3BA,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACrCA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3BA,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnCA,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;QAC9CA,IAAM,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QAC1BA,IAAM,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QAC1BA,IAAM,MAAM,GAAG,IAAI,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QACjCA,IAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAC1CA,IAAM,WAAW,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAChFA,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACtCA,IAAM,SAAS,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAC1EA,IAAM,IAAI,GAAG,KAAK,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,eAAe,CAAC,CAAC;;QAEvD,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;eAC9D,CAAC,SAAS,CAAC,SAAS,EAAE,MAAM,CAAC;eAC7B,IAAI,IAAI,WAAW,GAAG,WAAW,IAAI,IAAI,IAAI,MAAM,GAAG,MAAM,CAAC;KACvE,CAAA;;IAED,eAAA,OAAO,uBAAG;;;QACNA,IAAM,GAAG,GAAG,IAAI,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QAChEA,IAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC;QAChDA,IAAM,QAAQ,GAAG,KAAK,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;QACxDA,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACrCA,IAAM,SAAS,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAClFA,IAAM,eAAe,GAAG,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACtDA,IAAM,aAAa,GAAG,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAClDC,IAAI,MAAM,CAAC;;QAEX,IAAI,UAAU,KAAK,QAAQ,EAAE;YACzB,MAAM,GAAG,SAAS,CAAC;SACtB,MAAM;YACH,IAAI,eAAe,GAAG,aAAa,EAAE;gBACjC,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,eAAe,EAAE,aAAa,GAAG,CAAC,CAAC,CAAC;aAChE,MAAM;gBACH,MAAM,GAAG,EAAE,CAAC,MAAM;oBACd,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,aAAa,GAAG,CAAC,CAAC;oBACrC,SAAS,CAAC,KAAK,CAAC,eAAe,EAAE,SAAS,CAAC,MAAM,CAAC;iBACrD,CAAC;aACL;SACJ;;QAED,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpCA,IAAI,KAAK,GAAGO,MAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAClC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACrB,GAAG,CAAC,SAAS,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;SACrC;;QAED,IAAI,CAAC,WAAW,EAAE;YACd,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC9B;;QAED,OAAO,GAAG,CAAC;KACd,CAAA;;IAED,eAAA,MAAM,oBAAC,KAAK,EAAE;QACV,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC;QACrB,OAAO,IAAI,CAAC;KACf,CAAA;;;EA3HcK,4BA4HlB,GAAA;;AAED,SAAS,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE;IAC3B,OAAO,CAAC,GAAG,CAAC,CAAC;CAChB,AAED;;ACrIA,IAAM,MAAM,GAAa;IAAC,eACX,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE;QAC3CD,OAAK,KAAA,CAAC,MAAA,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;KAC/C;;;;0CAAA;;IAED,iBAAA,MAAM,oBAAC,KAAK,EAAE;QACV,OAAOA,iBAAK,CAAC,MAAM,KAAA,CAAC,MAAA,KAAK,CAAC,CAAC;KAC9B,CAAA;;IAED,iBAAA,KAAK,qBAAG;QACJ,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;KAC5E,CAAA;;IAED,iBAAA,SAAS,uBAAC,SAAS,EAAE;QACjB,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;;QAExB,OAAO,IAAI,CAAC;KACf,CAAA;;;EAjBgB,IAkBpB,GAAA,AAED;;ACnBA,IAAM,YAAY,GAAc;IAAC;;;;;;;;IAAA,uBAC7B,UAAU,wBAAC,MAAM,EAAE,OAAO,EAAE;QACxBZ,IAAM,UAAU,GAAG,MAAM,CAAC,UAAU,GAAG,GAAG,CAAC;QAC3CA,IAAM,QAAQ,GAAG,MAAM,CAAC,KAAK,GAAG,UAAU,CAAC;QAC3CA,IAAM,MAAM,GAAG,IAAIc,+BAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAChEd,IAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAC1CA,IAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QACpDA,IAAM,GAAG,GAAG,IAAIc,+BAAI,CAAC,GAAG,CAAC,MAAM,EAAE;YAC7B,UAAU,EAAE,UAAU;YACtB,QAAQ,EAAE,QAAQ;YAClB,OAAO,EAAE,MAAM;YACf,OAAO,EAAE,MAAM;SAClB,CAAC,CAAC;QACHd,IAAM,IAAI,GAAGe,8BAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;;QAErD,IAAI,WAAW,EAAE;YACb,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,GAAG,WAAW,CAAC;YACxCf,IAAM,QAAQ,GAAG,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACvC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,WAAW,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;SAClE,MAAM;YACH,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;SACnC;;QAED,OAAO,IAAI,CAAC;KACf,CAAA;;;EAzBsBa,4BA0B1B,GAAA;;AAED,YAAY,CAAC,OAAO,GAAG,IAAI,YAAY,EAAE,CAAC,AAE1C;;AC5BA,IAAM,YAAY,GAAc;IAAC,qBAClB,CAAC,OAAO,EAAE;QACjBD,QAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAER,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;;QAEnB,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;KACxD;;;;sDAAA;;IAED,uBAAA,MAAM,oBAAC,SAAS,EAAE;QACdZ,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/BC,IAAI,GAAG,CAAC;;QAER,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtCA,IAAI,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC/B,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;;YAE/B,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;SACrE;;QAED,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,SAAS,CAAC;KAC/B,CAAA;;IAED,uBAAA,OAAO,uBAAG;QACND,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;;QAE/B,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;SAC5B;;QAED,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;SACzB;KACJ,CAAA;;IAED,uBAAA,OAAO,uBAAG;QACND,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;;QAE3B,OAAO,MAAM,GAAG,MAAM,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;KAC3C,CAAA;;IAED,uBAAA,SAAS,yBAAG;QACRA,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAClC,IAAI,OAAO,EAAE;YACT,OAAO,OAAO,CAAC,MAAM,CAAC;SACzB;KACJ,CAAA;;IAED,uBAAA,UAAU,0BAAG;QACTC,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,OAAO,OAAO,EAAE;YACZ,IAAI,OAAO,CAAC,YAAY,EAAE;gBACtB,OAAO,OAAO,CAAC,YAAY,CAAC;aAC/B;YACD,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC;SAC5B;KACJ,CAAA;;IAED,uBAAA,iBAAiB,+BAAC,EAAE,EAAE,EAAE,EAAE;QACtBD,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/BA,IAAM,aAAa,GAAG,QAAQ,CAAC,MAAM,CAAC;;QAEtC,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAE,EAAE;YACpC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;SACrC;KACJ,CAAA;;IAED,uBAAA,MAAM,sBAAG;;;;QACL,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvCA,IAAI,IAAI,GAAGG,WAAS,CAAC,CAAC,CAAC,CAAC;YACxBI,MAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzB,IAAI,CAAC,MAAM,GAAGA,MAAI,CAAC;SACtB;KACJ,CAAA;;IAED,uBAAA,YAAY,4BAAG;QACX,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,KAAK,KAAK,EAAE;YAChC,OAAO;SACV;;QAED,IAAI,CAAC,YAAY,EAAE,CAAC;;QAEpB,IAAI,CAAC,SAAS,EAAE,CAAC;;QAEjB,IAAI,CAAC,cAAc,EAAE,CAAC;;QAEtB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,cAAc,EAAE,CAAC;KACzB,CAAA;;IAED,uBAAA,SAAS,yBAAG;QACR,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC;;YAEhC,IAAI,IAAI,CAAC,MAAM,EAAE;gBACb,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACzC;SACJ;KACJ,CAAA;;IAED,uBAAA,cAAc,8BAAG;QACbR,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/BA,IAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC/B,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7B,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC;SAC9B;KACJ,CAAA;;IAED,uBAAA,YAAY,4BAAG;QACX,IAAI,CAAC,MAAM,GAAG,IAAIc,8BAAI,CAAC,KAAK,CAAC;YACzB,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM;YAC3B,OAAO,EAAE,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;SACtD,CAAC,CAAC;KACN,CAAA;;IAED,uBAAA,eAAe,+BAAG;QACd,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,SAAS,GAAGA,8BAAI,CAAC,SAAS,CAAC,MAAM;gBAClC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS;aACtC,CAAC;SACL;KACJ,CAAA;;IAED,uBAAA,YAAY,0BAAC,WAAW,EAAE;QACtB,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE;YAC3B,WAAW,CAAC,YAAY,GAAG,IAAI,CAAC;SACnC;;QAED,IAAI,WAAW,CAAC,OAAO,CAAC,MAAM,EAAE;YAC5B,IAAI,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SAC9C,MAAM,IAAI,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YAC5C,IAAI,CAAC,SAAS,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;SAC7C,MAAM,IAAI,IAAI,CAAC,WAAW,EAAE;YACzB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;SACjC,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE;YACpB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SACnC,MAAM;;;YAGH,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;SACzC;KACJ,CAAA;;IAED,uBAAA,QAAQ,wBAAG;QACP,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;SACjC;;QAED,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,uBAAA,SAAS,yBAAG;QACR,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;SAClC;;QAED,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,uBAAA,WAAW,yBAAC,WAAW,EAAE;QACrBf,IAAM,MAAM,GAAG,WAAW,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC;QAC/CA,IAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;QACrCA,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAC9BC,IAAI,GAAG,CAAC;;QAER,KAAK,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,EAAE,GAAG,EAAE,EAAE;YAC/BA,IAAI,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;YAC3BA,IAAI,IAAI,GAAG,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACrD,IAAI,IAAI,GAAG,MAAM,EAAE;gBACf,MAAM;aACT;SACJ;;QAED,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;KACxC,CAAA;;IAED,uBAAA,QAAQ,sBAAC,QAAQ,EAAE;QACfD,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/BA,IAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;;QAE/B,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7BA,IAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;;YAExB,QAAQ,CAAC,KAAK,CAAC,CAAC;YAChB,IAAI,KAAK,CAAC,QAAQ,EAAE;gBAChB,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;aAC5B;SACJ;KACJ,CAAA;;IAED,uBAAA,OAAO,qBAAC,KAAK,EAAE;QACXA,IAAI,OAAO,GAAG,IAAI,CAAC;QACnBA,IAAI,OAAO,GAAG,KAAK,CAAC;;QAEpB,OAAO,OAAO,IAAI,CAAC,OAAO,EAAE;YACxB,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;;YAEzB,IAAI,CAAC,OAAO,EAAE;gBACV,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC;aAC5B;SACJ;;QAED,IAAI,OAAO,EAAE;YACT,OAAO,OAAO,CAAC;SAClB;KACJ,CAAA;;IAED,uBAAA,cAAc,8BAAG,EAAE,CAAA;;IAEnB,uBAAA,YAAY,4BAAG;QACXD,IAAM,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,SAAS,CAAC;QAC/C,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;KAC7E,CAAA;;IAED,uBAAA,eAAe,6BAAC,IAAI,EAAE;;;QAClBA,IAAM,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,SAAS,CAAC;QAC/CA,IAAM,YAAY,GAAG,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC;QAC5CC,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;;QAEhC,IAAI,CAAC,SAAS,EAAE;YACZD,IAAM,gBAAgB,GAAG;gBACrB,IAAI,EAAE;oBACF,KAAK,EAAE,KAAK;oBACZ,OAAO,EAAE,GAAG;iBACf;gBACD,MAAM,EAAE;oBACJ,KAAK,EAAE,KAAK;oBACZ,KAAK,EAAE,CAAC;oBACR,OAAO,EAAE,GAAG;iBACf;aACJ,CAAC;;YAEF,IAAI,YAAY,EAAE;gBACd,SAAS,GAAG,IAAI,CAAC,UAAU,GAAG,YAAY;oBACtC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE;wBACtC,YAAY,EAAE,YAAG,SAAGQ,MAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,GAAA;wBAC1D,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE;wBACxB,MAAM,EAAE,IAAI,CAAC,MAAM;wBACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ;wBACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;wBACvB,KAAK,EAAE,IAAI,CAAC,KAAK;wBACjB,UAAU,EAAE,IAAI,CAAC,UAAU;wBAC3B,YAAY,EAAE,IAAI,CAAC,YAAY;wBAC/B,KAAK,EAAE,IAAI,CAAC,KAAK;qBACpB;iBACJ,CAAC,CAAC;;gBAEH,IAAI,CAAC,SAAS,EAAE;oBACZ,OAAO;iBACV;aACJ,MAAM;gBACH,SAAS,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;aACxE;;YAED,SAAS,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;YAC/C,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;SAChC;;QAED,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KAC3B,CAAA;;IAED,uBAAA,qBAAqB,mCAAC,OAAO,EAAE,OAAO,EAAE,eAAe,EAAE;QACrDR,IAAM,OAAO,GAAG,IAAIe,8BAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YACxC,MAAM,EAAE;gBACJ,KAAK,EAAE,MAAM;aAChB;YACD,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC;YAC1C,MAAM,EAAE,OAAO,CAAC,OAAO,CAAC,MAAM;SACjC,EAAE,OAAO,CAAC,CAAC,CAAC;;QAEb,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;;QAEvD,OAAO,OAAO,CAAC;KAClB,CAAA;;IAED,uBAAA,cAAc,4BAAC,OAAO,EAAE;QACpB,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;SAC9C;KACJ,CAAA;;;EAvRsBF,4BAwR1B,GAAA;;AAED,YAAY,CAAC,SAAS,CAAC,OAAO,GAAG,GAAG,CAAC,AAErC;;ACzRA,IAAM,UAAU,GAAqB;IAAC,mBACvB,CAAC,OAAO,EAAE;QACjBD,eAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;;QAEf,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACtD,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;KAC3D;;;;kDAAA;;IAED,qBAAA,MAAM,oBAAC,SAAS,EAAE;;;QACdZ,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAQ,KAAK;QAAE,IAAA,MAAM;QAAE,IAAA,WAAW,uBAA5B;QACNA,IAAM,UAAU,GAAG,KAAK,IAAI,MAAM,CAAC;QACnCA,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAC9BA,IAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;QAChCA,IAAM,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;QACzCC,IAAI,GAAG,CAAC;;QAERD,IAAM,gBAAgB,GAAG,YAAG;YACxBQ,MAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;YACxCA,MAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;YACzCA,MAAI,CAAC,UAAU,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;SAClE,CAAC;;QAEFP,IAAI,UAAU,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;QACnC,IAAI,UAAU,EAAE;YACZ,UAAU,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE,GAAG,KAAK,CAAC;YACtC,UAAU,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE,GAAG,MAAM,CAAC;SAC1C;;QAED,IAAI,WAAW,EAAE;YACb,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SAC9D;;QAEDW,yBAAK,CAAC,MAAM,KAAA,CAAC,MAAA,UAAU,CAAC,CAAC;;QAEzB,IAAI,UAAU,EAAE;YACZ,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;SACjD,MAAM;YACH,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;SAClB;;QAED,IAAI,WAAW,IAAI,UAAU,EAAE;YAC3B,gBAAgB,EAAE,CAAC;YACnB,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SACzE,MAAM;YACH,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC;YAC3C,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAC9C,gBAAgB,EAAE,CAAC;SACtB;;QAED,IAAI,CAAC,iBAAiB;YAClB,GAAG,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,GAAG,WAAW,GAAG,OAAO,CAAC,IAAI;YACjE,GAAG,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE,GAAG,MAAM,CAAC,GAAG,GAAG,WAAW,GAAG,OAAO,CAAC,GAAG;SAClE,CAAC;;QAEFZ,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/B,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtCA,IAAI,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACzB;KACJ,CAAA;;IAED,qBAAA,KAAK,mBAAC,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE;QAC9B,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;KAC9C,CAAA;;IAED,qBAAA,MAAM,sBAAG;QACLD,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,IAAI,OAAO,CAAC,UAAU,CAAC;KACrD,CAAA;;IAED,qBAAA,YAAY,4BAAG;QACXY,yBAAK,CAAC,YAAY,KAAA,CAAC,IAAA,CAAC,CAAC;;QAErBZ,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAI,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,EAAE,EAAE;YAClC,IAAI,CAAC,MAAM,CAAC,MAAM,CAACe,8BAAI,CAAC,IAAI,CAAC,QAAQ;gBACjC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;gBACxB,IAAI,CAAC,WAAW,EAAE;aACrB,CAAC,CAAC;SACN;KACJ,CAAA;;IAED,qBAAA,WAAW,2BAAG;QACVf,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC;;QAEpC,OAAO;YACH,MAAM,EAAE;gBACJ,KAAK,EAAE,MAAM,CAAC,KAAK;gBACnB,KAAK,EAAE,MAAM,CAAC,KAAK;gBACnB,OAAO,EAAE,cAAc,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC;gBACxD,QAAQ,EAAE,MAAM,CAAC,QAAQ;aAC5B;YACD,IAAI,EAAE;gBACF,KAAK,EAAE,OAAO,CAAC,UAAU;gBACzB,OAAO,EAAE,OAAO,CAAC,OAAO;aAC3B;YACD,MAAM,EAAE,OAAO,CAAC,MAAM;SACzB,CAAC;KACL,CAAA;;;EApGoB,YAqGxB,GAAA;;AAED,iBAAiB,CAAC,UAAU,EAAE;IAC1B,KAAK,EAAE,IAAI;IACX,MAAM,EAAE,GAAG;IACX,MAAM,EAAE,EAAE;IACV,OAAO,EAAE,EAAE;IACX,MAAM,EAAE;QACJ,KAAK,EAAE,KAAK;QACZ,KAAK,EAAE,CAAC;KACX;IACD,UAAU,EAAE,EAAE;IACd,WAAW,EAAE,KAAK;IAClB,KAAK,EAAE,CAAC;IACR,MAAM,EAAE,CAAC;IACT,OAAO,EAAE,IAAI;CAChB,CAAC,CAAC,AAEH;;ACxHA,IAAM,YAAY,GAAmB;IAAC,qBAEvB,CAAC,OAAO,EAAE,SAAS,EAAE;QAC5BY,aAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;;QAEf,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC9B;;;;sDAAA;;IAED,uBAAA,UAAU,0BAAG;QACT,OAAkC,GAAG,IAAI;QAAjC,IAAA,OAAO;QAAc,IAAA,GAAG,kBAA1B;QACN,IAAQ,IAAI;QAAE,IAAA,QAAQ,oBAAhB;QACNZ,IAAM,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC;QAC5BA,IAAM,SAAS,GAAG,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;;QAElC,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE;YACpC,OAAO,IAAI,CAAC;SACf;;QAEDA,IAAM,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACjCC,IAAI,OAAO,CAAC;;QAEZ,IAAI,IAAI,KAAK,MAAM,EAAE;YACjB,OAAO,GAAG,IAAIc,8BAAI,CAAC,MAAM;gBACrB,IAAID,+BAAI,CAAC,MAAM,CAAC;oBACZ,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,SAAS,EAAE,eAAe,CAAC;oBAC1C,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,eAAe,CAAC;iBACpD,EAAE,SAAS,CAAC;gBACb,KAAK;aACR,CAAC;SACL,MAAM,IAAI,IAAI,KAAK,QAAQ,EAAE;YAC1B,OAAO,GAAGC,8BAAI,CAAC,IAAI,CAAC,UAAU,CAAC;gBAC3B,EAAE,GAAG,CAAC,EAAE,GAAG,SAAS,EAAE,GAAG,CAAC,EAAE,EAAE;gBAC9B,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE;gBAClB,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE;aACrB,EAAE,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;SACrB,MAAM,IAAI,IAAI,KAAK,KAAK,EAAE;YACvB,OAAO,GAAG,IAAIA,8BAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;;YAEpC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;YACtD,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;SACzD,MAAM;YACH,OAAO,GAAGA,8BAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,KAAK,CAAC,CAAC;SACrD;;QAED,IAAI,QAAQ,EAAE;YACV,OAAO,CAAC,SAAS,CAACD,+BAAI,CAAC,SAAS,EAAE;iBAC7B,MAAM,CAAC,CAAC,QAAQ,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC;aAC7C,CAAC;SACL;;QAED,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QACxC,OAAO,OAAO,CAAC;KAClB,CAAA;;IAED,uBAAA,aAAa,6BAAG;;;QACZd,IAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACzCA,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC;QACvCC,IAAI,MAAM,CAAC;;QAEX,IAAI,YAAY,EAAE;YACd,MAAM,GAAG,YAAY,CAAC;gBAClB,KAAK,EAAE,SAAS,CAAC,KAAK;gBACtB,QAAQ,EAAE,SAAS,CAAC,QAAQ;gBAC5B,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE;gBACxB,MAAM,EAAE,SAAS,CAAC,MAAM;gBACxB,QAAQ,EAAE,SAAS,CAAC,QAAQ;gBAC5B,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;gBAC9B,OAAO,EAAE,IAAI,CAAC,aAAa,EAAE;gBAC7B,YAAY,EAAE,YAAG,SAAGO,MAAI,CAAC,UAAU,EAAE,GAAA;aACxC,CAAC,CAAC;SACN,MAAM;YACH,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;SAC9B;;QAED,OAAO,MAAM,CAAC;KACjB,CAAA;;IAED,uBAAA,aAAa,6BAAG;QACZR,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,OAAO;YACH,UAAU,EAAE,OAAO,CAAC,UAAU;YAC9B,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,IAAI,EAAE,OAAO,CAAC,KAAK;YACnB,OAAO,EAAE,OAAO,CAAC,OAAO;SAC3B,CAAC;KACL,CAAA;;IAED,uBAAA,YAAY,4BAAG;QACX,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;KACtC,CAAA;;;EA5FsB,UA6F1B,GAAA;;AAED,iBAAiB,CAAC,YAAY,EAAE;IAC5B,IAAI,EAAE,MAAM;IACZ,KAAK,EAAE,MAAM;IACb,MAAM,EAAE,MAAM;CACjB,CAAC,CAAC,AAEH;;AC1GAA,IAAM,MAAM,GAAG,QAAQ,CAAC;AACxBA,IAAM,MAAM,GAAG,QAAQ,CAAC;;AAExBA,IAAM,SAAS,GAAG;IACd,KAAK,EAAE;QACH,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,CAAC;QACX,KAAK,EAAE,EAAE;YACL,MAAM,EAAE,CAAC;YACT,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,CAAC;SACb,EAAE;YACC,MAAM,EAAE,IAAI;YACZ,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,GAAG;SACf,EAAE;YACC,MAAM,EAAE,CAAC;YACT,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,CAAC;SACb,EAAE;KACN;IACD,UAAU,EAAE;QACR,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,EAAE;YACL,MAAM,EAAE,CAAC;YACT,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,IAAI;SAChB,EAAE;YACC,MAAM,EAAE,IAAI;YACZ,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,CAAC;SACb,EAAE;YACC,MAAM,EAAE,IAAI;YACZ,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,IAAI;SAChB,EAAE;KACN;IACD,YAAY,EAAE;QACV,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,EAAE;YACL,MAAM,EAAE,IAAI;YACZ,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,IAAI;SAChB,EAAE;YACC,MAAM,EAAE,IAAI;YACZ,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,GAAG;SACf,EAAE;YACC,MAAM,EAAE,IAAI;YACZ,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,CAAC;SACb,EAAE;KACN;IACD,YAAY,EAAE;QACV,IAAI,EAAE,MAAM;QACZ,UAAU,EAAE,KAAK;QACjB,KAAK,EAAE,EAAE;YACL,MAAM,EAAE,CAAC;YACT,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,CAAC;SACb,EAAE;YACC,MAAM,EAAE,GAAG;YACX,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,GAAG;SACf,EAAE;YACC,MAAM,EAAE,IAAI;YACZ,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,CAAC;SACb,EAAE;KACN;IACD,UAAU,EAAE;QACR,IAAI,EAAE,MAAM;QACZ,UAAU,EAAE,KAAK;QACjB,KAAK,EAAE,EAAE;YACL,MAAM,EAAE,CAAC;YACT,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,GAAG;SACf,EAAE;YACC,MAAM,EAAE,IAAI;YACZ,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,IAAI;SAChB,EAAE;YACC,MAAM,EAAE,IAAI;YACZ,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,IAAI;SAChB,EAAE;YACC,MAAM,EAAE,IAAI;YACZ,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,IAAI;SAChB,EAAE;YACC,MAAM,EAAE,IAAI;YACZ,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,IAAI;SAChB,EAAE;YACC,MAAM,EAAE,IAAI;YACZ,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,CAAC;SACb,EAAE;KACN;IACD,YAAY,EAAE;QACV,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE;QACpB,MAAM,EAAE,GAAG;KACd;CACJ,CAAC,AAEF;;ACzGe,SAAS,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE;IAClC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,EAAE;QAClE,OAAO,CAAC,CAAC;KACZ;;IAEDA,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC/BA,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC/BA,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC/BA,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC/BA,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC/BA,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC/BA,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC/BA,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC/BA,IAAM,KAAK,GAAG,EAAE,CAAC;;;;;;;;;;;;;IAajB,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;;IAG/B,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE;QACtD,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/B,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KAClC,MAAM;QACH,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/B,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KAClC;;IAED,OAAO,IAAI,CAAC,KAAK,EAAE,SAAS,GAAG,EAAE;QAC7B,OAAO,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;KAC9C,CAAC,CAAC,CAAC,CAAC,CAAC;;;AClCV,IAAM,WAAW,GAAqB;IAAC,oBACxB,CAAC,OAAO,EAAE;QACjBY,eAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;;QAEfZ,IAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;QACjC,WAAW,CAAC,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QACpD,WAAW,CAAC,MAAM,GAAG,QAAQ,CAAC,WAAW,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;;QAEtD,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACvB;;;;oDAAA;;IAED,sBAAA,MAAM,sBAAG;QACL,OAA2B,GAAG,IAAI;QAA1B,IAAA,OAAO;QAAE,IAAA,QAAQ,gBAAnB;QACNC,IAAI,UAAU,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;;QAE9D,IAAI,CAAC,GAAG,GAAG,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;;QAE5C,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAC/B,UAAU,GAAG,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,EAAE,CAAC;SAClE;KACJ,CAAA;;IAED,sBAAA,YAAY,4BAAG;QACX,IAAI,CAAC,MAAM,GAAG,IAAIc,8BAAI,CAAC,KAAK,EAAE,CAAC;QAC/B,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B,CAAA;;IAED,sBAAA,gBAAgB,gCAAG;QACff,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC;QACpCA,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;;QAErEA,IAAM,UAAU,GAAGe,8BAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE;YAChD,MAAM,EAAE;gBACJ,KAAK,EAAE,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,GAAG,EAAE;gBACvC,KAAK,EAAE,MAAM,CAAC,KAAK;gBACnB,QAAQ,EAAE,MAAM,CAAC,QAAQ;aAC5B;YACD,IAAI,EAAE;gBACF,KAAK,EAAE,OAAO,CAAC,UAAU;gBACzB,OAAO,EAAE,OAAO,CAAC,OAAO;aAC3B;YACD,MAAM,EAAE,CAAC,EAAE;SACd,CAAC,CAAC;;QAEH,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;KAClC,CAAA;;IAED,sBAAA,OAAO,uBAAG;QACN,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,sBAAA,cAAc,4BAAC,OAAO,EAAE;QACpBf,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACjCA,IAAM,QAAQ,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC;QACpCA,IAAM,QAAQ,GAAG,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC7CC,IAAI,eAAe,CAAC;;QAEpB,IAAI,SAAS,CAAC,QAAQ,CAAC,EAAE;YACrB,eAAe,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC;SACzC,MAAM;YACHD,IAAM,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;YAC7D,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,EAAE;gBAC5B,eAAe,GAAG,IAAIe,8BAAI,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;aAC9D,MAAM;gBACH,IAAI,OAAO,CAAC,WAAW,EAAE;oBACrB,eAAe,CAAC,KAAK,GAAG,gBAAgB,CAAC,eAAe,CAAC,CAAC;iBAC7D;gBACD,eAAe,GAAG,IAAIA,8BAAI,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;gBAC3D,eAAe,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,KAAK,KAAK,CAAC;aAC9D;YACD,SAAS,CAAC,QAAQ,CAAC,GAAG,eAAe,CAAC;SACzC;;QAED,OAAO,eAAe,CAAC;KAC1B,CAAA;;;EA5EqB,YA6EzB,GAAA;;AAED,iBAAiB,CAAC,WAAW,EAAE;IAC3B,KAAK,EAAE,aAAa;IACpB,MAAM,EAAE,cAAc;IACtB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAE;QACJ,KAAK,EAAE,KAAK;QACZ,KAAK,EAAE,CAAC;KACX;IACD,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC;IACrB,MAAM,EAAE,CAAC,CAAC;CACb,CAAC,CAAC;;AAEH,SAAS,gBAAgB,CAAC,OAAO,EAAE;IAC/Bf,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;IAC5BA,IAAM,SAAS,GAAG,CAAC,CAAC,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC;IACjEA,IAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;IAC5BA,IAAM,YAAY,GAAG,EAAE,CAAC;;IAExB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;QAC7BA,IAAI,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,WAAW,CAAC,MAAM,GAAG,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,GAAG,GAAG,SAAS,CAAC,GAAG,SAAS,CAAC,GAAG,GAAG,CAAC;QAChF,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KAClC;;IAED,OAAO,YAAY,CAAC;CACvB,AAED;;AC/GA,IAAM,YAAY,GAAqB;IAAC,qBACzB,CAAC,OAAO,EAAE;QACjBW,eAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,cAAc,EAAE,CAAC;KACzB;;;;sDAAA;;IAED,uBAAA,cAAc,8BAAG;QACbZ,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAI,OAAO,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC;YAC/B,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC;YACpC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,QAAQ,CAAC;SAC1C,MAAM;YACH,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACrB,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;YAC7B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,QAAQ,CAAC;YACrC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,OAAO,CAAC;SACzC;KACJ,CAAA;;IAED,uBAAA,MAAM,oBAAC,SAAS,EAAE;QACd,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;QAC7B,IAAI,CAAC,cAAc,EAAE,CAAC;KACzB,CAAA;;IAED,uBAAA,cAAc,8BAAG;;;QACb,OAAuE,GAAG,IAAI;QAAtE,IAAA,GAAG;QAAE,IAAA,WAAW;QAAE,IAAA,SAAS;QAAE,IAAA,gBAAgB;QAAE,IAAA,cAAc,sBAA/D;QACN,SAAkD,GAAG,IAAI,CAAC,YAAY,EAAE;QAAhE,IAAA,MAAM;QAAE,IAAA,UAAU;QAAE,IAAA,oBAAoB,8BAA1C;QACNA,IAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC;QAClCA,IAAM,WAAW,GAAG,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,GAAG,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;;QAE5F,IAAI,WAAW,EAAE;YACbC,IAAI,UAAU,GAAG,WAAW,CAAC;;YAE7B,KAAKA,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,WAAW,EAAE,QAAQ,EAAE,EAAE;gBACvDA,IAAI,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAC7BA,IAAI,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC;gBACxCA,IAAI,YAAY,GAAG,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;gBACxCA,IAAI,kBAAkB,GAAG,aAAa,CAAC,MAAM,CAAC;;gBAE9C,KAAKA,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,kBAAkB,EAAE,GAAG,EAAE,EAAE;oBAC/CA,IAAI,OAAO,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC;oBACjCA,IAAIS,cAAW,GAAGF,MAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;oBAC5CP,IAAI,iBAAiB,GAAG,UAAU,GAAGO,MAAI,CAAC,UAAU,CAACE,cAAW,CAAC,cAAc,CAAC,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;;oBAEnGT,IAAI,UAAU,GAAG,IAAI,GAAG,EAAE,CAAC;oBAC3B,UAAU,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,iBAAiB,CAAC;oBAC9C,UAAU,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,iBAAiB,GAAGS,cAAW,CAAC,cAAc,CAAC,CAAC;oBAC5E,UAAU,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,YAAY,CAAC;oBAC3C,UAAU,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,YAAY,GAAGA,cAAW,CAAC,gBAAgB,CAAC,CAAC;;oBAE3E,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;;oBAE3B,YAAY,IAAIA,cAAW,CAAC,gBAAgB,CAAC,GAAGF,MAAI,CAAC,cAAc,CAAC;iBACvE;gBACD,UAAU,IAAI,KAAK,CAAC,SAAS,GAAGA,MAAI,CAAC,YAAY,CAAC;aACrD;YACD,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC;YACjC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,WAAW,GAAG,UAAU,CAAC;YAC9C,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,oBAAoB,CAAC;SACtE;KACJ,CAAA;;IAED,uBAAA,UAAU,wBAAC,IAAI,EAAE,OAAO,EAAE;QACtBP,IAAI,KAAK,GAAG,CAAC,CAAC;QACdD,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QACjC,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,MAAM,EAAE;YACrC,KAAK,GAAG,OAAO,GAAG,IAAI,CAAC;SAC1B,MAAM,IAAI,KAAK,KAAK,MAAM,EAAE;YACzB,KAAK,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;SAChC;QACD,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,uBAAA,YAAY,4BAAG;;;QACX,OAAuF,GAAG,IAAI;QAAtF,IAAA,GAAG;QAAE,IAAA,QAAQ;QAAE,IAAA,gBAAgB;QAAE,IAAA,cAAc;QAAE,IAAA,cAAc;QAAE,IAAA,YAAY,oBAA/E;QACNA,IAAM,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;QAC/CA,IAAM,aAAa,GAAG,QAAQ,CAAC,MAAM,CAAC;QACtCA,IAAM,MAAM,GAAG,EAAE,CAAC;;QAElBC,IAAI,SAAS,GAAG,CAAC,CAAC;QAClBA,IAAI,iBAAiB,GAAG,CAAC,CAAC;QAC1BA,IAAI,UAAU,GAAG,CAAC,CAAC;QACnBA,IAAI,oBAAoB,GAAG,CAAC,CAAC;QAC7BA,IAAI,aAAa,GAAG,EAAE,CAAC;;QAEvB,KAAKA,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,aAAa,EAAE,GAAG,EAAE,EAAE;YAC1CA,IAAI,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;YAC5B,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE;gBACd,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aACvB;;YAEDA,IAAIS,cAAW,GAAGF,MAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAC5C,IAAIA,MAAI,CAAC,OAAO,CAAC,IAAI,IAAI,KAAK,CAAC,iBAAiB,GAAG,cAAc,GAAGE,cAAW,CAAC,gBAAgB,CAAC,CAAC,GAAG,OAAO,EAAE;gBAC1G,MAAM,CAAC,IAAI,CAAC;oBACR,aAAa,EAAE,aAAa;oBAC5B,SAAS,EAAE,SAAS;oBACpB,iBAAiB,EAAE,iBAAiB;iBACvC,CAAC,CAAC;gBACH,oBAAoB,GAAG,IAAI,CAAC,GAAG,CAAC,oBAAoB,EAAE,iBAAiB,CAAC,CAAC;gBACzE,UAAU,IAAI,YAAY,GAAG,SAAS,CAAC;gBACvC,SAAS,GAAG,CAAC,CAAC;gBACd,iBAAiB,GAAG,CAAC,CAAC;gBACtB,aAAa,GAAG,EAAE,CAAC;aACtB;YACD,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAEA,cAAW,CAAC,cAAc,CAAC,CAAC,CAAC;YAC7D,IAAI,iBAAiB,GAAG,CAAC,EAAE;gBACvB,iBAAiB,IAAI,cAAc,CAAC;aACvC;YACD,iBAAiB,IAAIA,cAAW,CAAC,gBAAgB,CAAC,CAAC;YACnD,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC/B;;QAED,MAAM,CAAC,IAAI,CAAC;YACR,aAAa,EAAE,aAAa;YAC5B,SAAS,EAAE,SAAS;YACpB,iBAAiB,EAAE,iBAAiB;SACvC,CAAC,CAAC;QACH,oBAAoB,GAAG,IAAI,CAAC,GAAG,CAAC,oBAAoB,EAAE,iBAAiB,CAAC,CAAC;QACzE,UAAU,IAAI,SAAS,CAAC;;QAExB,OAAO;YACH,MAAM,EAAE,MAAM;YACd,UAAU,EAAE,UAAU;YACtB,oBAAoB,EAAE,oBAAoB;SAC7C,CAAC;KACL,CAAA;;IAED,uBAAA,WAAW,yBAAC,OAAO,EAAE;QACjB,OAAO;YACH,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE;YAC1B,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE;SAC/B,CAAC;KACL,CAAA;;IAED,uBAAA,YAAY,4BAAG,EAAE,CAAA;;;EA5IM,YA6I1B,GAAA;;AAED,iBAAiB,CAAC,YAAY,EAAE;IAC5B,QAAQ,EAAE,IAAI;IACd,IAAI,EAAE,IAAI;IACV,QAAQ,EAAE,CAAC;IACX,OAAO,EAAE,CAAC;CACb,CAAC,CAAC,AAEH;;ACpJAV,IAAM,WAAW,GAAGe,8BAAI,CAAC,IAAI,CAAC;;AAE9B,IAAM,IAAI,GAAqB;IAAC,aAEjB,CAAC,OAAO,EAAE,OAAO,EAAE;QAC1BH,eAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;;QAEf,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;;;QAGvB,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;KAC1B;;;;sCAAA;;IAED,eAAA,MAAM,oBAAC,SAAS,EAAE;QACdZ,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,IAAI,GAAG,OAAO,CAAC,IAAI,GAAGe,8BAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;;QAExF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;;QAE9B,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE;gBACrC,SAAS,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;KAClE,CAAA;;IAED,eAAA,YAAY,4BAAG;QACX,OAAsC,GAAG,IAAI,CAAC,OAAO;QAA7C,IAAA,IAAI;QAAE,IAAA,KAAK;QAAE,IAAA,OAAO;QAAE,IAAA,MAAM,cAA9B;;QAEN,IAAI,CAAC,MAAM,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,EAAE;YACrE,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE;YACxC,MAAM,EAAE,MAAM;SACjB,CAAC,CAAC;KACN,CAAA;;;EA7Bc,YA8BlB,GAAA;;AAED,iBAAiB,CAAC,IAAI,EAAE;IACpB,IAAI,EAAE,YAAY;IAClB,KAAK,EAAE,KAAK;CACf,CAAC,CAAC,AAEH,AAAoB;;AC7CL,SAAS,SAAS,CAAC,IAAI,EAAE;IACpCf,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IAC3BA,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;;IAEvC,OAAO,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;;;ACMrEA,IAAM,gBAAgB,GAAG,SAAS,CAAC;;AAEnC,IAAM,OAAO,GAAmB;IAAC,gBAElB,CAAC,OAAO,EAAE,OAAO,EAAE;QAC1BY,aAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;;QAEvB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,KAAK,EAAE;YACpC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;SAC1B;KACJ;;;;4CAAA;;IAED,kBAAA,cAAc,8BAAG;QACbZ,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QAC1DA,IAAM,YAAY,GAAG,IAAI,YAAY,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;QAC7FA,IAAM,WAAW,GAAG,UAAU,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;;QAE9E,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;;QAE1B,KAAKC,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE;YACjDA,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,WAAW,CAAC,CAAC;YACtD,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC7B;KACJ,CAAA;;IAED,kBAAA,MAAM,oBAAC,SAAS,EAAE;QACdD,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,QAAQ,GAAG,OAAO,CAAC,MAAM,CAAC;QAChC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;;QAE7C,IAAI,QAAQ,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAC9BC,IAAI,SAAS,GAAG,SAAS,CAAC;YAC1B,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE;gBACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBACvB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC;aACxB;YACDD,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC;;YAErE,IAAI,MAAM,EAAE;gBACR,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,IAAIc,+BAAI,CAAC,IAAI,EAAE,CAAC,CAAC;;gBAE/D,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;gBACvC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;aAC1C;;YAED,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;SAC5D,MAAM;YACHF,uBAAK,CAAC,MAAM,KAAA,CAAC,MAAA,SAAS,CAAC,CAAC;;YAExB,IAAI,OAAO,CAAC,QAAQ,EAAE;gBAClBZ,IAAM,MAAM,GAAG,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBAC1CC,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;;gBAEjC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;gBAC3B,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC;;gBAE7B,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;gBACpB,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;;gBAEtE,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC;;gBAE9B,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;aACnB;SACJ;KACJ,CAAA;;IAED,kBAAA,YAAY,4BAAG;QACXD,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;;QAE7B,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;YAClB,OAAO;SACV;;QAED,IAAI,CAAC,MAAM,GAAG,IAAIe,8BAAI,CAAC,KAAK,CAAC;YACzB,SAAS,EAAE,IAAI,CAAC,iBAAiB,EAAE;YACnC,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,MAAM,EAAE,OAAO,CAAC,MAAM;SACzB,CAAC,CAAC;;QAEH,IAAI,IAAI,CAAC,MAAM,EAAE,EAAE;YACff,IAAM,GAAG,GAAGe,8BAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;YAC7E,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAC3B;KACJ,CAAA;;IAED,kBAAA,YAAY,4BAAG;QACX,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACrB,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B,MAAM;YACHH,uBAAK,CAAC,YAAY,KAAA,CAAC,IAAA,CAAC,CAAC;SACxB;KACJ,CAAA;;IAED,kBAAA,aAAa,6BAAG;QACZZ,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,OAAO;YACH,UAAU,EAAE,OAAO,CAAC,UAAU;YAC9B,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,OAAO,EAAE,OAAO,CAAC,OAAO;SAC3B,CAAC;KACL,CAAA;;IAED,kBAAA,aAAa,2BAAC,SAAS,EAAE;;;;QAErB,OAAO;YACH,IAAI,EAAE,IAAI,CAAC,OAAO;YAClB,IAAI,EAAE,SAAS,CAAC,MAAM,EAAE;YACxB,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE;YACxB,OAAO,EAAE,IAAI,CAAC,aAAa,EAAE;YAC7B,YAAY,EAAE,YAAG;gBACbQ,MAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvBA,MAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBACvBA,MAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,OAAOA,MAAI,CAAC,gBAAgB,EAAE,CAAC;aAClC;SACJ,CAAC;KACL,CAAA;;IAED,kBAAA,gBAAgB,gCAAG;QACf,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtBR,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,OAAO,IAAI,CAAC,MAAM,CAAC;QACnB,OAAO,MAAM,CAAC;KACjB,CAAA;;IAED,kBAAA,MAAM,sBAAG;QACLA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QAC9C,OAAO,IAAI,CAAC,GAAG,CAAC;KACnB,CAAA;;IAED,kBAAA,iBAAiB,iCAAG;QAChBA,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACvC,IAAI,CAAC,QAAQ,EAAE;YACX,OAAO,IAAI,CAAC;SACf;;QAED,OAAsB,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;QAArC,IAAA,EAAE;QAAK,IAAA,EAAE,SAAd;QACNA,IAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;;QAE3C,OAAOc,+BAAI,CAAC,SAAS,EAAE;oBACX,SAAS,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC;oBAC7C,MAAM,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;KAC5C,CAAA;;;EA3JiB,UA4JrB,GAAA,AAED;;ACtKA,IAAM,KAAK,GAAqB;IAAC,cAClB,CAAC,OAAO,EAAE;QACjBF,eAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;;QAEf,IAAI,CAAC,MAAM;YACP,IAAI,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE;gBAC3D,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ;aAChC,CAAC,CAAC;SACN,CAAC;KACL;;;;wCAAA;;IAED,gBAAA,MAAM,oBAAC,SAAS,EAAE;QACdA,yBAAK,CAAC,MAAM,KAAA,CAAC,MAAA,SAAS,CAAC,CAAC;QACxB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;KACjC,CAAA;;IAED,MAAA,UAAiB,wBAAC,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE;QAC/CX,IAAI,YAAY,GAAG,OAAO,CAAC;;QAE3B,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;YAC7B,YAAY,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;SACpC;;QAED,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;;QAE9EA,IAAI,KAAK,CAAC;QACV,IAAI,YAAY,IAAI,YAAY,CAAC,OAAO,IAAI,YAAY,CAAC,IAAI,EAAE;YAC3D,KAAK,GAAG,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;YAChC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACxB;;QAED,OAAO,KAAK,CAAC;KAChB,CAAA;;;EAhCe,YAiCnB,GAAA;;AAED,iBAAiB,CAAC,KAAK,EAAE;IACrB,KAAK,EAAE,KAAK;IACZ,QAAQ,EAAE,GAAG;IACb,KAAK,EAAE,MAAM;IACb,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC;IACrB,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC;CACzB,CAAC,CAAC,AAEH;;ACtCA,IAAM,SAAS,GAAgB;IAAC,kBACjB,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE;QAC/CW,UAAK,KAAA,CAAC,MAAA,IAAI,EAAE,OAAO,CAAC,CAAC;;QAErB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;KAC1B;;;;gDAAA;;IAED,oBAAA,aAAa,2BAAC,SAAS,EAAE;QACrBZ,IAAM,OAAO,GAAGY,oBAAK,CAAC,aAAa,KAAA,CAAC,MAAA,SAAS,CAAC,CAAC;;QAE/C,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3B,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACrC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;;QAEvC,OAAO,OAAO,CAAC;KAClB,CAAA;;IAED,oBAAA,KAAK,mBAAC,MAAM,EAAE,CAAC,EAAE;;QAEb,MAAM,CAAC,OAAO,CAAC,gBAAgB,EAAE;YAC7B,OAAO,EAAE,YAAY,CAAC,CAAC,CAAC;YACxB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO;SAC5B,CAAC,CAAC;KACN,CAAA;;IAED,oBAAA,MAAM,sBAAG;QACL,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,KAAK,MAAM,EAAE;YACvCZ,IAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;YACpCA,IAAM,SAAS,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;;YAE3C,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;SACtD,MAAM;YACHY,oBAAK,CAAC,MAAM,KAAA,CAAC,IAAA,CAAC,CAAC;SAClB;;QAED,OAAO,IAAI,CAAC,GAAG,CAAC;KACnB,CAAA;;IAED,oBAAA,iBAAiB,iCAAG;QAChBZ,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QAClC,IAAI,CAAC,QAAQ,EAAE;YACX,OAAO,IAAI,CAAC;SACf;;QAED,IAAI,OAAO,CAAC,aAAa,KAAK,MAAM,EAAE;YAClC,OAAOY,oBAAK,CAAC,iBAAiB,KAAA,CAAC,IAAA,CAAC,CAAC;SACpC;;QAEDZ,IAAM,cAAc,GAAGc,+BAAI,CAAC,SAAS,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;QAClEd,IAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;QACpCA,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;;QAErCA,IAAM,cAAc,GAAG,OAAO,CAAC,cAAc,IAAI,GAAG,CAAC;QACrDA,IAAM,SAAS,GAAG,cAAc,KAAK,GAAG,IAAI,cAAc,KAAK,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;QAC9EA,IAAM,YAAY,GAAG,cAAc,KAAK,GAAG,IAAI,cAAc,KAAK,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;QACjFA,IAAM,UAAU,GAAG,cAAc,KAAK,GAAG,IAAI,cAAc,KAAK,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;;QAExGA,IAAM,OAAO,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QAC5DA,IAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QAC9DA,IAAM,WAAW,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QACpEA,IAAM,UAAU,GAAG,GAAG,CAAC,UAAU,EAAE,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QAClEA,IAAM,UAAU,GAAGc,+BAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;;QAEpFd,IAAM,SAAS,GAAG,EAAC;iBACf,CAAC,YAAY,CAAC,GAAA,IAAM,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,YAAY,CAC7E,CAAC;;QAEFA,IAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,SAAS,CAAC,YAAY,CAAC,GAAG,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;QAC1GA,IAAM,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,SAAS,CAAC,YAAY,CAAC,GAAG,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;;QAE5GC,IAAI,UAAU,EAAE,QAAQ,CAAC;;QAEzB,IAAI,KAAK,CAAC,YAAY,EAAE,iBAAiB,CAAC,KAAK,KAAK,CAAC,aAAa,EAAE,iBAAiB,CAAC,EAAE;YACpF,UAAU,GAAG,OAAO,CAAC;YACrB,QAAQ,GAAG,QAAQ,CAAC;SACvB,MAAM,IAAI,aAAa,GAAG,YAAY,EAAE;YACrC,UAAU,GAAG,QAAQ,CAAC;YACtB,QAAQ,GAAG,WAAW,CAAC;SAC1B,MAAM;YACH,UAAU,GAAG,OAAO,CAAC;YACrB,QAAQ,GAAG,UAAU,CAAC;SACzB;;QAEDD,IAAM,WAAW,GAAG,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;QAC9F,SAAS,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,GAAG,WAAW,CAAC;;QAE9D,OAAOc,+BAAI,CAAC,SAAS,EAAE;aAClB,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;aACnC,MAAM,CAAC,QAAQ,CAAC,CAAC;KACzB,CAAA;;;EAnGmB,OAoGvB,GAAA;;AAED,iBAAiB,CAAC,SAAS,EAAE;IACzB,WAAW,EAAE,KAAK;CACrB,CAAC,CAAC,AAEH,AAAyB;;AC3GzBd,IAAM,iBAAiB,GAAG,CAAC,CAAC;AAC5BA,IAAM,mBAAmB,GAAG,MAAM,CAAC;;AAEnC,IAAM,IAAI,GAAmB;IAAC,aACf,CAAC,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE;QACvCY,aAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;;QAEf,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;;QAEjC,IAAI,CAAC,MAAM,EAAE,CAAC;KACjB;;;;sCAAA;;IAED,eAAA,IAAI,oBAAG;QACH,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;KAChC,CAAA;;IAED,eAAA,IAAI,oBAAG;QACH,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;KAC/B,CAAA;;IAED,eAAA,MAAM,sBAAG;QACLZ,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;;QAE7B,IAAI,OAAO,CAAC,OAAO,EAAE;YACjB,IAAQ,KAAK;YAAE,IAAA,IAAI,gBAAb;YACNA,IAAM,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;YACtBC,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACrBA,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAC5BA,IAAI,KAAK,EAAE,MAAM,CAAC;;YAElB,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE;gBACjCD,IAAM,YAAY,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;gBACxC,IAAI,YAAY,EAAE;oBACd,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACpC,MAAM,IAAI,KAAK,CAAC,MAAM,EAAE;oBACrB,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;iBAC5D;;gBAED,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;oBACd,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,QAAQ,KAAK,MAAM,GAAG,mBAAmB,GAAG,IAAI,CAAC,UAAU,CAAC;iBACnF;;gBAED,IAAI,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC;;gBAEtD,IAAI,KAAK,CAAC,QAAQ,KAAK,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;oBAC7C,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;wBACtB,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;qBACpE,MAAM;wBACH,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;wBAC/B,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;qBACpC;oBACD,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBAC5B;aACJ;;YAED,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,IAAI,IAAI,iBAAiB,CAAC;YAChD,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,IAAI,IAAI,iBAAiB,CAAC;;YAElDC,IAAI,MAAM,GAAG,IAAI,YAAY,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;;YAEpD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;;YAEpB,IAAI,IAAI,CAAC,KAAK,EAAE;gBACZ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC3B;;YAED,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAC1C;KACJ,CAAA;;IAED,eAAA,MAAM,oBAAC,SAAS,EAAE;QACd,OAA4C,GAAG,IAAI;QAA3C,IAAA,OAAO;QAAE,IAAA,KAAK;QAAE,IAAA,MAAM;QAAE,IAAA,UAAU,kBAApC;QACND,IAAM,MAAM,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC;QAClCA,IAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;QACnCA,IAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;;;QAGlC,IAAI,OAAO,CAAC,OAAO,EAAE;YACjBC,IAAI,SAAS,EAAE,GAAG,EAAE,UAAU,CAAC;;YAE/B,IAAI,OAAO,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE;gBACpC,IAAI,QAAQ,KAAK,IAAI,EAAE;oBACnB,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;;oBAEtH,IAAI,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE;wBACtB,SAAS,GAAG,EAAE,SAAS,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC;wBACvC,IAAI,CAAC,UAAU,GAAG;4BACd,SAAS;4BACT,EAAE,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE;yBAC9B,CAAC;wBACF,GAAG,GAAG,UAAU,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;qBACjD;iBACJ,MAAM;oBACH,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;;oBAErH,IAAI,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE;wBACtB,SAAS,GAAG,EAAE,SAAS,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC;wBACvC,IAAI,CAAC,UAAU,GAAG;4BACd,SAAS;4BACT,EAAE,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE;yBAC9B,CAAC;wBACF,GAAG,GAAG,UAAU,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;qBACjD;iBACJ;aACJ,MAAM;gBACH,IAAI,QAAQ,KAAK,MAAM,EAAE;oBACrB,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;;oBAErH,IAAI,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE;wBACtB,SAAS,GAAG,EAAE,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,CAAC;wBACvC,IAAI,CAAC,UAAU,GAAG;4BACd,SAAS;4BACT,EAAE,MAAM,CAAC,CAAC,EAAE,UAAU,CAAC,EAAE,EAAE;yBAC9B,CAAC;wBACF,GAAG,GAAG,UAAU,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;qBACjD;iBACJ,MAAM;oBACH,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;;oBAEtH,IAAI,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE;wBACtB,SAAS,GAAG,EAAE,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,CAAC;wBACvC,IAAI,CAAC,UAAU,GAAG;4BACd,SAAS;4BACT,EAAE,MAAM,CAAC,CAAC,EAAE,UAAU,CAAC,EAAE,EAAE;yBAC9B,CAAC;wBACF,GAAG,GAAG,UAAU,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;qBACjD;iBACJ;aACJ;;YAED,IAAI,MAAM,EAAE;gBACR,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;aAC7B;;YAED,IAAI,KAAK,EAAE;gBACP,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;gBACzB,IAAI,MAAM,EAAE;oBACR,IAAI,OAAO,CAAC,KAAK,CAAC,QAAQ,KAAK,OAAO,EAAE;wBACpC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;qBAC3C;oBACD,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBAC3B;aACJ;;YAED,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,UAAU,CAAC;SAChC;KACJ,CAAA;;IAED,eAAA,YAAY,4BAAG;QACXW,uBAAK,CAAC,YAAY,KAAA,CAAC,IAAA,CAAC,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;;QAEjD,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;YACtB,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;KACJ,CAAA;;IAED,eAAA,YAAY,4BAAG;;;QACXZ,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC;QACpC,IAAI,OAAO,CAAC,OAAO,IAAI,YAAY,EAAE;YACjC,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE;gBAClD,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE;gBACxB,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBAC7B,OAAO,EAAE;oBACL,UAAU,EAAE,OAAO,CAAC,UAAU;oBAC9B,MAAM,EAAE,OAAO,CAAC,UAAU;oBAC1B,IAAI,EAAE,OAAO,CAAC,IAAI;oBAClB,KAAK,EAAE,OAAO,CAAC,KAAK;oBACpB,IAAI,EAAE,OAAO,CAAC,IAAI;oBAClB,QAAQ,EAAE,OAAO,CAAC,QAAQ;oBAC1B,OAAO,EAAE,OAAO,CAAC,OAAO;iBAC3B;gBACD,YAAY,EAAE,YAAG;oBACbQ,MAAI,CAAC,YAAY,EAAE,CAAC;oBACpBA,MAAI,CAAC,cAAc,EAAE,CAAC;oBACtBR,IAAM,aAAa,GAAGQ,MAAI,CAAC,MAAM,CAAC;oBAClC,OAAOA,MAAI,CAAC,MAAM,CAAC;oBACnB,OAAO,aAAa,CAAC;iBACxB;aACJ,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,SAAS,EAAE,CAAC;SACpB,MAAM;YACHI,uBAAK,CAAC,YAAY,KAAA,CAAC,IAAA,CAAC,CAAC;SACxB;KACJ,CAAA;;IAED,eAAA,UAAU,0BAAG;QACTZ,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;;QAElC,IAAI,IAAI,CAAC,UAAU,EAAE;YACjBA,IAAM,IAAI,GAAGe,8BAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE;gBAC/C,MAAM,EAAE;oBACJ,KAAK,EAAE,OAAO,CAAC,KAAK;oBACpB,KAAK,EAAE,OAAO,CAAC,KAAK;oBACpB,QAAQ,EAAE,OAAO,CAAC,QAAQ;iBAC7B;aACJ,CAAC,CAAC;;YAEH,gBAAgB,CAAC,IAAI,CAAC,CAAC;YACvB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC5B;KACJ,CAAA;;IAED,eAAA,KAAK,mBAAC,MAAM,EAAE,CAAC,EAAE;QACbf,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;;QAE/B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,EAAE;YACnC,CAAC,CAAC,cAAc,EAAE,CAAC;SACtB;KACJ,CAAA;;IAED,eAAA,KAAK,mBAAC,MAAM,EAAE,CAAC,EAAE;QACbA,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;;QAE/B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,EAAE;YACnC,CAAC,CAAC,cAAc,EAAE,CAAC;SACtB;KACJ,CAAA;;IAED,eAAA,KAAK,mBAAC,MAAM,EAAE;QACV,MAAM,CAAC,iBAAiB,EAAE,CAAC;KAC9B,CAAA;;IAED,eAAA,SAAS,uBAAC,CAAC,EAAE;QACTA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;;QAE7B,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE;YAC9B,OAAO,EAAE,YAAY,CAAC,CAAC,CAAC;YACxB,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE;YACtD,MAAM,EAAE,IAAI,CAAC,MAAM;SACtB,CAAC,CAAC;KACN,CAAA;;;EA1Oc,UA2OlB,GAAA;;AAED,iBAAiB,CAAC,IAAI,EAAE;IACpB,IAAI,EAAE;QACF,OAAO,EAAE,IAAI;QACb,IAAI,EAAE,MAAM;KACf;IACD,KAAK,EAAE;QACH,QAAQ,EAAE,MAAM;QAChB,OAAO,EAAE,IAAI;QACb,KAAK,EAAE,MAAM;QACb,MAAM,EAAE,MAAM;KACjB;IACD,IAAI,EAAE;QACF,OAAO,EAAE,IAAI;KAChB;IACD,OAAO,EAAE,IAAI;IACb,QAAQ,EAAE,GAAG;IACb,MAAM,EAAE,CAAC;CACZ,CAAC,CAAC,AAEH;;ACzQe,SAAS,cAAc,CAAC,OAAO,EAAE,WAAW,EAAE;IACzD,IAAQ,KAAK;IAAE,IAAA,KAAK;IAAE,IAAA,QAAQ,oBAAxB;;IAENA,IAAM,IAAI,GAAG,IAAIe,8BAAI,CAAC,IAAI,CAAC;QACvB,MAAM,EAAE;YACJ,KAAK,EAAE,WAAW,CAAC,KAAK;YACxB,KAAK,EAAE,WAAW,CAAC,KAAK;SAC3B;KACJ,CAAC,CAAC;;IAEH,IAAI,OAAO,CAAC,QAAQ,EAAE;QAClB,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC;aACvB,MAAM,CAAC,KAAK,GAAG,WAAW,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;KACnD,MAAM;QACH,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC;aACvB,MAAM,CAAC,QAAQ,EAAE,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;KACnD;;IAED,gBAAgB,CAAC,IAAI,CAAC,CAAC;;IAEvB,OAAO,IAAI,CAAC;;;ACpBD,SAAS,kBAAkB,CAAC,OAAO,EAAE,QAAQ,EAAE;IAC1D,IAAQ,SAAS;IAAE,IAAA,OAAO;IAAE,IAAA,QAAQ,oBAA9B;;IAENf,IAAM,IAAI,GAAG,IAAIe,8BAAI,CAAC,IAAI,CAAC;QACvB,MAAM,EAAE;YACJ,KAAK,EAAE,QAAQ,CAAC,KAAK;YACrB,KAAK,EAAE,QAAQ,CAAC,KAAK;YACrB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;SAC9B;KACJ,CAAC,CAAC;;IAEH,IAAI,OAAO,CAAC,QAAQ,EAAE;QAClB,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,QAAQ,CAAC;aAC3B,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;KAClC,MAAM;QACH,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,SAAS,CAAC;aAC3B,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;KAClC;;IAED,gBAAgB,CAAC,IAAI,CAAC,CAAC;;IAEvB,OAAO,IAAI,CAAC;;;ACVhB,IAAM,IAAI,GAAqB;IAAC,aACjB,CAAC,OAAO,EAAE,YAAiC,EAAE;mDAAvB,GAAG,IAAI,YAAY,EAAE;;QAClDH,eAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;;QAEf,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;;QAEjC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;YACvB,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE;gBACxC,MAAM,EAAE;oBACJ,OAAO,EAAE,KAAK;iBACjB;gBACD,IAAI,EAAE;oBACF,OAAO,EAAE,KAAK;iBACjB;gBACD,MAAM,EAAE,CAAC;gBACT,aAAa,EAAE,CAAC;gBAChB,aAAa,EAAE,CAAC;aACnB,CAAC,CAAC;SACN;;QAED,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,UAAU,CAAC,EAAE,EAAE;YACrC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK;YAC9B,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK;YAC9B,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa,KAAK,IAAI;SAC/C,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;YACxB,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa;YAChC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa;SACpC,CAAC,CAAC;;QAEH,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,UAAU,CAAC,EAAE,EAAE;YACrC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK;YAC9B,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK;YAC9B,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa,KAAK,IAAI;SAC/C,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;YACxB,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa;YAChC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa;SACpC,CAAC,CAAC;;QAEH,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;YAC5B,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;;QAED,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,EAAE,CAAC;KACtB;;;;sCAAA;;;;;IAKD,eAAA,WAAW,2BAAG;QACV,OAAO;YACH,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI;YAC7B,GAAG,EAAE,IAAI,CAAC,WAAW,EAAE;SAC1B,CAAC;KACL,CAAA;;IAED,eAAA,YAAY,4BAAG;;;QACXZ,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,KAAK,GAAG,OAAO,CAAC,QAAQ,GAAG,KAAK,GAAG,MAAM,CAAC;QAChDA,IAAM,YAAY,GAAG,UAAU,CAAC,GAAG,EAAE,OAAO,CAAC,MAAM,EAAE;YACjD,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,OAAO,CAAC,MAAM;SACzB,CAAC,CAAC;QACHA,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC;;QAE5C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAA,KAAK,EAAC,SAAG,CAAC,CAAC,KAAK,YAAY,SAAS,CAAC,GAAA,CAAC,CAAC;;QAE5E,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;;QAEjB,IAAI,YAAY,CAAC,OAAO,EAAE;YACtBA,IAAM,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YACjCA,IAAM,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC;;YAEvC,IAAI,QAAQ,CAAC,QAAQ,CAAC,EAAE;gBACpB,YAAY,CAAC,aAAa,GAAG,QAAQ,CAAC,KAAK,CAAC;gBAC5C,YAAY,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC;aAC1C;;YAED,IAAI,YAAY,CAAC,QAAQ,KAAK,MAAM,EAAE;gBAClC,YAAY,CAAC,QAAQ,GAAG,CAAC,CAAC;gBAC1B,OAAO,CAAC,gBAAgB,GAAG,IAAI,CAAC;aACnC;;YAED,KAAKC,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,GAAG,IAAI,IAAI,EAAE;gBACpDA,IAAI,KAAK,GAAGO,MAAI,CAAC,eAAe,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;gBACpD,IAAI,KAAK,EAAE;oBACPA,MAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;oBACnBA,MAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC3B;aACJ;SACJ;KACJ,CAAA;;IAED,eAAA,OAAO,uBAAG;QACN,OAAsB,GAAG,IAAI;QAArB,IAAA,OAAO;QAAE,IAAA,GAAG,WAAd;QACNR,IAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QAClCA,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;QACrCA,IAAM,KAAK,GAAG,MAAM,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;QACvCA,IAAM,KAAK,GAAG,MAAM,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;QACvCA,IAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;;QAE1C,OAAO,QAAQ;YACX,IAAI,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,EAAE,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,SAAS,CAAC;YACjD,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,SAAS,EAAE,KAAK,CAAC,CAAC;KACzD,CAAA;;IAED,eAAA,WAAW,2BAAG;QACVA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,YAAY,GAAG,UAAU,CAAC;YAC5B,QAAQ,EAAE,OAAO,CAAC,QAAQ,GAAG,CAAC,EAAE,GAAG,CAAC;YACpC,IAAI,EAAE,EAAE;YACR,MAAM,EAAE,CAAC;YACT,UAAU,EAAE,IAAI;SACnB,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;;QAElB,IAAI,YAAY,CAAC,OAAO,IAAI,YAAY,CAAC,IAAI,EAAE;YAC3CA,IAAM,KAAK,GAAG,IAAI,OAAO,CAAC,YAAY,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;YAC3D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACtB;KACJ,CAAA;;IAED,eAAA,WAAW,2BAAG;;;QACVA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC5BA,IAAM,KAAK,GAAG,KAAK,CAAC,IAAI,IAAI,EAAE,CAAC;;QAE/B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;QAEhB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnCD,IAAM,IAAI,GAAG,UAAU,CAAC,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,KAAK,GAAGQ,MAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;YAE7CR,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC;gBAClB,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI;gBACrB,QAAQ,EAAE,IAAI;aACjB,EAAE,IAAI,EAAEQ,MAAI,CAAC,YAAY,CAAC,CAAC;;YAE5B,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;gBACtB,IAAI,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;oBAChC,IAAI,OAAO,CAAC,QAAQ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE;wBACtE,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,GAAG,IAAI,GAAG,KAAK,CAAC;qBAC1D,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAE;wBAC9E,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,GAAG,MAAM,GAAG,GAAG,CAAC;qBAC1D;iBACJ,MAAM;oBACH,IAAI,OAAO,CAAC,QAAQ,EAAE;wBAClB,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,GAAG,IAAI,GAAG,KAAK,CAAC;qBAC1D,MAAM;wBACH,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,GAAG,MAAM,GAAG,GAAG,CAAC;qBAC1D;iBACJ;gBACDA,MAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBAClBA,MAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACzB;SACJ;KACJ,CAAA;;IAED,eAAA,cAAc,4BAAC,KAAK,EAAE;QAClB,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,eAAA,YAAY,4BAAG;QACXI,yBAAK,CAAC,YAAY,KAAA,CAAC,IAAA,CAAC,CAAC;;QAErB,IAAI,CAAC,eAAe,EAAE,CAAC;KAC1B,CAAA;;IAED,eAAA,YAAY,4BAAG;QACXA,yBAAK,CAAC,YAAY,KAAA,CAAC,IAAA,CAAC,CAAC;;QAErB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,EAAE,CAAC;KACrB,CAAA;;IAED,eAAA,eAAe,+BAAG;QACdX,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;QAChC,IAAI,CAAC,SAAS,EAAE;YACZ,SAAS,GAAG,IAAI,CAAC,UAAU,GAAG,IAAIc,8BAAI,CAAC,KAAK,CAAC;gBACzC,MAAM,EAAE,CAAC,CAAC;aACb,CAAC,CAAC;YACH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACtC;;QAED,OAAO,SAAS,CAAC;KACpB,CAAA;;IAED,eAAA,WAAW,yBAAC,SAAS,EAAE;QACnBf,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC/BA,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;QACrCA,IAAM,SAAS,GAAG,OAAO,CAAC,UAAU,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC;QACrEA,IAAM,eAAe,GAAG;;;YAGpB,QAAQ,EAAE,OAAO,CAAC,QAAQ;SAC7B,CAAC;;QAEF,SAAS,MAAM,CAAC,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE;YAClDA,IAAM,KAAK,GAAG,aAAa,CAAC,MAAM,CAAC;YACnCA,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC;;YAE3C,IAAI,WAAW,CAAC,OAAO,EAAE;gBACrB,KAAKC,IAAI,CAAC,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,IAAI,EAAE;oBACjD,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,QAAQ,KAAK,CAAC,CAAC,EAAE;wBAC3C,SAAS;qBACZ;;oBAED,eAAe,CAAC,KAAK,GAAG,MAAM,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,GAAG,WAAW,CAAC,IAAI,CAAC;oBAC5E,eAAe,CAAC,KAAK,GAAG,MAAM,GAAG,OAAO,CAAC,EAAE,GAAG,WAAW,CAAC,IAAI,GAAG,OAAO,CAAC,EAAE,CAAC;oBAC5E,eAAe,CAAC,QAAQ,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;;oBAE5C,SAAS,CAAC,MAAM,CAAC,cAAc,CAAC,eAAe,EAAE,WAAW,CAAC,CAAC,CAAC;iBAClE;aACJ;SACJ;;QAED,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;QACzD,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,OAAO,CAAC,UAAU,EAAE,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;KAC3F,CAAA;;IAED,eAAA,UAAU,0BAAG;QACTD,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QAC1BA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;;QAE/B,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;YAChCA,IAAM,IAAI,GAAG,IAAIe,8BAAI,CAAC,IAAI,CAAC;gBACvB,MAAM,EAAE;oBACJ,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;iBAC1B;;;;;aAKJ,CAAC,CAAC;;YAEH,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC;iBAC9B,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;;YAEpC,IAAI,OAAO,CAAC,WAAW,EAAE;gBACrB,gBAAgB,CAAC,IAAI,CAAC,CAAC;aAC1B;;YAEDf,IAAM,KAAK,GAAG,IAAI,CAAC,UAAU,GAAG,IAAIe,8BAAI,CAAC,KAAK,EAAE,CAAC;YACjD,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;YAEnB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC1B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SAC3B;KACJ,CAAA;;IAED,eAAA,iBAAiB,iCAAG;QAChBf,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BC,IAAI,QAAQ,GAAG,CAAC,CAAC;;QAEjB,IAAI,OAAO,CAAC,UAAU,CAAC,OAAO,IAAI,OAAO,CAAC,UAAU,CAAC,OAAO,EAAE;YAC1D,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACzE,MAAM,IAAI,OAAO,CAAC,UAAU,CAAC,OAAO,EAAE;YACnC,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC;SACtC,MAAM,IAAI,OAAO,CAAC,UAAU,CAAC,OAAO,EAAE;YACnC,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC;SACtC;;QAED,OAAO,QAAQ,CAAC;KACnB,CAAA;;IAED,eAAA,gBAAgB,gCAAG;QACf,OAAsB,GAAG,IAAI;QAArB,IAAA,OAAO;QAAE,IAAA,GAAG,WAAd;QACND,IAAM,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;;QAEtC,IAAI,UAAU,EAAE;YACZ,IAAI,CAAC,eAAe,GAAGe,8BAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE;gBACpD,IAAI,EAAE;oBACF,KAAK,EAAE,UAAU;iBACpB;gBACD,MAAM,EAAE,IAAI;aACf,CAAC,CAAC;;YAEH,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SAC5C;KACJ,CAAA;;IAED,eAAA,eAAe,+BAAG;;;QACdf,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,EAAE,CAAC;QAC1CA,IAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QAClCA,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;;QAE/B,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;YACxB,OAAO;SACV;;QAEDA,IAAM,KAAK,GAAG,IAAI,CAAC,cAAc,GAAG,IAAIe,8BAAI,CAAC,KAAK,CAAC;YAC/C,MAAM,EAAE,CAAC,CAAC;SACb,CAAC,CAAC;;QAEHf,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,UAAA,IAAI,EAAC,SAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,KAAKQ,MAAI,CAAC,OAAO,CAAC,QAAQ,GAAA,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEjG,KAAKP,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,SAAS,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YAC7CA,IAAI,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;YAC1BA,IAAI,KAAK,WAAA,EAAE,KAAK,WAAA,CAAC;;YAEjB,IAAI,QAAQ,EAAE;gBACV,KAAK,GAAG,CAAC,OAAO,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;gBAC9C,KAAK,GAAGO,MAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;aAClD,MAAM;gBACH,KAAK,GAAGA,MAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;gBAC/C,KAAK,GAAG,CAAC,OAAO,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;aACjD;;YAED,IAAI,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE;gBAC7CR,IAAM,QAAQ,GAAG,IAAIc,+BAAI,CAAC,IAAI;oBAC1B,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE;oBACtB,EAAE,KAAK,CAAC,KAAK,EAAE,EAAE,KAAK,CAAC,MAAM,EAAE,EAAE;iBACpC,CAAC;;gBAEFd,IAAM,IAAI,GAAGe,8BAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;oBACtC,IAAI,EAAE;wBACF,KAAK,EAAE,IAAI,CAAC,KAAK;wBACjB,OAAO,EAAE,IAAI,CAAC,OAAO;qBACxB;oBACD,MAAM,EAAE,IAAI;iBACf,CAAC,CAAC;;gBAEH,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACtB;SACJ;;QAED,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;KAC5B,CAAA;;IAED,eAAA,eAAe,6BAAC,OAAO,EAAE;QACrBf,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAQ,cAAc;QAAE,IAAA,cAAc;QAAE,IAAA,SAAS;QAAE,IAAA,QAAQ,oBAArD;QACNA,IAAM,eAAe,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;QACrDA,IAAM,SAAS,GAAG,cAAc,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC;QACjEA,IAAM,OAAO,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;QAClCA,IAAM,OAAO,GAAG,OAAO,CAAC,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;QAChDA,IAAM,WAAW,GAAG;YAChB,SAAS,EAAE,OAAO,CAAC,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC;YAC1C,OAAO,EAAE,OAAO,CAAC,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC;YACxC,QAAQ,EAAE,QAAQ;SACrB,CAAC;QACFA,IAAM,UAAU,GAAG,EAAE,CAAC;;QAEtBA,IAAM,SAAS,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;;QAEzC,SAAS,MAAM,CAAC,aAAa,EAAE,QAAQ,EAAE,QAAQ,EAAE;YAC/CA,IAAM,KAAK,GAAG,aAAa,CAAC,MAAM,CAAC;YACnCA,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;;YAExC,IAAI,QAAQ,CAAC,OAAO,EAAE;gBAClB,KAAKC,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,IAAI,EAAE;oBAC9CA,IAAI,GAAG,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;oBAClC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,EAAE;wBAC3B,IAAI,CAAC,GAAG,QAAQ,KAAK,CAAC,IAAI,CAAC,CAAC,eAAe,IAAI,OAAO,KAAK,GAAG,CAAC,EAAE;4BAC7D,WAAW,CAAC,QAAQ,GAAG,GAAG,CAAC;4BAC3B,SAAS,CAAC,MAAM,CAAC,kBAAkB,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC;;4BAE5D,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;yBACxB;qBACJ;iBACJ;aACJ;SACJ;;QAED,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,cAAc,CAAC,CAAC;QACrD,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,cAAc,EAAE,SAAS,GAAG,SAAS,CAAC,CAAC;;QAE5E,OAAO,SAAS,CAAC,QAAQ,CAAC;KAC7B,CAAA;;IAED,eAAA,MAAM,oBAAC,GAAG,EAAE;QACR,OAAgC,GAAG,IAAI;QAA/B,IAAA,OAAO;QAAE,IAAA,MAAM;QAAE,IAAA,KAAK,aAAxB;QACND,IAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QAClCA,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5BA,IAAM,MAAM,GAAG,QAAQ,GAAG,KAAK,GAAG,MAAM,CAAC;QACzCA,IAAM,SAAS,GAAG,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC;QAClDA,IAAM,KAAK,GAAG,IAAI,CAAC,iBAAiB,EAAE,GAAG,OAAO,CAAC,MAAM,GAAG,SAAS,CAAC;QACpEA,IAAM,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC;QAClDA,IAAM,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC;QAClCC,IAAI,YAAY,GAAG,CAAC,CAAC;;QAErB,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC5BA,IAAI,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;YACxC,IAAI,SAAS,GAAG,KAAK,IAAI,OAAO,EAAE;gBAC9B,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;aACpD;SACJ;;QAED,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG;gBACd,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE;gBACd,GAAG,CAAC,EAAE,GAAG,YAAY,GAAG,KAAK,EAAE,GAAG,CAAC,EAAE;aACxC,CAAC;SACL,MAAM;YACH,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG;gBACd,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE;gBACd,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,YAAY,GAAG,KAAK;aACxC,CAAC;SACL;;QAED,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,EAAE,CAAC;KACvB,CAAA;;IAED,eAAA,sBAAsB,sCAAG;QACrB,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC;KACvC,CAAA;;IAED,eAAA,cAAc,4BAAC,KAAK,EAAE;QAClB,OAAO,KAAK,CAAC,KAAK,CAAC;KACtB,CAAA;;IAED,eAAA,aAAa,6BAAG;;;QACZ,OAAyB,GAAG,IAAI;QAAxB,IAAA,OAAO;QAAE,IAAA,MAAM,cAAjB;QACND,IAAM,kBAAkB,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC;QAC9CA,IAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QAClCA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC/BA,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;QACrCA,IAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;QACpDA,IAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC;;QAE9D,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YAC1CD,IAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;YAC1BA,IAAM,MAAM,GAAGQ,MAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YAC1CR,IAAM,SAAS,GAAG,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;YACpEC,IAAI,QAAQ,GAAG,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;YACvDA,IAAI,QAAQ,WAAA,EAAE,iBAAiB,WAAA,EAAE,gBAAgB,WAAA,CAAC;;YAElD,IAAI,QAAQ,EAAE;gBACV,IAAI,kBAAkB,EAAE;oBACpB,iBAAiB,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC;oBAC1C,gBAAgB,GAAG,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;;oBAE7CA,IAAI,MAAM,GAAG,iBAAiB,GAAG,CAAC,gBAAgB,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAC;oBAC5E,QAAQ,GAAG,MAAM,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;iBACvC;;gBAEDA,IAAI,MAAM,GAAG,OAAO,CAAC,EAAE,CAAC;;gBAExB,IAAI,MAAM,EAAE;oBACR,MAAM,IAAI,WAAW,CAAC;oBACtB,KAAK,CAAC,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC;iBACvC,MAAM;oBACH,MAAM,IAAI,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;oBAC1C,KAAK,CAAC,OAAO,CAAC,cAAc,GAAG,KAAK,CAAC;iBACxC;;gBAED,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;aAC/C,MAAM;gBACH,IAAI,kBAAkB,EAAE;oBACpB,iBAAiB,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC;oBAC1C,gBAAgB,GAAG,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;iBAChD,MAAM;oBACH,iBAAiB,GAAG,QAAQ,CAAC;oBAC7B,gBAAgB,GAAG,QAAQ,GAAG,SAAS,CAAC;iBAC3C;;gBAEDA,IAAI,MAAM,GAAG,OAAO,CAAC,EAAE,CAAC;;gBAExB,IAAI,MAAM,EAAE;oBACR,MAAM,IAAI,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;oBAC3C,KAAK,CAAC,OAAO,CAAC,cAAc,GAAG,MAAM,CAAC;iBACzC,MAAM;oBACH,MAAM,IAAI,WAAW,CAAC;oBACtB,KAAK,CAAC,OAAO,CAAC,cAAc,GAAG,GAAG,CAAC;iBACtC;;gBAED,QAAQ,GAAG,IAAI,GAAG,CAAC,iBAAiB,EAAE,MAAM;gCAC5B,gBAAgB,EAAE,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;aAClE;;YAED,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SAC1B;KACJ,CAAA;;IAED,eAAA,gBAAgB,gCAAG;QACf,IAAI,IAAI,CAAC,OAAO,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;YACzDD,IAAM,aAAa,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;YACnDA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC3BC,IAAI,KAAK,CAAC;;YAEV,KAAKA,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;gBAC1CD,IAAM,KAAK,GAAG,aAAa,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC;gBAC1DA,IAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;;gBAEjC,IAAI,QAAQ,CAAC,KAAK,EAAE,GAAG,KAAK,EAAE;oBAC1B,IAAI,QAAQ,CAAC,MAAM,EAAE,GAAG,KAAK,EAAE;wBAC3B,KAAK,GAAG,CAAC,EAAE,CAAC;wBACZ,MAAM;qBACT;oBACD,KAAK,GAAG,CAAC,EAAE,CAAC;iBACf;aACJ;;YAED,IAAI,KAAK,EAAE;gBACP,KAAKC,IAAIe,KAAG,GAAG,CAAC,EAAEA,KAAG,GAAG,MAAM,CAAC,MAAM,EAAEA,KAAG,EAAE,EAAE;oBAC1C,MAAM,CAACA,KAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACrC,MAAM,CAACA,KAAG,CAAC,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;iBACjC;gBACD,OAAO,IAAI,CAAC;aACf;SACJ;KACJ,CAAA;;IAED,eAAA,YAAY,4BAAG;QACX,OAAwB,GAAG,IAAI;QAAvB,IAAA,OAAO;QAAE,IAAA,KAAK,aAAhB;QACNhB,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;QACrCA,IAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;;QAElC,IAAI,KAAK,EAAE;YACP,IAAI,QAAQ,EAAE;gBACV,KAAK,CAAC,OAAO,CAAC,KAAK,GAAG,MAAM,GAAG,KAAK,GAAG,IAAI,CAAC;gBAC5C,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;aACjD,MAAM;gBACH,KAAK,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;gBAC7C,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,GAAG,GAAG,GAAG,MAAM,CAAC;aAChD;;YAED,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAC1B;KACJ,CAAA;;IAED,eAAA,YAAY,4BAAG;;;QACX,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YAC9CD,IAAM,IAAI,GAAGQ,MAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC7BR,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;YACjCC,IAAI,IAAI,WAAA,CAAC;;YAET,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;gBAChB,IAAIO,MAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE;oBAC9B,IAAI,CAAC,IAAI,EAAE,CAAC;iBACf,MAAM;oBACH,IAAI,CAAC,IAAI,EAAE,CAAC;iBACf;;gBAED,IAAI,GAAGA,MAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aAC/B,MAAM;gBACH,IAAI,CAAC,IAAI,EAAE,CAAC;aACf;;YAED,IAAI,CAAC,MAAM,CAAC,IAAI,IAAIA,MAAI,CAAC,OAAO,EAAE,CAAC,CAAC;SACvC;KACJ,CAAA;;IAED,eAAA,QAAQ,sBAAC,KAAK,EAAE;QACZ,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;KAC9B,CAAA;;IAED,eAAA,OAAO,qBAAC,UAAU,EAAE;QAChBR,IAAM,OAAO,GAAG,UAAU,CAAC,OAAO,EAAE,CAAC;QACrCA,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACvCA,IAAM,GAAG,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;;QAE7B,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QAC9B,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;SAClE,MAAM;YACH,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,GAAG,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;SAChE;QACD,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;QAChE,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;KACnE,CAAA;;IAED,eAAA,aAAa,2BAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE;QACpCA,IAAM,IAAI,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;QAClCC,IAAI,IAAI,GAAG,KAAK,CAAC;;QAEjB,IAAI,IAAI,EAAE;YACN,IAAI,GAAG,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;SACvG,MAAM,IAAI,OAAO,CAAC,MAAM,EAAE;YACvB,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;SAC1F;;QAED,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,eAAA,IAAI,kBAAC,IAAI,GAAG,EAAE,EAAE,KAAK,EAAE;QACnBD,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QAC3C,IAAI,IAAI,EAAE;YACN,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;SACxB;KACJ,CAAA;;IAED,eAAA,UAAU,0BAAG;QACTA,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;QAC7BA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,IAAI,MAAM,CAAC,MAAM,EAAE;YACf,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE;gBAC3B,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aAC3B;YACDA,IAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC5C,IAAI,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE;gBAC3B,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;aAC3B;SACJ;;QAED,OAAO,GAAG,CAAC;KACd,CAAA;;IAED,eAAA,UAAU,wBAAC,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE;QACnCA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;;QAE7B,IAAI,CAAC,IAAI,GAAG,GAAG,IAAI,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE,IAAI,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE;YAC1J,OAAO,IAAI,CAAC;SACf;;QAED,IAAI,CAAC,EAAE,GAAG,GAAG,IAAI,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,IAAI,MAAM,GAAG,CAAC,CAAC,EAAE;YACxD,OAAO;gBACH,GAAG,EAAE,IAAI;gBACT,GAAG,EAAE,EAAE;aACV,CAAC;SACL;;QAEDA,IAAM,SAAS,GAAG,EAAE,GAAG,IAAI,CAAC;QAC5BC,IAAI,QAAQ,GAAG,IAAI,CAAC;QACpBA,IAAI,QAAQ,GAAG,EAAE,CAAC;;QAElB,IAAI,IAAI,GAAG,GAAG,EAAE;YACZ,QAAQ,GAAG,UAAU,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACtC,QAAQ,GAAG,UAAU,CAAC,IAAI,GAAG,SAAS,EAAE,GAAG,GAAG,SAAS,EAAE,GAAG,CAAC,CAAC;SACjE,MAAM,IAAI,EAAE,GAAG,GAAG,EAAE;YACjB,QAAQ,GAAG,UAAU,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACpC,QAAQ,GAAG,UAAU,CAAC,EAAE,GAAG,SAAS,EAAE,GAAG,EAAE,GAAG,GAAG,SAAS,CAAC,CAAC;SAC/D;;QAED,OAAO;YACH,GAAG,EAAE,QAAQ;YACb,GAAG,EAAE,QAAQ;SAChB,CAAC;KACL,CAAA;;IAED,eAAA,UAAU,0BAAG;QACT,OAAO;YACH,GAAG,EAAE,IAAI,CAAC,SAAS;YACnB,GAAG,EAAE,IAAI,CAAC,SAAS;SACtB,CAAC;KACL,CAAA;;;EAnoBc,YAooBlB,GAAA;;AAED,iBAAiB,CAAC,IAAI,EAAE;IACpB,MAAM,EAAE;QACJ,OAAO,EAAE,IAAI;QACb,QAAQ,EAAE,CAAC;QACX,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,CAAC;QACP,IAAI,EAAE,CAAC;KACV;IACD,IAAI,EAAE;QACF,KAAK,EAAE,CAAC;QACR,KAAK,EAAE,KAAK;QACZ,OAAO,EAAE,IAAI;KAChB;IACD,KAAK,EAAE;QACH,OAAO,EAAE,IAAI;QACb,QAAQ,EAAE,MAAM;KACnB;IACD,UAAU,EAAE;QACR,KAAK,EAAE,OAAO;QACd,IAAI,EAAE,CAAC;QACP,IAAI,EAAE,CAAC;QACP,IAAI,EAAE,CAAC;KACV;IACD,UAAU,EAAE;QACR,KAAK,EAAE,OAAO;QACd,IAAI,EAAE,CAAC;QACP,IAAI,EAAE,CAAC;QACP,IAAI,EAAE,CAAC;KACV;IACD,iBAAiB,EAAE,CAAC;IACpB,aAAa,EAAE,OAAO;IACtB,aAAa,EAAE,IAAI;IACnB,cAAc,EAAE;QACZ,IAAI,EAAE,CAAC;QACP,IAAI,EAAE,CAAC;KACV;IACD,cAAc,EAAE;QACZ,OAAO,EAAE,KAAK;QACd,KAAK,EAAE,CAAC;QACR,KAAK,EAAE,KAAK;QACZ,IAAI,EAAE,CAAC;QACP,IAAI,EAAE,CAAC;KACV;;IAED,MAAM,EAAE,CAAC;IACT,OAAO,EAAE,IAAI;IACb,OAAO,EAAE,KAAK;IACd,SAAS,EAAE,IAAI;IACf,KAAK,EAAE;QACH,KAAK,EAAE;YACH,IAAI,EAAE,EAAE;SACX;KACJ;;IAED,WAAW,EAAE,IAAI;IACjB,YAAY,EAAE,KAAK;CACtB,CAAC,CAAC,AAEH;;ACzsBAD,IAAM,yBAAyB,GAAG,IAAI,CAAC;;AAEvC,IAAM,YAAY,GAAa;IAAC,qBACjB,CAAC,OAAO,EAAE,YAAY,EAAE;QAC/BY,OAAK,KAAA,CAAC,MAAA,OAAO,EAAE,YAAY,CAAC,CAAC;;QAE7B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACtC;;;;sDAAA;;IAED,uBAAA,eAAe,6BAAC,OAAO,EAAE;QACrBZ,IAAM,UAAU,GAAG,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACvDA,IAAM,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACxCA,IAAM,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACxC,OAAO,CAAC,UAAU,GAAG,UAAU,CAAC;;QAEhC,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,IAAI,UAAU,CAAC,MAAM,EAAE;YACjD,OAAO,CAAC,aAAa,GAAG,OAAO,CAAC,UAAU,CAAC;YAC3CA,IAAM,GAAG,GAAG,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACrDC,IAAI,GAAG,CAAC;;YAER,IAAI,UAAU,EAAE;gBACZ,GAAG,GAAG,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;aAClF,MAAM;gBACH,GAAG,GAAG,UAAU,CAAC,MAAM,CAAC;aAC3B;;YAED,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;SAC3D;KACJ,CAAA;;IAED,uBAAA,YAAY,4BAAG;QACXD,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,CAAC;QAC9CA,IAAM,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;QACxDC,IAAI,GAAG,CAAC;;QAER,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE;YACvF,GAAG,GAAG,MAAM,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SACxC,MAAM;YACH,GAAG,GAAG,MAAM,GAAG,CAAC,OAAO,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;SAC9C;;QAED,OAAO;YACH,GAAG,EAAE,GAAG;YACR,GAAG,EAAE,GAAG;SACX,CAAC;KACL,CAAA;;IAED,uBAAA,iBAAiB,+BAAC,KAAK,EAAE;QACrBD,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BC,IAAI,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC;QAClDA,IAAI,GAAG,CAAC;;QAER,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACvB,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;SACrB,MAAM,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAC9B,GAAG,GAAG,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC;SACzC,MAAM;YACH,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,aAAa,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,CAAC,OAAO,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;SACnG;;QAED,IAAI,KAAK,EAAE;YACPD,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;YACrC,GAAG,GAAG,UAAU,CAAC,GAAG,EAAE,CAAC,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC;YACzC,GAAG,GAAG,UAAU,CAAC,GAAG,EAAE,CAAC,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC;SAC5C;;QAED,OAAO;YACH,GAAG,EAAE,GAAG;YACR,GAAG,EAAE,GAAG;SACX,CAAC;KACL,CAAA;;IAED,uBAAA,KAAK,qBAAG;QACJA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,OAAO,EAAE,GAAG,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;KACjI,CAAA;;IAED,uBAAA,UAAU,0BAAG;QACTA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,aAAa,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;KAC9I,CAAA;;IAED,uBAAA,QAAQ,wBAAG;QACP,OAAkB,GAAG,IAAI,CAAC,YAAY,EAAE;QAAhC,IAAA,GAAG;QAAE,IAAA,GAAG,WAAV;QACNA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC/BA,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;QACxEA,IAAM,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;;QAExC,OAAO,KAAK,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;KAClD,CAAA;;IAED,uBAAA,gBAAgB,8BAAC,QAAQ,EAAE;QACvB,OAA2B,GAAG,IAAI,CAAC,OAAO;QAAlC,IAAA,QAAQ;QAAE,IAAA,OAAO,eAAnB;QACN,SAAkB,GAAG,IAAI,CAAC,YAAY,EAAE;QAAhC,IAAA,GAAG;QAAE,IAAA,GAAG,aAAV;QACNA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC/BA,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9BA,IAAM,GAAG,GAAG,OAAO,CAAC,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC5DA,IAAM,SAAS,GAAG,EAAE,CAAC;;QAErBC,IAAI,OAAO,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,QAAQ,GAAG,GAAG,CAAC;;QAEnE,OAAO,OAAO,IAAI,GAAG,EAAE;YACnB,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC;YACtE,OAAO,IAAI,QAAQ,CAAC;SACvB;;QAED,OAAO,SAAS,CAAC;KACpB,CAAA;;IAED,uBAAA,sBAAsB,sCAAG;QACrBD,IAAM,aAAa,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5DA,IAAM,KAAK,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAClCA,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9BA,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC3BA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,IAAI,GAAG,OAAO,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;QACtCA,IAAM,KAAK,GAAG,OAAO,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;QACtCA,IAAM,GAAG,GAAG,OAAO,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;;QAEpC,IAAI,KAAK,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE;YACrB,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;SACtE;;QAED,IAAI,KAAK,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE;YACrB,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;SACrE;;QAED,OAAO,aAAa,CAAC;KACxB,CAAA;;IAED,uBAAA,cAAc,4BAAC,KAAK,EAAE;QAClBA,IAAM,KAAK,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAClCC,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;;QAExB,IAAI,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE;YACf,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SACzC;;QAED,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,uBAAA,aAAa,6BAAG;QACZW,iBAAK,CAAC,aAAa,KAAA,CAAC,IAAA,CAAC,CAAC;QACtB,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC/B,CAAA;;IAED,uBAAA,oBAAoB,oCAAG;QACnB,OAAqB,GAAG,IAAI;QAApB,IAAA,GAAG;QAAE,IAAA,MAAM,cAAb;;QAEN,IAAI,MAAM,CAAC,MAAM,EAAE;YACfZ,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;YAChDA,IAAM,KAAK,GAAG,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;YACjCA,IAAM,GAAG,GAAG,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;YAC/BA,IAAM,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YAC7BA,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;;YAE/B,IAAI,UAAU,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,KAAK,EAAE;gBAC9E,UAAU,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;aACtC;YACD,IAAI,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,KAAK,EAAE;gBAC5E,SAAS,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;aACrC;SACJ;KACJ,CAAA;;IAED,uBAAA,qBAAqB,qCAAG;QACpB,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC;KACrC,CAAA;;IAED,uBAAA,qBAAqB,qCAAG;QACpB,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC;KACrC,CAAA;;IAED,uBAAA,QAAQ,wBAAG;QACP,OAA4B,GAAG,IAAI,CAAC,OAAO;QAAnC,IAAA,OAAO;QAAE,IAAA,SAAS,iBAApB;QACNA,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1BA,IAAM,KAAK,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAClCA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC/BA,IAAM,IAAI,GAAG,OAAO,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,OAAO,GAAG,SAAS,CAAC;;QAEnF,IAAI,KAAK,CAAC,KAAK,KAAK,IAAI,EAAE;YACtB,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;YACnB,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;YAC5C,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;SACjD;;QAED,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,uBAAA,OAAO,qBAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE;QACrB,OAAiB,GAAG,IAAI;QAAhB,IAAA,OAAO,eAAT;QACN,IAAQ,OAAO;QAAE,IAAA,SAAS;QAAE,IAAA,QAAQ,oBAA9B;QACN,SAAa,GAAG,IAAI,CAAC,YAAY,EAAE;QAA3B,IAAA,GAAG,aAAL;QACNA,IAAM,SAAS,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;QACnCA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC/BA,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9BA,IAAM,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACzDA,IAAM,OAAO,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;QAChCA,IAAM,UAAU,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;;QAEhCA,IAAM,KAAK,GAAG,cAAc,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QACtCC,IAAI,GAAG,GAAG,cAAc,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;QACpC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;;;;QAI/B,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;;QAE3BA,IAAI,EAAE,GAAG,SAAS,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC;QAC3CA,IAAI,EAAE,GAAG,SAAS,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC;;QAE7C,IAAI,UAAU,IAAI,SAAS,EAAE;YACzB,EAAE,GAAG,EAAE,CAAC;SACX;;QAED,IAAI,KAAK,EAAE;YACP,EAAE,GAAG,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;YACpE,EAAE,GAAG,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;SACvE;;QAED,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,OAAO,GAAG,EAAE,GAAG,EAAE,CAAC;QAC3C,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,OAAO,GAAG,EAAE,GAAG,EAAE,CAAC;;QAE3C,OAAO,OAAO,CAAC;KAClB,CAAA;;IAED,uBAAA,IAAI,kBAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE;QAClBA,IAAI,KAAK,GAAG,IAAI,CAAC;QACjBA,IAAI,GAAG,GAAG,EAAE,CAAC;;QAEb,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC3B,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SACrC;;QAED,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YACzB,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;SACjC;;QAED,OAAOW,iBAAK,CAAC,IAAI,KAAA,CAAC,MAAA,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;KACxC,CAAA;;IAED,uBAAA,kBAAkB,gCAAC,KAAK,EAAE;QACtB,OAAsC,GAAG,IAAI,CAAC,OAAO;QAA7C,IAAA,OAAO;QAAE,IAAA,SAAS;QAAE,IAAA,QAAQ,gBAA9B;QACNZ,IAAM,SAAS,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;QACnCA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC/BA,IAAM,KAAK,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAClCA,IAAM,UAAU,GAAG,OAAO,GAAG,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;QACnDA,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9BA,IAAM,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;QACzCA,IAAM,OAAO,GAAG,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;QACvCA,IAAM,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;;QAE7B,IAAI,GAAG,GAAG,SAAS,IAAI,GAAG,GAAG,OAAO,EAAE;YAClC,OAAO,IAAI,CAAC;SACf;;QAEDC,IAAI,KAAK,GAAG,UAAU,GAAG,CAAC,GAAG,GAAG,SAAS,CAAC,GAAG,KAAK,CAAC;QACnDD,IAAM,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC;;QAEvB,IAAI,SAAS,EAAE;YACX,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SAC7B,MAAM,IAAI,IAAI,KAAK,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE;YAChC,KAAK,EAAE,CAAC;SACX;;QAED,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KAC5B,CAAA;;IAED,uBAAA,WAAW,yBAAC,KAAK,EAAE;QACfA,IAAM,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;;QAE7C,IAAI,KAAK,KAAK,IAAI,EAAE;YAChB,OAAO,IAAI,CAAC;SACf;;QAED,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;KACzC,CAAA;;IAED,uBAAA,aAAa,2BAAC,KAAK,EAAE;QACjBA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,KAAK,GAAG,CAAC,OAAO,CAAC,aAAa,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;;QAE3E,OAAO,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;KAC/C,CAAA;;IAED,uBAAA,cAAc,4BAAC,KAAK,EAAE;QAClBA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC/BA,IAAM,IAAI,GAAG,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;QACnEA,IAAM,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC;QACxCA,IAAM,KAAK,GAAG,IAAI,GAAG,KAAK,CAAC;QAC3BA,IAAM,MAAM,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,EAAE,iBAAiB,CAAC,CAAC;;QAEvD,OAAO;YACH,GAAG,EAAE,MAAM;YACX,GAAG,EAAE,KAAK,GAAG,MAAM;SACtB,CAAC;KACL,CAAA;;IAED,uBAAA,SAAS,uBAAC,IAAI,EAAE;QACZA,IAAM,YAAY,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC9C,OAAsC,GAAG,IAAI,CAAC,UAAU,EAAE;QAA7C,IAAA,QAAQ;QAAO,IAAA,QAAQ,WAA9B;QACNA,IAAM,GAAG,GAAG,UAAU,CAAC,YAAY,CAAC,GAAG,GAAG,IAAI,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACpEA,IAAM,GAAG,GAAG,UAAU,CAAC,YAAY,CAAC,GAAG,GAAG,IAAI,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;;QAEpE,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE;YACf,OAAO;gBACH,GAAG,EAAE,GAAG;gBACR,GAAG,EAAE,GAAG;aACX,CAAC;SACL;KACJ,CAAA;;IAED,uBAAA,UAAU,wBAAC,KAAK,EAAE;QACdA,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC;QAC7CA,IAAM,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;;QAE5B,OAAO;YACH,GAAG,EAAE,CAAC,KAAK;YACX,GAAG,EAAE,KAAK,GAAG,KAAK;SACrB,CAAC;KACL,CAAA;;IAED,uBAAA,WAAW,2BAAG;QACVA,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;;QAEvC,OAAO,WAAW,CAAC,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC;KAC5C,CAAA;;IAED,uBAAA,WAAW,2BAAG;QACVA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAQ,SAAS;QAAU,IAAA,YAAY,kBAAjC;QACN,OAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;QAAzC,IAAA,GAAG;QAAE,IAAA,GAAG,WAAV;QACJA,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;QAE9B,IAAI,CAAC,SAAS,EAAE;YACZ,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACtB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACxB,MAAM;YACH,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACrB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SACzB;;QAEDC,IAAI,IAAI,CAAC;;QAET,IAAI,GAAG,GAAG,YAAY,CAAC,IAAI,EAAE;YACzB,IAAI,GAAG,YAAY,CAAC,IAAI,GAAG,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,YAAY,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;SAC3G,MAAM;YACH,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC;SAC5B;;QAED,OAAO;YACH,GAAG,EAAE,IAAI,GAAG,KAAK;YACjB,GAAG,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,GAAG,GAAG,GAAG,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK;SAC3E,CAAC;KACL,CAAA;;IAED,uBAAA,eAAe,6BAAC,KAAK,EAAE,YAAY,EAAE;QACjCD,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,QAAQ,GAAG,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;QACrEA,IAAM,QAAQ,GAAG,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;QAC/DA,IAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;;QAElE,OAAO,IAAI,SAAS,CAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;KACvE,CAAA;;IAED,uBAAA,gBAAgB,8BAAC,KAAK,EAAE;QACpBA,IAAM,KAAK,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;;QAEvC,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;KAC1E,CAAA;;IAED,uBAAA,QAAQ,sBAAC,KAAK,EAAE;QACZA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;KAC9B,CAAA;;IAED,uBAAA,YAAY,4BAAG;QACXY,iBAAK,CAAC,YAAY,KAAA,CAAC,IAAA,CAAC,CAAC;QACrB,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC9B,CAAA;;IAED,uBAAA,mBAAmB,mCAAG;QAClB,OAAoB,GAAG,IAAI;QAAnB,IAAA,KAAK;QAAE,IAAA,GAAG,WAAZ;QACN,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,EAAE;YACvBZ,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;YAChDA,IAAM,KAAK,GAAG,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;YACjCA,IAAM,GAAG,GAAG,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;;YAE/B,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;gBACzCD,IAAM,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;gBACxB,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE;oBAChF,IAAI,CAAC,IAAI,EAAE,CAAC;iBACf;aACJ;SACJ;KACJ,CAAA;;IAED,uBAAA,GAAG,iBAAC,KAAK,EAAE;QACPA,IAAM,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAC3CA,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9BA,IAAM,MAAM,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,EAAE,iBAAiB,CAAC,CAAC;QACvDA,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QACrCA,IAAM,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC;QAC/BA,IAAM,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC;;QAE/B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;KAC/D,CAAA;;IAED,uBAAA,WAAW,yBAAC,KAAK,EAAE,GAAG,EAAE;QACpB,OAA2B,GAAG,IAAI,CAAC,OAAO;QAAlC,IAAA,OAAO;QAAE,IAAA,QAAQ,gBAAnB;QACNA,IAAM,SAAS,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;QACnCA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC/BA,IAAM,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAC3CA,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9BA,IAAM,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;QAEzDA,IAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC;QAC/CA,IAAM,OAAO,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC;;QAE3CA,IAAM,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,SAAS,GAAG,KAAK,CAAC;QAC1CA,IAAM,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,OAAO,GAAG,KAAK,CAAC;QACxCA,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACpCA,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;;QAEpC,IAAI,QAAQ,GAAG,QAAQ,IAAI,yBAAyB,EAAE;YAClD,OAAO;gBACH,GAAG,EAAE,QAAQ;gBACb,GAAG,EAAE,QAAQ;aAChB,CAAC;SACL;KACJ,CAAA;;IAED,uBAAA,UAAU,0BAAG;QACT,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;KACvB,CAAA;;;EApbsB,IAqb1B,GAAA;;AAED,iBAAiB,CAAC,YAAY,EAAE;IAC5B,IAAI,EAAE,UAAU;IAChB,UAAU,EAAE,EAAE;IACd,QAAQ,EAAE,KAAK;IACf,cAAc,EAAE;QACZ,OAAO,EAAE,KAAK;QACd,KAAK,EAAE,CAAC;QACR,KAAK,EAAE,KAAK;KACf;IACD,MAAM,EAAE;QACJ,MAAM,EAAE,CAAC;KACZ;IACD,SAAS,EAAE,KAAK;IAChB,YAAY,EAAE,IAAI;CACrB,CAAC,CAAC,AAEH;;AC/cOA,IAAM,YAAY,GAAG,cAAc,CAAC;AAC3C,AAAOA,IAAM,OAAO,GAAG,SAAS,CAAC;AACjC,AAAOA,IAAM,OAAO,GAAG,SAAS,CAAC;AACjC,AAAOA,IAAM,KAAK,GAAG,OAAO,CAAC;AAC7B,AAAOA,IAAM,IAAI,GAAG,MAAM,CAAC;AAC3B,AAAOA,IAAM,KAAK,GAAG,OAAO,CAAC;AAC7B,AAAOA,IAAM,MAAM,GAAG,QAAQ,CAAC;AAC/B,AAAOA,IAAM,KAAK,GAAG,OAAO,CAAC;;AAE7B,AAAOA,IAAM,oBAAoB,GAAG,CAAC,CAAC;AACtC,AAAOA,IAAM,eAAe,GAAG,IAAI,CAAC;AACpC,AAAOA,IAAM,eAAe,GAAG,EAAE,GAAG,eAAe,CAAC;AACpD,AAAOA,IAAM,aAAa,GAAG,EAAE,GAAG,eAAe,CAAC;AAClD,AAAOA,IAAM,YAAY,GAAG,EAAE,GAAG,aAAa,CAAC;AAC/C,AAAOA,IAAM,aAAa,GAAG,CAAC,GAAG,YAAY,CAAC;AAC9C,AAAOA,IAAM,cAAc,GAAG,EAAE,GAAG,YAAY,CAAC;AAChD,AAAOA,IAAM,aAAa,GAAG,GAAG,GAAG,YAAY,CAAC;AAChD,AAAOA,IAAM,aAAa,GAAG;IACzB,OAAO,EAAE,aAAa;IACtB,QAAQ,EAAE,cAAc;IACxB,OAAO,EAAE,aAAa;IACtB,MAAM,EAAE,YAAY;IACpB,OAAO,EAAE,aAAa;IACtB,SAAS,EAAE,eAAe;IAC1B,SAAS,EAAE,eAAe;IAC1B,cAAc,EAAE,oBAAoB;CACvC,CAAC;;ACxBa,SAAS,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE;IAC3CA,IAAM,IAAI,GAAG,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;IAC7BA,IAAM,UAAU,GAAG,CAAC,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,iBAAiB,EAAE,CAAC;;IAEjE,OAAO,IAAI,GAAG,CAAC,UAAU,GAAG,eAAe,CAAC,CAAC;;;ACNlC,SAAS,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE;IAC1C,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,CAAC;;;ACD7B,SAAS,MAAM,CAAC,KAAK,EAAE;IAClCC,IAAI,MAAM,CAAC;;IAEX,IAAI,KAAK,YAAY,IAAI,EAAE;QACvB,MAAM,GAAG,KAAK,CAAC;KAClB,MAAM,IAAI,KAAK,EAAE;QACd,MAAM,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;KAC5B;;IAED,OAAO,MAAM,CAAC;;;ACNH,SAAS,WAAW,CAAC,IAAI,EAAE,YAAgB,EAAE;+CAAN,GAAG,CAAC;;IACtDA,IAAI,cAAc,GAAG,CAAC,CAAC;IACvBA,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;;IAExB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;QACb,OAAO,GAAG,KAAK,YAAY,EAAE;YACzB,IAAI,GAAG,KAAK,CAAC,EAAE;gBACX,GAAG,GAAG,CAAC,CAAC;aACX,MAAM;gBACH,GAAG,EAAE,CAAC;aACT;;YAED,cAAc,EAAE,CAAC;SACpB;KACJ;;IAED,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC,cAAc,GAAG,YAAY,CAAC,CAAC;;;ACb1D,SAAS,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE;IAC5B,IAAI,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE;QACvC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;QACnC,OAAO,IAAI,CAAC;KACf;;IAED,OAAO,KAAK,CAAC;CAChB;;AAED,SAAS,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE;IAC3BD,IAAM,WAAW,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;;IAEnC,WAAW,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEhCA,IAAM,MAAM,GAAG,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,WAAW,CAAC,iBAAiB,EAAE,CAAC,GAAG,eAAe,CAAC;;IAE9F,OAAO,QAAQ,CAAC,WAAW,EAAE,MAAM,GAAG,KAAK,GAAG,aAAa,CAAC,CAAC;CAChE;;AAED,AAAe,SAAS,WAAW,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,EAAE,YAAY,EAAE;IACtEC,IAAI,MAAM,GAAG,SAAS,CAAC;;IAEvB,IAAI,SAAS,EAAE;QACXA,IAAI,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;QAC7BD,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;;QAE9B,IAAI,IAAI,KAAK,KAAK,EAAE;YAChB,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACpD,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;SACxB,MAAM,IAAI,IAAI,KAAK,MAAM,EAAE;YACxB,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC;YAClE,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SAC5B,MAAM,IAAI,IAAI,KAAK,KAAK,EAAE;YACvB,MAAM,GAAG,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,YAAY,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;YACvE,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SAC5B,MAAM,IAAI,IAAI,KAAK,IAAI,EAAE;YACtB,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,CAAC;YAC/E,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SAC5B,MAAM,IAAI,IAAI,KAAK,KAAK,EAAE;YACvB,MAAM,GAAG,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SAClC,MAAM,IAAI,IAAI,KAAK,OAAO,EAAE;YACzB,MAAM,GAAG,QAAQ,CAAC,IAAI,EAAE,KAAK,GAAG,eAAe,CAAC,CAAC;;YAEjD,IAAI,MAAM,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE;gBACzB,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;aACxB;SACJ,MAAM,IAAI,IAAI,KAAK,OAAO,EAAE;YACzB,MAAM,GAAG,QAAQ,CAAC,IAAI,EAAE,KAAK,GAAG,eAAe,CAAC,CAAC;SACpD,MAAM,IAAI,IAAI,KAAK,YAAY,EAAE;YAC9B,MAAM,GAAG,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SAClC;;QAED,IAAI,IAAI,KAAK,YAAY,IAAI,MAAM,CAAC,eAAe,EAAE,GAAG,CAAC,EAAE;YACvD,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;SAC7B;KACJ;;IAED,OAAO,MAAM,CAAC;;;AC5DH,SAAS,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE;IACxD,OAAO,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;;;ACA7C,SAAS,QAAQ,CAAC,SAAS,EAAE,IAAI,EAAE,YAAY,EAAE;IAC5DA,IAAM,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;;IAE/B,IAAI,IAAI,IAAI,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC,OAAO,EAAE,EAAE;QAC1E,OAAO,IAAI,CAAC;KACf;;IAED,OAAO,WAAW,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;;;ACXrC,SAAS,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE;IACvC,IAAI,CAAC,IAAI,CAAC,EAAE;QACR,OAAO,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;KACpC;;IAED,OAAO,CAAC,CAAC,CAAC;;;ACLC,SAAS,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE;IACnC,OAAO,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;;;ACEZ,SAAS,MAAM,CAAC,KAAK,EAAE;IAClC,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;QAChBC,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,KAAKA,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YACzC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SACnC;;QAED,OAAO,MAAM,CAAC;KACjB,MAAM,IAAI,KAAK,EAAE;QACd,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;KAClC;;;ACXU,SAAS,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE;IACrC,IAAI,CAAC,IAAI,CAAC,EAAE;QACR,OAAO,MAAM,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC;KAClC;;IAED,OAAO,CAAC,KAAK,CAAC,CAAC;;;ACFnB,SAAS,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE;IACtC,OAAO,gBAAgB,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC;CAClE;;AAED,AAAe,SAAS,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAE;IACpED,IAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;IAC3BA,IAAM,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;IAChCC,IAAI,KAAK,CAAC;;IAEV,IAAI,QAAQ,KAAK,MAAM,EAAE;QACrB,KAAK,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,SAAS,CAAC,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,CAAC;YAClG,SAAS,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;KAC7I,MAAM,IAAI,QAAQ,KAAK,KAAK,EAAE;QAC3B,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,SAAS,CAAC,WAAW,EAAE,GAAG,SAAS,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;KAC3H,MAAM,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,KAAK,EAAE;QAChD,KAAK,GAAG,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;KAChD,MAAM;QACH,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC;KAC3D;;IAED,OAAO,KAAK,GAAG,YAAY,CAAC;CAC/B;;ACvBc,SAAS,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE;IACzCA,IAAI,IAAI,CAAC;;IAET,IAAI,IAAI,KAAK,KAAK,EAAE;QAChB,IAAI,GAAG,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;KAC5C,MAAM,IAAI,IAAI,KAAK,MAAM,EAAE;QACxB,IAAI,GAAG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;KACnE,MAAM,IAAI,IAAI,KAAK,IAAI,EAAE;QACtB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC;KACpD,MAAM;QACH,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;KAC3D;;IAED,OAAO,IAAI,CAAC;;;ACdD,SAAS,YAAY,CAAC,IAAI,EAAE,WAAW,EAAE;IACpDA,IAAI,GAAG,GAAG,CAAC,CAAC;IACZA,IAAI,IAAI,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;IAClCA,IAAI,KAAK,CAAC;;IAEV,OAAO,GAAG,IAAI,IAAI,EAAE;QAChB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACrCD,IAAM,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;;QAEvC,IAAI,WAAW,GAAG,IAAI,EAAE;YACpB,GAAG,GAAG,KAAK,GAAG,CAAC,CAAC;YAChB,SAAS;SACZ;;QAED,IAAI,WAAW,GAAG,IAAI,EAAE;YACpB,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC;YACjB,SAAS;SACZ;;QAED,OAAO,UAAU,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE;YAC7C,KAAK,EAAE,CAAC;SACX;;QAED,OAAO,KAAK,CAAC;KAChB;;IAED,IAAI,WAAW,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE;QAC5B,OAAO,KAAK,CAAC;KAChB;;IAED,OAAO,KAAK,GAAG,CAAC,CAAC;;;AC7BN,SAAS,SAAS,CAAC,WAAW,EAAE,IAAI,EAAE;IACjDC,IAAI,MAAM,CAAC;IACX,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE;QAChB,MAAM,GAAG,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC;KACxD,MAAM;QACH,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;KACzB;IACD,OAAO,MAAM,CAAC;;;ACNH,SAAS,UAAU,CAAC,WAAW,EAAE,KAAK,EAAE;IACnD,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;QAChBD,IAAM,MAAM,GAAG,EAAE,CAAC;QAClB,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YACzC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SACnD;;QAED,OAAO,MAAM,CAAC;KACjB;;IAED,OAAO,SAAS,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;;;ACdzCD,IAAM,gBAAgB,GAAG,MAAM,CAAC;;AAEhCA,IAAM,gBAAgB,GAAG;IACrB,OAAO,EAAE,UAAU;IACnB,OAAO,EAAE,OAAO;IAChB,KAAK,EAAE,OAAO;IACd,IAAI,EAAE,KAAK;IACX,KAAK,EAAE,KAAK;IACZ,MAAM,EAAE,SAAS;IACjB,KAAK,EAAE,MAAM;CAChB,CAAC;;AAEFA,IAAM,cAAc,GAAG,GAAG,CAAC,AAE3B;;ACDAA,IAAM,IAAI,GAAG,MAAM,CAAC;AACpBA,IAAM,UAAU,GAAG;IACf,YAAY,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK;CACpE,CAAC;AACFA,IAAM,GAAG,GAAG,KAAK,CAAC;;AAElB,IAAM,gBAAgB,GAAqB;IAAC,yBAE7B,CAAC,WAAW,EAAE,YAAY,EAAE;QACnCY,eAAK,KAAA,CAAC,MAAA,WAAW,EAAE,YAAY,CAAC,CAAC;;QAEjCZ,IAAM,WAAW,GAAG,YAAY,CAAC,IAAI,CAAC;QACtCC,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;;QAE3B,OAAO,GAAG,UAAU,CAAC;YACjB,eAAe,EAAE,IAAI;SACxB,EAAE,OAAO,EAAE;YACR,UAAU,EAAE,UAAU,CAAC,WAAW,EAAE,OAAO,CAAC,UAAU,CAAC;YACvD,GAAG,EAAE,SAAS,CAAC,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC;YACxC,GAAG,EAAE,SAAS,CAAC,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC;SAC3C,CAAC,CAAC;;QAEH,OAAO,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,IAAI,OAAO,CAAC,QAAQ,CAAC;QACtE,OAAO,CAAC,mBAAmB,GAAG,OAAO,CAAC,mBAAmB,IAAI,OAAO,CAAC,YAAY,CAAC;;QAElF,IAAI,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YACrDD,IAAM,QAAQ,GAAG,CAAC,OAAO,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;YACxDA,IAAM,UAAU,GAAG,QAAQ,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;;YAEtE,IAAI,UAAU,EAAE;gBACZ,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;aACpD;;YAED,IAAI,QAAQ,KAAK,GAAG,IAAI,OAAO,CAAC,YAAY,KAAK,IAAI,EAAE;gBACnD,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;aAC9B;;YAED,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC;;YAElG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;SACjC,MAAM;YACH,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC;SAC/C;;QAED,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KAC1B;;;;8DAAA;;IAED,2BAAA,eAAe,+BAAG,EAAE,CAAA;;IAEpB,2BAAA,gBAAgB,8BAAC,KAAK,EAAE;QACpBA,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QAC3BA,IAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC;;QAEjD,OAAO,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,MAAM,CAAC;KAC1G,CAAA;;IAED,2BAAA,cAAc,4BAAC,KAAK,EAAE;QAClB,OAAO,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KACnD,CAAA;;IAED,2BAAA,QAAQ,sBAAC,KAAK,EAAE;QACZ,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;KAC9B,CAAA;;IAED,2BAAA,cAAc,4BAAC,KAAK,EAAE;QAClBA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAQ,QAAQ;QAAE,IAAA,YAAY;QAAE,IAAA,QAAQ,oBAAlC;QACNA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC/BA,IAAM,IAAI,GAAG,QAAQ,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;QAC3DC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QACzBD,IAAM,KAAK,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;QAC7CA,IAAM,MAAM,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,EAAE,iBAAiB,CAAC,CAAC;;QAEvD,IAAI,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,EAAE;YACxBA,IAAM,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;YACxDA,IAAM,EAAE,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;;YAEtD,KAAK,GAAG;gBACJ,GAAG,EAAE,WAAW,CAAC,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,YAAY,CAAC;gBACjD,GAAG,EAAE,WAAW,CAAC,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAE,YAAY,CAAC;aAClD,CAAC;SACL;;QAED,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,2BAAA,UAAU,wBAAC,KAAK,EAAE;QACdC,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC7BA,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QAC1B,IAAW,IAAI;QAAO,IAAA,EAAE,cAApB;;QAEJ,IAAI,IAAI,IAAI,EAAE,EAAE;YACZ,OAAO,MAAM,EAAE,EAAE;gBACbD,IAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBACjCA,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;gBACrC,IAAI,KAAK,GAAG,CAAC,EAAE;oBACX,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBAC5B,EAAE,GAAG,QAAQ,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;iBAC5B,MAAM;oBACH,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;oBAC7B,EAAE,GAAG,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;iBAC3B;aACJ;;YAED,MAAM,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC;SACnC;;QAED,OAAO,MAAM,CAAC;KACjB,CAAA;;IAED,2BAAA,eAAe,6BAAC,OAAO,EAAE;QACrBA,IAAM,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;QACtCA,IAAM,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;QAC1DC,IAAI,OAAO,GAAG,SAAS,CAAC;QACxBA,IAAI,YAAY,EAAE,IAAI,CAAC;;QAEvB,KAAKA,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,KAAK,EAAE,UAAU,EAAE,EAAE;YACvDD,IAAM,QAAQ,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC;;YAExC,IAAI,QAAQ,IAAI,YAAY,EAAE;gBAC1BA,IAAM,IAAI,GAAG,gBAAgB,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;gBACtD,IAAI,IAAI,GAAG,CAAC,EAAE;oBACV,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;;oBAElC,IAAI,OAAO,IAAI,aAAa,EAAE;wBAC1B,IAAI,GAAG,KAAK,CAAC;qBAChB,MAAM,IAAI,OAAO,IAAI,cAAc,GAAG,YAAY,GAAG,CAAC,EAAE;wBACrD,IAAI,GAAG,MAAM,CAAC;qBACjB,MAAM,IAAI,OAAO,IAAI,aAAa,EAAE;wBACjC,IAAI,GAAG,KAAK,CAAC;qBAChB,MAAM,IAAI,OAAO,IAAI,YAAY,EAAE;wBAChC,IAAI,GAAG,IAAI,CAAC;qBACf,MAAM,IAAI,OAAO,IAAI,aAAa,EAAE;wBACjC,IAAI,GAAG,KAAK,CAAC;qBAChB,MAAM,IAAI,OAAO,IAAI,eAAe,EAAE;wBACnC,IAAI,GAAG,OAAO,CAAC;qBAClB,MAAM;wBACH,IAAI,GAAG,OAAO,CAAC;qBAClB;iBACJ;aACJ;;YAED,YAAY,GAAG,QAAQ,CAAC;SAC3B;;QAED,OAAO,IAAI,IAAI,IAAI,CAAC;KACvB,CAAA;;IAED,2BAAA,cAAc,4BAAC,UAAU,EAAE;QACvBC,IAAI,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC;QAC9B,IAAI,CAAC,KAAK,EAAE;YACR,KAAK,GAAG,UAAU,CAAC,MAAM,GAAG,iBAAiB,CAAC,UAAU,CAAC,CAAC;SAC7D;;QAED,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,2BAAA,UAAU,0BAAG;QACT,OAAO;YACH,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM;SACtC,CAAC;KACL,CAAA;;IAED,2BAAA,YAAY,4BAAG;QACXD,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAQ,UAAU;QAAE,IAAA,QAAQ,oBAAtB;QACNA,IAAM,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,CAAC,CAAC;QAC/CA,IAAM,cAAc,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAC9CA,IAAM,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,IAAI,cAAc,CAAC,GAAG,CAAC,CAAC;QACtDA,IAAM,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,IAAI,cAAc,CAAC,GAAG,CAAC,CAAC;QACtDC,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC;;QAE3B,IAAI,UAAU,CAAC,MAAM,EAAE;YACnB,MAAM,GAAG,SAAS,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;YAC/D,MAAM,GAAG,SAAS,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;;YAE/D,IAAI,OAAO,CAAC,eAAe,EAAE;gBACzB,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBAC5B,MAAM,GAAG,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACvE;SACJ;;QAED,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC;KACvC,CAAA;;IAED,2BAAA,WAAW,2BAAG;QACVD,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC;QACpCA,IAAM,KAAK,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAClCA,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAClCA,IAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;QAEjC,OAAO;YACH,GAAG,EAAE,GAAG,GAAG,YAAY,CAAC,IAAI;YAC5B,GAAG,EAAE,OAAO,CAAC,UAAU,CAAC,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;SACzE,CAAC;KACL,CAAA;;IAED,2BAAA,eAAe,+BAAG;QACdA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC;;QAE/EC,IAAI,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,EAAE;YACpF,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;SAC1D;QACD,OAAO;YACH,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC;YACtB,GAAG,EAAE,GAAG;SACX,CAAC;KACL,CAAA;;IAED,2BAAA,YAAY,4BAAG;QACXD,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAMiB,QAAK,GAAG,OAAO,CAAC,eAAe,KAAK,KAAK,CAAC;QAChDjB,IAAM,UAAU,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAC1C,IAAM,GAAG;QAAE,IAAA,GAAG,eAAV;;QAEJ,IAAI,CAAC,GAAG,EAAE;YACN,GAAG,GAAGiB,QAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC;SACzF;;QAED,IAAI,CAAC,GAAG,EAAE;YACN,GAAG,GAAGA,QAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,GAAG,EAAE,OAAO,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC;SACtG;;QAED,OAAO;YACH,GAAG,EAAE,GAAG;YACR,GAAG,EAAE,GAAG;SACX,CAAC;KACL,CAAA;;IAED,2BAAA,UAAU,0BAAG;QACTjB,IAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACzF,OAAO;YACH,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC;YACtB,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC;SACzB,CAAC;KACL,CAAA;;IAED,2BAAA,GAAG,iBAAC,KAAK,EAAE;QACPA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC/BA,IAAM,IAAI,GAAG,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;QACnE,OAAkB,GAAG,IAAI,CAAC,YAAY,EAAE;QAAhC,IAAA,GAAG;QAAE,IAAA,GAAG,WAAV;QACNA,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvCA,IAAM,KAAK,GAAG,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;QACjCA,IAAM,MAAM,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,EAAE,iBAAiB,CAAC,CAAC;QACvDA,IAAM,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACnCA,IAAM,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;;QAEjCA,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC;;QAErH,IAAI,QAAQ,EAAE;YACV,QAAQ,CAAC,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACpC,QAAQ,CAAC,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACpC,QAAQ,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;YACrC,QAAQ,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,CAAC,CAAC;YAClD,QAAQ,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,CAAC;YACnD,QAAQ,CAAC,mBAAmB,GAAG,OAAO,CAAC,mBAAmB,CAAC;;YAE3D,OAAO,QAAQ,CAAC;SACnB;KACJ,CAAA;;IAED,2BAAA,WAAW,yBAAC,KAAK,EAAE,GAAG,EAAE;QACpBA,IAAM,WAAW,GAAGY,yBAAK,CAAC,WAAW,KAAA,CAAC,MAAA,KAAK,EAAE,GAAG,CAAC,CAAC;QAClDZ,IAAM,UAAU,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACvCA,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACzCA,IAAM,KAAK,GAAG,QAAQ,CAAC,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;QAC/FA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;;QAE7BA,IAAM,GAAG,GAAG,QAAQ,CAAC,UAAU,CAAC,GAAG,EAAE,WAAW,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC;QAC9DA,IAAM,GAAG,GAAG,QAAQ,CAAC,UAAU,CAAC,GAAG,EAAE,WAAW,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC;;QAE9D,OAAO;YACH,GAAG,EAAE,GAAG;YACR,GAAG,EAAE,GAAG;YACR,QAAQ,EAAE,OAAO,CAAC,eAAe;YACjC,YAAY,EAAE,OAAO,CAAC,mBAAmB;SAC5C,CAAC;KACL,CAAA;;IAED,2BAAA,SAAS,uBAAC,KAAK,EAAE;QACbA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,IAAM,YAAY;QAAE,IAAA,QAAQ,oBAAxB;QACJA,IAAM,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,CAAC,CAAC;QAC/C,OAAsC,GAAG,IAAI,CAAC,YAAY,EAAE;QAA/C,IAAA,QAAQ;QAAO,IAAA,QAAQ,WAA9B;QACNC,IAAI,GAAG,GAAG,WAAW,CAAC,QAAQ,EAAE,KAAK,GAAG,YAAY,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;QAC9EA,IAAI,GAAG,GAAG,WAAW,CAAC,QAAQ,EAAE,CAAC,KAAK,GAAG,YAAY,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;;QAE/E,IAAI,OAAO,CAAC,eAAe,KAAK,GAAG,EAAE;YACjC,IAAQ,iBAAiB;YAAE,IAAA,aAAa,yBAAlC;;YAEND,IAAM,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,GAAG,aAAa,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC;YAC5FA,IAAM,SAAS,GAAG,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAC/CA,IAAM,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YAChCC,IAAI,aAAa,GAAG,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACjDA,IAAI,gBAAgB,EAAE,KAAK,CAAC;;YAE5B,IAAI,IAAI,GAAG,aAAa,CAAC,QAAQ,CAAC,IAAI,QAAQ,KAAK,YAAY,EAAE;gBAC7D,QAAQ,GAAG,UAAU,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;gBACzC,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACrD,KAAK,GAAG,CAAC,SAAS,GAAG,CAAC,aAAa,GAAG,CAAC,CAAC,GAAG,gBAAgB,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC3F,GAAG,GAAG,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;gBAChC,GAAG,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC;;aAEpC,MAAM,IAAI,IAAI,GAAG,OAAO,IAAI,QAAQ,KAAK,KAAK,EAAE;gBAC7CA,IAAI,SAAS,GAAG,CAAC,CAAC;;gBAElB,GAAG;oBACC,aAAa,EAAE,CAAC;oBAChB,QAAQ,GAAG,UAAU,CAAC,aAAa,CAAC,CAAC;oBACrC,SAAS,GAAG,CAAC,CAAC;oBACd,KAAK,GAAG,CAAC,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC;oBACpC,GAAG;wBACC,gBAAgB,GAAG,iBAAiB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;wBAC1D,SAAS,EAAE,CAAC;qBACf,QAAQ,SAAS,GAAG,iBAAiB,CAAC,QAAQ,CAAC,CAAC,MAAM,IAAI,KAAK,GAAG,gBAAgB,GAAG,SAAS,EAAE;iBACpG,QAAQ,QAAQ,KAAK,KAAK,IAAI,KAAK,GAAG,gBAAgB,GAAG,SAAS,EAAE;;gBAErE,KAAK,GAAG,CAAC,KAAK,GAAG,gBAAgB,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;gBACnD,IAAI,KAAK,GAAG,CAAC,EAAE;oBACX,GAAG,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC;oBACjC,GAAG,GAAG,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;oBAChC,GAAG,GAAG,QAAQ,CAAC,GAAG,EAAE,UAAU,CAAC,GAAG,EAAE,WAAW,CAAC,GAAG,EAAE,WAAW,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;oBAC7E,GAAG,GAAG,QAAQ,CAAC,GAAG,EAAE,UAAU,CAAC,GAAG,EAAE,WAAW,CAAC,GAAG,EAAE,WAAW,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;iBAChF;aACJ;SACJ;;QAED,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,WAAW,CAAC,GAAG,EAAE,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;QAChE,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,WAAW,CAAC,GAAG,EAAE,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;;QAEhE,IAAI,GAAG,IAAI,GAAG,IAAI,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE;YACtC,OAAO;gBACH,GAAG,EAAE,GAAG;gBACR,GAAG,EAAE,GAAG;gBACR,QAAQ,EAAE,OAAO,CAAC,eAAe;gBACjC,YAAY,EAAE,OAAO,CAAC,mBAAmB;aAC5C,CAAC;SACL;KACJ,CAAA;;IAED,2BAAA,WAAW,2BAAG;QACVD,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;;QAErCA,IAAM,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;QAC3EC,IAAI,GAAG,GAAG,UAAU,CAAC,GAAG,CAAC;;QAEzB,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;YACpB,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;SAClH;;QAED,OAAO;YACH,GAAG,EAAE,GAAG;YACR,GAAG,EAAE,GAAG;SACX,CAAC;KACL,CAAA;;IAED,2BAAA,KAAK,mBAAC,YAAY,EAAE;QAChBD,IAAM,OAAO,GAAG,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC;;QAE7CA,IAAM,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;QACtCA,IAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,KAAK,GAAG,CAAC;QAC1CA,IAAM,QAAQ,GAAG,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC;QAC7DA,IAAM,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,CAAC,CAAC;QAC/CA,IAAM,WAAW,GAAG;YAChB,QAAQ,EAAE,QAAQ;YAClB,YAAY,EAAE,YAAY;YAC1B,YAAY,EAAE,OAAO,CAAC,YAAY;SACrC,CAAC;QACFA,IAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QACvDA,IAAM,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,IAAI,cAAc,CAAC,GAAG,CAAC,CAAC;QACtDA,IAAM,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,IAAI,cAAc,CAAC,GAAG,CAAC,CAAC;;QAEtD,OAAO;YACH,GAAG,EAAE,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,WAAW,EAAE,KAAK,CAAC;YACpD,GAAG,EAAE,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC;SAC5D,CAAC;KACL,CAAA;;IAED,2BAAA,YAAY,0BAAC,OAAO,EAAE;QAClBA,IAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC/DA,IAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,IAAI,cAAc,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,IAAI,cAAc,CAAC,GAAG,CAAC,CAAC;QACnGA,IAAM,aAAa,GAAG,OAAO,CAAC,aAAa,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;QAC1EA,IAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,KAAK,GAAG,CAAC;QAC1CC,IAAI,UAAU,GAAG,CAAC,CAAC;QACnBA,IAAI,QAAQ,GAAG,QAAQ,GAAG,UAAU,CAAC,UAAU,EAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC;QACtEA,IAAI,KAAK,GAAG,IAAI,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC3CA,IAAI,UAAU,GAAG,KAAK,CAAC;QACvBD,IAAM,iBAAiB,GAAG,UAAU;YAChC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,OAAO,CAAC,iBAAiB;SAChE,CAAC;QACFC,IAAI,SAAS,EAAE,IAAI,EAAE,QAAQ,CAAC;;QAE9B,OAAO,CAAC,IAAI,IAAI,KAAK,IAAI,aAAa,EAAE;YACpC,SAAS,GAAG,SAAS,IAAI,iBAAiB,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC9D,QAAQ,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;;YAE7B,IAAI,QAAQ,EAAE;gBACV,IAAI,GAAG,QAAQ,CAAC;gBAChB,KAAK,GAAG,UAAU,GAAG,IAAI,CAAC;aAC7B,MAAM,IAAI,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,EAAE;gBACtC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC,CAAC;gBAC7C,MAAM;aACT,MAAM,IAAI,QAAQ,EAAE;gBACjB,QAAQ,GAAG,UAAU,CAAC,UAAU,EAAE,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC;gBACxD,UAAU,GAAG,IAAI,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC;gBAC5C,SAAS,GAAG,IAAI,CAAC;aACpB,MAAM;gBACH,IAAI,KAAK,GAAG,aAAa,EAAE;oBACvB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC,CAAC;iBAChD;gBACD,MAAM;aACT;SACJ;;QAED,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC;QAC5B,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC/B,CAAA;;IAED,2BAAA,eAAe,6BAAC,OAAO,EAAE;QACrB,IAAQ,UAAU;QAAE,IAAA,QAAQ,oBAAtB;QACND,IAAM,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,CAAC,CAAC;QAC/CA,IAAM,WAAW,GAAG,MAAM,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC;QAC9D,OAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAAhC,IAAA,GAAG;QAAE,IAAA,GAAG,WAAV;QACNA,IAAM,MAAM,GAAG,EAAE,CAAC;QAClBC,IAAI,QAAQ,CAAC;;QAEb,KAAKA,IAAI,IAAI,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,IAAI,GAAG,QAAQ,EAAE;YAC9C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;YAElB,QAAQ,GAAG,WAAW,CAAC,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC;YAC3E,IAAI,QAAQ,GAAG,WAAW,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE;gBACxC,MAAM;aACT;SACJ;;QAED,OAAO,CAAC,aAAa,GAAG,UAAU,CAAC;QACnC,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC;KAC/B,CAAA;;IAED,2BAAA,iBAAiB,+BAAC,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,EAAE;QACtDD,IAAM,OAAO,GAAG,WAAW,IAAI,IAAI,CAAC,OAAO,CAAC;QAC5CA,IAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QAClCA,IAAM,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,CAAC,CAAC;QAC/CA,IAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;;QAEhC,IAAI,KAAK,EAAE;YACPA,IAAM,IAAI,GAAG,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;YAC7DC,IAAI,WAAW,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC7D,IAAI,WAAW,EAAE;gBACb,WAAW,EAAE,CAAC;aACjB;YACD,OAAO,WAAW,CAAC,KAAK,EAAE,WAAW,GAAG,YAAY,EAAE,QAAQ,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC;SACzF;;QAED,OAAO,WAAW,CAAC,KAAK,EAAE,KAAK,GAAG,YAAY,GAAG,CAAC,EAAE,QAAQ,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC;KACvF,CAAA;;IAED,2BAAA,eAAe,6BAAC,KAAK,EAAE,YAAY,EAAE;QACjCD,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,QAAQ,GAAG,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;QACrEA,IAAM,IAAI,GAAG,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACvCA,IAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QAClCA,IAAM,UAAU,GAAG,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACtDC,IAAI,OAAO,GAAG,IAAI,CAAC;;QAEnB,IAAI,OAAO,CAAC,SAAS,EAAE;YACnBD,IAAM,WAAW,GAAG,SAAS,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC;YACpE,OAAO,GAAG,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;SAC3C,MAAM,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;YACjC,OAAO,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;SACjD;;QAED,IAAI,OAAO,EAAE;YACT,YAAY,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,IAAI,UAAU,CAAC;YACxDA,IAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;YAC9D,IAAI,IAAI,EAAE;gBACN,OAAO,IAAI,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;aACnE;SACJ;KACJ,CAAA;;IAED,2BAAA,aAAa,2BAAC,KAAK,EAAE;QACjBA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;QACtCC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;;QAEf,IAAI,UAAU,CAAC,MAAM,EAAE;YACnB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC;SAC5G;;QAED,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,2BAAA,OAAO,qBAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE;QACjBA,IAAI,KAAK,GAAG,CAAC,CAAC;QACdA,IAAI,GAAG,GAAG,CAAC,CAAC;;QAEZ,IAAI,OAAO,KAAK,KAAK,MAAM,EAAE;YACzB,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SACrC;;QAED,IAAI,OAAO,GAAG,KAAK,MAAM,EAAE;YACvB,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;SACjC;;QAED,OAAOW,yBAAK,CAAC,OAAO,KAAA,CAAC,MAAA,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;KAC3C,CAAA;;IAED,2BAAA,UAAU,0BAAG;QACTZ,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC;;QAE/E,OAAO;YACH,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC;YACtB,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC;SACzB,CAAC;KACL,CAAA;;;EArgB0B,YAsgB9B,GAAA;;AAED,iBAAiB,CAAC,gBAAgB,EAAE;IAChC,IAAI,EAAE,IAAI;IACV,MAAM,EAAE;QACJ,WAAW,EAAE,gBAAgB;KAChC;IACD,iBAAiB,EAAE;QACf,YAAY,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE;QAC5B,OAAO,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;QAC5B,OAAO,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;QAC5B,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;QAClB,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;QACjB,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE;QACf,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;QACtB,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;KACpC;IACD,aAAa,EAAE,EAAE;CACpB,CAAC,CAAC,AAEH,AAAgC;;AC1iBjB,SAAS,aAAa,CAAC,GAAG,EAAE,GAAG,EAAE;IAC5CC,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,iBAAiB,GAAG,CAAC,CAAC,CAAC;;IAEnD,IAAI,IAAI,KAAK,CAAC,EAAE;QACZ,IAAI,GAAG,KAAK,CAAC,EAAE;YACX,OAAO,GAAG,CAAC;SACd;;QAED,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KACxB;;IAEDD,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACtEA,IAAM,aAAa,GAAG,KAAK,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE,iBAAiB,CAAC,CAAC;IAC/DC,IAAI,eAAe,GAAG,CAAC,CAAC;;IAExB,IAAI,aAAa,GAAG,QAAQ,EAAE;QAC1B,eAAe,GAAG,GAAG,CAAC;KACzB,MAAM,IAAI,aAAa,GAAG,QAAQ,EAAE;QACjC,eAAe,GAAG,GAAG,CAAC;KACzB,MAAM,IAAI,aAAa,GAAG,QAAQ,EAAE;QACjC,eAAe,GAAG,CAAC,CAAC;KACvB,MAAM;QACH,eAAe,GAAG,CAAC,CAAC;KACvB;;IAED,OAAO,KAAK,CAAC,KAAK,GAAG,eAAe,EAAE,iBAAiB,CAAC,CAAC;;;AC1B9C,SAAS,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE;IAClD,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE;QACd,OAAO,CAAC,CAAC;KACZ;;IAEDA,IAAI,OAAO,CAAC;;IAEZ,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE;QACtBD,IAAM,QAAQ,GAAG,GAAG,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;;QAEvCC,IAAI,IAAI,GAAG,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,GAAG,CAAC;QAClC,IAAI,MAAM,KAAK,KAAK,IAAI,CAAC,CAAC,MAAM,IAAI,IAAI,GAAG,cAAc,CAAC,EAAE;YACxD,OAAO,CAAC,CAAC;SACZ;;QAED,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KAC5D,MAAM;QACH,OAAO,GAAG,GAAG,CAAC;KACjB;;IAED,OAAO,OAAO,CAAC;CAClB;;ACrBc,SAAS,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE;IAClD,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE;QACd,OAAO,CAAC,CAAC;KACZ;;IAEDA,IAAI,OAAO,CAAC;;IAEZ,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE;QACtBD,IAAM,QAAQ,GAAG,GAAG,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;;QAEvCC,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC;QACjD,IAAI,MAAM,KAAK,KAAK,IAAI,CAAC,CAAC,MAAM,IAAI,IAAI,GAAG,cAAc,CAAC,EAAE;YACxD,OAAO,CAAC,CAAC;SACZ;;QAED,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KAC5D,MAAM;QACH,OAAO,GAAG,GAAG,CAAC;KACjB;;IAED,OAAO,OAAO,CAAC;;;ACnBJ,SAAS,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE;IACvC,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,iBAAiB,CAAC,CAAC;CACpE;;ACFc,SAAS,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE;IACtC,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,iBAAiB,CAAC,CAAC;;;ACFrD,SAAS,eAAe,CAAC,KAAK,EAAE;IAC3C,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,gBAAgB,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC;;;ACY1ED,IAAM,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;;AAE7D,IAAM,WAAW,GAAa;IAAC,oBAEhB,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,YAAY,EAAE;QACrDA,IAAM,WAAW,GAAG,eAAe,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QACnEA,IAAM,YAAY,GAAG,gBAAgB,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;;QAE5DY,OAAK,KAAA,CAAC,MAAA,WAAW,CAAC,WAAW,EAAE,OAAO,CAAC,EAAE,YAAY,CAAC,CAAC;;QAEvD,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,GAAG,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,GAAG,CAAC;QACjC,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC,SAAS,CAAC;QAC7C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC9B;;;;oDAAA;;IAED,sBAAA,UAAU,0BAAG;QACT,OAAO,CAAC,CAAC;KACZ,CAAA;;IAED,sBAAA,KAAK,qBAAG;QACJZ,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC;KACjD,CAAA;;IAED,sBAAA,YAAY,0BAAC,SAAS,EAAE;QACpB,IAAI,SAAS,KAAK,CAAC,EAAE;YACjB,OAAO,CAAC,CAAC;SACZ;;QAEDA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,KAAK,GAAG,OAAO,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;;QAExC,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,SAAS,EAAE,eAAe,CAAC,CAAC,GAAG,CAAC,CAAC;KACpE,CAAA;;IAED,sBAAA,gBAAgB,8BAAC,IAAI,EAAE,QAAQ,EAAE;QAC7BA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAQ,QAAQ;QAAE,IAAA,OAAO,mBAAnB;QACNA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC/BA,IAAM,QAAQ,GAAG,QAAQ,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;QAC/DA,IAAM,KAAK,GAAG,OAAO,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;QACxCA,IAAM,KAAK,GAAG,QAAQ,GAAG,KAAK,CAAC;QAC/BA,IAAM,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC;QAC1BA,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC1CA,IAAM,GAAG,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACrDA,IAAM,SAAS,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACpCA,IAAM,SAAS,GAAG,EAAE,CAAC;QACrBC,IAAI,GAAG,GAAG,OAAO,CAAC,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;QAClDA,IAAI,QAAQ,GAAG,CAAC,CAAC;;QAEjB,IAAI,QAAQ,EAAE;YACV,QAAQ,GAAG,QAAQ,GAAG,IAAI,CAAC;SAC9B;;QAED,KAAKA,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,SAAS,EAAE,GAAG,EAAE,EAAE;YACtC,IAAI,GAAG,GAAG,QAAQ,KAAK,CAAC,EAAE;gBACtB,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,eAAe,CAAC,CAAC,CAAC;aAC/C;;YAED,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,CAAC;SAC1B;;QAED,OAAO,SAAS,CAAC;KACpB,CAAA;;IAED,sBAAA,qBAAqB,qCAAG;QACpB,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;KACxD,CAAA;;IAED,sBAAA,qBAAqB,qCAAG;QACpB,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;KACxD,CAAA;;IAED,sBAAA,OAAO,qBAAC,CAAC,EAAE,CAAC,EAAE,KAAa,EAAE;qCAAV,GAAG,KAAK;;QACvBD,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAQ,QAAQ;QAAE,IAAA,OAAO,mBAAnB;QACNA,IAAM,SAAS,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;QACnCA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC/BA,IAAM,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACzDA,IAAM,QAAQ,GAAG,QAAQ,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;QAC/DA,IAAM,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QAC7BA,IAAM,IAAI,GAAG,GAAG,GAAG,CAAC,QAAQ,GAAG,CAAC,OAAO,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5DA,IAAM,OAAO,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;;QAExEC,IAAI,KAAK,GAAG,CAAC,CAAC;QACdA,IAAI,GAAG,GAAG,CAAC,CAAC;;QAEZ,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACjB,KAAK,GAAG,GAAG,IAAI,CAAC,CAAC;SACpB;;QAED,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACf,GAAG,GAAG,KAAK,IAAI,CAAC,CAAC;SACpB;;QAED,IAAI,KAAK,EAAE;YACP,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;YAC5D,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;SAC3D;;QAEDA,IAAI,EAAE,EAAE,EAAE,CAAC;;QAEX,IAAI,QAAQ,EAAE;YACV,EAAE,GAAG,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YACxC,EAAE,GAAG,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;SAC3C,MAAM;YACH,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC;YACxC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC;SAC3C;;QAED,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,eAAe,CAAC,SAAS,GAAG,IAAI,GAAG,CAAC,OAAO,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QACjF,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,eAAe,CAAC,SAAS,GAAG,IAAI,GAAG,CAAC,OAAO,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;;QAEjF,OAAO,OAAO,CAAC;KAClB,CAAA;;IAED,sBAAA,QAAQ,sBAAC,KAAK,EAAE;QACZD,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAQ,QAAQ;QAAE,IAAA,OAAO,mBAAnB;QACNA,IAAM,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAChCA,IAAM,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAChCA,IAAM,SAAS,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;QACnCA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC/BA,IAAM,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACzDA,IAAM,QAAQ,GAAG,QAAQ,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;QAC/DA,IAAM,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QAC7BA,IAAM,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC,CAAC;QACpDA,IAAM,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,QAAQ,CAAC;QACpCA,IAAM,WAAW,GAAG,MAAM,GAAG,IAAI,CAAC;;QAElC,IAAI,MAAM,GAAG,CAAC,IAAI,MAAM,GAAG,QAAQ,EAAE;YACjC,OAAO,IAAI,CAAC;SACf;;QAEDA,IAAM,KAAK,GAAG,QAAQ;gBACd,GAAG,GAAG,WAAW;gBACjB,GAAG,GAAG,WAAW,CAAC;;QAE1B,OAAO,KAAK,CAAC,KAAK,EAAE,iBAAiB,CAAC,CAAC;KAC1C,CAAA;;IAED,sBAAA,cAAc,4BAAC,KAAK,EAAE;QAClBA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAQ,QAAQ;QAAE,IAAA,OAAO;QAAE,IAAA,GAAG;QAAE,IAAA,GAAG,eAA7B;QACNA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC/BA,IAAM,IAAI,GAAG,QAAQ,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;QAC3DA,IAAM,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;QACxBA,IAAM,KAAK,GAAG,IAAI,GAAG,KAAK,CAAC;QAC3BC,IAAI,MAAM,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,EAAE,iBAAiB,CAAC,CAAC;;QAErD,IAAI,CAAC,QAAQ,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,OAAO,EAAE,EAAE;YAClD,MAAM,GAAG,CAAC,MAAM,CAAC;SACpB;;QAED,OAAO;YACH,GAAG,EAAE,GAAG,GAAG,MAAM;YACjB,GAAG,EAAE,GAAG,GAAG,MAAM;SACpB,CAAC;KACL,CAAA;;IAED,sBAAA,UAAU,wBAAC,KAAK,EAAE;QACdD,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,MAAM,GAAG,CAAC,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC;;QAE1C,OAAO;YACH,GAAG,EAAE,OAAO,CAAC,GAAG,GAAG,MAAM;YACzB,GAAG,EAAE,OAAO,CAAC,GAAG,GAAG,MAAM;SAC5B,CAAC;KACL,CAAA;;IAED,sBAAA,WAAW,2BAAG;QACV,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;KACpD,CAAA;;IAED,sBAAA,eAAe,6BAAC,KAAK,EAAE,YAAY,EAAE;QACjCA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,EAAE,iBAAiB,CAAC,CAAC;QAClFA,IAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;;QAE3D,OAAO,IAAI,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;KAChE,CAAA;;IAED,sBAAA,gBAAgB,8BAAC,KAAK,EAAE;QACpBA,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QAC3B,OAAO,KAAK,CAAC,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,CAAC,GAAG,CAAC;KACnD,CAAA;;IAED,sBAAA,GAAG,iBAAC,KAAK,EAAE;QACPA,IAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC9E,CAAA;;IAED,sBAAA,WAAW,yBAAC,KAAK,EAAE,GAAG,EAAE;QACpBA,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACxCA,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACpCA,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAC3CA,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;;QAE3C,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;YAC7B,OAAO;gBACH,GAAG,EAAE,GAAG;gBACR,GAAG,EAAE,GAAG;aACX,CAAC;SACL;KACJ,CAAA;;IAED,sBAAA,SAAS,uBAAC,KAAK,EAAE;QACb,OAA4B,GAAG,IAAI;QAA3B,IAAA,QAAQ;QAAE,IAAA,QAAQ,gBAApB;QACNA,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACxCA,IAAM,GAAG,GAAG,UAAU,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACzDA,IAAM,GAAG,GAAG,UAAU,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;;QAEzD,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;YAC7B,OAAO;gBACH,GAAG,EAAE,GAAG;gBACR,GAAG,EAAE,GAAG;aACX,CAAC;SACL;KACJ,CAAA;;IAED,sBAAA,YAAY,0BAAC,GAAG,EAAE,GAAG,EAAE;QACnB,OAAO,GAAG,GAAG,GAAG,GAAG,eAAe,CAAC;KACtC,CAAA;;;EA9NqB,IA+NzB,GAAA;;AAED,SAAS,eAAe,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE;IACpDA,IAAM,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;;IAExCC,IAAI,OAAO,GAAG,WAAW,CAAC,SAAS,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;IAC7DA,IAAI,OAAO,GAAG,WAAW,CAAC,SAAS,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;;IAE7DD,IAAM,SAAS,GAAG,aAAa,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAClDA,IAAM,WAAW,GAAG;QAChB,SAAS,EAAE,SAAS;KACvB,CAAC;;IAEF,IAAI,OAAO,CAAC,gBAAgB,KAAK,KAAK,EAAE;QACpC,IAAI,OAAO,GAAG,CAAC,IAAI,cAAc,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;YAC1D,OAAO,IAAI,SAAS,CAAC;SACxB;;QAED,IAAI,OAAO,GAAG,CAAC,IAAI,cAAc,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;YAC1D,OAAO,IAAI,SAAS,CAAC;SACxB;KACJ;;IAED,WAAW,CAAC,GAAG,GAAG,KAAK,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IAC5C,WAAW,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;;IAE3C,OAAO,WAAW,CAAC;CACtB;;AAED,SAAS,gBAAgB,CAAC,WAAW,EAAE,OAAO,EAAE;IAC5C,OAAO;QACH,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC,GAAG;QACpF,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC,GAAG;QACpF,SAAS,EAAE,WAAW,CAAC,SAAS;KACnC,CAAC;CACL;;AAED,SAAS,WAAW,CAAC,WAAW,EAAE,WAAW,EAAE;IAC3CC,IAAI,OAAO,GAAG,WAAW,CAAC;IAC1B,IAAI,WAAW,EAAE;QACbD,IAAM,aAAa,GAAG,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAC3E,IAAI,aAAa,EAAE;YACf,IAAI,WAAW,CAAC,GAAG,KAAK,WAAW,CAAC,GAAG,EAAE;gBACrC,IAAI,WAAW,CAAC,GAAG,GAAG,CAAC,EAAE;oBACrB,WAAW,CAAC,GAAG,GAAG,CAAC,CAAC;iBACvB,MAAM;oBACH,WAAW,CAAC,GAAG,GAAG,CAAC,CAAC;iBACvB;aACJ;SACJ;;QAED,IAAI,WAAW,CAAC,SAAS,EAAE;YACvB,WAAW,CAAC,GAAG,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC;YAChE,WAAW,CAAC,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC;SAClE,MAAM,IAAI,aAAa,EAAE;YACtB,OAAO,GAAG,UAAU,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;;;YAG/C,WAAW,CAAC,SAAS,GAAG,aAAa,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;SACnE;KACJ;;IAED,WAAW,CAAC,SAAS,GAAG,CAAC,OAAO,CAAC,SAAS,IAAI,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;;IAEzE,OAAO,UAAU,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;CAC3C;;AAED,SAAS,cAAc,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE;IAC3CA,IAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,OAAO,CAAC,EAAE,iBAAiB,CAAC,CAAC;IACtEA,IAAM,SAAS,GAAG,OAAO,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;;IAExC,OAAO,SAAS,KAAK,CAAC,IAAI,SAAS,GAAG,SAAS,CAAC;CACnD;;AAED,iBAAiB,CAAC,WAAW,EAAE;IAC3B,IAAI,EAAE,SAAS;IACf,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,QAAQ,EAAE,IAAI;IACd,cAAc,EAAE;QACZ,OAAO,EAAE,IAAI;QACb,KAAK,EAAE,CAAC;QACR,KAAK,EAAE,KAAK;KACf;IACD,MAAM,EAAE;QACJ,MAAM,EAAE,wBAAwB;KACnC;IACD,MAAM,EAAE,CAAC;CACZ,CAAC,CAAC,AAEH;;AC5TA,IAAM,aAAa,GAAa;IAAC,sBAClB,CAAC,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,YAAY,EAAE;QACzDA,IAAM,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;QAC9BA,IAAM,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;;QAE9BA,IAAM,WAAW,GAAG,YAAY,CAAC,IAAI,CAAC;QACtCC,IAAI,OAAO,GAAG,WAAW,IAAI,EAAE,CAAC;QAChC,OAAO,GAAG,UAAU,CAAC,OAAO,IAAI,EAAE,EAAE;YAChC,GAAG,EAAE,SAAS,CAAC,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC;YACxC,GAAG,EAAE,SAAS,CAAC,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC;YACxC,iBAAiB,EAAE,UAAU,CAAC,WAAW,EAAE,OAAO,CAAC,kBAAkB,IAAI,OAAO,CAAC,iBAAiB,CAAC;SACtG,CAAC,CAAC;QACH,OAAO,GAAGiB,eAAa,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;;QAE3CN,OAAK,KAAA,CAAC,MAAA,OAAO,EAAE,YAAY,CAAC,CAAC;;QAE7B,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;KACvE;;;;wDAAA;;IAED,wBAAA,KAAK,qBAAG;QACJZ,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC;KACjD,CAAA;;IAED,wBAAA,YAAY,0BAAC,SAAS,EAAE;QACpBA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;;QAE7B,OAAO,IAAI,CAAC,KAAK;YACb,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,QAAQ,CAAC,GAAG,SAAS,GAAG,CAAC;SACvE,CAAC;KACL,CAAA;;IAED,wBAAA,gBAAgB,8BAAC,IAAI,EAAE;QACnBA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QAClCA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC/BA,IAAM,GAAG,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC7DA,IAAM,SAAS,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACpCA,IAAM,KAAK,GAAG,OAAO,CAAC,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;QACtDA,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC1CA,IAAM,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;QACrDA,IAAM,QAAQ,GAAG,QAAQ,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;QAC/DA,IAAM,KAAK,GAAG,QAAQ,GAAG,SAAS,CAAC;;QAEnCA,IAAM,SAAS,GAAG,EAAE,KAAK,EAAE,CAAC;QAC5B,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;YAChCD,IAAM,IAAI,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;YAClEA,IAAM,GAAG,GAAG,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC;;YAE9D,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,eAAe,CAAC,CAAC,CAAC;SAC/C;;QAED,OAAO,SAAS,CAAC;KACpB,CAAA;;IAED,wBAAA,qBAAqB,qCAAG;QACpB,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;KACxD,CAAA;;IAED,wBAAA,qBAAqB,qCAAG;QACpB,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;KACxD,CAAA;;IAED,wBAAA,OAAO,qBAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE;QACjB,OAAO,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI;YACrC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK;SACpC,CAAC;KACL,CAAA;;IAED,wBAAA,QAAQ,sBAAC,KAAK,EAAE;QACZA,IAAM,KAAK,GAAG,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;;QAE/D,OAAO,KAAK,KAAK,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;KAChD,CAAA;;IAED,wBAAA,WAAW,2BAAG;QACV,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;KACpD,CAAA;;IAED,wBAAA,eAAe,6BAAC,KAAK,EAAE,YAAY,EAAE;QACjCA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,MAAM,GAAG,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC;QACzCC,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC;;QAEvB,IAAI,MAAM,GAAG,CAAC,EAAE;YACZ,IAAI,GAAG,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;SACtD;;QAEDD,IAAM,UAAU,GAAG,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC9D,YAAY,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,IAAI,UAAU,CAAC;;QAExDA,IAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;QAC1D,OAAO,IAAI,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;KAC/D,CAAA;;IAED,wBAAA,cAAc,4BAAC,KAAK,EAAE,KAAK,EAAE;QACzBA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAQ,QAAQ;QAAE,IAAA,YAAY,wBAAxB;QACNA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC/BA,IAAM,IAAI,GAAG,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;QACnEA,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QAC3BA,IAAM,KAAK,GAAG,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;QACpDA,IAAM,MAAM,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,EAAE,iBAAiB,CAAC,CAAC;QACvDC,IAAI,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACzCA,IAAI,EAAE,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;;QAEvC,IAAI,CAAC,KAAK,EAAE;YACR,IAAI,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;YACpD,EAAE,GAAG,WAAW,CAAC,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;SACnD;;QAED,OAAO;YACH,GAAG,EAAE,IAAI;YACT,GAAG,EAAE,EAAE;SACV,CAAC;KACL,CAAA;;IAED,wBAAA,UAAU,wBAAC,KAAK,EAAE;QACd,OAA0B,GAAG,IAAI,CAAC,OAAO;QAA9B,IAAA,IAAI;QAAO,IAAA,EAAE,WAApB;QACJA,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;;QAE7B,OAAO,MAAM,EAAE,EAAE;YACbD,IAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YACjCA,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;YACrC,IAAI,KAAK,GAAG,CAAC,EAAE;gBACX,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC5B,EAAE,GAAG,QAAQ,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;aAC5B,MAAM;gBACH,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;gBAC7B,EAAE,GAAG,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;aAC3B;SACJ;;QAED,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC;KACjC,CAAA;;IAED,wBAAA,gBAAgB,8BAAC,KAAK,EAAE;QACpBA,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;;QAE3B,OAAO,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KACrF,CAAA;;IAED,wBAAA,GAAG,iBAAC,KAAK,EAAE;QACPA,IAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAC/CA,IAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;;QAE1G,IAAI,aAAa,EAAE;YACf,OAAO;gBACH,GAAG,EAAE,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC;gBAC9B,GAAG,EAAE,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC;aACjC,CAAC;SACL;KACJ,CAAA;;IAED,wBAAA,WAAW,yBAAC,KAAK,EAAE,GAAG,EAAE;QACpBA,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACxCA,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACpCA,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAC3CA,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;;QAE3C,OAAO;YACH,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC;YAChB,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC;SACnB,CAAC;KACL,CAAA;;IAED,wBAAA,SAAS,uBAAC,KAAK,EAAE;QACbA,IAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACrCA,IAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QAChFA,IAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;;QAEhF,OAAO;YACH,GAAG,EAAE,GAAG;YACR,GAAG,EAAE,GAAG;SACX,CAAC;KACL,CAAA;;;EAlLuB,IAmL3B,GAAA;;AAED,SAAS,SAAS,CAAC,KAAK,EAAE;IACtBC,IAAI,IAAI,GAAG,KAAK,CAAC;;IAEjB,IAAI,KAAK,IAAI,aAAa,EAAE;QACxB,IAAI,GAAG,KAAK,CAAC;KAChB,MAAM,IAAI,KAAK,IAAI,cAAc,EAAE;QAChC,IAAI,GAAG,MAAM,CAAC;KACjB,MAAM,IAAI,KAAK,IAAI,aAAa,EAAE;QAC/B,IAAI,GAAG,KAAK,CAAC;KAChB,MAAM,IAAI,KAAK,IAAI,YAAY,EAAE;QAC9B,IAAI,GAAG,IAAI,CAAC;KACf;;IAED,OAAO,IAAI,CAAC;CACf;;AAED,SAASiB,eAAa,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE;IAClDlB,IAAM,GAAG,GAAG,OAAO,CAAC,GAAG,IAAI,SAAS,CAAC;IACrCA,IAAM,GAAG,GAAG,OAAO,CAAC,GAAG,IAAI,SAAS,CAAC;IACrCA,IAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,CAAC,GAAG,IAAI,GAAG,GAAG,SAAS,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;IAClGA,IAAM,YAAY,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC;IAC7CA,IAAM,OAAO,GAAG,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC;IACpEA,IAAM,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,CAAC;IACpDA,IAAM,aAAa,GAAG,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;IACxEA,IAAM,SAAS,GAAG,aAAa,IAAI,IAAI;wBACnB,aAAa,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC;wBACnD,YAAY;qBACf,GAAG,YAAY,CAAC;IACjCA,IAAM,WAAW,GAAG,QAAQ,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;IACzDA,IAAM,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;IAChDA,IAAM,UAAU,GAAG,UAAU,GAAG,WAAW,CAAC;IAC5CA,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;IACxCA,IAAM,IAAI,GAAG,UAAU,GAAG,IAAI,CAAC;;IAE/B,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;QACnB,OAAO,OAAO,CAAC,QAAQ,CAAC;KAC3B;;IAED,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,QAAQ,CAAC;IAChD,OAAO,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,IAAI,WAAW,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IACnE,OAAO,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,IAAI,WAAW,CAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;IAClE,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,SAAS,GAAG,CAAC,CAAC;IACvD,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;;IAE9B,OAAO,OAAO,CAAC;CAClB;;AAED,iBAAiB,CAAC,aAAa,EAAE;IAC7B,IAAI,EAAE,IAAI;IACV,cAAc,EAAE;QACZ,OAAO,EAAE,IAAI;QACb,KAAK,EAAE,CAAC;QACR,KAAK,EAAE,KAAK;KACf;IACD,MAAM,EAAE;QACJ,WAAW,EAAE,gBAAgB;KAChC;CACJ,CAAC,CAAC,AAEH;;AClPAA,IAAM,kBAAkB,GAAG,EAAE,CAAC;;AAE9B,IAAM,eAAe,GAAa;IAAC,wBACpB,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,YAAY,EAAE;;QAErDA,IAAM,WAAW,GAAG,UAAU,CAAC,EAAE,SAAS,EAAE,kBAAkB,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,EAAE,OAAO,CAAC,CAAC;QAC3GA,IAAM,IAAI,GAAG,WAAW,CAAC,SAAS,CAAC;QACnCA,IAAM,OAAO,GAAGmB,aAAW,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAC7CnB,IAAM,OAAO,GAAGoB,aAAW,CAAC,SAAS,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;QAC/DpB,IAAM,KAAK,GAAG,SAAS,CAAC,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;;QAEhE,WAAW,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;QAC5B,WAAW,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;QAC5B,WAAW,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,KAAK,CAAC,IAAI,GAAG,CAAC,EAAE,iBAAiB,CAAC,CAAC;;QAEhFY,OAAK,KAAA,CAAC,MAAA,WAAW,EAAE,YAAY,CAAC,CAAC;;QAEjC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;QAChF,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;QAChF,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,iBAAiB,CAAC,CAAC;QAC7D,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,iBAAiB,CAAC,CAAC;QAC7D,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;;QAE3B,IAAI,CAAC,YAAY,EAAE,CAAC;KACvB;;;;4DAAA;;IAED,0BAAA,UAAU,0BAAG;QACT,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;KAC3B,CAAA;;IAED,0BAAA,OAAO,qBAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE;QACjB,OAAiC,GAAG,IAAI;QAAhC,IAAA,OAAO;QAAE,IAAA,MAAM;QAAE,IAAA,MAAM,cAAzB;QACN,IAAQ,OAAO;QAAE,IAAA,QAAQ;QAAa,IAAA,IAAI,qBAApC;QACNZ,IAAM,SAAS,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;QACnCA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC/BA,IAAM,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACzDA,IAAM,QAAQ,GAAG,QAAQ,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;QAC/DA,IAAM,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QAC7BA,IAAM,IAAI,GAAG,GAAG,GAAG,CAAC,QAAQ,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;QAClDA,IAAM,OAAO,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;QACxEC,IAAI,KAAK,GAAG,CAAC,CAAC;QACdA,IAAI,GAAG,GAAG,CAAC,CAAC;;QAEZ,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACjB,KAAK,GAAG,GAAG,IAAI,CAAC,CAAC;SACpB;;QAED,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACf,GAAG,GAAG,KAAK,IAAI,CAAC,CAAC;SACpB;;QAED,IAAI,KAAK,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE;YACxB,OAAO,IAAI,CAAC;SACf;;QAED,IAAI,KAAK,EAAE;YACP,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;YAC5D,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;SAC3D;;QAED,KAAK,GAAG,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QACzB,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;;QAErBA,IAAI,EAAE,EAAE,EAAE,CAAC;;QAEX,IAAI,QAAQ,EAAE;YACV,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YACnC,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;SACtC,MAAM;YACH,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,MAAM,CAAC;YACnC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,MAAM,CAAC;SACtC;;QAED,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,eAAe,CAAC,SAAS,GAAG,IAAI,GAAG,CAAC,OAAO,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QACjF,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,eAAe,CAAC,SAAS,GAAG,IAAI,GAAG,CAAC,OAAO,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;;QAEjF,OAAO,OAAO,CAAC;KAClB,CAAA;;IAED,0BAAA,QAAQ,sBAAC,KAAK,EAAE;QACZ,OAAiC,GAAG,IAAI;QAAhC,IAAA,OAAO;QAAE,IAAA,MAAM;QAAE,IAAA,MAAM,cAAzB;QACN,IAAQ,OAAO;QAAE,IAAA,QAAQ;QAAa,IAAA,IAAI,qBAApC;QACND,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC/BA,IAAM,GAAG,GAAG,QAAQ,KAAK,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAC1CA,IAAM,SAAS,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACpCA,IAAM,QAAQ,GAAG,QAAQ,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;QAC/DA,IAAM,IAAI,GAAG,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,QAAQ,CAAC,CAAC;QAC5CA,IAAM,SAAS,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;QACnCA,IAAM,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC;QACjDA,IAAM,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC,CAAC;QACpDA,IAAM,WAAW,GAAG,MAAM,GAAG,IAAI,CAAC;;QAElC,IAAI,MAAM,GAAG,CAAC,IAAI,MAAM,GAAG,QAAQ,EAAE;YACjC,OAAO,IAAI,CAAC;SACf;;QAEDA,IAAM,KAAK,GAAG,MAAM,GAAG,WAAW,CAAC;;QAEnC,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,iBAAiB,CAAC,CAAC;KAC1D,CAAA;;IAED,0BAAA,KAAK,qBAAG;QACJA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC;KACjD,CAAA;;IAED,0BAAA,UAAU,wBAAC,KAAK,EAAE;QACdA,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QACpCA,IAAM,MAAM,GAAG,CAAC,KAAK,CAAC;;QAEtB,OAAO;YACH,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACzC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SAC5C,CAAC;KACL,CAAA;;IAED,0BAAA,cAAc,4BAAC,KAAK,EAAE;QAClB,OAAiC,GAAG,IAAI;QAAhC,IAAA,OAAO;QAAE,IAAA,MAAM;QAAE,IAAA,MAAM,cAAzB;QACN,IAAQ,OAAO;QAAE,IAAA,QAAQ;QAAa,IAAA,IAAI,qBAApC;QACNA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC/BA,IAAM,IAAI,GAAG,QAAQ,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;QAC3DA,IAAM,KAAK,GAAG,IAAI,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC;QACvCC,IAAI,MAAM,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,EAAE,iBAAiB,CAAC,CAAC;;QAErD,IAAI,CAAC,QAAQ,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,OAAO,EAAE,EAAE;YAClD,MAAM,GAAG,CAAC,MAAM,CAAC;SACpB;;QAED,OAAO;YACH,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,GAAG,MAAM,CAAC;YACpC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,GAAG,MAAM,CAAC;SACvC,CAAC;KACL,CAAA;;IAED,0BAAA,WAAW,2BAAG;QACVD,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACzCA,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;;QAErD,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,0BAAA,qBAAqB,qCAAG;QACpBA,IAAM,KAAK,GAAG,EAAE,CAAC;;QAEjB,IAAI,CAAC,2BAA2B,CAAC,UAAC,QAAQ,EAAE;YACxC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACxB,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;;QAEzB,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,0BAAA,WAAW,yBAAC,SAAS,EAAE;QACnBA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAQ,UAAU;QAAE,IAAA,UAAU;QAAE,IAAA,QAAQ,oBAAlC;QACNA,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;QACrCA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC/BA,IAAM,KAAK,GAAG,EAAE,CAAC;QACjBA,IAAM,eAAe,GAAG;;;YAGpB,QAAQ,EAAE,QAAQ;SACrB,CAAC;;QAEF,SAAS,MAAM,CAAC,YAAY,EAAE,WAAW,EAAE;YACvC,eAAe,CAAC,KAAK,GAAG,MAAM,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,GAAG,WAAW,CAAC,IAAI,CAAC;YAC5E,eAAe,CAAC,KAAK,GAAG,MAAM,GAAG,OAAO,CAAC,EAAE,GAAG,WAAW,CAAC,IAAI,GAAG,OAAO,CAAC,EAAE,CAAC;YAC5E,eAAe,CAAC,QAAQ,GAAG,YAAY,CAAC;;YAExC,SAAS,CAAC,MAAM,CAAC,cAAc,CAAC,eAAe,EAAE,WAAW,CAAC,CAAC,CAAC;SAClE;;QAED,IAAI,UAAU,CAAC,OAAO,EAAE;YACpB,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;SACxD;;QAED,IAAI,UAAU,CAAC,OAAO,EAAE;YACpB,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;SACxD;;QAED,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,0BAAA,eAAe,6BAAC,OAAO,EAAE;QACrBA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAQ,cAAc;QAAE,IAAA,cAAc;QAAE,IAAA,QAAQ,oBAA1C;QACNA,IAAM,OAAO,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;QAClCA,IAAM,WAAW,GAAG;YAChB,SAAS,EAAE,OAAO,CAAC,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC;YAC1C,OAAO,EAAE,OAAO,CAAC,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC;YACxC,QAAQ,EAAE,QAAQ;SACrB,CAAC;QACFA,IAAM,UAAU,GAAG,EAAE,CAAC;;QAEtBA,IAAM,SAAS,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACzC,SAAS,MAAM,CAAC,YAAY,EAAE,QAAQ,EAAE;YACpC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC,EAAE;gBACpC,WAAW,CAAC,QAAQ,GAAG,YAAY,CAAC;gBACpC,SAAS,CAAC,MAAM,CAAC,kBAAkB,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC;;gBAE5D,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aACjC;SACJ;;QAED,IAAI,cAAc,CAAC,OAAO,EAAE;YACxB,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;SAC5D;;QAED,IAAI,cAAc,CAAC,OAAO,EAAE;YACxB,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;SAC5D;;QAED,OAAO,SAAS,CAAC,QAAQ,CAAC;KAC7B,CAAA;;IAED,0BAAA,2BAA2B,yCAAC,QAAQ,EAAE,WAAW,EAAE;QAC/C,OAAyB,GAAG,IAAI,CAAC,YAAY,EAAE;QAAvC,IAAA,SAAS;QAAE,IAAA,IAAI,YAAjB;QACN,SAAwB,GAAG,IAAI;QAAvB,IAAA,MAAM;QAAE,IAAA,MAAM,gBAAhB;;QAEN,KAAKC,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,WAAW,CAAC,IAAI,EAAE,KAAK,IAAI,MAAM,EAAE,KAAK,IAAI,WAAW,CAAC,IAAI,EAAE;YAC/FA,IAAI,QAAQ,GAAG,KAAK,CAAC,SAAS,GAAG,IAAI,GAAG,CAAC,KAAK,GAAG,MAAM,CAAC,EAAE,iBAAiB,CAAC,CAAC;YAC7E,QAAQ,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;SACnC;KACJ,CAAA;;IAED,0BAAA,2BAA2B,yCAAC,QAAQ,EAAE,WAAW,EAAE;;;QAC/C,OAA8C,GAAG,IAAI,CAAC,OAAO;QAArD,IAAA,GAAG;QAAE,IAAA,GAAG;QAAE,IAAA,SAAS;QAAa,IAAA,IAAI,iBAAtC;QACN,SAAyB,GAAG,IAAI,CAAC,YAAY,EAAE;QAAvC,IAAA,SAAS;QAAE,IAAA,IAAI,cAAjB;QACN,SAAwB,GAAG,IAAI;QAAvB,IAAA,MAAM;QAAE,IAAA,MAAM,gBAAhB;QACND,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;;QAEjC,KAAKC,IAAI,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,MAAM,EAAE,KAAK,EAAE,EAAE;YAC7CD,IAAM,YAAY,GAAGQ,MAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;YACvD,KAAKP,IAAI,GAAG,GAAG,WAAW,CAAC,IAAI,EAAE,GAAG,GAAG,SAAS,EAAE,GAAG,IAAI,WAAW,CAAC,IAAI,EAAE;gBACvED,IAAM,KAAK,GAAG,YAAY,CAAC,KAAK,GAAG,GAAG,GAAG,YAAY,CAAC,SAAS,CAAC;gBAChE,IAAI,KAAK,GAAG,GAAG,EAAE;oBACb,MAAM;iBACT;gBACD,IAAI,KAAK,IAAI,GAAG,EAAE;oBACdA,IAAM,QAAQ,GAAG,KAAK,CAAC,SAAS,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,EAAE,iBAAiB,CAAC,CAAC;oBAC1F,QAAQ,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;iBACnC;aACJ;SACJ;KACJ,CAAA;;IAED,0BAAA,eAAe,6BAAC,KAAK,EAAE,YAAY,EAAE;QACjCA,IAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;QAC7CA,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QACtDA,IAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;;QAE3D,OAAO,IAAI,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;KAChE,CAAA;;IAED,0BAAA,gBAAgB,8BAAC,KAAK,EAAE;QACpBA,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QAC3B,OAAO,KAAK,CAAC,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,CAAC,GAAG,CAAC;KACnD,CAAA;;IAED,0BAAA,GAAG,iBAAC,KAAK,EAAE;QACPA,IAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC;KACtF,CAAA;;IAED,0BAAA,WAAW,yBAAC,KAAK,EAAE,GAAG,EAAE;QACpBA,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACxCA,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACpCA,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAC3CA,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;;QAE3C,OAAO;YACH,GAAG,EAAE,GAAG;YACR,GAAG,EAAE,GAAG;SACX,CAAC;KACL,CAAA;;IAED,0BAAA,SAAS,uBAAC,KAAK,EAAE;QACb,OAAqC,GAAG,IAAI;QAApC,IAAA,OAAO;QAAE,IAAA,QAAQ;QAAE,IAAA,QAAQ,gBAA7B;QACNA,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACxCA,IAAM,GAAG,GAAG,UAAU,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACzDA,IAAM,GAAG,GAAG,UAAU,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACzDA,IAAM,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC;QAC/BA,IAAM,kBAAkB,GAAG,GAAG,GAAG,GAAG,IAAI,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC;QACtJA,IAAM,cAAc,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,KAAK,QAAQ,IAAI,OAAO,CAAC,GAAG,KAAK,QAAQ,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,iBAAiB,CAAC,IAAI,CAAC,CAAC;;QAEjJ,IAAI,kBAAkB,IAAI,cAAc,EAAE;YACtC,OAAO;gBACH,GAAG,EAAE,GAAG;gBACR,GAAG,EAAE,GAAG;aACX,CAAC;SACL;KACJ,CAAA;;IAED,0BAAA,qBAAqB,mCAAC,KAAK,EAAE;QACzB,OAAoC,GAAG,IAAI,CAAC,OAAO;QAA3C,IAAA,SAAS;QAAa,IAAA,IAAI,iBAA5B;QACNA,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACpCA,IAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;QAC5CA,IAAM,UAAU,GAAG,SAAS,GAAG,KAAK,CAAC;QACrCA,IAAM,SAAS,GAAG,UAAU,GAAG,SAAS,CAAC;;QAEzC,OAAO;YACH,KAAK,EAAE,KAAK;YACZ,SAAS,EAAE,SAAS;SACvB,CAAC;KACL,CAAA;;IAED,0BAAA,YAAY,4BAAG;QACX,OAA2B,GAAG,IAAI,CAAC,OAAO;QAAlC,IAAA,OAAO;QAAE,IAAA,QAAQ,gBAAnB;QACNA,IAAM,SAAS,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;QACnCA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC/BA,IAAM,GAAG,GAAG,QAAQ,KAAK,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAC1CA,IAAM,SAAS,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACpCA,IAAM,QAAQ,GAAG,QAAQ,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;QAC/DA,IAAM,IAAI,GAAG,GAAG,GAAG,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAC5DA,IAAM,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC;;QAEjD,OAAO;YACH,IAAI,EAAE,IAAI;YACV,SAAS,EAAE,SAAS;YACpB,OAAO,EAAE,OAAO;SACnB,CAAC;KACL,CAAA;;;EA/TyB,IAgU7B,GAAA;;AAED,SAAS,SAAS,CAAC,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,OAAO,EAAE;IACvD,IAAM,GAAG;IAAE,IAAA,GAAG,mBAAV;;IAEJ,IAAI,OAAO,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,WAAW,CAAC,iBAAiB,IAAI,CAAC,EAAE;QAC9E,wBAAwB,EAAE,CAAC;KAC9B;;IAED,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QACvB,GAAG,GAAG,OAAO,CAAC;KACjB,MAAM,IAAI,OAAO,CAAC,GAAG,IAAI,CAAC,EAAE;QACzB,wBAAwB,EAAE,CAAC;KAC9B;;IAED,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QACvB,GAAG,GAAG,OAAO,CAAC;KACjB,MAAM,IAAI,OAAO,CAAC,GAAG,IAAI,CAAC,EAAE;QACzB,wBAAwB,EAAE,CAAC;KAC9B;;IAED,OAAO;QACH,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,GAAG;KACX,CAAC;CACL;;AAED,SAASoB,aAAW,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE;IACpCpB,IAAM,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC;IAC/BC,IAAI,OAAO,GAAG,GAAG,CAAC;IAClB,IAAI,GAAG,IAAI,CAAC,EAAE;QACV,OAAO,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KAC/C,MAAM,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;QAC7B,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;KACxD;IACD,OAAO,OAAO,CAAC;CAClB;;AAED,SAASkB,aAAW,CAAC,GAAG,EAAE,IAAI,EAAE;IAC5BnB,IAAM,eAAe,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,iBAAiB,CAAC,GAAG,CAAC,CAAC;IACrEC,IAAI,OAAO,CAAC;IACZ,IAAI,GAAG,IAAI,CAAC,EAAE;QACV,OAAO,GAAG,IAAI,CAAC;KAClB,MAAM,IAAI,eAAe,KAAK,CAAC,IAAI,CAAC,eAAe,GAAG,GAAG,IAAI,eAAe,GAAG,GAAG,CAAC,EAAE;QAClF,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;KAClD,MAAM;QACH,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;KACvD;;IAED,OAAO,OAAO,CAAC;CAClB;;AAED,SAAS,wBAAwB,GAAG;IAChC,MAAM,IAAI,KAAK,CAAC,2DAA2D,CAAC,CAAC;CAChF;;AAED,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE;IACf,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;CACpC;;AAED,iBAAiB,CAAC,eAAe,EAAE;IAC/B,IAAI,EAAE,KAAK;IACX,SAAS,EAAE,kBAAkB;IAC7B,SAAS,EAAE,CAAC;IACZ,iBAAiB,EAAE,CAAC;IACpB,QAAQ,EAAE,IAAI;IACd,cAAc,EAAE;QACZ,OAAO,EAAE,IAAI;QACb,KAAK,EAAE,CAAC;QACR,KAAK,EAAE,KAAK;KACf;IACD,MAAM,EAAE,CAAC;IACT,YAAY,EAAE,IAAI;CACrB,CAAC,CAAC,AAEH;;ACrZAD,IAAM,cAAc,GAAG;IACnB,eAAe,EAAE,SAAS,OAAO,EAAE;QAC/BA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACpEC,IAAI,SAAS,GAAG,EAAE,CAAC;QACnBA,IAAI,SAAS,GAAG,KAAK,CAAC;QACtBA,IAAI,WAAW,EAAE,WAAW,CAAC;;QAE7B,IAAI,OAAO,CAAC,cAAc,CAAC,OAAO,EAAE;YAChC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;YAChD,SAAS,GAAG,IAAI,CAAC;;YAEjB,SAAS,GAAG,IAAI,CAAC,oBAAoB;gBACjC,WAAW,EAAE,MAAM,EAAE,OAAO,CAAC,cAAc;aAC9C,CAAC;SACL;;QAED,IAAI,OAAO,CAAC,cAAc,CAAC,OAAO,EAAE;YAChC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;;YAE3DQ,QAAM,CAAC,SAAS,EAAE,IAAI,CAAC,oBAAoB;gBACvC,WAAW,EAAE,MAAM,EAAE,OAAO,CAAC,cAAc,EAAE,OAAO,EAAE,SAAS;aAClE,CAAC,CAAC;SACN;;QAED,OAAO,SAAS,CAAC;KACpB;;IAED,oBAAoB,EAAE,SAAS,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE;QACpD,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;KACxD;;IAED,oBAAoB,EAAE,SAAS,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE;QACxET,IAAM,cAAc,GAAG,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;QAC9F,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;KACxE;;IAED,eAAe,EAAE,SAAS,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,cAAc,EAAE;QAC/DA,IAAM,KAAK,GAAG;YACV,MAAM,EAAE;gBACJ,KAAK,EAAE,OAAO,CAAC,KAAK;gBACpB,KAAK,EAAE,OAAO,CAAC,KAAK;gBACpB,QAAQ,EAAE,OAAO,CAAC,QAAQ;aAC7B;SACJ,CAAC;;QAEFA,IAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QACjCA,IAAM,MAAM,GAAG,IAAIc,+BAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;QAC/Dd,IAAM,SAAS,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;;QAEzC,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpCD,IAAM,IAAI,GAAG,IAAIe,8BAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAClC,IAAI,cAAc,EAAE;gBAChB,MAAM,CAAC,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;aAC7C;;YAED,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;iBACrB,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;;YAE7C,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC1B;;QAED,OAAO,SAAS,CAAC,QAAQ,CAAC;KAC7B;;IAED,cAAc,EAAE,SAAS,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE;;;QAC5Df,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;QAC1DA,IAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;QAChCA,IAAM,cAAc,GAAG,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,CAAC;;QAEjF,OAAO,GAAG,CAAC,IAAI,EAAE,UAAC,CAAC,EAAE;YACjBA,IAAM,KAAK,GAAGQ,MAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;;YAEpC,IAAI,CAAC,cAAc,IAAI,KAAK,KAAK,EAAE,EAAE;gBACjC,OAAO,KAAK,CAAC;aAChB;SACJ,CAAC,CAAC;KACN;CACJ,CAAC,AAEF;;ACzEA,IAAM,iBAAiB,GAAqB;IAAC;;;;;;;;IAAA,4BACzC,KAAK,qBAAG;QACJ,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;KAC1D,CAAA;;IAED,4BAAA,MAAM,oBAAC,GAAG,EAAE;QACR,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,YAAY,EAAE,CAAC;KACvB,CAAA;;IAED,4BAAA,OAAO,uBAAG;QACN,OAAO,IAAI,CAAC,GAAG,CAAC;KACnB,CAAA;;IAED,4BAAA,YAAY,4BAAG;;;QACX,OAAmD,GAAG,IAAI;QAAlD,IAAA,MAAM;QAAqB,IAAA,YAAY,sBAAzC;QACNR,IAAM,IAAI,GAAG,YAAY,CAAC,IAAI,IAAI,CAAC,CAAC;QACpCA,IAAM,IAAI,GAAG,YAAY,CAAC,IAAI,IAAI,CAAC,CAAC;QACpCA,IAAM,UAAU,GAAG,IAAI,GAAG,EAAE,CAAC;;QAE7B,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAC7BD,IAAM,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;;YAE/B,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAACQ,MAAI,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,WAAW;gBACtD,CAAC,EAAE,QAAQ,CAAC,KAAK,EAAE,EAAE,QAAQ,CAAC,MAAM,EAAE;aACzC,CAAC,CAAC;SACN;KACJ,CAAA;;IAED,4BAAA,SAAS,uBAAC,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,UAAkB,EAAE;+CAAV,GAAG,KAAK;;QACtDR,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC;QAC7CA,IAAM,QAAQ,GAAG,UAAU,GAAG,IAAI,IAAI,CAAC,CAAC;QACxCA,IAAM,QAAQ,GAAG,GAAG,GAAG,QAAQ,CAAC;QAChCA,IAAM,IAAI,GAAG,UAAU,IAAI,CAAC,CAAC;QAC7BA,IAAM,IAAI,GAAG,UAAU,IAAI,CAAC,CAAC;QAC7BA,IAAM,IAAI,GAAG,EAAE,CAAC;QAChBC,IAAI,KAAK,GAAG,CAAC,CAAC;;QAEd,KAAKA,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,IAAI,IAAI,EAAE;YACxC,IAAI,OAAO,CAAC,OAAO,EAAE;gBACjB,KAAK,GAAG,GAAG,GAAG,CAAC,GAAG,QAAQ,CAAC;aAC9B,MAAM;gBACH,KAAK,GAAG,CAAC,GAAG,QAAQ,CAAC;aACxB;;YAED,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,eAAe,CAAC,GAAG,GAAG,CAAC;;YAE5C,IAAI,CAAC,CAAC,UAAU,IAAI,OAAO,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,EAAE;gBAC7C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACpB;SACJ;;QAED,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,4BAAA,cAAc,8BAAG;QACb,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;KAC5B,CAAA;;IAED,4BAAA,cAAc,8BAAG;QACb,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;KAC9B,CAAA;;IAED,4BAAA,aAAa,2BAAC,QAAQ,EAAE;QACpB,OAAO,CAAC,GAAG,GAAG,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;KAC3D,CAAA;;IAED,4BAAA,WAAW,2BAAG;;;QACV,OAAO,GAAG,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,UAAC,QAAQ,EAAE,SAAGO,MAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAA,CAAC,CAAC;KACjF,CAAA;;IAED,4BAAA,UAAU,0BAAG;QACT,OAAO,EAAE,CAAC;KACb,CAAA;;IAED,4BAAA,mBAAmB,iCAAC,OAAO,EAAE;QACzBR,IAAM,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;QACnD,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC,EAAE,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,IAAI,CAAC,CAAC;KACpF,CAAA;;IAED,4BAAA,mBAAmB,iCAAC,OAAO,EAAE,SAAS,EAAE;QACpC,OAAwC,GAAG,IAAI,CAAC,OAAO;QAA/C,IAAA,cAAc;QAAE,IAAA,cAAc,sBAAhC;QACNA,IAAM,mBAAmB,GAAG,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;;QAE3G,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,GAAG,EAAE,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;KAC3G,CAAA;;IAED,4BAAA,cAAc,4BAAC,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE;QACvC,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,KAAK,GAAG,EAAE;YAC9BA,IAAM,UAAU,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACnEA,IAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC;YAClDA,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;;YAEvCA,IAAM,cAAc,GAAG,SAAS,KAAK,EAAE;gBACnC,IAAI,CAAC,SAAS,IAAI,OAAO,CAAC,KAAK,EAAE,WAAW,CAAC,EAAE;oBAC3C,OAAO,MAAM,CAAC;iBACjB;;gBAED,OAAO,WAAW,CAAC;aACtB,CAAC;YACF,OAAO,cAAc,CAAC;SACzB;KACJ,CAAA;;IAED,4BAAA,eAAe,+BAAG;;;QACdA,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,EAAE,CAAC;;QAE/CA,IAAM,KAAK,GAAG,IAAI,CAAC,cAAc,GAAG,IAAIe,8BAAI,CAAC,KAAK,CAAC;YAC/C,MAAM,EAAE,CAAC,CAAC;SACb,CAAC,CAAC;;QAEH,KAAKd,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvCD,IAAM,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC1BA,IAAM,IAAI,GAAGQ,MAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACrCR,IAAM,UAAU,GAAGQ,MAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;YAE3CR,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC/C,IAAI,CAAC,UAAU,IAAI,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC;;YAE3CA,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;YAC1C,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC;;YAE/CA,IAAM,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE;gBAC/C,IAAI,EAAE;oBACF,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,OAAO,EAAE,IAAI,CAAC,OAAO;iBACxB;gBACD,MAAM,EAAE;oBACJ,OAAO,EAAE,IAAI,CAAC,OAAO;iBACxB;aACJ,CAAC,CAAC;YACH,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACtB;;QAED,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;KAC5B,CAAA;;IAED,4BAAA,YAAY,0BAAC,IAAI,EAAE;QACf,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;KAC/C,CAAA;;IAED,4BAAA,OAAO,qBAAC,IAAI,EAAE,EAAE,EAAE;QACdA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;QACpCA,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACrBA,IAAM,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAChCA,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9BA,IAAM,SAAS,GAAG,GAAG,GAAG,SAAS,CAAC;QAClCC,IAAI,SAAS,GAAG,IAAI,CAAC;;QAErB,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,SAAS,EAAE;YAC/B,SAAS,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;SAC3C;;QAED,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,SAAS,GAAG,CAAC,CAAC,CAAC;QAChEA,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;;QAEhC,IAAI,SAAS,EAAE;YACX,SAAS,GAAG,SAAS,GAAG,SAAS,GAAG,CAAC,CAAC;;YAEtC,IAAI,SAAS,GAAG,CAAC,EAAE;gBACf,SAAS,IAAI,GAAG,CAAC;aACpB;SACJ;;QAEDD,IAAM,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,SAAS,CAAC,EAAE,SAAS,EAAE,SAAS,GAAG,CAAC,CAAC,CAAC;QACjFA,IAAM,KAAK,GAAG,OAAO,GAAG,SAAS,GAAG,CAAC,CAAC;QACtCA,IAAM,KAAK,GAAG,SAAS,GAAG,KAAK,CAAC;;QAEhC,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;KACxE,CAAA;;IAED,4BAAA,IAAI,kBAAC,IAAI,EAAE,EAAE,EAAE;QACXA,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QACpCA,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACzCA,IAAM,QAAQ,GAAG,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;;QAEzC,OAAO,IAAIc,+BAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE;YAClD,UAAU,EAAE,UAAU;YACtB,QAAQ,EAAE,QAAQ;YAClB,OAAO,EAAE,IAAI,CAAC,MAAM;YACpB,OAAO,EAAE,IAAI,CAAC,MAAM;SACvB,CAAC,CAAC;KACN,CAAA;;IAED,4BAAA,kBAAkB,gCAAC,KAAK,EAAE;;;QACtBd,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC;QAC9CC,IAAI,KAAK,GAAG,IAAI,CAAC;;QAEjB,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7BD,IAAM,IAAI,GAAGQ,MAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;gBAC3B,KAAK,GAAG,CAAC,CAAC;gBACV,MAAM;aACT;SACJ;;QAED,OAAO,KAAK,CAAC;KAChB,CAAA;;;EAxM2B,YAyM/B,GAAA;;AAED,iBAAiB,CAAC,iBAAiB,EAAE;IACjC,UAAU,EAAE,EAAE;IACd,MAAM,EAAE;QACJ,MAAM,EAAE,UAAU,CAAC,EAAE,CAAC;KACzB;IACD,cAAc,EAAE;QACZ,OAAO,EAAE,IAAI;KAChB;IACD,SAAS,EAAE,IAAI;CAClB,CAAC,CAAC;AACH,UAAU,CAAC,iBAAiB,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC,AAExD;;ACtNA,IAAM,SAAS,GAAa;IAAC,kBACd,CAAC,OAAO,EAAE,YAAY,EAAE;QAC/BI,OAAK,KAAA,CAAC,MAAA,OAAO,EAAE,YAAY,CAAC,CAAC;;QAE7BZ,IAAM,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC;;QAErC,eAAe,CAAC,SAAS,GAAG,eAAe,CAAC,SAAS,IAAI,eAAe,CAAC,SAAS,GAAG,CAAC,CAAC;KAC1F;;;;gDAAA;;IAED,oBAAA,YAAY,0BAAC,SAAS,EAAE;QACpB,OAAO,WAAW,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC;KACvE,CAAA;;IAED,oBAAA,MAAM,oBAAC,GAAG,EAAE;QACR,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,YAAY,EAAE,CAAC;KACvB,CAAA;;IAED,oBAAA,YAAY,4BAAG;;;QACX,OAA4D,GAAG,IAAI;QAA3D,IAAA,OAAO;QAAE,IAAA,MAAM;QAAqB,IAAA,YAAY,sBAAlD;QACNA,IAAM,IAAI,GAAG,YAAY,CAAC,IAAI,IAAI,CAAC,CAAC;QACpCA,IAAM,IAAI,GAAG,YAAY,CAAC,IAAI,IAAI,CAAC,CAAC;;QAEpCA,IAAM,UAAU,GAAG,IAAI,GAAG,EAAE,CAAC;QAC7BA,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;;QAE3D,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAC7BD,IAAM,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;;YAE/B,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAACQ,MAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,QAAQ,CAAC,KAAK,EAAE,EAAE,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;SAC/F;KACJ,CAAA;;IAED,oBAAA,OAAO,uBAAG;QACN,OAAO,IAAI,CAAC,GAAG,CAAC;KACnB,CAAA;;IAED,oBAAA,SAAS,uBAAC,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,UAAkB,EAAE;+CAAV,GAAG,KAAK;;QACtDR,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;QAC7BA,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC1CA,IAAM,IAAI,GAAG,EAAE,CAAC;QAChBA,IAAM,IAAI,GAAG,UAAU,IAAI,CAAC,CAAC;QAC7BA,IAAM,IAAI,GAAG,UAAU,IAAI,CAAC,CAAC;;QAE7B,KAAKC,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,IAAI,IAAI,EAAE;YACzCD,IAAM,OAAO,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;YAC7C,IAAI,CAAC,CAAC,UAAU,IAAI,OAAO,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,EAAE;gBAC/C,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACtB;SACJ;;QAED,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,oBAAA,cAAc,8BAAG;QACb,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;KACjD,CAAA;;IAED,oBAAA,cAAc,8BAAG;QACb,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;KACjD,CAAA;;IAED,oBAAA,aAAa,2BAAC,CAAC,EAAE;QACb,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;KACpD,CAAA;;IAED,oBAAA,UAAU,0BAAG;QACT,OAAO,EAAE,CAAC;KACb,CAAA;;IAED,oBAAA,mBAAmB,iCAAC,OAAO,EAAE;QACzBA,IAAM,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;QACnD,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,IAAI,CAAC,CAAC;KACzG,CAAA;;IAED,oBAAA,mBAAmB,iCAAC,OAAO,EAAE,SAAS,EAAE;QACpCA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAQ,cAAc;QAAE,IAAA,cAAc,0BAAhC;QACNA,IAAM,mBAAmB,GAAG,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,EAAE,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;;QAE3H,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,OAAO,CAAC,SAAS,EAAE,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;KACzH,CAAA;;IAED,oBAAA,YAAY,0BAAC,IAAI,EAAE;QACf,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;KAC3C,CAAA;;IAED,oBAAA,OAAO,qBAAC,CAAC,EAAE,CAAC,EAAE;QACV,OAAsB,GAAG,IAAI;QAArB,IAAA,OAAO;QAAE,IAAA,GAAG,WAAd;QACNA,IAAM,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;QACtCC,IAAI,KAAK,GAAG,UAAU,CAAC,CAAC,EAAE,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;QACpDA,IAAI,GAAG,GAAG,UAAU,CAAC,CAAC,IAAI,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;;QAErD,IAAI,OAAO,CAAC,OAAO,EAAE;YACjB,KAAK,IAAI,CAAC,CAAC,CAAC;YACZ,GAAG,IAAI,CAAC,CAAC,CAAC;SACb;;QAED,KAAK,GAAG,CAAC,GAAG,GAAG,KAAK,GAAG,UAAU,CAAC,GAAG,GAAG,CAAC;QACzC,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,UAAU,CAAC,GAAG,GAAG,CAAC;;QAErC,IAAI,GAAG,GAAG,KAAK,EAAE;YACbD,IAAM,GAAG,GAAG,KAAK,CAAC;YAClB,KAAK,GAAG,GAAG,CAAC;YACZ,GAAG,GAAG,GAAG,CAAC;SACb;;QAED,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,KAAK,EAAE,GAAG,GAAG,KAAK,CAAC,CAAC;KAC1E,CAAA;;IAED,oBAAA,IAAI,kBAAC,IAAI,EAAE,EAAS,EAAE;+BAAT,GAAG,IAAI;;QAChBA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,KAAK,GAAG,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC;QACvCA,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QACpCA,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC/BA,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC/BC,IAAI,UAAU,EAAE,QAAQ,CAAC;;QAEzB,IAAI,OAAO,CAAC,OAAO,EAAE;YACjB,UAAU,GAAG,GAAG,CAAC;YACjB,QAAQ,GAAG,GAAG,CAAC;SAClB,MAAM;YACH,UAAU,GAAG,GAAG,GAAG,GAAG,CAAC;YACvB,QAAQ,GAAG,GAAG,GAAG,GAAG,CAAC;SACxB;;QAED,UAAU,GAAG,CAAC,UAAU,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC;QACxC,QAAQ,GAAG,CAAC,QAAQ,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC;;QAEpC,OAAO,IAAIa,+BAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE;YAClD,UAAU,EAAE,UAAU;YACtB,QAAQ,EAAE,QAAQ;YAClB,OAAO,EAAE,IAAI,CAAC,MAAM;YACpB,OAAO,EAAE,IAAI,CAAC,MAAM;SACvB,CAAC,CAAC;KACN,CAAA;;IAED,oBAAA,QAAQ,sBAAC,KAAK,EAAE;QACZd,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QACjCA,IAAM,EAAE,GAAG,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QAC9BA,IAAM,EAAE,GAAG,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QAC9BC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QAChDA,IAAI,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC;;QAE/B,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;YAClB,KAAK,IAAI,CAAC,CAAC,CAAC;YACZ,KAAK,IAAI,CAAC,CAAC,CAAC;SACf;;QAED,OAAO,CAAC,KAAK,GAAG,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;KACtC,CAAA;;IAED,oBAAA,UAAU,0BAAG;QACT,OAAO;YACH,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC;SACnB,CAAC;KACL,CAAA;;;EA/JmB,IAgKvB,GAAA;;AAED,iBAAiB,CAAC,SAAS,EAAE;IACzB,IAAI,EAAE,OAAO;IACb,UAAU,EAAE,CAAC;IACb,OAAO,EAAE,KAAK;IACd,SAAS,EAAE,EAAE;IACb,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,GAAG;IACR,MAAM,EAAE;QACJ,MAAM,EAAE,UAAU,CAAC,EAAE,CAAC;KACzB;IACD,cAAc,EAAE;QACZ,KAAK,EAAE,KAAK;QACZ,OAAO,EAAE,IAAI;QACb,KAAK,EAAE,CAAC;KACX;IACD,cAAc,EAAE;QACZ,KAAK,EAAE,MAAM;KAChB;CACJ,CAAC,CAAC;;AAEH,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,cAAc,EAAE;IAC5C,eAAe,EAAE,iBAAiB,CAAC,SAAS,CAAC,eAAe;IAC5D,WAAW,EAAE,iBAAiB,CAAC,SAAS,CAAC,WAAW;IACpD,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,KAAK;IAClC,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,WAAW;IAC9C,eAAe,EAAE,WAAW,CAAC,SAAS,CAAC,eAAe;CACzD,CAAC,CAAC,AAEH;;ACjMAD,IAAM,qBAAqB,GAAG;IAC1B,OAAO,EAAE;QACL,cAAc,EAAE;YACZ,OAAO,EAAE,IAAI;SAChB;KACJ;;IAED,eAAe,EAAE,WAAW;;;QACxB,OAAkD,GAAG,IAAI,CAAC,OAAO;QAAvC,IAAA,IAAI;QAAgB,uEAAA,EAAE,CAA1C;QACNA,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;QACxCA,IAAM,WAAW,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;QAC1CA,IAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QACpCA,IAAM,KAAK,GAAG,IAAI,CAAC,cAAc,GAAG,IAAIe,8BAAI,CAAC,KAAK,CAAC;YAC/C,MAAM,EAAE,CAAC,CAAC;SACb,CAAC,CAAC;;QAEH,KAAKd,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvCD,IAAM,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC1BA,IAAM,SAAS,GAAG;gBACd,IAAI,EAAE;oBACF,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,OAAO,EAAE,IAAI,CAAC,OAAO;iBACxB;gBACD,MAAM,EAAE;oBACJ,OAAO,EAAE,IAAI,CAAC,OAAO;iBACxB;aACJ,CAAC;;YAEFA,IAAM,IAAI,GAAGQ,MAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;YACpDR,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;;YAE9EC,IAAI,KAAK,WAAA,CAAC;YACV,IAAI,IAAI,KAAK,GAAG,EAAE;gBACd,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;aAC5D,MAAM;gBACH,KAAK,GAAGc,8BAAI,CAAC,IAAI,CAAC,UAAU,CAACP,MAAI,CAAC,cAAc,CAAC,IAAI,EAAE,WAAW,CAAC,EAAE,SAAS,CAAC,CAAC,KAAK,EAAE,CAAC;aAC3F;;YAED,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACvB;;QAED,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;KAC5B;;IAED,cAAc,EAAE,SAAS,IAAI,EAAE,MAAM,EAAE;QACnCR,IAAM,WAAW,GAAG,EAAE,CAAC;QACvBA,IAAM,WAAW,GAAG,EAAE,CAAC;QACvBA,IAAM,MAAM,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;QAChDA,IAAM,WAAW,GAAG,IAAIc,+BAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9Dd,IAAM,WAAW,GAAG,IAAIc,+BAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;;QAEzD,KAAKb,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YACvD,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1D;;QAED,WAAW,CAAC,OAAO,EAAE,CAAC;QACtB,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QACjC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEjC,OAAO,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;KAC1C;;IAED,eAAe,EAAE,SAAS,OAAO,EAAE;QAC/BD,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,UAAU,GAAG,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACtDA,IAAM,WAAW,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;QAC1CA,IAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QACpCC,IAAI,SAAS,GAAG,EAAE,CAAC;;QAEnB,IAAI,OAAO,CAAC,cAAc,CAAC,OAAO,EAAE;YAChC,SAAS,GAAG,IAAI,CAAC,eAAe;gBAC5B,MAAM,EAAE,UAAU,EAAE,WAAW,EAAE,OAAO,CAAC,cAAc;aAC1D,CAAC;SACL;;QAED,IAAI,OAAO,CAAC,cAAc,CAAC,OAAO,EAAE;YAChCD,IAAM,UAAU,GAAG,IAAI,CAAC,2BAA2B,EAAE,CAAC;YACtDS,QAAM,CAAC,SAAS,EAAE,IAAI,CAAC,eAAe;gBAClC,MAAM,EAAE,UAAU,EAAE,WAAW,EAAE,OAAO,CAAC,cAAc;aAC1D,CAAC,CAAC;SACN;;QAED,OAAO,SAAS,CAAC;KACpB;;IAED,eAAe,EAAE,SAAS,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE;QACtDT,IAAM,KAAK,GAAG;YACV,MAAM,EAAE;gBACJ,KAAK,EAAE,OAAO,CAAC,KAAK;gBACpB,KAAK,EAAE,OAAO,CAAC,KAAK;gBACpB,QAAQ,EAAE,OAAO,CAAC,QAAQ;aAC7B;SACJ,CAAC;QACF,uDAAe,CAAC;QAAS,uDAAA,CAAC,CAApB;QACNA,IAAM,SAAS,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;;QAEzC,KAAKC,IAAI,MAAM,GAAG,IAAI,EAAE,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE,MAAM,IAAI,IAAI,EAAE;YAC3DD,IAAM,UAAU,GAAG,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;YAC5C,IAAI,UAAU,GAAG,CAAC,EAAE;gBAChBA,IAAM,MAAM,GAAG,IAAIc,+BAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;gBACnE,IAAI,OAAO,CAAC,IAAI,KAAK,GAAG,EAAE;oBACtB,SAAS,CAAC,MAAM,CAAC,IAAIC,8BAAI,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;iBACpD,MAAM;oBACHf,IAAM,IAAI,GAAG,IAAIe,8BAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAClC,KAAKd,IAAI,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,MAAM,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE;wBACtD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;qBACtD;;oBAED,IAAI,CAAC,KAAK,EAAE,CAAC;oBACb,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;iBAC1B;aACJ;SACJ;;QAED,OAAO,SAAS,CAAC,QAAQ,CAAC;KAC7B;;IAED,QAAQ,EAAE,SAAS,KAAK,EAAE;QACtBD,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC/BA,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;QACxCA,IAAM,WAAW,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;QAC1CA,IAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QACpCA,IAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACxCC,IAAI,QAAQ,GAAG,MAAM,CAAC;;QAEtB,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,KAAK,GAAG,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;YACpED,IAAM,EAAE,GAAG,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;YAC9BA,IAAM,EAAE,GAAG,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;YAC9BA,IAAM,KAAK,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;;YAEpD,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE;gBAC5B,OAAO,eAAe,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,eAAe,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;aAChE,CAAC,CAAC;;;;YAIHA,IAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACrEA,IAAM,KAAK,GAAG,eAAe,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;YACrDA,IAAM,KAAK,GAAG,EAAE,GAAG,QAAQ,CAAC;YAC5BA,IAAM,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,CAAC;;YAEjC,QAAQ,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACpE;;QAED,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI;YAC1C,IAAI,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,GAAG,QAAQ,CAAC;SACrD,CAAC;KACL;CACJ,CAAC;;AAEF,SAAS,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE;IAC3B,OAAO,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;CAChD,AAED;;AC/JA,IAAM,gBAAgB,GAAoB;IAAC;;;;;;;;IAAA,2BACvC,2BAA2B,2CAAG;QAC1B,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;KACxD,CAAA;;IAED,2BAAA,2BAA2B,2CAAG;QAC1BA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BC,IAAI,aAAa,GAAG,CAAC,CAAC;;QAEtB,IAAI,OAAO,CAAC,cAAc,CAAC,OAAO,EAAE;YAChC,aAAa,GAAG,OAAO,CAAC,SAAS,CAAC;SACrC;QACD,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;KAClE,CAAA;;IAED,2BAAA,QAAQ,wBAAG;QACP,OAAOoB,cAAW,CAAC;KACtB,CAAA;;;EAjB0B,WAkB9B,GAAA;;AAED,UAAU,CAAC,gBAAgB,CAAC,SAAS,EAAE,qBAAqB,CAAC,CAAC,AAE9D;;ACtBA,IAAM,oBAAoB,GAAwB;IAAC;;;;;;;;IAAA,+BAC/C,2BAA2B,2CAAG;QAC1BrB,IAAM,SAAS,GAAG,EAAE,CAAC;;QAErB,IAAI,CAAC,2BAA2B,CAAC,SAAS,QAAQ,EAAE;YAChD,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC5B,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;;QAEhC,OAAO,SAAS,CAAC;KACpB,CAAA;;IAED,+BAAA,2BAA2B,2CAAG;QAC1BA,IAAM,SAAS,GAAG,EAAE,CAAC;;QAErB,IAAI,CAAC,2BAA2B,CAAC,SAAS,QAAQ,EAAE;YAChD,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC5B,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;;QAEhC,OAAO,SAAS,CAAC;KACpB,CAAA;;IAED,+BAAA,QAAQ,wBAAG;QACP,OAAOsB,kBAAe,CAAC;KAC1B,CAAA;;;EAvB8B,eAwBlC,GAAA;;AAED,UAAU,CAAC,oBAAoB,CAAC,SAAS,EAAE,qBAAqB,CAAC,CAAC,AAElE;;AC5BAtB,IAAM,MAAM,GAAG,KAAK,CAAC;AACrBA,IAAM,0BAA0B,GAAG,IAAI,CAAC;;AAExC,IAAM,cAAc,GAAc;IAAC,uBAEpB,CAAC,MAAM,EAAE;QAChBY,QAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAER,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACxB;;;;0DAAA;;IAED,yBAAA,OAAO,qBAAC,UAAU,EAAE;;;QAChBZ,IAAM,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACnCA,IAAM,QAAQ,GAAG,EAAE,CAAC;QACpBC,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACzBA,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;;QAE3B,IAAI,MAAM,GAAG,CAAC,EAAE;YACZ,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;YACjC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;SAC1B;;QAED,IAAI,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YAC7D,OAAO,QAAQ,CAAC;SACnB;;QAEDA,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACnBA,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACnBA,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;;QAEnB,QAAQ,CAAC,IAAI,CAAC,IAAIa,+BAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;;QAEpC,OAAO,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE;YAClC,MAAM,GAAG,IAAI,CAAC;YACd,MAAM,CAAC,GAAG,EAAE,CAAC;YACb,MAAM,EAAE,CAAC;SACZ;;QAED,IAAI,MAAM,KAAK,CAAC,EAAE;YACdd,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;YAE1C,IAAI,CAAC,QAAQ,CAAC,CAAC,UAAU;gBACrB,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;aAChD,CAAC;;YAEF,QAAQ,CAAC,IAAI,CAAC,IAAIc,+BAAI,CAAC,OAAO;gBAC1B,EAAE;gBACF,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;aACjD,CAAC,CAAC;;YAEH,OAAO,QAAQ,CAAC;SACnB;;QAEDb,IAAI,mBAAmB,EAAE,gBAAgB,CAAC;;QAE1C,IAAI,MAAM,EAAE;YACR,EAAE,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACxDD,IAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YACrD,mBAAmB,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;YACvC,gBAAgB,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;SACvC,MAAM;YACHA,IAAMuB,SAAO,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1C,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,CAACA,SAAO,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACvE;;QAEDtB,IAAI,GAAG,GAAG,mBAAmB,CAAC;QAC9B,KAAKA,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,IAAI,MAAM,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE;YACxCO,MAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;YACnC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;YACvB,IAAI,GAAG,GAAG,CAAC,IAAI,MAAM,EAAE;gBACnB,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;gBAC7DR,IAAMwB,eAAa,GAAGhB,MAAI,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;gBAEnD,IAAI,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gBAC/B,GAAG,GAAGgB,eAAa,CAAC,CAAC,CAAC,CAAC;;gBAEvBxB,IAAM,GAAG,GAAGwB,eAAa,CAAC,CAAC,CAAC,CAAC;gBAC7B,QAAQ,CAAC,IAAI,CAAC,IAAIV,+BAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;aAC5C;SACJ;;QAED,IAAI,MAAM,EAAE;YACR,EAAE,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACjEd,IAAMwB,eAAa,GAAG,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;;YAErD,IAAI,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YAC/B,QAAQ,CAAC,IAAI,CAAC,IAAIV,+BAAI,CAAC,OAAO;gBAC1B,EAAE;gBACFU,eAAa,CAAC,CAAC,CAAC;aACnB,CAAC,CAAC;;YAEH,IAAI,CAAC,QAAQ,CAAC,CAAC,UAAU,CAACA,eAAa,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5C,QAAQ,CAAC,IAAI,CAAC,IAAIV,+BAAI,CAAC,OAAO;gBAC1B,EAAE;gBACF,gBAAgB;aACnB,CAAC,CAAC;SACN,MAAM;YACHd,IAAMuB,SAAO,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;YAE3C,IAAI,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YAC/B,QAAQ,CAAC,IAAI,CAAC,IAAIT,+BAAI,CAAC,OAAO;gBAC1B,EAAE;gBACF,IAAI,CAAC,kBAAkB,CAACS,SAAO,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;aACjD,CAAC,CAAC;SACN;;QAED,OAAO,QAAQ,CAAC;KACnB,CAAA;;IAED,yBAAA,gBAAgB,8BAAC,GAAG,EAAE,MAAM,EAAE;QAC1B,OAAO,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;YACxG,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7B;KACJ,CAAA;;IAED,yBAAA,UAAU,wBAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;QACnBtB,IAAI,UAAU,GAAG,KAAK,CAAC;;QAEvB,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE;YACf,UAAU,GAAG,IAAI,CAAC;SACrB,MAAM,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE;YACtB,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;gBAChE,UAAU,GAAG,IAAI,CAAC;aACrB;SACJ,MAAM;YACHD,IAAM,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACpCA,IAAM,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;gBAC7B,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE;gBAC/B,UAAU,GAAG,IAAI,CAAC;aACrB;SACJ;;QAED,OAAO,UAAU,CAAC;KACrB,CAAA;;IAED,yBAAA,MAAM,oBAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;QACfA,IAAM,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QACrCA,IAAM,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;;QAE5C,OAAO,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KAC9E,CAAA;;IAED,yBAAA,YAAY,0BAAC,EAAE,EAAE,EAAE,EAAE;QACjBA,IAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;QACxCA,IAAM,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;;QAE1B,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;KACnB,CAAA;;IAED,yBAAA,aAAa,2BAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;QACtBC,IAAI,MAAM,GAAG,CAAC,CAAC;QACfA,IAAI,MAAM,GAAG,CAAC,CAAC;QACfA,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrBA,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAC9BA,IAAI,OAAO,CAAC;;QAEZ,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE;YACzB,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACxC,MAAM;YACHD,IAAM,SAAS,GAAG;gBACd,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;gBACzC,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;aAC5C,CAAC;;YAEF,IAAI,SAAS,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE;gBAC5B,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACrC,QAAQ,GAAG,IAAI,CAAC;aACnB,MAAM;gBACH,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE;oBAC7B,MAAM,GAAG,CAAC,CAAC;oBACX,MAAM,GAAG,CAAC,CAAC;iBACd;;gBAED,IAAI,SAAS,CAAC,MAAM,CAAC,EAAE;oBACnB,OAAO,GAAG,CAAC,CAAC;iBACf,MAAM;oBACHC,IAAI,IAAI,CAAC;oBACT,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC;wBACrD,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE;wBACvD,IAAI,GAAG,UAAU,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;qBAC5E,MAAM;wBACH,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;qBAC7E;;oBAED,OAAO,GAAG,0BAA0B,GAAG,IAAI,CAAC;oBAC5C,iBAAiB,GAAG,IAAI,CAAC;iBAC5B;aACJ;SACJ;;QAEDD,IAAM,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;;QAEpF,IAAI,iBAAiB,EAAE;YACnBA,IAAM,SAAS,GAAG,MAAM,CAAC;YACzB,MAAM,GAAG,MAAM,CAAC;YAChB,MAAM,GAAG,SAAS,CAAC;SACtB;;QAEDA,IAAM,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;;QAElF,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,oBAAoB,CAAC,EAAE,EAAE,EAAE,EAAE,kBAAkB,EAAE,OAAO,CAAC,CAAC;YAC/D,IAAI,CAAC,oBAAoB,CAAC,EAAE,EAAE,EAAE,EAAE,iBAAiB,EAAE,OAAO,CAAC,CAAC;SACjE;;QAED,OAAO,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,CAAC;KACpD,CAAA;;IAED,yBAAA,oBAAoB,kCAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE;QACtC,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE;YACb,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE;gBACb,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;gBACtC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;aACf,MAAM,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE;gBACpB,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;gBACtC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;aACf;SACJ,MAAM;YACH,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE;gBACb,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;gBACtC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;aACf,MAAM,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE;gBACpB,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;gBACtC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;aACf;SACJ;KACJ,CAAA;;IAED,yBAAA,OAAO,qBAAC,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE;QAC5BA,IAAM,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC;QAClCA,IAAM,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC;QAClCC,IAAI,OAAO,CAAC;;QAEZ,IAAI,CAAC,KAAK,CAAC,EAAE;YACT,OAAO,GAAG,CAAC,CAAC;SACf,MAAM;YACH,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;SACnB;;QAED,OAAO,OAAO,CAAC;KAClB,CAAA;;IAED,yBAAA,kBAAkB,gCAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE;QAClC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;oBAC3C,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;KAChE,CAAA;;IAED,yBAAA,iBAAiB,+BAAC,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE;QAC/CD,IAAM,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC;QACtBA,IAAM,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC;QACtBA,IAAM,QAAQ,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,MAAM,CAAC;;QAEpC,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,QAAQ,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,QAAQ,GAAG,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;KACrF,CAAA;;IAED,yBAAA,kBAAkB,gCAAC,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE;QAChDA,IAAM,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC;QACtBA,IAAM,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC;QACtBA,IAAM,QAAQ,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,MAAM,CAAC;;QAEpC,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,QAAQ,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,QAAQ,GAAG,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;KACrF,CAAA;;IAED,yBAAA,KAAK,mBAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;QAClCA,IAAM,YAAY,GAAG,IAAIc,+BAAI,CAAC,KAAK,EAAE,CAAC;QACtC,YAAY,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;QAC9B,YAAY,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;;QAE9B,OAAO,YAAY,CAAC;KACvB,CAAA;;IAED,yBAAA,iBAAiB,+BAAC,EAAE,EAAE,CAAC,EAAE;QACrBd,IAAM,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;QACzBC,IAAI,MAAM,GAAG,CAAC,CAAC;;QAEf,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7B,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;SACnC;QACD,OAAO,MAAM,CAAC;KACjB,CAAA;;;EArRwBY,4BAsR5B,GAAA;;AAED,SAAS,UAAU,CAAC,KAAK,EAAE;IACvB,OAAO,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;CAC9B,AAED;;AClSA,IAAM,SAAS,GAAc;IAAC,kBACf,CAAC,IAAI,EAAE;QACdD,QAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAER,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;KAC/B;;;;gDAAA;;IAED,oBAAA,KAAK,mBAAC,KAAK,EAAE;QACTZ,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;QACxBA,IAAM,KAAK,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;;QAEhF,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,oBAAA,IAAI,kBAAC,IAAI,EAAE,EAAE,EAAE,KAAY,EAAE;qCAAT,GAAG,IAAI;;QACvB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;KAC3C,CAAA;;IAED,oBAAA,KAAK,qBAAG;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;KAC7B,CAAA;;IAED,oBAAA,UAAU,0BAAG;QACT,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;KAClC,CAAA;;;EAzBmBa,4BA0BvB,GAAA,AAED;;AC9BA,IAAM,SAAS,GAAC,kBACD,CAAC,IAAI,EAAE;IAClB,IAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IAC9B,IAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;CAClD,CAAA,AAGL;;ACLA,IAAM,aAAa,GAAc;IAAC,sBACnB,CAAC,QAAQ,EAAE;QAClBD,QAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAER,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC9B,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,SAAS,CAAC;KAC9C;;;;wDAAA;;;EAPuBC,4BAQ3B,GAAA,AAED;;ACVe,SAAS,YAAY,CAAC,MAAM,EAAE;IACzCb,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;IAC7BC,IAAI,KAAK,GAAG,CAAC,CAAC;;IAEd,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;QAC7BD,IAAM,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACtB,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE;YACf,KAAK,EAAE,CAAC;SACX;KACJ;;IAED,OAAO,KAAK,CAAC;;;ACRjBA,IAAM,UAAU,GAAG;IACf,GAAG,EAAE,SAAS,MAAM,EAAE;QAClBA,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC7BC,IAAI,GAAG,GAAG,SAAS,CAAC;;QAEpB,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7BD,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACxB,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;gBACjB,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;aAC9B;SACJ;;QAED,OAAO,GAAG,KAAK,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;KAC9C;;IAED,GAAG,EAAE,SAAS,MAAM,EAAE;QAClBA,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC7BC,IAAI,GAAG,GAAG,SAAS,CAAC;;QAEpB,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7BD,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACxB,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;gBACjB,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;aAC9B;SACJ;;QAED,OAAO,GAAG,KAAK,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;KAC9C;;IAED,GAAG,EAAE,SAAS,MAAM,EAAE;QAClBA,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC7BC,IAAI,GAAG,GAAG,CAAC,CAAC;;QAEZ,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7BD,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACxB,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;gBACjB,GAAG,IAAI,KAAK,CAAC;aAChB;SACJ;;QAED,OAAO,GAAG,CAAC;KACd;;IAED,SAAS,EAAE,SAAS,MAAM,EAAE;QACxBC,IAAI,MAAM,GAAG,IAAI,CAAC;;QAElB,IAAI,YAAY,CAAC,MAAM,CAAC,EAAE;YACtB,MAAM,GAAG,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACnC;;QAED,OAAO,MAAM,CAAC;KACjB;;IAED,KAAK,EAAE,SAAS,MAAM,EAAE;QACpBD,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC7BC,IAAI,KAAK,GAAG,CAAC,CAAC;;QAEd,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7BD,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACxB,IAAI,KAAK,KAAK,IAAI,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;gBAClC,KAAK,EAAE,CAAC;aACX;SACJ;;QAED,OAAO,KAAK,CAAC;KAChB;;IAED,GAAG,EAAE,SAAS,MAAM,EAAE;QAClBA,IAAM,KAAK,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;QACnCC,IAAI,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;;QAEvB,IAAI,KAAK,GAAG,CAAC,EAAE;YACX,MAAM,GAAG,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;SAC3C;;QAED,OAAO,MAAM,CAAC;KACjB;;IAED,KAAK,EAAE,SAAS,MAAM,EAAE;QACpBD,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;;QAE7B,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7BD,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACxB,IAAI,KAAK,KAAK,IAAI,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;gBAClC,OAAO,KAAK,CAAC;aAChB;SACJ;;QAED,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC;KACpB;CACJ,CAAC,AAEF;;AC/Fe,SAAS,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE;IACzC,IAAI,GAAG,KAAK,IAAI,EAAE;QACd,OAAO,GAAG,CAAC;KACd;;IAEDA,IAAM,GAAG,GAAG,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAChC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;;;ACJpB,IAAM,YAAY,GAAc;IAAC,qBAElB,GAAG;QACVY,QAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAER,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;KAC7B;;;;sDAAA;;IAED,uBAAA,QAAQ,sBAAC,WAAW,EAAE,WAAuB,EAAE,WAAgB,EAAE;0BAAhC;iDAAA,GAAG,EAAE,KAAK,EAAE,CAAa;iDAAA,GAAG,EAAE;;;QAE3D,KAAKX,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzCD,IAAM,IAAI,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;;YAE5BQ,MAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC;YACtCA,MAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC;YACtCA,MAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAGA,MAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAC3DA,MAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAGA,MAAI,CAAC,UAAU,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;SACxE;KACJ,CAAA;;IAED,uBAAA,eAAe,6BAAC,MAAM,EAAE;QACpB,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;KACpE,CAAA;;IAED,uBAAA,WAAW,yBAAC,MAAM,EAAE;QAChB,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC;KACtD,CAAA;;IAED,uBAAA,WAAW,yBAAC,MAAM,EAAE;QAChB,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC;KACtD,CAAA;;IAED,uBAAA,SAAS,uBAAC,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE;QAC7BR,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACzBA,IAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;QACvDA,IAAM,MAAM,GAAG,EAAE,WAAW,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,CAAC;QACrDA,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC7CA,IAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACnDC,IAAI,MAAM,EAAE,KAAK,CAAC;;QAElB,IAAI,SAAS,KAAK,IAAI,EAAE;YACpB,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACxC,MAAM,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;YAC5B,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC7C,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;YACjCD,IAAM,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YACtD,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;YACpD,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;SACxD,MAAM,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;YACtCA,IAAM,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;YAC9DA,IAAM,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;;YAE9D,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,WAAW,EAAE,cAAc,CAAC,CAAC;YACrE,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,WAAW,EAAE,cAAc,CAAC,CAAC;SACzE;;QAED,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;YAChB,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC1B,MAAM,CAAC,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;aACpD,MAAM;gBACH,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC;aAC9B;SACJ;;QAED,MAAM,CAAC,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;;QAE7B,OAAO,MAAM,CAAC;KACjB,CAAA;;IAED,uBAAA,UAAU,wBAAC,MAAM,EAAE,YAAY,EAAE;QAC7BA,IAAM,KAAK,GAAG,EAAE,CAAC;QACjBA,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;;QAE7B,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7BD,IAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YAC5B,KAAK,CAAC,SAAS,CAAC,GAAG,YAAY,CAAC;SACnC;;QAED,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,uBAAA,cAAc,4BAAC,KAAK,EAAE,MAAM,EAAE;QAC1BA,IAAM,KAAK,GAAG,EAAE,CAAC;;QAEjB,IAAI,MAAM,EAAE;YACRA,IAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;;YAErD,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7B,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;aAC/B;SACJ;;QAED,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,uBAAA,eAAe,6BAAC,MAAM,EAAE,MAAM,EAAE,SAAkB,EAAE;6CAAX,GAAG,MAAM;;QAC9CD,IAAM,KAAK,GAAG,EAAE,CAAC;;QAEjB,IAAI,MAAM,EAAE;YACRA,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;;YAE7B,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7BD,IAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBAC5BA,IAAM,YAAY,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;gBAClC,KAAK,CAAC,SAAS,CAAC,GAAG,QAAQ,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;aACrD;SACJ;;QAED,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,uBAAA,YAAY,0BAAC,MAAM,EAAE,eAAe,EAAE;QAClCA,IAAM,YAAY,GAAG,EAAE,CAAC;;QAExB,IAAI,eAAe,EAAE;YACjBA,IAAM,MAAM,GAAG,eAAe,CAAC,MAAM,CAAC;;YAEtC,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7BD,IAAM,SAAS,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;gBACrCA,IAAM,eAAe,GAAG,SAAS,KAAK,KAAK,GAAG,OAAO,GAAG,SAAS,GAAG,OAAO,CAAC;;gBAE5E,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,SAAS,CAAC,CAAC;aAC3D;SACJ;;QAED,OAAO,YAAY,CAAC;KACvB,CAAA;;;EAjIsBa,4BAkI1B,GAAA;;AAED,YAAY,CAAC,OAAO,GAAG,IAAI,YAAY,EAAE,CAAC,AAE1C;;ACrIAb,IAAM,OAAO,GAAG,QAAQ,CAAC;AACzBA,IAAM,OAAO,GAAG,QAAQ,CAAC;AACzBA,IAAM,YAAY,GAAG,yBAAyB,CAAC;AAC/CA,IAAM,sBAAsB,GAAG,IAAI,MAAM,CAAC,GAAG,GAAG,OAAO,GAAG,gCAAgC,CAAC,CAAC;;AAE5F,IAAM,oBAAoB,GAAc;IAAC,6BAC1B,CAAC,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE;QACnCY,QAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAER,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;KACpD;;;;sEAAA;;IAED,+BAAA,gBAAgB,8BAAC,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE;QACxCZ,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACzBA,IAAM,cAAc,GAAG,sBAAsB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;QAE/D,IAAI,cAAc,EAAE;YAChB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;;YAEzDA,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACtCA,IAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;YAClEA,IAAM,QAAQ,GAAG,cAAc,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACvEA,IAAM,UAAU,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC,KAAK,GAAG,SAAS,GAAG,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC,KAAK,GAAG,SAAS,GAAG,QAAQ,EAAE,CAAC;;YAE7G,IAAI,CAAC,WAAW,GAAG,WAAW;gBAC1B,OAAO,UAAU,CAAC;aACrB,CAAC;SACL,MAAM,IAAI,UAAU,CAAC,OAAO,IAAI,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC/D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YACzDA,IAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;;YAEzE,IAAI,CAAC,WAAW,GAAG,SAAS,KAAK,EAAE;gBAC/B,OAAO,EAAE,GAAG,EAAE,KAAK,GAAG,aAAa,EAAE,IAAI,EAAE,KAAK,GAAG,aAAa,EAAE,CAAC;aACtE,CAAC;SACL;KACJ,CAAA;;IAED,+BAAA,iBAAiB,+BAAC,MAAM,EAAE,KAAK,EAAE;QAC7BA,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACzBA,IAAM,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC;QACpCA,IAAM,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC/CA,IAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QAC7CC,IAAI,WAAW,CAAC;;QAEhB,IAAI,OAAO,CAAC,IAAI,CAAC,EAAE;YACfD,IAAM,KAAK,GAAG,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACrD,WAAW,GAAG,MAAM,CAAC,GAAG,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;SAC3C,MAAM,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE;YACvB,WAAW,GAAG,MAAM,EAAE,CAAC;SAC1B,MAAM,IAAI,OAAO,IAAI,KAAK,MAAM,EAAE;YAC/BA,IAAM,cAAc,GAAG,MAAM,CAAC,YAAY,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;YAChE,WAAW,GAAG,MAAM,CAAC,cAAc,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACpE;;QAED,OAAO,WAAW,CAAC;KACtB,CAAA;;IAED,+BAAA,aAAa,2BAAC,UAAU,EAAE,UAAU,EAAE;QAClCC,IAAI,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC;;QAErB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;YACtB,OAAO,IAAI,CAAC;SACf;;QAED,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;SACvC;;QAED,IAAI,OAAO,CAAC,UAAU,CAAC,EAAE;YACrB,GAAG,GAAG,UAAU,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;YACjC,IAAI,GAAG,UAAU,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;SACrC,MAAM,IAAI,QAAQ,CAAC,KAAK,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC,EAAE;YACjD,GAAG,GAAG,UAAU,GAAG,KAAK,CAAC;YACzB,IAAI,GAAG,UAAU,GAAG,KAAK,CAAC;SAC7B,MAAM,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE;YAChDD,IAAM,YAAY,GAAG,UAAU,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;YAC/D,GAAG,GAAG,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAC1C,IAAI,GAAG,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;SAC9C,MAAM;YACH,MAAM,IAAI,KAAK,CAAC,0BAA0B,GAAG,UAAU,CAAC,CAAC;SAC5D;;QAED,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;KACnC,CAAA;;IAED,+BAAA,gBAAgB,8BAAC,IAAI,EAAE,OAAO,EAAE;QAC5B,OAAO,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;KACpF,CAAA;;IAED,+BAAA,oBAAoB,kCAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE;;;QAC1CA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3BA,IAAM,KAAK,GAAG,QAAQ,GAAG,OAAO,CAAC,KAAK,GAAG,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC;QAC3DC,IAAI,mBAAmB,GAAG,CAAC,CAAC;;QAE5B,KAAKA,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,EAAE,GAAG,EAAE,EAAE;YACnCD,IAAM,KAAK,GAAGQ,MAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YAC1C,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;gBACjB,mBAAmB,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aAC7D;SACJ;;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC,CAAC;KACjD,CAAA;;IAED,+BAAA,UAAU,wBAAC,IAAI,EAAE;;;QACbR,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3BC,IAAI,GAAG,GAAG,CAAC,CAAC;QACZA,IAAI,KAAK,GAAG,CAAC,CAAC;;QAEd,KAAKA,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,EAAE,GAAG,EAAE,EAAE;YACnCD,IAAM,KAAK,GAAGQ,MAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YAC1C,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;gBACjB,GAAG,IAAI,KAAK,CAAC;gBACb,KAAK,EAAE,CAAC;aACX;SACJ;;QAED,OAAO;YACH,KAAK,EAAE,GAAG,GAAG,KAAK;YAClB,KAAK,EAAE,KAAK;SACf,CAAC;KACL,CAAA;;;EApH8BK,4BAqHlC,GAAA,AAED;;AC/HAb,IAAM,OAAO,GAAGyB,8BAAO,CAAC,OAAO,IAAI,EAAE,CAAC;;AAEtCzB,IAAM,0BAA0B,GAAG,GAAG,CAAC;AACvCA,IAAM,MAAM,GAAG,QAAQ,CAAC;;AAExBA,AACAA,IAAM,iBAAiB,GAAG,GAAG,CAAC;AAC9BA,IAAM,cAAc,GAAG,CAAC,CAAC;AACzBA,IAAM,WAAW,GAAG,OAAO,CAAC,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC;AAC7CA,IAAM,eAAe,GAAG,UAAU,CAAC;AACnCA,IAAM,gBAAgB,GAAG,WAAW,CAAC;AACrCA,IAAM,iBAAiB,GAAG,WAAW,CAAC;AACtCA,IAAM,kBAAkB,GAAG,YAAY,CAAC;AACxCA,IAAM,iBAAiB,GAAG,WAAW,CAAC;AACtCA,IAAM,kBAAkB,GAAG,YAAY,CAAC;AACxCA,IAAM,gBAAgB,GAAG,CAAC,CAAC;AAC3BA,IAAM,IAAI,GAAG,MAAM,CAAC;AACpBA,IAAM,WAAW,GAAG,aAAa,CAAC;AAClCA,IAAM,GAAG,GAAG,KAAK,CAAC;;AAElBA,IAAM,MAAM,GAAG,QAAQ,CAAC;AACxBA,IAAM,IAAI,GAAG,MAAM,CAAC;;AAEpBA,IAAM,IAAI,GAAG,MAAM,CAAC;AACpBA,IAAM,GAAG,GAAG,KAAK,CAAC;AAClBA,IAAM,QAAQ,GAAG,SAAS,CAAC;AAC3BA,IAAM,MAAM,GAAG,QAAQ,CAAC;AACxBA,IAAM,MAAM,GAAG,QAAQ,CAAC;AACxBA,IAAM,WAAW,GAAG,aAAa,CAAC;AAClCA,IAAM,MAAM,GAAG,QAAQ,CAAC;AACxBA,IAAM,KAAK,GAAG,OAAO,CAAC;AACtBA,IAAM,MAAM,GAAG,QAAQ,CAAC;AACxBA,IAAM,oBAAoB,GAAG,qBAAqB,CAAC;AACnDA,IAAM,IAAI,GAAG,MAAM,CAAC;AACpBA,IAAM,IAAI,GAAG,MAAM,CAAC;AACpBA,IAAM,GAAG,GAAG,KAAK,CAAC;AAClBA,IAAM,UAAU,GAAG,WAAW,CAAC;AAC/BA,IAAM,UAAU,GAAG,WAAW,CAAC;AAC/BA,IAAM,aAAa,GAAG,cAAc,CAAC;AACrCA,IAAM,UAAU,GAAG,WAAW,CAAC;AAC/BA,IAAM,YAAY,GAAG,aAAa,CAAC;AACnCA,IAAM,UAAU,GAAG,WAAW,CAAC;AAC/BA,IAAM,SAAS,GAAG,UAAU,CAAC;AAC7BA,IAAM,YAAY,GAAG,aAAa,CAAC;AACnCA,IAAM,OAAO,GAAG,SAAS,CAAC;AAC1BA,IAAM,YAAY,GAAG,aAAa,CAAC;AACnCA,IAAM,aAAa,GAAG,cAAc,CAAC;AACrCA,IAAM,iBAAiB,GAAG,iBAAiB,CAAC;AAC5CA,IAAM,eAAe,GAAG,gBAAgB,CAAC;AACzCA,IAAM,aAAa,GAAG,cAAc,CAAC;AACrCA,IAAM,SAAS,GAAG,WAAW,CAAC;AAC9BA,IAAM,qBAAqB,GAAG;IAC1B,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,iBAAiB;IAC3D,MAAM,EAAE,YAAY,EAAE,SAAS,EAAE,SAAS,EAAE,oBAAoB;CACnE,CAAC;;AAEFA,IAAM,iBAAiB,GAAG,iBAAiB,CAAC;AAC5CA,IAAM,iBAAiB,GAAG,iBAAiB,CAAC;AAC5CA,IAAM,YAAY,GAAG,aAAa,CAAC;AACnCA,IAAM,YAAY,GAAG,aAAa,CAAC;AACnCA,IAAM,eAAe,GAAG,eAAe,CAAC;AACxCA,IAAM,eAAe,GAAG,eAAe,CAAC;AACxCA,IAAM,IAAI,GAAG,MAAM,CAAC;AACpBA,IAAM,QAAQ,GAAG,SAAS,CAAC;AAC3BA,IAAM,UAAU,GAAG,WAAW,CAAC;AAC/BA,IAAM,UAAU,GAAG,WAAW,CAAC;AAC/BA,IAAM,IAAI,GAAG,MAAM,CAAC;AACpBA,IAAM,QAAQ,GAAG,SAAS,CAAC;AAC3BA,IAAM,YAAY,GAAG,aAAa,CAAC;AACnCA,IAAM,MAAM,GAAG,QAAQ,CAAC;AACxBA,IAAM,UAAU,GAAG,WAAW,CAAC;AAC/BA,IAAM,MAAM,GAAG,QAAQ,CAAC;AACxBA,IAAM,YAAY,GAAG,aAAa,CAAC;AACnCA,IAAM,YAAY,GAAG,aAAa,CAAC;;AAEnCA,IAAM,WAAW,GAAG,KAAK,CAAC;AAC1BA,IAAM,QAAQ,GAAG,UAAU,CAAC;;AAE5BA,IAAM,UAAU,GAAG,WAAW,CAAC;AAC/BA,IAAM,WAAW,GAAG,YAAY,CAAC;AACjCA,IAAM,WAAW,GAAG,YAAY,CAAC;;AAEjCA,IAAM,UAAU,GAAG,2BAA2B,CAAC;AAC/CA,IAAM,gBAAgB,GAAG,GAAG,CAAC,AAE7B,AAsBE;;ACrGFA,IAAM,uBAAuB,GAAG,CAAC,CAAC;;AAElC,IAAM,YAAY,GAAqB;IAAC,qBACzB,CAAC,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE;QACvDY,eAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;;QAEf,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACxB;;;;sDAAA;;IAED,uBAAA,MAAM,oBAAC,SAAS,EAAE;QACdZ,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACrCA,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnCA,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC5BA,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACnDA,IAAM,SAAS,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC;QACrCA,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAC3DA,IAAM,QAAQ,GAAG,UAAU,GAAG,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;QACxDA,IAAM,QAAQ,GAAG,QAAQ,GAAG,SAAS,CAAC;QACtCA,IAAM,MAAM,GAAG,QAAQ,GAAG,SAAS,CAAC;QACpCC,IAAI,UAAU,CAAC;;QAEf,IAAI,UAAU,EAAE;YACZ,UAAU,GAAG;gBACT,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC;gBACnC,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC;aACtC,CAAC;YACF,IAAI,OAAO,EAAE;gBACT,UAAU,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC;oBAC5C,IAAI,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE,CAAC;oBAC9B,IAAI,KAAK,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC;oBAChC,IAAI,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;aACvC;YACD,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,EAAE,MAAM,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;SAClE,MAAM;YACH,UAAU,GAAG;gBACT,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC,CAAC;gBACnC,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC,CAAC;aACtC,CAAC;YACF,IAAI,OAAO,EAAE;gBACT,UAAU,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC;oBAC5C,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC;oBAC9B,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC;oBAChC,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC;aACvC;YACD,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;SAClE;;QAED,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAChC,CAAA;;IAED,uBAAA,YAAY,0BAAC,GAAG,EAAE,UAAU,EAAE;QAC1BD,IAAM,OAAO,GAAG,UAAU,GAAG,GAAG,CAAC,KAAK,EAAE,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC;QACxDA,IAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE,uBAAuB,CAAC,IAAI,uBAAuB,CAAC;;QAExG,OAAO,SAAS,CAAC;KACpB,CAAA;;IAED,uBAAA,YAAY,4BAAG;;;QACXA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;;QAE9B,IAAI,MAAM,EAAE;YACR,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACjB,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;gBACvB,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE;gBACxB,OAAO,EAAE;oBACL,OAAO,EAAE,OAAO,CAAC,OAAO;oBACxB,KAAK,EAAE,OAAO,CAAC,KAAK;oBACpB,IAAI,EAAE,OAAO,CAAC,IAAI;iBACrB;gBACD,YAAY,EAAE,YAAG;oBACbQ,MAAI,CAAC,mBAAmB,EAAE,CAAC;oBAC3BR,IAAM,aAAa,GAAGQ,MAAI,CAAC,MAAM,CAAC;oBAClC,OAAOA,MAAI,CAAC,MAAM,CAAC;oBACnB,OAAO,aAAa,CAAC;iBACxB;aACJ,CAAC,CAAC;SACN,MAAM;YACH,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC9B;KACJ,CAAA;;IAED,uBAAA,mBAAmB,mCAAG;;;QAClB,OAA6B,GAAG,IAAI;QAA5B,IAAA,OAAO;QAAE,IAAA,UAAU,kBAArB;QACNR,IAAM,WAAW,GAAG;YAChB,MAAM,EAAE;gBACJ,KAAK,EAAE,OAAO,CAAC,KAAK;gBACpB,KAAK,EAAE,OAAO,CAAC,IAAI,CAAC,KAAK;gBACzB,QAAQ,EAAE,OAAO,CAAC,IAAI,CAAC,QAAQ;aAClC;SACJ,CAAC;;QAEFY,yBAAK,CAAC,YAAY,KAAA,CAAC,IAAA,CAAC,CAAC;;QAErB,KAAKX,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,UAAU,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE;YACjDD,IAAM,IAAI,GAAG,IAAIe,8BAAI,CAAC,IAAI,CAAC,WAAW,CAAC;iBAClC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBAC5C,MAAM,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;YAE1D,gBAAgB,CAAC,IAAI,CAAC,CAAC;YACvBP,MAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC5B;KACJ,CAAA;;;EA1GsB,YA2G1B,GAAA;;AAED,iBAAiB,CAAC,YAAY,EAAE;IAC5B,SAAS,EAAE;QACP,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,0BAA0B;KACpC;IACD,OAAO,EAAE,IAAI;IACb,IAAI,EAAE;QACF,KAAK,EAAE,CAAC;KACX;IACD,MAAM,EAAE,CAAC;CACZ,CAAC,CAAC,AAEH;;ACjIA,IAAM,mBAAmB,GAAqB;IAAC;;;;;;;;IAAA,8BAC3C,OAAO,uBAAG;QACNR,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;QAErD,OAAO,IAAI,CAAC;KACf,CAAA;;;EAL6B,YAMjC,GAAA,AAED;;ACRAA,IAAM,gBAAgB,GAAG,CAAC,CAAC;;AAE3B,AAAe,SAAS,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,KAAU,EAAE,MAAc,EAAE;iCAAvB,GAAG,EAAE,CAAQ;mCAAA,GAAG,KAAK;;IAC5EA,IAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,IAAI,EAAE,CAAC;IACvDA,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC;IAC7CC,IAAI,SAAS,GAAG,KAAK,CAAC;;IAEtB,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,IAAI,EAAE,CAAC;;IAEtC,IAAI,KAAK,GAAG,gBAAgB,EAAE;QAC1B,OAAO,IAAI,CAAC;KACf;;IAED,KAAKA,IAAI,QAAQ,IAAI,OAAO,EAAE;QAC1B,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;YACxED,IAAM,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpC,IAAI,UAAU,CAAC,SAAS,CAAC,EAAE;gBACvB,SAAS,GAAG,IAAI,CAAC;gBACjB,IAAI,CAAC,MAAM,EAAE;oBACT,OAAO,CAAC,QAAQ,CAAC,GAAG,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;iBAC9E;aACJ,MAAM,IAAI,QAAQ,CAAC,SAAS,CAAC,EAAE;gBAC5B,IAAI,CAAC,MAAM,EAAE;oBACT,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;iBACvC;gBACD,KAAK,CAAC,KAAK,EAAE,CAAC;gBACd,SAAS,GAAG,WAAW,CAAC,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,IAAI,SAAS,CAAC;gBACxE,KAAK,CAAC,KAAK,EAAE,CAAC;aACjB;SACJ;KACJ;;IAED,OAAO,SAAS,CAAC;;;AClCN,SAAS,eAAe,CAAC,MAAM,EAAE;IAC5CA,IAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC;IAClCC,IAAI,UAAU,GAAG,CAAC,CAAC;;IAEnB,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;QAClC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC5D;;IAED,OAAO,UAAU,CAAC;;;ACMtB,IAAM,gBAAgB,GAAqB;IAAC,yBAC7B,CAAC,QAAQ,EAAE,OAAO,EAAE;QAC3BW,eAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;;QAEf,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC;QAC1C,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,kBAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;;;;QAInE,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;;QAE1B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;;QAEtB,IAAI,CAAC,MAAM,EAAE,CAAC;KACjB;;;;8DAAA;;IAED,2BAAA,MAAM,sBAAG;QACL,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACrD,CAAA;;IAED,2BAAA,YAAY,0BAAC,MAAM,EAAE,QAAQ,EAAE;QAC3BX,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC3C,IAAI,CAAC,OAAO,EAAE;YACVD,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC;YACrD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,OAAO,GAAG,UAAU,CAAC,GAAG,EAAE,QAAQ,EAAE;gBAC/D,QAAQ,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU;aACrC,EAAE,MAAM,CAAC,CAAC;SACd;;QAED,OAAO,OAAO,CAAC;KAClB,CAAA;;IAED,2BAAA,SAAS,uBAAC,KAAK,EAAE;QACb,IAAI,CAAC,KAAK,EAAE;YACR,OAAO,CAAC,CAAC;SACZ;;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YACpDA,IAAM,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;YACpCA,IAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;YACvDA,IAAM,WAAW,GAAG,EAAE,CAAC;YACvBC,IAAI,WAAW,GAAG,CAAC,CAAC;;YAEpB,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC5CD,IAAM,KAAK,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;gBAChC,IAAI,KAAK,EAAE;oBACPA,IAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;oBACjCA,IAAM,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;;oBAEtC,IAAI,CAAC,KAAK,IAAI,UAAU,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,UAAU,CAAC,KAAK,EAAE;wBAC3D,SAAS;qBACZ;;oBAED,IAAI,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;wBACvB,WAAW,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBACrC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;qBAC3C;iBACJ;aACJ;;YAED,IAAI,WAAW,GAAG,CAAC,EAAE;gBACjB,OAAO,KAAK,CAAC,KAAK,GAAG,WAAW,CAAC;aACpC;SACJ;;QAED,OAAO,KAAK,CAAC,KAAK,CAAC;KACtB,CAAA;;IAED,2BAAA,SAAS,uBAAC,KAAK,EAAE,UAAc,EAAE;0BAAN;+CAAA,GAAG,CAAC;;QAC3BA,IAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;;QAE7D,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;YACxBC,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACtCD,IAAM,QAAQ,GAAG,SAAS,IAAI,CAAC,CAAC;YAChCC,IAAI,SAAS,GAAG,UAAU,CAAC;YAC3BA,IAAI,YAAY,GAAG,KAAK,CAAC;;YAEzB,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC5CD,IAAM,KAAK,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;;gBAEhC,IAAI,KAAK,KAAK,KAAK,EAAE;oBACjB,MAAM;iBACT;;gBAEDA,IAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;gBACjCA,IAAM,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;gBACtC,IAAI,KAAK,IAAI,UAAU,EAAE;oBACrB,IAAI,OAAO,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,UAAU,EAAE;wBACjD,SAAS;qBACZ;;oBAED,IAAI,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,KAAK,UAAU,CAAC,KAAK,EAAE;wBACjD,SAAS;qBACZ;iBACJ;;gBAEDA,IAAM,UAAU,GAAGQ,MAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBACzC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,QAAQ,CAAC;oBAC7B,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;oBAC/B,SAAS,IAAI,UAAU,CAAC;oBACxB,SAAS,IAAI,UAAU,CAAC;oBACxB,YAAY,GAAG,IAAI,CAAC;;oBAEpB,IAAIA,MAAI,CAAC,OAAO,CAAC,YAAY,EAAE;wBAC3B,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;qBACtC;iBACJ;aACJ;;YAED,IAAI,YAAY,EAAE;gBACd,SAAS,IAAI,UAAU,CAAC;aAC3B;;YAED,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC;SACnC;;QAEDR,IAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC5BA,IAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QAC/CA,IAAM,iBAAiB,GAAG,IAAI,CAAC,yBAAyB,CAAC,SAAS,CAAC,CAAC;;QAEpE,OAAO,EAAE,iBAAiB,EAAE,KAAK,CAAC,KAAK,IAAI,iBAAiB,EAAE,CAAC;KAClE,CAAA;;IAED,2BAAA,WAAW,yBAAC,QAAQ,EAAE,SAAS,EAAE;;;QAC7BC,IAAI,GAAG,GAAG,SAAS,CAAC;QACpBA,IAAI,GAAG,GAAG,SAAS,CAAC;;QAEpB,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACjDD,IAAM,cAAc,GAAGQ,MAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,cAAc,EAAE;gBACjB,SAAS;aACZ;;YAED,KAAKP,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;gBAClDD,IAAM,KAAK,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC;gBAClC,IAAI,KAAK,EAAE;oBACP,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,KAAK,SAAS,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;wBACpEA,IAAM,EAAE,GAAGQ,MAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACvC,IAAI,OAAO,CAAC,EAAE,CAAC,IAAI,QAAQ,CAAC,EAAE,CAAC,EAAE;4BAC7B,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;4BACxB,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;yBAC3B;qBACJ;iBACJ;aACJ;SACJ;;QAED,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;KACjC,CAAA;;IAED,2BAAA,gBAAgB,gCAAG;;;QACf,OAAwC,GAAG,IAAI,CAAC,OAAO;QAA/C,IAAA,SAAS;QAAU,IAAA,WAAW,cAAhC;QACNR,IAAM,WAAW,GAAG,EAAE,CAAC;;QAEvB,IAAI,SAAS,EAAE;YACX,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzCD,IAAM,MAAM,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;gBAC9BA,IAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC;gBAC7BA,IAAM,GAAG,GAAG,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC;;gBAEpCC,IAAI,MAAM,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;gBAC9B,IAAI,CAAC,MAAM,EAAE;oBACT,MAAM,GAAGO,MAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;;oBAElDR,IAAM,WAAW,GAAGQ,MAAI,CAAC,WAAW,CAAC;oBACrC,IAAI,WAAW,EAAE;wBACb,IAAI,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE;4BAC7B,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,iBAAiB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;yBAClF;wBACD,IAAI,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE;4BAC7B,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,iBAAiB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;yBAClF;qBACJ;;oBAED,IAAI,MAAM,CAAC,GAAG,KAAK,SAAS,IAAI,MAAM,CAAC,GAAG,KAAK,SAAS,EAAE;wBACtD,WAAW,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;qBAC7B,MAAM;wBACH,MAAM,GAAG,IAAI,CAAC;qBACjB;iBACJ;;gBAED,IAAI,MAAM,EAAE;oBACRA,MAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC;iBAC3C;aACJ;SACJ;KACJ,CAAA;;IAED,2BAAA,WAAW,yBAAC,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE;QACjC,IAAQ,KAAK;QAAE,IAAA,MAAM;QAAE,IAAA,QAAQ,kBAAzB;QACNR,IAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC;QAC1CA,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QAC9CA,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;QAChDC,IAAI,UAAU,CAAC;;QAEf,IAAI,QAAQ,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,SAAS,CAAC,EAAE;YAC3C,UAAU,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;SACnD,MAAM,IAAI,SAAS,IAAI,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAC9C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,IAAI,EAAE,CAAC;YACtD,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;gBAC/D,IAAI,oBAAoB,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;;YAE7D,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;SACvF;;QAED,IAAI,UAAU,EAAE;YACZ,KAAK,CAAC,GAAG,GAAG,UAAU,CAAC,GAAG,CAAC;YAC3B,KAAK,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;YAC7B,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;SAC5C;KACJ,CAAA;;IAED,2BAAA,gBAAgB,8BAAC,KAAK,EAAE,UAAU,EAAE;QAChCD,IAAM,UAAU,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;QAC5CA,IAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC;QACxC,IAAM,MAAM;QAAE,IAAA,GAAG;QAAE,IAAA,IAAI,cAAnB;;QAEJ,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;YACxBA,IAAM,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;YACpE,GAAG,GAAG,iBAAiB,CAAC,GAAG,CAAC;YAC5B,IAAI,GAAG,iBAAiB,CAAC,IAAI,CAAC;SACjC,MAAM;YACHA,IAAM,MAAM,GAAG,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;YAC1D,IAAI,CAAC,WAAW,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,MAAM,CAAC,CAAC;YACzC,IAAI,CAAC,WAAW,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC;SAC7C;;QAEDA,IAAM,QAAQ,GAAG,IAAI,mBAAmB,CAAC,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QACvF,KAAK,CAAC,SAAS,GAAG,EAAE,QAAQ,EAAE,CAAC;QAC/B,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;KAC1B,CAAA;;IAED,2BAAA,iBAAiB,+BAAC,KAAK,EAAE,UAAU,EAAE;QACjCA,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;QAC5DA,IAAM,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,SAAS,CAAC;QAClCA,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC;;QAEpC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;;QAEtE,IAAI,GAAG,GAAG,CAAC,EAAE;YACT,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;SACrG;;QAED,IAAI,IAAI,GAAG,CAAC,EAAE;YACV,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;SACtG;;QAED,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;KACnC,CAAA;;IAED,2BAAA,QAAQ,sBAAC,IAAI,EAAE,MAAM,EAAE;QACnB,IAAQ,UAAU;QAAE,IAAA,MAAM;QAAE,IAAA,QAAQ,mBAA9B;;QAENC,IAAI,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QACrD,IAAI,CAAC,cAAc,EAAE;YACjB,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,GAAG,cAAc,GAAG,EAAE,CAAC;SACzD;;QAEDA,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAC/C,IAAI,CAAC,YAAY,EAAE;YACf,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,YAAY,GAAG,EAAE,CAAC;SACnD;;QAEDD,IAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC7C,IAAI,KAAK,EAAE;YACP,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;;YAE7B,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;YACnB,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACzC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YACtC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;SAC7C;;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;QAE3B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;KAC9C,CAAA;;IAED,2BAAA,gBAAgB,8BAAC,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE;QACrEA,IAAM,KAAK,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,SAAS,EAAE,QAAQ,EAAE,EAAE,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,qBAAqB,EAAE,qBAAqB,EAAE,EAAE,CAAC;;QAE/LC,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACxC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YAClB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,MAAM,GAAG,WAAW,CAAC,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;SAC/E;;QAEDA,IAAI,YAAY,GAAG,OAAO,CAAC;QAC3B,IAAI,MAAM,EAAE;YACR,YAAY,GAAG,UAAU,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;YAC5C,WAAW,CAAC,YAAY,EAAE;gBACtB,KAAK,EAAE,KAAK;gBACZ,QAAQ,EAAE,QAAQ;gBAClB,KAAK,EAAE,UAAU;gBACjB,MAAM,EAAE,MAAM;gBACd,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;aACpC,EAAE,KAAK,CAAC,CAAC;SACb;;QAED,OAAO,YAAY,CAAC;KACvB,CAAA;;IAED,2BAAA,WAAW,yBAAC,IAAI,EAAE,MAAM,EAAE;QACtBD,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;QACpCA,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzBC,IAAI,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;;QAE/C,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,IAAI,EAAE;YACnC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;gBACtC,SAAS,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC;;YAEpD,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;YAC/C,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;SAClD;KACJ,CAAA;;IAED,2BAAA,eAAe,6BAAC,MAAM,EAAE;QACpBD,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/BA,IAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC;QAC7BA,IAAM,IAAI,GAAG,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,SAAS,CAAC;;QAE/E,IAAI,CAAC,IAAI,EAAE;YACP,MAAM,IAAI,KAAK,CAAC,wCAAwC,GAAG,QAAQ,CAAC,CAAC;SACxE;;QAED,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,2BAAA,MAAM,oBAAC,SAAS,EAAE;;;QACdA,IAAM,aAAa,GAAG,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QAC9CA,IAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC;QAChCA,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACvCC,IAAI,OAAO,GAAG,CAAC,CAAC;;QAEhB,IAAI,CAAC,kBAAkB,CAAC,UAAC,IAAI,EAAE,MAAM,EAAE;YACnC,IAAQ,UAAU;YAAU,IAAA,aAAa,iBAAnC;;YAEND,IAAM,SAAS,GAAGQ,MAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;YACtDR,IAAM,KAAK,GAAG,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC;;YAErCC,IAAI,YAAY,GAAG,aAAa,CAAC,UAAU,CAAC,CAAC;YAC7C,IAAI,CAAC,YAAY,EAAE;gBACf,aAAa,CAAC,UAAU,CAAC,GAAG,YAAY;oBACpCO,MAAI,CAAC,YAAY,CAAC,YAAY,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;aAC9D;;YAED,IAAI,KAAK,EAAE;gBACPR,IAAM,SAAS,GAAGQ,MAAI,CAAC,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;gBAChER,IAAM,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,CAACQ,MAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACpF,IAAI,SAAS,EAAE;oBACXR,IAAM,SAAS,GAAGQ,MAAI,CAAC,SAAS,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;;oBAE1D,KAAK,CAAC,SAAS,GAAGA,MAAI,CAAC,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;oBACnD,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;;oBAEhC,IAAIA,MAAI,CAAC,OAAO,CAAC,YAAY,EAAE;wBAC3B,KAAK,CAAC,UAAU,GAAGA,MAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;qBAC5C;;oBAEDA,MAAI,CAAC,WAAW,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;iBACtC,MAAM;oBACH,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;iBACzB;aACJ;SACJ,CAAC,CAAC;;QAEH,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;;QAErC,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;KACxB,CAAA;;IAED,2BAAA,SAAS,uBAAC,KAAK,EAAE,SAAS,EAAE;QACxBR,IAAM,iBAAiB,GAAG,IAAI,CAAC,yBAAyB,CAAC,SAAS,CAAC,CAAC;QACpEA,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;;QAE1B,OAAO,SAAS,CAAC,OAAO,CAAC,OAAO;YAC5B,KAAK,GAAG,iBAAiB,GAAG,KAAK,IAAI,iBAAiB,CAAC;KAC9D,CAAA;;IAED,2BAAA,yBAAyB,uCAAC,SAAS,EAAE;QACjCA,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACvCA,IAAM,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC;QAClCA,IAAM,cAAc,GAAG,EAAE,CAAC,MAAM;YAC5B,OAAO,CAAC,kBAAkB,IAAI,OAAO,CAAC,iBAAiB;SAC1D,CAAC;;QAEF,OAAO,cAAc,CAAC,YAAY,CAAC,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;KAC3D,CAAA;;IAED,2BAAA,WAAW,yBAAC,KAAK,EAAE,SAAS,EAAE;QAC1B,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;KAC3B,CAAA;;IAED,2BAAA,gBAAgB,gCAAG,GAAG,CAAA;;IAEtB,2BAAA,SAAS,uBAAC,YAAY,EAAE,SAAS,EAAE;QAC/BA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;QACtCA,IAAM,KAAK,GAAG,UAAU,GAAG,SAAS,GAAG,YAAY,CAAC;QACpDA,IAAM,KAAK,GAAG,UAAU,GAAG,YAAY,GAAG,SAAS,CAAC;;QAEpD,OAAO,IAAI,GAAG,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;KAC1D,CAAA;;IAED,2BAAA,YAAY,0BAAC,YAAY,EAAE,UAAU,EAAE;QACnC,OAAO,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;KAC3C,CAAA;;IAED,2BAAA,kBAAkB,gCAAC,QAAQ,EAAE;;;QACzBA,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACnCA,IAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC;QAC9DA,IAAM,KAAK,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;QACtCA,IAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC;;QAElC,KAAKC,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,WAAW,EAAE,QAAQ,EAAE,EAAE;YACvDO,MAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,qBAAqB,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;SACzF;;QAED,KAAKP,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,KAAK,EAAE,UAAU,EAAE,EAAE;YACvD,KAAKA,IAAIyB,UAAQ,GAAG,CAAC,EAAEA,UAAQ,GAAG,WAAW,EAAEA,UAAQ,EAAE,EAAE;gBACvD1B,IAAM,aAAa,GAAG,MAAM,CAAC0B,UAAQ,CAAC,CAAC;gBACvC1B,IAAM,eAAe,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC;gBAC/CA,IAAM,SAAS,GAAGQ,MAAI,CAAC,UAAU,CAAC,aAAa,EAAEkB,UAAQ,EAAE,UAAU,CAAC,CAAC;;gBAEvE,QAAQ,CAAC,SAAS,EAAE;oBAChB,QAAQ,EAAE,eAAe;oBACzB,UAAU,EAAE,UAAU;oBACtB,MAAM,EAAE,aAAa;oBACrB,QAAQ,EAAEA,UAAQ;iBACrB,CAAC,CAAC;aACN;SACJ;;QAED,KAAKzB,IAAIyB,UAAQ,GAAG,CAAC,EAAEA,UAAQ,GAAG,WAAW,EAAEA,UAAQ,EAAE,EAAE;YACvDlB,MAAI,CAAC,mBAAmB,CAAC,MAAM,CAACkB,UAAQ,CAAC,EAAE,qBAAqB,EAAEA,UAAQ,EAAE,QAAQ,CAAC,CAAC;SACzF;KACJ,CAAA;;IAED,2BAAA,mBAAmB,iCAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE;QACnD1B,IAAM,eAAe,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QACtC,IAAI,eAAe,EAAE;YACjBA,IAAM,UAAU,GAAG,eAAe,CAAC,UAAU,CAAC;YAC9CA,IAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,eAAe,CAAC,IAAI,CAAC,CAAC;;YAEtF,QAAQ,CAAC,SAAS,EAAE;gBAChB,QAAQ,EAAE,eAAe,CAAC,QAAQ;gBAClC,UAAU,EAAE,UAAU;gBACtB,MAAM,EAAE,MAAM;gBACd,QAAQ,EAAE,QAAQ;aACrB,CAAC,CAAC;SACN;KACJ,CAAA;;IAED,2BAAA,UAAU,wBAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,IAAI,EAAE;QAC3C,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAClB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;SACxB;;QAEDC,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAC1C,IAAI,CAAC,SAAS,EAAE;YACZ,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;SAC9C;;QAEDA,IAAI,IAAI,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC;QACjC,IAAI,CAAC,IAAI,EAAE;YACP,IAAI,GAAG,SAAS,CAAC,UAAU,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;SAC3F;;QAED,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,2BAAA,gBAAgB,8BAAC,KAAK,EAAE,MAAM,EAAE;QAC5B,IAAI,KAAK,CAAC,KAAK,KAAK,IAAI,EAAE;YACtB,OAAO,EAAE,CAAC;SACb;;QAED,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;KAC7D,CAAA;;IAED,2BAAA,UAAU,wBAAC,IAAI,EAAE;QACb,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;KACjC,CAAA;;;EAve0B,YAwe9B,GAAA;;AAED,iBAAiB,CAAC,gBAAgB,EAAE;IAChC,MAAM,EAAE,EAAE;IACV,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE,KAAK;IAChB,IAAI,EAAE,IAAI;CACb,CAAC,CAAC,AAEH;;AC5fAD,IAAM,gBAAgB,GAAG;IACrB,KAAK,EAAE,SAAS,KAAK,EAAE,CAAC,EAAE;QACtB,OAAO,KAAK,CAAC,OAAO;YAChB,YAAY;YACZ,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;SACpB,CAAC;KACL;;IAED,KAAK,EAAE,SAAS,KAAK,EAAE,CAAC,EAAE;QACtB,OAAO,KAAK,CAAC,OAAO;YAChB,YAAY;YACZ,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;SACpB,CAAC;KACL;;IAED,SAAS,EAAE,SAAS,CAAC,EAAE;QACnB,OAAO;YACH,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,OAAO,EAAE,YAAY,CAAC,CAAC,CAAC;YACxB,aAAa,EAAE,CAAC;YAChB,KAAK,EAAE,IAAI;SACd,CAAC;KACL;CACJ,CAAC,AAEF;;AChCAA,IAAM,SAAS,GAAG;IACd,UAAU,EAAE,WAAW;QACnBA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QACnCA,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC;;QAEjD,IAAI,OAAO,CAAC,OAAO,KAAK,KAAK,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,IAAI,EAAE;YAC7D,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC;gBACjB,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,IAAI,EAAE,IAAI;gBACV,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,MAAM,EAAE,IAAI,CAAC,MAAM;aACtB,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;;YAEhD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1B;KACJ;CACJ,CAAC,AAEF;;ACXAA,IAAM,KAAK,GAAG,OAAO,CAAC;AACtBA,IAAM,KAAK,GAAG,OAAO,CAAC;;AAEtB,IAAM,SAAS,GAAqB;IAAC,kBACtB,CAAC,KAAK,EAAE,OAAO,EAAE;QACxBY,eAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAER,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAC9D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;KAC/B;;;;gDAAA;;IAED,oBAAA,MAAM,sBAAG;QACL,OAAyB,GAAG,IAAI,CAAC,OAAO;QAAhC,IAAA,OAAO;QAAE,IAAA,MAAM,cAAjB;;QAEN,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,OAAO;SACV;;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;;QAEtB,IAAI,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE;YACjC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC5B;;QAED,IAAI,MAAM,CAAC,OAAO,EAAE;YAChBZ,IAAM,aAAa,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;YAC1CC,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;YAC3B,IAAI,aAAa,EAAE;gBACf,SAAS,GAAG,aAAa,CAAC;oBACtB,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,UAAU,EAAE,IAAI,CAAC,UAAU;oBAC3B,UAAU,EAAE,IAAI,CAAC,UAAU;oBAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;iBACtB,CAAC,CAAC;aACN,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE;gBACtB,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;aAC/C;YACD,IAAI,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,SAAS;gBAC9B,UAAU,CAAC;oBACP,KAAK,EAAE,MAAM;oBACb,MAAM,EAAE,MAAM;oBACd,MAAM,EAAE;wBACJ,IAAI,EAAE,CAAC;wBACP,KAAK,EAAE,CAAC;qBACX;oBACD,MAAM,EAAE,cAAc,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;iBAC5D,EAAE,MAAM,CAAC;aACb,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC3B;;QAED,IAAI,CAAC,UAAU,EAAE,CAAC;;QAElB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC9B;KACJ,CAAA;;IAED,oBAAA,YAAY,4BAAG;QACXD,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACrCA,IAAM,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;QACtCA,IAAM,MAAM,GAAG,UAAU,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;;QAEjE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YACxB,MAAM,CAAC,KAAK,GAAG,IAAI2B,4BAAK,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC,KAAK,EAAE,CAAC;SAC9E;;QAED,OAAO,MAAM,CAAC;KACjB,CAAA;;IAED,oBAAA,YAAY,4BAAG,EAAE,CAAA;;IAEjB,oBAAA,YAAY,4BAAG;QACX3B,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACrCA,IAAM,MAAM,GAAG,IAAI,YAAY,CAAC;YAC5B,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,KAAK,EAAE,OAAO,CAAC,IAAI;YACnB,MAAM,EAAE,OAAO,CAAC,IAAI;YACpB,QAAQ,EAAE,OAAO,CAAC,QAAQ;YAC1B,UAAU,EAAE,OAAO,CAAC,UAAU;YAC9B,MAAM,EAAE,IAAI,CAAC,YAAY,EAAE;YAC3B,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,MAAM,EAAE,cAAc,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YAC1D,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,MAAM,EAAE,OAAO,CAAC,MAAM;SACzB,EAAE;YACC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SAC1B,CAAC,CAAC;;QAEH,OAAO,MAAM,CAAC;KACjB,CAAA;;IAED,oBAAA,SAAS,yBAAG;QACR,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YAClC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACtC;;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;KAC1B,CAAA;;IAED,oBAAA,MAAM,oBAAC,SAAS,EAAE;;;QACd,OAA4B,GAAG,IAAI;QAA3B,IAAA,OAAO;QAAE,IAAA,SAAS,iBAApB;QACNA,IAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;;QAElC,IAAI,CAAC,MAAM,EAAE,CAAC;;QAEd,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;QACrBA,IAAM,QAAQ,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;;QAEnC,IAAI,QAAQ,EAAE;YACV,IAAI,SAAS,EAAE;gBACX,QAAQ,CAAC,EAAE,IAAI,QAAQ,CAAC,MAAM,EAAE,CAAC;aACpC,MAAM;gBACH,QAAQ,CAAC,EAAE,IAAI,QAAQ,CAAC,MAAM,EAAE,CAAC;aACpC;SACJ,MAAM;YACH,IAAI,SAAS,EAAE;gBACX,QAAQ,CAAC,EAAE,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC;aACnC,MAAM;gBACH,QAAQ,CAAC,EAAE,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC;aACnC;SACJ;;QAED,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SAChC;;QAED,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;;QAE3B,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC5CO,MAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;aACtC;SACJ;;QAED,IAAI,IAAI,CAAC,IAAI,EAAE;YACXP,IAAI,aAAa,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;;YAErC,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBACpDD,IAAM,MAAM,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC;gBACtC,aAAa,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;aACnE;;YAED,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;SACnC;KACJ,CAAA;;IAED,oBAAA,WAAW,yBAAC,GAAG,EAAE;QACb,OAAwB,GAAG,IAAI;QAAvB,IAAA,OAAO;QAAE,IAAA,KAAK,aAAhB;QACNC,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC;;QAErC,IAAI,KAAK,EAAE;YACP,MAAM,GAAG,MAAM,KAAK,KAAK,GAAG,GAAG,GAAG,MAAM,CAAC;YACzC,MAAM,GAAG,MAAM,KAAK,KAAK,GAAG,MAAM,GAAG,MAAM,CAAC;;YAE5C,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAClB,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,CAAC,CAAC;YAC5C,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAC3B;KACJ,CAAA;;IAED,oBAAA,eAAe,+BAAG;QACdD,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC;QAC/CA,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC,KAAK,CAAC;QAC/CA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACrCA,IAAM,IAAI,GAAG,OAAO,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;;QAEtFA,IAAM,MAAM,GAAG,IAAI,YAAY,CAAC;YAC5B,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,KAAK,EAAE,IAAI;YACX,MAAM,EAAE,IAAI;YACZ,QAAQ,EAAE,OAAO,CAAC,QAAQ;YAC1B,UAAU,EAAE,OAAO,CAAC,KAAK,IAAI,YAAY;YACzC,MAAM,EAAE;gBACJ,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK;gBAC3B,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK;gBAC3B,OAAO,EAAE,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC;aACrD;YACD,OAAO,EAAE,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;SAC9C,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;;QAE9B,OAAO,MAAM,CAAC,UAAU,EAAE,CAAC;KAC9B,CAAA;;IAED,oBAAA,eAAe,+BAAG;QACd,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC;KACrC,CAAA;;IAED,oBAAA,mBAAmB,mCAAG;QAClBA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3BC,IAAI,MAAM,EAAE,IAAI,CAAC;;QAEjB,IAAI,MAAM,EAAE;YACR,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;YAClC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;SAC1B,MAAM;YACHD,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC;YACvCA,IAAM,QAAQ,GAAG,IAAI,GAAG,CAAC,CAAC;YAC1BA,IAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;YACjC,IAAI,GAAG,IAAIc,+BAAI,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,QAAQ,EAAE,MAAM,CAAC,CAAC,GAAG,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;SACtF;;QAED,OAAO;YACH,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,IAAI,EAAE,IAAI;YACV,MAAM,EAAE,MAAM;SACjB,CAAC;KACL,CAAA;;IAED,oBAAA,aAAa,6BAAG;QACZd,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QACnCA,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QAC1CA,IAAM,WAAW,GAAG,CAAC,OAAO,IAAI,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;;QAE5D,IAAI,WAAW,EAAE;YACbA,IAAM,CAAC,GAAG,SAAS,CAAC,EAAE,GAAG,cAAc,CAAC;YACxCA,IAAM,eAAe,GAAG,IAAI,CAAC;YAC7BC,IAAI,CAAC,EAAE,aAAa,CAAC;;YAErB,IAAI,IAAI,CAAC,SAAS,EAAE;gBAChB,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC;gBACjB,aAAa,GAAG,MAAM,CAAC;aAC1B,MAAM;gBACH,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC;gBACjB,aAAa,GAAG,GAAG,CAAC;aACvB;;YAED,OAAO;gBACH,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;gBACtB,KAAK,EAAE;oBACH,UAAU,EAAE,eAAe;oBAC3B,QAAQ,EAAE,aAAa;iBAC1B;aACJ,CAAC;SACL;KACJ,CAAA;;IAED,oBAAA,WAAW,yBAAC,MAAM,EAAE;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;KACpD,CAAA;;IAED,oBAAA,WAAW,yBAAC,GAAG,EAAE;QACbD,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QACnC,OAAO,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;KAClC,CAAA;;;EA5PmB,YA6PvB,GAAA;;AAED,SAAS,CAAC,SAAS,CAAC,QAAQ,GAAG;IAC3B,QAAQ,EAAE,IAAI;IACd,OAAO,EAAE;QACL,OAAO,EAAE,IAAI;QACb,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,gBAAgB;QACtB,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE;YACJ,KAAK,EAAE,CAAC;SACX;QACD,OAAO,EAAE,CAAC;KACb;IACD,MAAM,EAAE;QACJ,OAAO,EAAE,KAAK;QACd,QAAQ,EAAE,KAAK;QACf,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC;QACrB,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC;QACtB,SAAS,EAAE;YACP,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,0BAA0B;SACpC;KACJ;IACD,KAAK,EAAE;QACH,KAAK,EAAE,EAAE;KACZ;IACD,SAAS,EAAE;QACP,OAAO,EAAE;YACL,MAAM,EAAE;gBACJ,KAAK,EAAE,MAAM;gBACb,KAAK,EAAE,CAAC;aACX;SACJ;KACJ;IACD,SAAS,EAAE;QACP,IAAI,EAAE;YACF,KAAK,EAAE,CAAC;SACX;KACJ;CACJ,CAAC;;AAEF,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC;AAClD,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,AAE3C,AAAyB;;AClTzB,IAAM,WAAW,GAAqB;IAAC,oBACxB,CAAC,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE;QACtCY,eAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAER,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC5B;;;;oDAAA;;IAED,sBAAA,MAAM,oBAAC,YAAY,EAAE;QACjBZ,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,YAAY,IAAI,EAAE,CAAC,CAAC;QAC9DA,IAAM,MAAM,GAAG,EAAE,CAAC;;QAElB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YACzD,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,KAAK,EAAE;gBACjC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC;aAC1D;SACJ;;QAED,OAAO,MAAM,CAAC;KACjB,CAAA;;IAED,sBAAA,YAAY,4BAAG;QACX,OAAyB,GAAG,IAAI;QAAxB,IAAA,OAAO;QAAE,IAAA,MAAM,cAAjB;QACN,IAAM,KAAK;QAAa,IAAA,QAAQ,oBAA5B;;QAEJ,IAAI,UAAU,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;YAC/B,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;SAC1B;;QAEDD,IAAM,IAAI,GAAGe,8BAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE;YAC7C,MAAM,EAAE;gBACJ,KAAK,EAAE,KAAK;gBACZ,KAAK,EAAE,MAAM,CAAC,KAAK;gBACnB,OAAO,EAAE,MAAM,CAAC,OAAO;gBACvB,QAAQ,EAAE,MAAM,CAAC,QAAQ;aAC5B;YACD,MAAM,EAAE,MAAM,CAAC,MAAM;SACxB,CAAC,CAAC;;QAEH,IAAI,OAAO,CAAC,MAAM,EAAE;YAChB,IAAI,CAAC,KAAK,EAAE,CAAC;SAChB;;QAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;KACtB,CAAA;;IAED,sBAAA,QAAQ,sBAAC,CAAC,EAAE,MAAM,EAAE;QAChB,OAAO,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;KACzE,CAAA;;;EAjDqB,YAkDzB,GAAA;;AAED,iBAAiB,CAAC,WAAW,EAAE;IAC3B,MAAM,EAAE,KAAK;CAChB,CAAC,CAAC,AAEH;;ACtDA,IAAM,eAAe,GAAoB;IAAC;;;;;;;;IAAA,0BACtC,MAAM,oBAAC,YAAY,EAAE;QACjBd,IAAI,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;QAEvD,IAAI,YAAY,IAAI,YAAY,CAAC,MAAM,EAAE;YACrC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;SAC5E;;QAED,OAAO,MAAM,CAAC;KACjB,CAAA;;IAED,0BAAA,mBAAmB,iCAAC,MAAM,EAAE;QACxBD,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1BA,IAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAChCA,IAAM,YAAY,GAAG,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC9DA,IAAM,aAAa,GAAG,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,WAAW,CAAC;QAC7EA,IAAM,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;QAC7CA,IAAM,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC;QAC/CA,IAAM,GAAG,GAAG,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;QAC5BA,IAAM,MAAM,GAAG,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;QAC/BA,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC7BA,IAAM,MAAM,GAAG,EAAE,CAAC;;QAElB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7BD,IAAM,SAAS,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAChCA,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACxBA,IAAM,mBAAmB,GAAG,SAAS,CAAC,SAAS,EAAE,CAAC,MAAM,EAAE,CAAC;YAC3DA,IAAM,eAAe,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC,MAAM,EAAE,CAAC;YACnD,IAAI,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE;gBAChC,MAAM,CAAC,IAAI,CAAC,IAAIc,+BAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC,EAAE,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1E,IAAI,QAAQ,EAAE;oBACV,MAAM,CAAC,IAAI,CAAC,IAAIA,+BAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;iBACzE,MAAM;oBACH,MAAM,CAAC,IAAI,CAAC,IAAIA,+BAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,EAAE,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;iBACzE;gBACD,MAAM,CAAC,IAAI,CAAC,IAAIA,+BAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;aACrE,MAAM;gBACH,IAAI,QAAQ,EAAE;oBACV,MAAM,CAAC,IAAI,CAAC,IAAIA,+BAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC3E,MAAM,CAAC,IAAI,CAAC,IAAIA,+BAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;oBAC9E,IAAI,aAAa,EAAE;wBACf,MAAM,CAAC,IAAI,CAAC,IAAIA,+BAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;qBAC1E;oBACD,MAAM,CAAC,IAAI,CAAC,IAAIA,+BAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;oBACnE,MAAM,CAAC,IAAI,CAAC,IAAIA,+BAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;iBACzE,MAAM;oBACH,MAAM,CAAC,IAAI,CAAC,IAAIA,+BAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC3E,MAAM,CAAC,IAAI,CAAC,IAAIA,+BAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,EAAE,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC9E,IAAI,aAAa,EAAE;wBACf,MAAM,CAAC,IAAI,CAAC,IAAIA,+BAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC1E;oBACD,MAAM,CAAC,IAAI,CAAC,IAAIA,+BAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;oBACnE,MAAM,CAAC,IAAI,CAAC,IAAIA,+BAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;iBACzE;aACJ;SACJ;;QAED,OAAO,MAAM,IAAI,EAAE,CAAC;KACvB,CAAA;;;EA1DyB,WA2D7B,GAAA,AAED;;AC7DA,IAAM,aAAa,GAAoB;IAAC;;;;;;;;IAAA,wBACpC,YAAY,4BAAG;QACXd,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3BA,IAAM,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC;QAClCC,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;;QAEzB,IAAI,UAAU,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;YAC/B,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;SAC1B;;QAEDD,IAAM,cAAc,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC/DA,IAAM,QAAQ,GAAG,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;QACvDA,IAAM,KAAK,GAAG,IAAIe,8BAAI,CAAC,IAAI,CAAC;YACxB,MAAM,EAAE;gBACJ,KAAK,EAAE,KAAK;gBACZ,KAAK,EAAE,MAAM,CAAC,KAAK;gBACnB,OAAO,EAAE,MAAM,CAAC,OAAO;gBACvB,QAAQ,EAAE,MAAM,CAAC,QAAQ;aAC5B;YACD,MAAM,EAAE,MAAM,CAAC,MAAM;SACxB,CAAC,CAAC;;QAEH,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;;QAEpD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACvB,CAAA;;;EAzBuB,WA0B3B,GAAA,AAED;;AC9BAf,IAAM,cAAc,GAAG;IACnB,cAAc,EAAE,WAAW;;;QACvB,OAA+B,GAAG,IAAI;QAA9B,IAAA,OAAO;QAAE,IAAA,YAAY,oBAAvB;QACNA,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAC9BA,IAAM,WAAW,GAAG,YAAY,CAAC,MAAM,CAAC;QACxCC,IAAI,WAAW,CAAC;;QAEhB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;;QAEpB,KAAKA,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,WAAW,EAAE,QAAQ,EAAE,EAAE;YACvDD,IAAM,aAAa,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;YACvCA,IAAM,YAAY,GAAGQ,MAAI,CAAC,UAAU,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC7DR,IAAM,UAAU,GAAG,YAAY,CAAC,MAAM,CAAC;YACvCC,IAAI,UAAU,GAAG,EAAE,CAAC;;YAEpB,KAAKA,IAAI,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,UAAU,EAAE,OAAO,EAAE,EAAE;gBACnDD,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;gBACpC,IAAI,KAAK,EAAE;oBACP,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC1B,MAAM,IAAIQ,MAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,WAAW,EAAE;oBAChE,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;wBACvB,WAAW,GAAGA,MAAI,CAAC,aAAa;4BAC5B,UAAU,EAAE,aAAa,EAAE,QAAQ,EAAE,WAAW;yBACnD,CAAC;wBACFA,MAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;qBACjC;oBACD,UAAU,GAAG,EAAE,CAAC;iBACnB;aACJ;;YAED,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvB,WAAW,GAAGA,MAAI,CAAC,aAAa;oBAC5B,UAAU,EAAE,aAAa,EAAE,QAAQ,EAAE,WAAW;iBACnD,CAAC;gBACFA,MAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;aACjC;SACJ;;QAED,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;KAC9D;;IAED,WAAW,EAAE,SAAS,OAAO,EAAE;QAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC7B,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;KACzB;;IAED,UAAU,EAAE,SAAS,MAAM,EAAE;QACzB,OAAO,MAAM,CAAC;KACjB;;IAED,mBAAmB,EAAE,SAAS,MAAM,EAAE;QAClCR,IAAM,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;QAC3CA,IAAM,UAAU,GAAG,CAAC,aAAa,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;;QAE5D,OAAO,UAAU,GAAG,IAAI,GAAG,aAAa,IAAI,WAAW,CAAC;KAC3D;;IAED,eAAe,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE;QACtCA,IAAM,MAAM,GAAG,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/BA,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAC9CC,IAAI,oBAAoB,GAAG,SAAS,CAAC;QACrCA,IAAI,YAAY,CAAC;;QAEjB,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvCD,IAAM,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;;YAE3B,IAAI,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,IAAI,IAAI,KAAK,CAAC,OAAO,KAAK,KAAK,EAAE;gBAClFA,IAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC;gBAC3BA,IAAM,aAAa,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;;gBAE3D,IAAI,aAAa,GAAG,oBAAoB,EAAE;oBACtC,YAAY,GAAG,KAAK,CAAC;oBACrB,oBAAoB,GAAG,aAAa,CAAC;iBACxC;aACJ;SACJ;;QAED,OAAO,YAAY,CAAC;KACvB;CACJ,CAAC,AAEF;;ACjFA,IAAM,aAAa,GAAuB;IAAC;;;;;;;;IAAA,wBACvC,KAAK,qBAAG;QACJ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;KACrC,CAAA;;IAED,wBAAA,IAAI,kBAAC,GAAG,EAAE;QACNA,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;KACvD,CAAA;;IAED,wBAAA,OAAO,qBAAC,CAAC,EAAE;QACPA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QAClCA,IAAM,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;QACtCA,IAAM,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;;QAEzC,OAAO,CAAC,OAAO,EAAE,CAAC;QAClB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACjB,OAAO,CAAC,MAAM,EAAE,CAAC;QACjB,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACvB,CAAA;;;EApBuBe,8BAAI,CAAC,SAqBhC,GAAA;;AAED,iBAAiB,CAAC,aAAa,EAAE;IAC7B,QAAQ,EAAE,0BAA0B;CACvC,CAAC,CAAC;;AAEHA,8BAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC,AAE9D;;ACjCe,SAAS,YAAY,CAAC,QAAQ,EAAE;IAC3C,KAAKd,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;QAC5C,IAAI,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE;YAC/B,OAAO,IAAI,CAAC;SACf;KACJ;;;ACDLD,IAAM,kBAAkB,GAAG;IACvB,eAAe,EAAE,WAAW;QACxBA,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,WAAW,KAAK,KAAK,EAAE;YACpDA,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;YACrBA,IAAM,QAAQ,GAAGe,8BAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;YAClD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,aAAa,CAAC,QAAQ,EAAE;gBACzC,GAAG,EAAE,GAAG;aACX,CAAC,CAAC;YACH,IAAI,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;gBACnC,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;aACxC;SACJ;KACJ;;IAED,qBAAqB,EAAE,SAAS,QAAQ,EAAE;QACtCf,IAAM,MAAM,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;;QAEtC,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YAC1CD,IAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;YAC1B,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;gBAC/D,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC/B;SACJ;KACJ;CACJ,CAAC,AAEF;;ACtBA,IAAM,SAAS,GAAyB;IAAC;;;;;;;;IAAA,oBACrC,MAAM,sBAAG;;QAELY,6BAAK,CAAC,MAAM,KAAA,CAAC,IAAA,CAAC,CAAC;;QAEf,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,cAAc,EAAE,CAAC;KACzB,CAAA;;IAED,oBAAA,SAAS,yBAAG;QACR,OAAO,SAAS,CAAC;KACpB,CAAA;;IAED,oBAAA,WAAW,yBAAC,IAAI,EAAE,MAAM,EAAE;QACtB,IAAQ,UAAU;QAAE,IAAA,QAAQ;QAAE,IAAA,MAAM;QAAE,IAAA,QAAQ,mBAAxC;QACNZ,IAAM,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;QACvDC,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;;QAEnC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,IAAI,EAAE;YACnC,IAAI,aAAa,KAAK,IAAI,EAAE;gBACxB,KAAK,GAAG,CAAC,CAAC;aACb,MAAM;gBACH,OAAO,IAAI,CAAC;aACf;SACJ;;QAEDA,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACvD,YAAY,GAAG,IAAI,CAAC,gBAAgB;YAChC,YAAY,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ;SAC9D,CAAC;;QAEFA,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC;QAC9C,IAAI,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YAC1B,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC;SAC9B;;QAEDD,IAAM,KAAK,GAAG,IAAI,SAAS,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;QACjD,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;;QAEpB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;;QAEnB,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,oBAAA,SAAS,uBAAC,KAAK,EAAE;;;QACbC,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;;QAEtC,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;YACxBD,IAAM,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;YACpCA,IAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;;YAEvD,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC5CD,IAAM,KAAK,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;;gBAEhC,IAAI,KAAK,KAAK,KAAK,EAAE;oBACjB,MAAM;iBACT;;gBAED,SAAS,IAAIQ,MAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;;gBAEnC,IAAIA,MAAI,CAAC,OAAO,CAAC,YAAY,EAAE;oBAC3B,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;iBACtC;aACJ;;SAEJ;;QAED,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC;KACnC,CAAA;;IAED,oBAAA,aAAa,2BAAC,UAAU,EAAE,aAAa,EAAE,QAAQ,EAAE;QAC/CR,IAAM,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC;QAClCC,IAAI,SAAS,CAAC;;QAEd,IAAI,KAAK,KAAK,IAAI,EAAE;YAChB,SAAS,GAAG,eAAe,CAAC;SAC/B,MAAM,IAAI,KAAK,KAAK,MAAM,EAAE;YACzB,SAAS,GAAG,aAAa,CAAC;SAC7B,MAAM;YACH,SAAS,GAAG,WAAW,CAAC;SAC3B;;QAED,OAAO,IAAI,SAAS,CAAC,UAAU,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;KAC7D,CAAA;;IAED,oBAAA,eAAe,+BAAG;QACdD,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3BA,IAAM,MAAM,GAAG,EAAE,CAAC;QAClB,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YAC1C,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;SAC3C;QACD,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACxC,CAAA;;;EA5FmB,gBA6FvB,GAAA;;AAED,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,cAAc,EAAE,kBAAkB,CAAC,CAAC,AAEpE;;ACxGAD,IAAM,gBAAgB,GAAG;IACrB,MAAM,EAAE,WAAW;QACfA,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1BA,IAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAChCA,IAAM,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC;QAC5CA,IAAM,SAAS,GAAG,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrDA,IAAM,gBAAgB,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC;QAC7CA,IAAM,YAAY,GAAG,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC9DA,IAAM,mBAAmB,GAAG,YAAY,CAAC,OAAO,EAAE,CAAC;QACnDA,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACrCA,IAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QAC7CA,IAAM,GAAG,GAAG,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;QAC/BC,IAAI,GAAG,GAAG,UAAU,GAAG,mBAAmB,CAAC,EAAE,GAAG,mBAAmB,CAAC,EAAE,CAAC;;QAEvE,GAAG,GAAG,UAAU,CAAC,GAAG,EAAE,gBAAgB,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,gBAAgB,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QAC5E,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACxCD,IAAM,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YAC7BA,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;;YAE/B,IAAI,UAAU,EAAE;gBACZ,MAAM,CAAC,OAAO,CAAC,IAAIc,+BAAI,CAAC,KAAK,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClD,MAAM,CAAC,IAAI,CAAC,IAAIA,+BAAI,CAAC,KAAK,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;aACjD,MAAM;gBACH,MAAM,CAAC,OAAO,CAAC,IAAIA,+BAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;gBAClD,MAAM,CAAC,IAAI,CAAC,IAAIA,+BAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;aACjD;SACJ;;QAED,OAAO,MAAM,CAAC;KACjB;;IAED,YAAY,EAAE,WAAW;QACrBd,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3BA,IAAM,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC;QAClCC,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;;QAEzB,IAAI,UAAU,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;YAC/B,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;SAC1B;;QAED,IAAI,CAAC,MAAM,GAAG,IAAIc,8BAAI,CAAC,KAAK,CAAC;YACzB,MAAM,EAAE,MAAM,CAAC,MAAM;SACxB,CAAC,CAAC;;QAEH,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACvB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;KAC1B;;IAED,UAAU,EAAE,SAAS,KAAK,EAAE;QACxBf,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3BA,IAAM,WAAW,GAAG,UAAU,CAAC;YAC3B,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,MAAM,CAAC,OAAO;SAC1B,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;;QAEhB,IAAI,WAAW,CAAC,OAAO,KAAK,KAAK,IAAI,WAAW,CAAC,KAAK,GAAG,CAAC,EAAE;YACxDA,IAAM,IAAI,GAAGe,8BAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;gBAClD,MAAM,EAAE;oBACJ,KAAK,EAAE,WAAW,CAAC,KAAK;oBACxB,KAAK,EAAE,WAAW,CAAC,KAAK;oBACxB,OAAO,EAAE,WAAW,CAAC,OAAO;oBAC5B,QAAQ,EAAE,WAAW,CAAC,QAAQ;oBAC9B,OAAO,EAAE,MAAM;iBAClB;aACJ,CAAC,CAAC;;YAEH,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC5B;KACJ;;IAED,UAAU,EAAE,SAAS,KAAK,EAAE;QACxBf,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;;QAE3BA,IAAM,IAAI,GAAGe,8BAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE;YAC7C,IAAI,EAAE;gBACF,KAAK,EAAE,KAAK;gBACZ,OAAO,EAAE,MAAM,CAAC,OAAO;aAC1B;YACD,MAAM,EAAE,IAAI;SACf,CAAC,CAAC;;QAEH,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAC5B;CACJ,CAAC,AAEF;;ACrFA,IAAM,WAAW,GAAoB;IAAC,oBACvB,CAAC,UAAU,EAAE,WAAW,EAAE,aAAa,EAAE,QAAQ,EAAE;QAC1DH,cAAK,KAAA,CAAC,MAAA,UAAU,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;;QAE3C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAClC;;;;oDAAA;;;EALqB,WAMzB,GAAA;;AAED,UAAU,CAAC,WAAW,CAAC,SAAS,EAAE,gBAAgB,EAAE;IAChD,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,MAAM;CAC5C,CAAC,CAAC,AAEH;;ACZA,IAAM,eAAe,GAAwB;IAAC,wBAC/B,CAAC,UAAU,EAAE,WAAW,EAAE,aAAa,EAAE,QAAQ,EAAE;QAC1DA,kBAAK,KAAA,CAAC,MAAA,UAAU,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;;QAE3C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAClC;;;;4DAAA;;;EALyB,eAM7B,GAAA;;AAED,UAAU,CAAC,eAAe,CAAC,SAAS,EAAE,gBAAgB,EAAE;IACpD,WAAW,EAAE,eAAe,CAAC,SAAS,CAAC,MAAM;CAChD,CAAC,CAAC,AAEH;;ACPA,IAAM,iBAAiB,GAAoB;IAAC,0BAC7B,CAAC,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,aAAa,EAAE,QAAQ,EAAE;QACrEA,cAAK,KAAA,CAAC,MAAA,UAAU,EAAE,EAAE,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;;QAE/C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC9B;;;;gEAAA;;IAED,4BAAA,cAAc,8BAAG;QACbX,IAAI,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC;;QAEpC,IAAI,CAAC,QAAQ,EAAE;YACXD,IAAM,cAAc,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC/DA,IAAM,UAAU,GAAG,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC3D,QAAQ,GAAG,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SACxE;;QAED,OAAO,QAAQ,CAAC;KACnB,CAAA;;IAED,4BAAA,YAAY,4BAAG;QACXA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3BA,IAAM,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC;QAClCC,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;;QAEzB,IAAI,UAAU,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;YAC/B,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;SAC1B;;QAED,IAAI,CAAC,MAAM,GAAG,IAAIc,8BAAI,CAAC,KAAK,CAAC;YACzB,MAAM,EAAE,MAAM,CAAC,MAAM;SACxB,CAAC,CAAC;;QAEH,IAAI,CAAC,UAAU,CAAC;YACZ,IAAI,EAAE;gBACF,KAAK,EAAE,KAAK;gBACZ,OAAO,EAAE,MAAM,CAAC,OAAO;aAC1B;YACD,MAAM,EAAE,IAAI;SACf,CAAC,CAAC;;QAEH,IAAI,CAAC,YAAY,CAAC;YACd,MAAM,EAAE,UAAU,CAAC;gBACf,KAAK,EAAE,KAAK;gBACZ,OAAO,EAAE,MAAM,CAAC,OAAO;gBACvB,OAAO,EAAE,MAAM;aAClB,EAAE,MAAM,CAAC,IAAI,CAAC;SAClB,CAAC,CAAC;KACN,CAAA;;IAED,4BAAA,UAAU,wBAAC,KAAK,EAAE;QACdf,IAAM,cAAc,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QAC7CA,IAAM,YAAY,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC7CA,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;;QAErC,IAAI,IAAI,CAAC,SAAS,IAAI,WAAW,EAAE;YAC/BA,IAAM,kBAAkB,GAAG,WAAW,CAAC,cAAc,EAAE,CAAC;YACxDA,IAAM,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,MAAM,EAAE,CAAC;;YAErD,YAAY,CAAC,IAAI,CAAC,IAAIc,+BAAI,CAAC,OAAO;gBAC9B,UAAU;gBACV,UAAU;gBACV,IAAI,CAAC,cAAc,CAAC,CAAC,MAAM,EAAE;aAChC,CAAC,CAAC;;YAEHd,IAAM,aAAa,GAAG,EAAE,CAAC;YACzB,KAAKC,IAAI,GAAG,GAAG,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE;gBAC3DD,IAAM,OAAO,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;gBACxC,aAAa,CAAC,IAAI,CAAC,IAAIc,+BAAI,CAAC,OAAO;oBAC/B,OAAO,CAAC,MAAM,EAAE;oBAChB,OAAO,CAAC,UAAU,EAAE;oBACpB,OAAO,CAAC,SAAS,EAAE;iBACtB,CAAC,CAAC;aACN;;YAEDL,QAAM,CAAC,YAAY,EAAE,aAAa,CAAC,CAAC;;YAEpCT,IAAM,WAAW,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;YAC7C,YAAY,CAAC,IAAI,CAAC,IAAIc,+BAAI,CAAC,OAAO;gBAC9B,WAAW;gBACX,WAAW;gBACX,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE;aAC/B,CAAC,CAAC;SACN;;QAEDd,IAAM,IAAI,GAAG,IAAIe,8BAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;QACtD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;;QAErB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAC5B,CAAA;;IAED,4BAAA,SAAS,uBAAC,QAAQ,EAAE;QAChBf,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1BA,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACrCA,IAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAChCA,IAAM,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC;QAC5CA,IAAM,SAAS,GAAG,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrDA,IAAM,gBAAgB,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC;QAC7CA,IAAM,YAAY,GAAG,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC9DA,IAAM,mBAAmB,GAAG,YAAY,CAAC,OAAO,EAAE,CAAC;QACnDA,IAAM,GAAG,GAAG,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;QAC/BA,IAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QACvCA,IAAM,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;QACxCA,IAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;QAC1CC,IAAI,GAAG,GAAG,UAAU,GAAG,mBAAmB,CAAC,EAAE,GAAG,mBAAmB,CAAC,EAAE,CAAC;;QAEvE,GAAG,GAAG,UAAU,CAAC,GAAG,EAAE,gBAAgB,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,gBAAgB,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QAC5E,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,IAAI,WAAW,CAAC,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAClE,IAAI,UAAU,EAAE;gBACZ,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC;yBACxB,MAAM,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;aACtC,MAAM;gBACH,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC;yBACxB,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;aACtC;SACJ;KACJ,CAAA;;IAED,4BAAA,YAAY,0BAAC,KAAK,EAAE;QAChB,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE;YACxBD,IAAM,MAAM,GAAG,IAAIe,8BAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACpC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;;YAEnE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SAC9B;KACJ,CAAA;;;EA9H2B,WA+H/B,GAAA,AAED;;AClIA,IAAM,SAAS,GAAkB;IAAC;;;;;;;;IAAA,oBAC9B,aAAa,2BAAC,UAAU,EAAE,aAAa,EAAE,QAAQ,EAAE,WAAW,EAAE;QAC5Df,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QACzCA,IAAM,KAAK,GAAG,CAAC,aAAa,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC;;QAE/CC,IAAI,WAAW,CAAC;QAChB,IAAI,SAAS,IAAI,QAAQ,GAAG,CAAC,IAAI,WAAW,EAAE;YAC1CD,IAAM,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;YAC9D,IAAI,aAAa,KAAK,KAAK,EAAE;gBACzB,WAAW,GAAG,WAAW,CAAC,UAAU,CAAC;aACxC,MAAM;gBACH,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;aACnE;;YAED,IAAI,KAAK,KAAK,IAAI,EAAE;gBAChB,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;aAChD;SACJ;;QAED,IAAI,KAAK,KAAK,MAAM,EAAE;YAClB,OAAO,IAAI,iBAAiB,CAAC,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;SAC7F;;QAEDC,IAAI,SAAS,CAAC;QACd,IAAI,KAAK,KAAK,IAAI,EAAE;YAChB,SAAS,GAAG,eAAe,CAAC;SAC/B,MAAM;YACH,SAAS,GAAG,WAAW,CAAC;SAC3B;;QAED,OAAO,IAAI,SAAS,CAAC,UAAU,EAAE,WAAW,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;KAC1E,CAAA;;IAED,oBAAA,MAAM,oBAAC,SAAS,EAAE;;;QACdW,sBAAK,CAAC,MAAM,KAAA,CAAC,MAAA,SAAS,CAAC,CAAC;;QAExBZ,IAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,IAAI,WAAW,EAAE;YACb,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,WAAW,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;gBAC/CD,IAAM,UAAU,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;gBACpCA,IAAM,SAAS,GAAGQ,MAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;gBACnE,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;aAChC;SACJ;KACJ,CAAA;;IAED,oBAAA,eAAe,6BAAC,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE;;;QACzCR,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACvCC,IAAI,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;QACxCA,IAAI,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;QAC/B,IAAI,QAAQ,GAAG,CAAC,EAAE;YACd,QAAQ,GAAG,CAAC,CAAC;YACb,MAAM,EAAE,CAAC;SACZ;;QAEDD,IAAM,MAAM,GAAG,QAAQ,GAAG,MAAM,CAAC;QACjCA,IAAM,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,mBAAmB,GAAG,CAAC,GAAG,CAAC,CAAC;QACtEA,IAAM,WAAW,GAAG,EAAE,CAAC;;QAEvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC;QAC5C,KAAKC,IAAI,UAAU,GAAG,QAAQ,EAAE,UAAU,GAAG,MAAM,EAAE,UAAU,EAAE,EAAE;YAC/DD,IAAM,OAAO,GAAG,UAAU,GAAG,WAAW,CAAC;YACzCC,IAAI,eAAe,GAAG,QAAQ,CAAC;YAC/BA,IAAI,KAAK,WAAA,CAAC;;YAEV,GAAG;gBACC,eAAe,EAAE,CAAC;gBAClB,KAAK,GAAG,YAAY,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,CAAC;aAClD,QAAQ,eAAe,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE;;YAExC,IAAI,KAAK,EAAE;gBACP,IAAI,KAAK,KAAK,IAAI,IAAI,UAAU,GAAG,QAAQ,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE;oBACxF,WAAW,CAAC,IAAI,CAACO,MAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,OAAO,EAAE,OAAO,GAAG,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC;iBACnG;;gBAED,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;gBAExB,IAAI,KAAK,KAAK,IAAI,IAAI,UAAU,GAAG,CAAC,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE;oBAC1F,WAAW,CAAC,IAAI,CAACA,MAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,OAAO,EAAE,OAAO,GAAG,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC;iBACnG;aACJ,MAAM;gBACHR,IAAM,aAAa,GAAGQ,MAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;gBAC5DA,MAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACtC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aACnC;SACJ;;QAED,OAAO,WAAW,CAAC;KACtB,CAAA;;IAED,oBAAA,qBAAqB,mCAAC,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE;QAC7DR,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACvCC,IAAI,KAAK,GAAG,SAAS,CAAC;QACtBA,IAAI,KAAK,CAAC;;QAEV,OAAO,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE;YACxB,KAAK,EAAE,CAAC;YACR,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC;SAC1C;;QAED,IAAI,CAAC,KAAK,EAAE;YACR,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;YAC9C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACjC,MAAM;YACH,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC;SACxC;;QAED,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,oBAAA,oBAAoB,kCAAC,UAAU,EAAE;QAC7BD,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QACzCA,IAAM,KAAK,GAAG,IAAI,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;QACxC,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC;QAC9B,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;;QAElB,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,oBAAA,mBAAmB,iCAAC,MAAM,EAAE;QACxB,OAAO,MAAM,CAAC,aAAa,IAAI,IAAI,CAAC;KACvC,CAAA;;;EAzHmB,SA0HvB,GAAA,AAED;;AClIA,IAAM,qBAAqB,GAAc;IAAC,8BAC3B,GAAG;QACVY,QAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAER,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;KACxB;;;;wEAAA;;IAED,gCAAA,MAAM,oBAAC,eAAe,EAAE;QACpBZ,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;;QAEnC,KAAKC,IAAI,QAAQ,IAAI,eAAe,EAAE;YAClCD,IAAM,UAAU,GAAG,eAAe,CAAC,QAAQ,CAAC,CAAC;YAC7CC,IAAI,KAAK,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC;YACjC,UAAU,CAAC,QAAQ,CAAC,GAAG,KAAK,GAAG,KAAK,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC;;YAE3E,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC;YAChD,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC;SACnD;KACJ,CAAA;;IAED,gCAAA,KAAK,mBAAC,QAAQ,EAAE;QACZ,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,SAAS,CAAC;KACzC,CAAA;;IAED,gCAAA,KAAK,mBAAC,QAAQ,EAAE;QACZ,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;KACpC,CAAA;;;EA1B+BY,4BA2BnC,GAAA,AAED;;AC1BA,IAAM,QAAQ,GAAqB;IAAC,iBACrB,CAAC,OAAO,EAAE,OAAO,EAAE;QAC1BD,eAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;;QAEf,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAClD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC7B;;;;8CAAA;;IAED,mBAAA,YAAY,4BAAG;QACX,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;KACrD,CAAA;;IAED,mBAAA,MAAM,oBAAC,SAAS,EAAE;QACdZ,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAQ,QAAQ;QAAE,IAAA,SAAS,qBAArB;QACNA,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC9BA,IAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;QACjCA,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACrBA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACrCC,IAAI,QAAQ,GAAG,SAAS,CAAC;;QAEzB,WAAW,CAAC,KAAK,GAAG,QAAQ,GAAG,MAAM,GAAG,IAAI,CAAC;QAC7C,WAAW,CAAC,MAAM,GAAG,QAAQ,GAAG,GAAG,GAAG,MAAM,CAAC;;QAE7C,IAAI,OAAO,CAAC,QAAQ,KAAK,UAAU,EAAE;YACjC,IAAI,QAAQ,EAAE;gBACV,WAAW,CAAC,MAAM,GAAG,GAAG,CAAC;;gBAEzB,IAAI,CAAC,SAAS,IAAI,GAAG,CAAC,MAAM,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE;oBACjD,WAAW,CAAC,MAAM,GAAG,MAAM,CAAC;iBAC/B;aACJ,MAAM;gBACH,WAAW,CAAC,KAAK,GAAG,SAAS,GAAG,KAAK,GAAG,IAAI,CAAC;aAChD;SACJ,MAAM,IAAI,OAAO,CAAC,QAAQ,KAAK,MAAM,EAAE;YACpC,WAAW,CAAC,MAAM,GAAG,MAAM,CAAC;YAC5B,WAAW,CAAC,KAAK,GAAG,MAAM,CAAC;SAC9B,MAAM,IAAI,OAAO,CAAC,QAAQ,KAAK,WAAW,EAAE;YACzC,IAAI,QAAQ,EAAE;gBACV,WAAW,CAAC,MAAM,GAAG,SAAS,GAAG,MAAM,GAAG,GAAG,CAAC;aACjD,MAAM;gBACH,WAAW,CAAC,KAAK,GAAG,SAAS,GAAG,IAAI,GAAG,KAAK,CAAC;aAChD;SACJ,MAAM,IAAI,OAAO,CAAC,QAAQ,KAAK,WAAW,EAAE;YACzC,IAAI,QAAQ,EAAE;gBACV,IAAI,SAAS,EAAE;oBACX,QAAQ,GAAG,IAAI,GAAG;wBACd,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,GAAG,GAAG,CAAC,MAAM,EAAE;wBACzC,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE;qBAC7B,CAAC;iBACL,MAAM;oBACH,QAAQ,GAAG,IAAI,GAAG;wBACd,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE;wBAC1B,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,GAAG,GAAG,CAAC,MAAM,EAAE;qBAC5C,CAAC;iBACL;aACJ,MAAM;gBACH,WAAW,CAAC,KAAK,GAAG,MAAM,CAAC;gBAC3B,IAAI,SAAS,EAAE;oBACX,QAAQ,GAAG,IAAI,GAAG;wBACd,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE;wBAC1B,SAAS,CAAC,EAAE,GAAG,GAAG,CAAC,KAAK,EAAE,EAAE,SAAS,CAAC,EAAE;qBAC3C,CAAC;iBACL,MAAM;oBACH,QAAQ,GAAG,IAAI,GAAG;wBACd,SAAS,CAAC,EAAE,GAAG,GAAG,CAAC,KAAK,EAAE,EAAE,SAAS,CAAC,EAAE;wBACxC,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE;qBAC7B,CAAC;iBACL;aACJ;SACJ;;QAED,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;YACnB,IAAI,QAAQ,EAAE;gBACV,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,KAAK;oBACxB,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC;aACxD,MAAM;gBACH,OAAO,CAAC,GAAG,GAAG,OAAO,CAAC,MAAM;oBACxB,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC;aAC1D;SACJ;;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;KACzB,CAAA;;IAED,mBAAA,cAAc,4BAAC,OAAO,EAAE;QACpBD,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACvCA,IAAM,KAAK,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;QAC/BA,IAAM,KAAK,GAAG,KAAK,GAAG,GAAG,CAAC;QAC1BA,IAAM,GAAG,GAAG,KAAK,GAAG,GAAG,CAAC;QACxBA,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC9BA,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;;QAElC,IAAI,SAAS,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,EAAE;YACpEA,IAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YAC1C,SAAS,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;YAC9D,SAAS,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;;YAExD,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SAC1B;KACJ,CAAA;;;EApGkB,YAqGtB,GAAA;;AAED,iBAAiB,CAAC,QAAQ,EAAE;IACxB,QAAQ,EAAE,WAAW;IACrB,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC;IACrB,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC;IACtB,KAAK,EAAE,KAAK;IACZ,UAAU,EAAE,EAAE;IACd,MAAM,EAAE;QACJ,KAAK,EAAE,CAAC;QACR,KAAK,EAAE,EAAE;KACZ;IACD,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE,KAAK;IACf,SAAS,EAAE;QACP,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,0BAA0B;KACpC;IACD,MAAM,EAAE,CAAC;CACZ,CAAC,CAAC,AAEH;;AChIe,SAAS,kBAAkB,CAAC,OAAO,EAAE;IAChDA,IAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;;IAEhC,OAAO,OAAO,IAAI,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,QAAQ,KAAK,MAAM,CAAC;;;ACatEA,IAAM,mBAAmB,GAAG,CAAC,CAAC;;AAE9B,IAAM,GAAG,GAAqB;IAAC,YAChB,CAAC,KAAK,EAAE,OAAO,EAAE;QACxBY,eAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAER,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC;QACpC,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAC9D,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACtB;;;;oCAAA;;IAED,cAAA,MAAM,sBAAG;QACL,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,OAAO;SACV;;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;;QAEtB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,UAAU,EAAE,CAAC;;QAElB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC9B;KACJ,CAAA;;IAED,cAAA,WAAW,2BAAG;QACVZ,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;;QAE9B,IAAI,MAAM,CAAC,OAAO,EAAE;YAChBC,IAAI,aAAa,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;YACxCA,IAAI,SAAS,CAAC;;YAEd,IAAI,aAAa,EAAE;gBACf,SAAS,GAAG,aAAa,CAAC;oBACtB,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,UAAU,EAAE,IAAI,CAAC,UAAU;oBAC3B,UAAU,EAAE,IAAI,CAAC,UAAU;oBAC3B,YAAY,EAAE,IAAI,CAAC,YAAY;oBAC/B,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,MAAM,EAAE,IAAI,CAAC,MAAM;iBACtB,CAAC,CAAC;aACN,MAAM;gBACH,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;aAC/C;;YAED,IAAI,CAAC,KAAK,GAAG,IAAI,QAAQ,CAAC,SAAS;oBAC3B,UAAU,CAAC;wBACP,QAAQ,EAAE,OAAO,CAAC,QAAQ;qBAC7B;oBACD,MAAM;iBACT,CAAC,CAAC;YACP,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC3B;KACJ,CAAA;;IAED,cAAA,WAAW,yBAAC,MAAM,EAAE;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;KACpD,CAAA;;IAED,cAAA,MAAM,oBAAC,SAAS,EAAE;;;QACd,IAAI,CAAC,MAAM,EAAE,CAAC;;QAEdD,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;;QAEzB,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;;QAErB,IAAI,KAAK,EAAE;YACP,KAAK,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YACzC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SAC3B;;QAED,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SAC/B;;QAED,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC5CO,MAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;aACvC;SACJ;KACJ,CAAA;;IAED,cAAA,YAAY,4BAAG;;;QACX,OAAsB,GAAG,IAAI;QAArB,IAAA,GAAG;QAAE,IAAA,OAAO,eAAd;QACNR,IAAM,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC;;QAEpC,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,EAAE;YACxBY,yBAAK,CAAC,YAAY,KAAA,CAAC,IAAA,CAAC,CAAC;;YAErB,IAAI,YAAY,EAAE;gBACdZ,IAAM,MAAM,GAAG,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC;oBAC1C,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE;oBACxB,MAAM,EAAE,IAAI,CAAC,MAAM;oBACnB,UAAU,EAAE,IAAI,CAAC,UAAU;oBAC3B,UAAU,EAAE,IAAI,CAAC,UAAU;oBAC3B,YAAY,EAAE,IAAI,CAAC,YAAY;oBAC/B,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE;oBAClB,YAAY,EAAE,YAAG;wBACbA,IAAM,KAAK,GAAG,IAAIe,8BAAI,CAAC,KAAK,EAAE,CAAC;wBAC/BP,MAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;wBACvB,OAAO,KAAK,CAAC;qBAChB;oBACD,OAAO,EAAE,OAAO;iBACnB,CAAC,CAAC;;gBAEH,IAAI,MAAM,EAAE;oBACR,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;iBAC9B;aACJ,MAAM,IAAI,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE;gBAC5C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAChC;SACJ;KACJ,CAAA;;IAED,cAAA,UAAU,wBAAC,MAAM,EAAE;QACfR,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAC9BA,IAAM,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;QACjFA,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;;QAE/B,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;QAE9CA,IAAM,IAAI,GAAG,IAAI,CAAC,UAAU,GAAGe,8BAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACpD,IAAI,EAAE;gBACF,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,OAAO,EAAE,OAAO,CAAC,OAAO;aAC3B;YACD,MAAM,EAAE;gBACJ,KAAK,EAAE,IAAI,CAAC,cAAc,EAAE;gBAC5B,KAAK,EAAE,MAAM,CAAC,KAAK;gBACnB,OAAO,EAAE,aAAa;gBACtB,QAAQ,EAAE,MAAM,CAAC,QAAQ;aAC5B;SACJ,CAAC,CAAC;;QAEHf,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;QAC/BA,IAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;;QAEjCA,IAAM,IAAI,GAAG,OAAO,CAAC,QAAQ,GAAG,KAAK,GAAG,MAAM,CAAC;;QAE/C,IAAI,IAAI,GAAG,mBAAmB,EAAE;YAC5B,gBAAgB,CAAC,IAAI,CAAC,CAAC;;;YAGvB,IAAI,KAAK,GAAG,CAAC,IAAI,MAAM,GAAG,CAAC,EAAE;gBACzB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,GAAG,OAAO,CAAC;aAC1C;SACJ;;QAED,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;QAEpB,IAAI,kBAAkB,CAAC,OAAO,CAAC,EAAE;YAC7BA,IAAM,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,UAAU,CAAC;gBACnF,GAAG,EAAE,CAAC,OAAO,CAAC,QAAQ,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,SAAS;aAChD,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;;YAErB,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SAC1B;KACJ,CAAA;;IAED,cAAA,eAAe,6BAAC,KAAK,EAAE;QACnBA,IAAM,SAAS,GAAGe,8BAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,KAAK,CAAC,CAAC;;QAE/D,OAAO,gBAAgB,CAAC,SAAS,CAAC,CAAC;KACtC,CAAA;;IAED,cAAA,eAAe,+BAAG;QACd,OAAO,IAAI,CAAC,UAAU,CAAC;KAC1B,CAAA;;IAED,cAAA,mBAAmB,mCAAG;QAClB,OAAO;YACH,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;YACvB,MAAM,EAAE,IAAI,CAAC,UAAU;SAC1B,CAAC;KACL,CAAA;;IAED,cAAA,cAAc,8BAAG;QACbf,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzBA,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACnCA,IAAM,UAAU,GAAG,MAAM,CAAC,WAAW,IAAI,iBAAiB,CAAC;QAC3DC,IAAI,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC;;QAE/B,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;YACvB,WAAW,GAAG,IAAI0B,4BAAK,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,CAAC;SACjE;;QAED,OAAO,WAAW,CAAC;KACtB,CAAA;;IAED,cAAA,aAAa,6BAAG;QACZ,OAAiC,GAAG,IAAI;QAAhC,IAAA,OAAO;QAAE,IAAA,GAAG;QAAE,IAAA,SAAS,iBAAzB;QACN3B,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,GAAG,CAAC;QACjDC,IAAI,eAAe,GAAG,IAAI,CAAC;QAC3BA,IAAI,aAAa,GAAG,GAAG,CAAC;QACxBA,IAAI,CAAC,EAAE,CAAC,CAAC;;QAET,IAAI,OAAO,CAAC,QAAQ,EAAE;YAClB,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC;YAClD,IAAI,SAAS,EAAE;gBACX,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;aACpC,MAAM;gBACH,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;gBACjC,aAAa,GAAG,MAAM,CAAC;aAC1B;SACJ,MAAM;YACHD,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;YACxCA,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;;YAExC,IAAI,OAAO,CAAC,SAAS,EAAE;gBACnB,aAAa,GAAG,MAAM,CAAC;gBACvB,IAAI,SAAS,EAAE;oBACX,eAAe,GAAG,KAAK,CAAC;oBACxB,CAAC,GAAG,EAAE,CAAC;iBACV,MAAM;oBACH,CAAC,GAAG,EAAE,CAAC;iBACV;gBACD,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC;aACrD,MAAM;gBACH,IAAI,SAAS,EAAE;oBACX,CAAC,GAAG,EAAE,GAAG,cAAc,CAAC;iBAC3B,MAAM;oBACH,CAAC,GAAG,EAAE,GAAG,cAAc,CAAC;oBACxB,eAAe,GAAG,KAAK,CAAC;iBAC3B;gBACD,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;aACpC;SACJ;;QAED,OAAO;YACH,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;YACtB,KAAK,EAAE;gBACH,UAAU,EAAE,eAAe;gBAC3B,QAAQ,EAAE,aAAa;aAC1B;SACJ,CAAC;KACL,CAAA;;IAED,cAAA,WAAW,yBAAC,GAAG,EAAE;QACb,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;KACjC,CAAA;;;EAxPa,YAyPjB,GAAA;;AAED,UAAU,CAAC,GAAG,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC;AAC5C,UAAU,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;;AAErC,GAAG,CAAC,SAAS,CAAC,QAAQ,GAAG;IACrB,MAAM,EAAE;QACJ,KAAK,EAAE,CAAC;KACX;IACD,QAAQ,EAAE,IAAI;IACd,OAAO,EAAE;QACL,QAAQ,EAAE,OAAO;KACpB;IACD,MAAM,EAAE;QACJ,OAAO,EAAE,KAAK;QACd,MAAM,EAAE,KAAK;KAChB;IACD,OAAO,EAAE,CAAC;IACV,KAAK,EAAE;QACH,KAAK,EAAE,EAAE;KACZ;CACJ,CAAC,AAEF;;AC7RA,IAAM,aAAa,GAAqB;IAAC;;;;;;;;IAAA,wBACrC,MAAM,oBAAC,GAAG,EAAE;QACR,OAAgC,GAAG,IAAI,CAAC,OAAO;QAAvC,IAAA,QAAQ;QAAE,IAAA,GAAG;QAAE,IAAA,OAAO,eAAxB;QACNA,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/BA,IAAM,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC9BA,IAAM,IAAI,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;QAC9BA,IAAM,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,OAAO,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;QACpDA,IAAM,QAAQ,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC,GAAG,KAAK,CAAC;QACjEC,IAAI,QAAQ,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,QAAQ,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;;QAEpD,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC5BD,IAAM,QAAQ,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;;YAElD,QAAQ,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;YAC9B,QAAQ,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,QAAQ,GAAG,QAAQ,CAAC;;YAEzC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC7B,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE;gBACf,QAAQ,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,CAAC;aACpC;;YAED,QAAQ,IAAI,QAAQ,CAAC;SACxB;KACJ,CAAA;;;EAvBuB,YAwB3B,GAAA;;AAED,iBAAiB,CAAC,aAAa,EAAE;IAC7B,QAAQ,EAAE,KAAK;IACf,GAAG,EAAE,CAAC;IACN,OAAO,EAAE,CAAC;CACb,CAAC,CAAC,AAEH;;AChCA,IAAM,SAAS,GAAqB;IAAC;;;;;;;;IAAA,oBACjC,MAAM,oBAAC,SAAS,EAAE;;;QACdA,IAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;QACnDA,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/BA,IAAM,aAAa,GAAG,QAAQ,CAAC,MAAM,CAAC;QACtCC,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;;QAE/B,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAE,EAAE;YACpCD,IAAM,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;;YAEjC,IAAI,YAAY,CAAC,OAAO,KAAK,KAAK,EAAE;gBAChCA,IAAM,QAAQ,GAAG,YAAY,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;gBAC1C,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;;gBAEzC,IAAI,CAAC,KAAK,CAAC,EAAE;oBACT,GAAG,GAAGQ,MAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC;iBACrC;;gBAED,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAC9B,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACtB;SACJ;KACJ,CAAA;;;EAtBmB,YAuBvB,GAAA;;AAED,iBAAiB,CAAC,SAAS,EAAE;IACzB,QAAQ,EAAE,IAAI;CACjB,CAAC,CAAC,AAEH;;ACpBA,IAAM,QAAQ,GAAyB;IAAC;;;;;;;;IAAA,mBAEpC,MAAM,sBAAG;QACLI,6BAAK,CAAC,MAAM,KAAA,CAAC,IAAA,CAAC,CAAC;QACf,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B,CAAA;;IAED,mBAAA,SAAS,yBAAG;QACR,OAAO,GAAG,CAAC;KACd,CAAA;;IAED,mBAAA,WAAW,2BAAG;QACV,OAAO,aAAa,CAAC;KACxB,CAAA;;IAED,mBAAA,SAAS,yBAAG;QACR,OAAO,SAAS,CAAC;KACpB,CAAA;;IAED,mBAAA,WAAW,yBAAC,QAAQ,EAAE,SAAS,EAAE;QAC7BZ,IAAM,MAAM,GAAGY,6BAAK,CAAC,WAAW,KAAA,CAAC,MAAA,QAAQ,EAAE,SAAS,CAAC,CAAC;;QAEtD,OAAO,MAAM,CAAC;KACjB,CAAA;;IAED,mBAAA,WAAW,yBAAC,IAAI,EAAE,MAAM,EAAE;QACtB,IAAQ,UAAU;QAAE,IAAA,QAAQ;QAAE,IAAA,MAAM;QAAE,IAAA,QAAQ,mBAAxC;QACN,OAA2B,GAAG,IAAI;QAA1B,IAAA,OAAO;QAAE,IAAA,QAAQ,gBAAnB;QACNZ,IAAM,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;QACpCA,IAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACpCC,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;;QAEvDD,IAAM,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC;QACzC,IAAI,SAAS,EAAE;YACX,IAAI,YAAY,CAAC,QAAQ,KAAK,WAAW,EAAE;gBACvC,YAAY,CAAC,QAAQ,GAAG,UAAU,CAAC;aACtC;SACJ;;QAED,YAAY,CAAC,SAAS,GAAG,SAAS,CAAC;;QAEnCC,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC;QAC9C,IAAI,KAAK,GAAG,CAAC,IAAI,YAAY,CAAC,aAAa,EAAE;YACzC,KAAK,GAAG,YAAY,CAAC,aAAa,CAAC;SACtC;;QAED,YAAY,GAAG,IAAI,CAAC,gBAAgB;YAChC,YAAY,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ;SAC9D,CAAC;;QAEF,IAAI,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YAC1B,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC;SAC9B;;QAEDD,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QACnCA,IAAM,KAAK,GAAG,IAAI,SAAS,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;QACjD,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;;QAEpBC,IAAI,OAAO,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC;QACnC,IAAI,CAAC,OAAO,EAAE;YACVD,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YACvC,OAAO,GAAG,IAAI,WAAW,CAAC;gBACtB,QAAQ,EAAE,OAAO,CAAC,UAAU;gBAC5B,GAAG,EAAE,OAAO,CAAC,GAAG;gBAChB,OAAO,EAAE,OAAO,CAAC,OAAO;aAC3B,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SACxB;;QAED,IAAI,SAAS,EAAE;YACXA,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;YACrD,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC3B,MAAM;YACH,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACzB;;QAED,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,mBAAA,YAAY,0BAAC,MAAM,EAAE,OAAO,EAAE;QAC1BA,IAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC3BA,IAAM,UAAU,GAAG,KAAK,GAAG,KAAK,CAAC,KAAK,IAAI,KAAK,GAAG,KAAK,CAAC;QACxDA,IAAM,KAAK,GAAG,OAAO,CAAC,QAAQ,CAAC;QAC/BC,IAAI,SAAS,CAAC;;QAEd,IAAI,OAAO,UAAU,KAAK,MAAM,EAAE;YAC9B,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACnC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,KAAK,UAAU,EAAE;oBACrC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBACrB,MAAM;iBACT;aACJ;SACJ,MAAM;YACH,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;SACxB;;QAED,IAAI,CAAC,SAAS,EAAE;YACZD,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;YACnC,SAAS,GAAG,IAAI,SAAS,CAAC;gBACtB,QAAQ,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU;aACrC,CAAC,CAAC;YACH,SAAS,CAAC,WAAW,GAAG,UAAU,CAAC;YACnC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SAC7B;;QAED,OAAO,SAAS,CAAC;KACpB,CAAA;;IAED,mBAAA,YAAY,0BAAC,YAAY,EAAE,UAAU,EAAE,SAAS,EAAE;QAC9CA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACtDA,IAAM,UAAU,GAAG,SAAS,CAAC,UAAU,EAAE,CAAC;;QAE1C,IAAI,OAAO,CAAC,SAAS,EAAE;YACnBA,IAAM,QAAQ,GAAG,SAAS,CAAC,OAAO,CAAC,UAAU,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;YACjEA,IAAM,SAAS,GAAG,OAAO,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;YAC7C,YAAY,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,YAAY,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;SACvF;;QAED,OAAO,YAAY,CAAC;KACvB,CAAA;;IAED,mBAAA,gBAAgB,8BAAC,aAAa,EAAE;QAC5BA,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/BA,IAAM,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC;;QAEvC,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;YACrC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;SACxC;KACJ,CAAA;;IAED,mBAAA,eAAe,+BAAG;QACd,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5BW,6BAAK,CAAC,eAAe,KAAA,CAAC,IAAA,CAAC,CAAC;;QAExB,IAAI,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACnC,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAChC;KACJ,CAAA;;IAED,mBAAA,qBAAqB,qCAAG;;;QACpBZ,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;;QAE3B,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YAC1CD,IAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;YAC1BA,IAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC;YACjC,IAAI,WAAW,IAAI,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;gBACpD,KAAK,CAAC,OAAO,CAAC,SAAS,GAAGQ,MAAI,CAAC,OAAO,CAAC,SAAS,CAAC;gBACjD,KAAK,CAAC,eAAe,EAAE,CAAC;aAC3B;SACJ;KACJ,CAAA;;IAED,mBAAA,oBAAoB,oCAAG;QACnBR,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,EAAE,CAAC;QAC1CC,IAAI,MAAM,CAAC;;QAEX,IAAI,OAAO,CAAC,SAAS,EAAE;YACnBD,IAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1D,MAAM,GAAG,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;SACtD,MAAM;YACH,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SACzC;;QAED,SAAS,CAAC,MAAM,GAAG,IAAIc,+BAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;QACxD,SAAS,CAAC,QAAQ,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC;KAC5C,CAAA;;;EAvKkB,gBAwKtB,GAAA;;AAED,iBAAiB,CAAC,QAAQ,EAAE;IACxB,SAAS,EAAE;QACP,IAAI,EAAE,GAAG;KACZ;CACJ,CAAC,CAAC,AAEH;;AClLA,IAAM,WAAW,GAAqB;IAAC,oBACxB,CAAC,KAAK,EAAE,OAAO,EAAE;QACxBF,eAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACtB;;;;oDAAA;;IAED,sBAAA,MAAM,oBAAC,GAAG,EAAE;QACR,OAAsC,GAAG,IAAI;QAArC,IAAA,OAAO;QAAE,IAAA,KAAK;QAAS,IAAA,KAAK,aAA9B;QACNZ,IAAM,SAAS,GAAG,KAAK,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QACjDA,IAAM,MAAM,GAAG,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;QAC1DA,IAAM,MAAM,GAAG,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;;QAExD,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;QAC/B,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;;QAE/B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;;QAEvBA,IAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAC9BA,IAAM,MAAM,GAAG,EAAE,CAAC;;QAElB,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QACxD,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;;QAExD,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;;QAEpB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;QAEvC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;;QAED,IAAI,CAAC,UAAU,EAAE,CAAC;KACrB,CAAA;;IAED,sBAAA,UAAU,0BAAG;QACT,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAC9B;KACJ,CAAA;;IAED,sBAAA,YAAY,4BAAG;QACXY,yBAAK,CAAC,YAAY,KAAA,CAAC,IAAA,CAAC,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACjD,IAAI,CAAC,MAAM,CAAC,MAAM;YACd,IAAI,CAAC,WAAW;SACnB,CAAC;;QAEF,IAAI,CAAC,aAAa,EAAE,CAAC;KACxB,CAAA;;IAED,sBAAA,UAAU,wBAAC,OAAO,EAAE;QAChBZ,IAAM,KAAK,GAAG,IAAIe,8BAAI,CAAC,KAAK,EAAE,CAAC;;QAE/B,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QAChC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;;QAEjC,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,sBAAA,UAAU,wBAAC,SAAS,EAAE,OAAO,EAAE;QAC3Bf,IAAM,IAAI,GAAGe,8BAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE;YACpD,IAAI,EAAE;gBACF,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,OAAO,EAAE,OAAO,CAAC,OAAO;aAC3B;YACD,MAAM,EAAE,IAAI;SACf,CAAC,CAAC;;QAEH,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE;YAC1B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE;gBACvB,KAAK,EAAE,IAAI,CAAC,cAAc,EAAE;gBAC5B,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK;gBAC3B,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,QAAQ;gBACjC,OAAO,EAAE,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC;aACnE,CAAC,CAAC;SACN;;QAED,gBAAgB,CAAC,IAAI,CAAC,CAAC;QACvB,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;QAEvB,IAAI,kBAAkB,CAAC,OAAO,CAAC,EAAE;YAC7B,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,UAAU,CAAC;gBACpF,GAAG,EAAE,CAAC,OAAO,CAAC,QAAQ,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,SAAS;aAChD,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SACzB;KACJ,CAAA;;IAED,sBAAA,WAAW,yBAAC,SAAS,EAAE,OAAO,EAAE;QAC5B,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;KAChE,CAAA;;IAED,sBAAA,SAAS,uBAAC,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE;QAC9C,IAAI,CAAC,KAAK,EAAE;YACR,OAAO;SACV;;QAEDf,IAAM,SAAS,GAAG;YACd,MAAM,EAAE;gBACJ,KAAK,EAAE,WAAW,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK;gBACtC,OAAO,EAAE,cAAc,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC;gBAC7D,KAAK,EAAE,WAAW,CAAC,KAAK;gBACxB,QAAQ,EAAE,WAAW,CAAC,QAAQ;gBAC9B,OAAO,EAAE,MAAM;aAClB;SACJ,CAAC;;QAEF,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnCD,IAAM,IAAI,GAAGe,8BAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;YACvD,gBAAgB,CAAC,IAAI,CAAC,CAAC;YACvB,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC1B;KACJ,CAAA;;IAED,sBAAA,cAAc,8BAAG;QACbf,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACnCC,IAAI,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC;;QAE/B,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;YACvB,WAAW,GAAG,IAAI0B,4BAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,KAAK,EAAE,CAAC;SAC9E;;QAED,OAAO,WAAW,CAAC;KACtB,CAAA;;IAED,sBAAA,aAAa,6BAAG;QACZ3B,IAAM,OAAO,GAAGe,8BAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE;YAClD,IAAI,EAAE;gBACF,KAAK,EAAE,KAAK;gBACZ,OAAO,EAAE,CAAC;aACb;YACD,MAAM,EAAE,IAAI;SACf,CAAC,CAAC;;QAEH,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KAC/B,CAAA;;IAED,sBAAA,eAAe,+BAAG;QACdf,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QACzCA,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;;QAE/B,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC;QAC3CA,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU;YAC3B,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE;gBACzB,IAAI,EAAE;oBACF,KAAK,EAAE,IAAI,CAAC,cAAc,EAAE;iBAC/B;aACJ,EAAE,SAAS,CAAC;SAChB,CAAC;QACF,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC;;QAEzB,OAAO,OAAO,CAAC;KAClB,CAAA;;IAED,sBAAA,eAAe,+BAAG;QACd,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B,CAAA;;IAED,sBAAA,mBAAmB,mCAAG;QAClB,OAAO;YACH,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;YACvB,MAAM,EAAE,IAAI,CAAC,WAAW;SAC3B,CAAC;KACL,CAAA;;IAED,sBAAA,aAAa,6BAAG;QACZA,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACrBA,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,GAAG,CAAC;;QAEjD,OAAO;YACH,KAAK,EAAE,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,cAAc,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC;YACxF,KAAK,EAAE;gBACH,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,GAAG;aAChB;SACJ,CAAC;KACL,CAAA;;IAED,sBAAA,WAAW,yBAAC,MAAM,EAAE;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;KACpD,CAAA;;IAED,sBAAA,WAAW,yBAAC,GAAG,EAAE;QACb,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;KACjC,CAAA;;;EAzLqB,YA0LzB,GAAA;;AAED,iBAAiB,CAAC,WAAW,EAAE;IAC3B,QAAQ,EAAE,IAAI;IACd,MAAM,EAAE;QACJ,WAAW,EAAE,GAAG;KACnB;IACD,IAAI,EAAE;QACF,KAAK,EAAE,CAAC;KACX;IACD,OAAO,EAAE;QACL,QAAQ,EAAE,OAAO;KACpB;IACD,OAAO,EAAE;QACL,MAAM,EAAE,SAAS;oBACL,qCAAqC;oBACrC,uCAAuC;oBACvC,uCAAuC;oBACvC,sCAAsC;oBACtC,wCAAwC;gBAC5C,UAAU;KACrB;IACD,SAAS,EAAE;QACP,OAAO,EAAE,CAAC;QACV,MAAM,EAAE;YACJ,KAAK,EAAE,CAAC;YACR,OAAO,EAAE,CAAC;SACb;QACD,IAAI,EAAE;YACF,KAAK,EAAE,CAAC;YACR,OAAO,EAAE,CAAC;SACb;KACJ;IACD,KAAK,EAAE;QACH,OAAO,EAAE,IAAI;QACb,KAAK,EAAE,EAAE;KACZ;CACJ,CAAC,CAAC;;AAEH,UAAU,CAAC,WAAW,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC;AACpD,UAAU,CAAC,WAAW,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,AAE7C;;AC9Oe,SAAS,UAAU,CAAC,MAAM,EAAE;IACvC,OAAO,YAAY,CAAC,MAAM,CAAC,KAAK,MAAM,CAAC,MAAM,CAAC;;;ACQlD,IAAM,gBAAgB,GAAyB;IAAC;;;;;;;;IAAA,2BAE5C,gBAAgB,8BAAC,aAAa,EAAE;QAC5BA,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/BA,IAAM,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC;;QAEvC,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;YACrC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;SACxC;KACJ,CAAA;;IAED,2BAAA,QAAQ,sBAAC,IAAI,EAAE,MAAM,EAAE;QACnB,IAAQ,UAAU;QAAE,IAAA,QAAQ;QAAE,IAAA,MAAM;QAAE,IAAA,QAAQ,mBAAxC;QACN,OAA2B,GAAG,IAAI;QAA1B,IAAA,QAAQ;QAAE,IAAA,OAAO,eAAnB;QACND,IAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;QAC/BA,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC1CA,IAAM,QAAQ,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC;QACxCA,IAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzCC,IAAI,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QACrDA,IAAI,KAAK,CAAC;;QAEV,IAAI,CAAC,cAAc,EAAE;YACjB,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,GAAG,cAAc,GAAG,EAAE,CAAC;SACzD;;QAED,IAAI,QAAQ,EAAE;YACV,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;SAC1C;;QAEDA,IAAI,OAAO,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC;QACnC,IAAI,CAAC,OAAO,EAAE;YACV,OAAO,GAAG,IAAI,aAAa,CAAC;gBACxB,QAAQ,EAAE,OAAO,CAAC,UAAU;gBAC5B,GAAG,EAAE,OAAO,CAAC,GAAG;gBAChB,OAAO,EAAE,OAAO,CAAC,OAAO;aAC3B,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SACxB;;QAED,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;;YAEhC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;;YAEtB,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC;YAC9B,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC1B,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;YACtB,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC1B,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;YACnB,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC1B,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;SACzC;;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC9B,CAAA;;IAED,2BAAA,SAAS,yBAAG;QACR,OAAO,WAAW,CAAC;KACtB,CAAA;;IAED,2BAAA,WAAW,yBAAC,IAAI,EAAE,MAAM,EAAE;QACtB,IAAQ,UAAU;QAAE,IAAA,QAAQ;QAAE,IAAA,MAAM;QAAE,IAAA,QAAQ,mBAAxC;QACND,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QACnCA,IAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;QAC/BC,IAAI,YAAY,GAAG,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;QAC1CA,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC;;QAE9C,YAAY,GAAG,IAAI,CAAC,gBAAgB;YAChC,YAAY,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ;SAC9D,CAAC;;QAEF,IAAI,MAAM,CAAC,IAAI,KAAK,WAAW,EAAE;YAC7B,IAAI,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,EAAE;gBAC1B,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,KAAK,CAAC;aACrE;SACJ;;QAED,IAAI,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YAC1B,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC;SAC9B;;QAED,YAAY,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;;QAEjDD,IAAM,KAAK,GAAG,IAAI,SAAS,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;QACjD,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;;QAEpB,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,2BAAA,UAAU,wBAAC,KAAK,EAAE;QACd,OAAO,EAAE,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;KAC7D,CAAA;;IAED,2BAAA,WAAW,yBAAC,KAAK,EAAE,MAAM,EAAE;QACvBA,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;QACpCA,IAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACrCC,IAAI,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;;QAE/C,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;YACtC,SAAS,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC;;QAEpD,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,GAAG;YACzC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;YAC1D,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;SAC7D,CAAC;KACL,CAAA;;IAED,2BAAA,gBAAgB,8BAAC,KAAK,EAAE,MAAM,EAAE;QAC5BD,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;;QAE1B,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM;YACvC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI;YACtB,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,QAAQ;SACzC,CAAC;KACL,CAAA;;IAED,2BAAA,eAAe,+BAAG;QACd,OAAO,IAAI,CAAC,MAAM,CAAC;KACtB,CAAA;;;EAvH0B,gBAwH9B,GAAA;;AAED,UAAU,CAAC,gBAAgB,CAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC,AAE3D;;AC5HA,IAAM,OAAO,GAAoB;IAAC,gBACnB,CAAC,KAAK,EAAE,OAAO,EAAE;QACxBY,cAAK,KAAA,CAAC,MAAA,KAAK,EAAE,OAAO,CAAC,CAAC;;QAEtB,IAAI,CAAC,UAAU,EAAE,CAAC;KACrB;;;;4CAAA;;IAED,kBAAA,MAAM,oBAAC,GAAG,EAAE;QACR,OAAsC,GAAG,IAAI;QAArC,IAAA,OAAO;QAAE,IAAA,KAAK;QAAS,IAAA,KAAK,aAA9B;QACNZ,IAAM,SAAS,GAAG,KAAK,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QACjDC,IAAI,WAAW,EAAE,OAAO,CAAC;;QAEzB,IAAI,CAAC,OAAO,GAAG,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;QAC/D,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;;QAExB,IAAI,CAAC,WAAW,GAAG,WAAW,GAAG,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7E,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;;QAE5BD,IAAM,UAAU,GAAG,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;;QAEnD,IAAI,KAAK,CAAC,IAAI,EAAE;YACZA,IAAM,QAAQ,GAAG,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC/C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;SACxD;;QAED,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QAClE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;;QAE3D,IAAI,CAAC,GAAG,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,EAAE,CAAC;KACrB,CAAA;;IAED,kBAAA,aAAa,2BAAC,GAAG,EAAE;QACf,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;KAC5B,CAAA;;IAED,kBAAA,iBAAiB,+BAAC,GAAG,EAAE;QACnB,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;QAC7B,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;KAChC,CAAA;;IAED,kBAAA,cAAc,4BAAC,GAAG,EAAE,QAAQ,EAAE;QAC1B,OAAO;YACH,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE;SACvD,CAAC;KACL,CAAA;;IAED,kBAAA,iBAAiB,+BAAC,OAAO,EAAE,WAAW,EAAE;QACpCA,IAAM,GAAG,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QACnC,OAAO,EAAE;YACL,EAAE,GAAG,GAAG,CAAC,EAAE,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,EAAE,WAAW,CAAC,EAAE,EAAE;YACxD,EAAE,GAAG,EAAE,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,OAAO,CAAC,EAAE,EAAE;SAC/C,EAAE;YACC,EAAE,GAAG,GAAG,CAAC,EAAE,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,EAAE,WAAW,CAAC,EAAE,EAAE;YACxD,EAAE,GAAG,EAAE,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,OAAO,CAAC,EAAE,EAAE;SAC/C,EAAE,CAAC;KACP,CAAA;;IAED,kBAAA,gBAAgB,8BAAC,GAAG,EAAE,UAAU,EAAE;QAC9B,OAAO;YACH,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,UAAU,CAAC,EAAE,EAAE,EAAE;SAC3D,CAAC;KACL,CAAA;;IAED,kBAAA,cAAc,4BAAC,OAAO,EAAE;;;QACpBA,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzBA,IAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,IAAI,EAAE,CAAC;QACtCA,IAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QACrDA,IAAM,QAAQ,GAAG,EAAE,CAAC;QACpBC,IAAI,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;;QAEpC,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtCD,IAAM,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YACjC,IAAI,YAAY,GAAG,KAAK,CAAC,EAAE,GAAG,UAAU,IAAI,YAAY,GAAG,KAAK,CAAC,EAAE,GAAG,UAAU,EAAE;gBAC9E,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC;aAC9B,MAAM;gBACH,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC;aAC9B;YACDC,IAAI,aAAa,GAAG,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;;YAEnD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;gBAC/B,IAAI,OAAO,CAACO,MAAI,CAAC,KAAK,CAAC,EAAE;oBACrB,aAAa,CAAC,KAAK,GAAGA,MAAI,CAAC,KAAK,CAAC;iBACpC,MAAM;oBACH,aAAa,CAAC,KAAK;wBACf,IAAImB,4BAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC,KAAK,EAAE,CAAC;iBAC3E;aACJ;;YAED3B,IAAM,KAAK,GAAG,IAAI,YAAY,CAAC;gBAC3B,IAAI,EAAE,OAAO,CAAC,IAAI;gBAClB,KAAK,EAAE,OAAO,CAAC,IAAI;gBACnB,MAAM,EAAE,OAAO,CAAC,IAAI;gBACpB,QAAQ,EAAE,OAAO,CAAC,QAAQ;gBAC1B,UAAU,EAAE,OAAO,CAAC,UAAU;gBAC9B,MAAM,EAAE,aAAa;gBACrB,OAAO,EAAE,OAAO,CAAC,OAAO;aAC3B,CAAC,CAAC;;YAEH,KAAK,CAAC,KAAK,GAAG,YAAY,CAAC;;YAE3B,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB;;QAED,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;QAC9B,OAAO,QAAQ,CAAC;KACnB,CAAA;;IAED,kBAAA,cAAc,4BAAC,QAAQ,EAAE;;;QACrBA,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3DA,IAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;;QAEjC,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtCD,IAAM,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YACvCA,IAAM,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;;YAElD,IAAIQ,MAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;gBACvB,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aAC5B,MAAM;gBACH,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;aACvC;;YAEDA,MAAI,CAAC,GAAG,GAAGA,MAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACpC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SACjC;KACJ,CAAA;;IAED,kBAAA,UAAU,wBAAC,OAAO,EAAE;QAChBR,IAAM,KAAK,GAAGY,wBAAK,CAAC,UAAU,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;QACxCZ,IAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;;QAE9C,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtCD,IAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;YACzC,IAAI,OAAO,EAAE;gBACT,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;aACzB;SACJ;;QAED,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,kBAAA,WAAW,yBAAC,SAAS,EAAE,OAAO,EAAE;QAC5B,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,OAAO,EAAE,IAAI,CAAC,aAAa,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;QACzE,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QACtE,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;KACrE,CAAA;;IAED,kBAAA,cAAc,8BAAG;QACb,IAAI,IAAI,CAAC,KAAK,EAAE;YACZ,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;;QAED,OAAOY,wBAAK,CAAC,cAAc,KAAA,CAAC,IAAA,CAAC,CAAC;KACjC,CAAA;;;EA3JiB,WA4JrB,GAAA;;AAED,iBAAiB,CAAC,OAAO,EAAE;IACvB,MAAM,EAAE;QACJ,WAAW,EAAE,GAAG;KACnB;IACD,IAAI,EAAE;QACF,KAAK,EAAE,CAAC;KACX;IACD,MAAM,EAAE;QACJ,KAAK,EAAE,SAAS;KACnB;IACD,IAAI,EAAE;QACF,KAAK,EAAE,CAAC;QACR,QAAQ,EAAE,MAAM;QAChB,KAAK,EAAE,SAAS;KACnB;IACD,OAAO,EAAE;QACL,QAAQ,EAAE,OAAO;KACpB;IACD,OAAO,EAAE;QACL,MAAM,EAAE,SAAS;oBACL,qCAAqC;oBACrC,wCAAwC;oBACxC,qCAAqC;oBACrC,yCAAyC;oBACzC,uCAAuC;oBACvC,qCAAqC;oBACrC,wCAAwC;gBAC5C,UAAU;KACrB;IACD,SAAS,EAAE;QACP,OAAO,EAAE,CAAC;QACV,MAAM,EAAE;YACJ,KAAK,EAAE,CAAC;YACR,OAAO,EAAE,CAAC;SACb;QACD,IAAI,EAAE;YACF,KAAK,EAAE,CAAC;YACR,OAAO,EAAE,CAAC;SACb;KACJ;IACD,KAAK,EAAE;QACH,OAAO,EAAE,IAAI;QACb,KAAK,EAAE,EAAE;KACZ;IACD,QAAQ,EAAE;QACN,OAAO,EAAE,IAAI;QACb,IAAI,EAAE,gBAAgB;QACtB,IAAI,EAAE,KAAK;QACX,UAAU,EAAE,KAAK;QACjB,MAAM,EAAE;YACJ,KAAK,EAAE,CAAC;YACR,OAAO,EAAE,CAAC;SACb;QACD,OAAO,EAAE,CAAC;KACb;IACD,QAAQ,EAAE;QACN,OAAO,EAAE,IAAI;QACb,IAAI,EAAE,gBAAgB;QACtB,IAAI,EAAE,MAAM;QACZ,UAAU,EAAE,KAAK;QACjB,MAAM,EAAE;YACJ,KAAK,EAAE,CAAC;YACR,OAAO,EAAE,CAAC;SACb;QACD,OAAO,EAAE,CAAC;KACb;CACJ,CAAC,CAAC;;AAEH,UAAU,CAAC,OAAO,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC,AAEhD;;AC7OA,IAAM,eAAe,GAAgB;IAAC;;;;;;;;IAAA,0BAClC,aAAa,2BAAC,GAAG,EAAE;QACf,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;KAC5B,CAAA;;IAED,0BAAA,iBAAiB,+BAAC,GAAG,EAAE;QACnB,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;QAC7B,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;KAChC,CAAA;;IAED,0BAAA,cAAc,4BAAC,GAAG,EAAE,QAAQ,EAAE;QAC1B,OAAO;YACH,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE;SACvD,CAAC;KACL,CAAA;;IAED,0BAAA,iBAAiB,+BAAC,OAAO,EAAE,WAAW,EAAE;QACpCZ,IAAM,GAAG,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QACnC,OAAO,EAAE;YACL,EAAE,WAAW,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE,EAAE,WAAW,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,EAAE;YACxD,EAAE,WAAW,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,GAAG,EAAE;SAC/C,EAAE;YACC,EAAE,WAAW,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE,EAAE,WAAW,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,EAAE;YACxD,EAAE,WAAW,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,GAAG,EAAE;SAC/C,EAAE,CAAC;KACP,CAAA;;IAED,0BAAA,gBAAgB,8BAAC,GAAG,EAAE,UAAU,EAAE;QAC9B,OAAO;YACH,EAAE,EAAE,UAAU,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,UAAU,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE;SAC3D,CAAC;KACL,CAAA;;;EAhCyB,OAiC7B,GAAA,AAED;;AC3BA,IAAM,YAAY,GAAyB;IAAC;;;;;;;;IAAA,uBACxC,QAAQ,sBAAC,IAAI,EAAE,MAAM,EAAE;QACnB,IAAQ,UAAU;QAAE,IAAA,QAAQ;QAAE,IAAA,MAAM;QAAE,IAAA,QAAQ,mBAAxC;QACN,OAA2B,GAAG,IAAI;QAA1B,IAAA,QAAQ;QAAE,IAAA,OAAO,eAAnB;QACNA,IAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;QAC/BA,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC1CA,IAAM,QAAQ,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC;QACxCA,IAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzCC,IAAI,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QACrDA,IAAI,KAAK,CAAC;;QAEV,IAAI,CAAC,cAAc,EAAE;YACjB,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,GAAG,cAAc,GAAG,EAAE,CAAC;SACzD;;QAED,IAAI,QAAQ,EAAE;YACV,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;SAC1C;;QAEDA,IAAI,OAAO,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC;QACnC,IAAI,CAAC,OAAO,EAAE;YACV,OAAO,GAAG,IAAI,aAAa,CAAC;gBACxB,QAAQ,EAAE,OAAO,CAAC,UAAU;gBAC5B,GAAG,EAAE,OAAO,CAAC,GAAG;gBAChB,OAAO,EAAE,OAAO,CAAC,OAAO;aAC3B,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SACxB;;QAED,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;;YAEhC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;;YAEtB,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC;YAC9B,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC1B,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;YACtB,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC1B,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;YACnB,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC7B;;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC9B,CAAA;;IAED,uBAAA,SAAS,yBAAG;QACR,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;YACzB,OAAO,eAAe,CAAC;SAC1B;;QAED,OAAO,OAAO,CAAC;KAClB,CAAA;;IAED,uBAAA,UAAU,wBAAC,KAAK,EAAE;QACd,OAAO;YACH,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,MAAM;YACnC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,KAAK;SACxB,CAAC;KACL,CAAA;;IAED,uBAAA,WAAW,yBAAC,KAAK,EAAE,MAAM,EAAE;QACvBD,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;QACpCC,IAAI,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;QAC/CA,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;;QAE/E,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;YACrB,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SACpC;;QAED,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;YACtC,SAAS,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC;;QAEpD,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,GAAG;YACzC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;YAC1D,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;SAC7D,CAAC;KACL,CAAA;;IAED,uBAAA,gBAAgB,8BAAC,KAAK,EAAE,MAAM,EAAE;QAC5BD,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;;QAE1B,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM;YACvC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,MAAM;YACnC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ;SACpD,CAAC;KACL,CAAA;;IAED,uBAAA,cAAc,4BAAC,KAAK,EAAE;QAClBA,IAAM,MAAM,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC;QACpCA,IAAM,MAAM,GAAG,EAAE,CAAC;;QAElB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7BD,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACtB,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,IAAI,EAAE;gBAChC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACrB;SACJ;;QAED,OAAO,MAAM,CAAC;KACjB,CAAA;;;EApGsB,gBAqG1B,GAAA,AAED;;AC/GA,IAAM,eAAe,GAAqB;IAAC;;;;;;;;IAAA,0BACvC,OAAO,uBAAG;QACNA,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChDA,IAAM,IAAI,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;;QAE/C,OAAO,IAAI,CAAC;KACf,CAAA;;;EANyB,YAO7B,GAAA,AAED;;ACTe,SAAS,QAAQ,CAAC,KAAK,EAAE;IACpC,OAAO,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,IAAI,CAAC;;;ACY5C,IAAM,YAAY,GAAqB;IAAC,qBACzB,CAAC,QAAQ,EAAE,OAAO,EAAE;;QAE3BY,eAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;;QAEf,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC;QAC1C,IAAI,CAAC,WAAW,EAAE,CAAC;;QAEnB,IAAI,CAAC,MAAM,EAAE,CAAC;KACjB;;;;sDAAA;;IAED,uBAAA,WAAW,2BAAG;;;QAGV,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;;QAEtB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;KACzB,CAAA;;IAED,uBAAA,MAAM,sBAAG;QACL,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACrD,CAAA;;IAED,uBAAA,WAAW,yBAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE;QAC9BZ,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACjCA,IAAM,eAAe,GAAG,KAAK,GAAG,OAAO,CAAC;QACxCA,IAAM,QAAQ,GAAG,KAAK,GAAG,UAAU,CAAC;QACpCA,IAAM,SAAS,GAAG,KAAK,GAAG,WAAW,CAAC;QACtC,IAAQ,QAAQ;QAAE,IAAA,MAAM,iBAAlB;QACNA,IAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC;QAC1CA,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;QAClCA,IAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;;QAEpC,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;YACjBC,IAAI,UAAU,CAAC;YACf,IAAI,QAAQ,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,SAAS,CAAC,EAAE;gBAC3C,UAAU,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;aACnD;;YAED,IAAI,SAAS,IAAI,OAAO,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,EAAE;gBAClD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;gBACpE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC;oBAC7E,IAAI,oBAAoB,CAAC,SAAS,CAAC,eAAe,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;;gBAExE,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,KAAK,EAAE,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC;aACzG;;YAED,IAAI,UAAU,EAAE;gBACZ,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;aACnD;SACJ;KACJ,CAAA;;IAED,uBAAA,gBAAgB,8BAAC,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE;QACvC,IAAQ,GAAG;QAAE,IAAA,IAAI,mBAAX;QACN,IAAQ,MAAM;QAAwB,IAAA,OAAO,2BAAvC;QACND,IAAM,UAAU,GAAG,KAAK,KAAK,CAAC,CAAC;QAC/BA,IAAM,IAAI,GAAG,EAAE,CAAC;;QAEhB,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC;QAC3B,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC;;QAE7B,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,IAAI,EAAE,CAAC;QACxCA,IAAM,QAAQ,GAAG,IAAI,eAAe,CAAC,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QACnF,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/B,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;;QAEvB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;QAClB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC/B,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;KAClC,CAAA;;IAED,uBAAA,QAAQ,sBAAC,KAAK,EAAE,MAAM,EAAE;QACpB,IAAQ,CAAC;QAAE,IAAA,CAAC,WAAN;QACNA,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QACjCA,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC7CA,IAAM,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;QACvDA,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;;QAEjDC,IAAI,UAAU,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;YAC/B,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;SACnE;;QAEDA,IAAI,KAAK,CAAC;QACV,IAAI,UAAU,EAAE;YACZ,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;YAC7C,IAAI,KAAK,EAAE;gBACP,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;gBAC7B,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;gBACnC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;aACtC;YACD,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;SAC/C;;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC5B,CAAA;;IAED,uBAAA,mBAAmB,iCAAC,MAAM,EAAE;QACxB,OAAO,MAAM,CAAC,aAAa,CAAC;KAC/B,CAAA;;IAED,uBAAA,kBAAkB,kCAAG,EAAE,CAAA;;IAEvB,uBAAA,WAAW,yBAAC,KAAK,EAAE,MAAM,EAAE;QACvBD,IAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;QAC3C,IAAe,SAAS;QAAS,IAAA,SAAS,gBAApC;QACN,IAAM,CAAC;QAAE,IAAA,CAAC,WAAN;QACJC,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAC7CA,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;;QAE7C,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;YACb,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;gBACpC,UAAU,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC;;YAErD,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;gBACb,CAAC,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;aACjC;;YAED,UAAU,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAC7C,UAAU,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;SAChD;;QAED,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;YACb,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;gBACpC,UAAU,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC;;YAErD,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;gBACb,CAAC,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;aACjC;;YAED,UAAU,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAC7C,UAAU,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;SAChD;KACJ,CAAA;;IAED,uBAAA,gBAAgB,8BAAC,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE;QACrC,IAAQ,MAAM;QAAE,IAAA,QAAQ,mBAAlB;QACND,IAAM,KAAK,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,SAAS,EAAE,QAAQ,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,qBAAqB,EAAE,qBAAqB,EAAE,EAAE,CAAC;;QAEvKC,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACxC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YAClB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,MAAM,GAAG,WAAW,CAAC,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;SAC/E;;QAEDA,IAAI,YAAY,GAAG,OAAO,CAAC;QAC3B,IAAI,MAAM,EAAE;YACR,YAAY,GAAG,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;YACvC,WAAW,CAAC,YAAY,EAAE;gBACtB,KAAK,EAAE,KAAK;gBACZ,MAAM,EAAE,MAAM;gBACd,QAAQ,EAAE,MAAM,CAAC,QAAQ;aAC5B,EAAE,KAAK,CAAC,CAAC;SACb;;QAED,OAAO,YAAY,CAAC;KACvB,CAAA;;IAED,uBAAA,SAAS,yBAAG;QACR,OAAO,SAAS,CAAC;KACpB,CAAA;;IAED,uBAAA,YAAY,0BAAC,MAAM,EAAE,QAAQ,EAAE;QAC3BA,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC3C,IAAI,CAAC,OAAO,EAAE;YACVD,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC;YACrD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,OAAO,GAAG,UAAU,CAAC,EAAE,EAAE,QAAQ,EAAE;gBAC9D,OAAO,EAAE;oBACL,OAAO,EAAE,MAAM,CAAC,OAAO;iBAC1B;gBACD,OAAO,EAAE;oBACL,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM;iBACtC;gBACD,MAAM,EAAE;oBACJ,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM;iBACrC;aACJ,EAAE,MAAM,CAAC,CAAC;SACd;;QAED,OAAO,OAAO,CAAC;KAClB,CAAA;;IAED,uBAAA,WAAW,yBAAC,KAAK,EAAE,MAAM,EAAE;QACvBA,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC7BC,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC9DA,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC;;QAEzC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;;QAElE,IAAI,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YAC1B,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC;SAC9B;;QAEDD,IAAM,KAAK,GAAG,IAAI,SAAS,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;QACjD,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;;QAEpB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;;QAEnB,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,uBAAA,UAAU,wBAAC,MAAM,EAAE;QACf,IAAe,SAAS;QAAS,IAAA,SAAS,gBAApC;QACNA,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/BA,IAAM,KAAK,GAAG,SAAS,GAAG,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC;QAC1EA,IAAM,KAAK,GAAG,SAAS,GAAG,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC;;QAE1E,IAAI,CAAC,KAAK,EAAE;YACR,MAAM,IAAI,KAAK,CAAC,oCAAoC,GAAG,SAAS,CAAC,CAAC;SACrE;;QAED,IAAI,CAAC,KAAK,EAAE;YACR,MAAM,IAAI,KAAK,CAAC,oCAAoC,GAAG,SAAS,CAAC,CAAC;SACrE;;QAED,OAAO;YACH,CAAC,EAAE,KAAK;YACR,CAAC,EAAE,KAAK;SACX,CAAC;KACL,CAAA;;IAED,uBAAA,MAAM,oBAAC,SAAS,EAAE;;;QACdA,IAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC;QAChCA,IAAM,KAAK,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QACjCC,IAAI,OAAO,GAAG,CAAC,CAAC;;;QAGhB,IAAI,CAAC,kBAAkB,CAAC,UAAC,KAAK,EAAE,MAAM,EAAE;YACpCD,IAAM,KAAK,GAAG,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC;YACrCA,IAAM,UAAU,GAAGQ,MAAI,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAClDR,IAAM,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;YAC5DA,IAAM,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;;YAE5D,IAAI,KAAK,EAAE;gBACP,IAAI,KAAK,IAAI,KAAK,EAAE;oBAChBA,IAAM,SAAS,GAAGQ,MAAI,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oBAC/C,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;iBAC3B,MAAM;oBACH,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;iBACzB;aACJ;SACJ,CAAC,CAAC;;QAEH,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;KACxB,CAAA;;IAED,uBAAA,SAAS,uBAAC,KAAK,EAAE,KAAK,EAAE;QACpB,OAAO,IAAI,GAAG,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;KAC1D,CAAA;;IAED,uBAAA,kBAAkB,gCAAC,QAAQ,EAAE;;;QACzB,OAA2C,GAAG,IAAI;QAA/B,IAAA,MAAM;QAAI,IAAA,YAAY,oBAAnC;;QAEN,KAAKP,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE;YACzDD,IAAM,aAAa,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;YACvCA,IAAM,mBAAmB,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC;YACnD,IAAI,CAAC,mBAAmB,EAAE;gBACtB,YAAY,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;aAC/B;;YAED,KAAKC,IAAI,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE;gBAClE,SAAoC,GAAGO,MAAI,CAAC,UAAU,CAAC,aAAa,EAAE,QAAQ,EAAE,OAAO,CAAC;gBAAnE,IAAA,KAAK;gBAAE,IAAA,MAAM,gBAA5B;;gBAEN,QAAQ,CAAC,KAAK,EAAE,UAAU,CAAC;oBACvB,OAAO,EAAE,OAAO;oBAChB,MAAM,EAAE,aAAa;oBACrB,QAAQ,EAAE,QAAQ;oBAClB,QAAQ,EAAE,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC;oBACrC,KAAK,EAAEA,MAAI;iBACd,EAAE,MAAM,CAAC,CAAC,CAAC;aACf;SACJ;KACJ,CAAA;;IAED,uBAAA,gBAAgB,8BAAC,KAAK,EAAE,MAAM,EAAE;QAC5BR,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAC1B,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;KAClE,CAAA;;IAED,uBAAA,eAAe,+BAAG;QACdA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3BA,IAAM,MAAM,GAAG,EAAE,CAAC;QAClB,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YAC1C,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;SAC3C;QACD,OAAO,MAAM,CAAC;KACjB,CAAA;;;EArSsB,YAsS1B,GAAA;AACD,iBAAiB,CAAC,YAAY,EAAE;IAC5B,MAAM,EAAE,EAAE;IACV,OAAO,EAAE;QACL,MAAM,EAAE,UAAU;KACrB;IACD,MAAM,EAAE;QACJ,MAAM,EAAE,UAAU;KACrB;IACD,IAAI,EAAE,IAAI;CACb,CAAC,CAAC;AACH,UAAU,CAAC,YAAY,CAAC,SAAS,EAAE,kBAAkB,EAAE;IACnD,UAAU,EAAE,gBAAgB,CAAC,SAAS,CAAC,UAAU;CACpD,CAAC,CAAC,AAEH;;AC5TA,IAAM,MAAM,GAAkB;IAAC,eAChB,CAAC,KAAK,EAAE,OAAO,EAAE;QACxBW,YAAK,KAAA,CAAC,MAAA,KAAK,EAAE,OAAO,CAAC,CAAC;;QAEtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;KAClC;;;;0CAAA;;IAED,iBAAA,eAAe,+BAAG;QACdZ,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QACzCA,IAAM,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;QAChCA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACrCA,IAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QACjCA,IAAM,MAAM,GAAG,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACxEA,IAAM,cAAc,GAAG,IAAIe,8BAAI,CAAC,KAAK,EAAE,CAAC;QACxCf,IAAM,MAAM,GAAG,IAAIe,8BAAI,CAAC,MAAM,CAAC,IAAID,+BAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,EAAE,MAAM,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE;YAC/H,MAAM,EAAE;gBACJ,KAAK,EAAE,MAAM;aAChB;YACD,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC;gBACtB,QAAQ,EAAE,cAAc;gBACxB,KAAK,EAAE,OAAO,CAAC,UAAU;gBACzB,KAAK,EAAE,EAAE;oBACL,MAAM,EAAE,CAAC;oBACT,KAAK,EAAE,OAAO,CAAC,UAAU;oBACzB,OAAO,EAAE,GAAG;iBACf,EAAE;oBACC,MAAM,EAAE,CAAC;oBACT,KAAK,EAAE,OAAO,CAAC,UAAU;oBACzB,OAAO,EAAE,CAAC;iBACb,EAAE;aACN,CAAC;SACL,CAAC,CAAC;QACHd,IAAM,OAAO,GAAG,IAAIe,8BAAI,CAAC,MAAM,CAAC,IAAID,+BAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE;YAC7E,MAAM,EAAE;gBACJ,KAAK,EAAE,MAAM,CAAC,KAAK;oBACf,IAAIa,4BAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC,KAAK,EAAE;gBACvE,KAAK,EAAE,MAAM,CAAC,KAAK;gBACnB,OAAO,EAAE,MAAM,CAAC,OAAO;aAC1B;YACD,IAAI,EAAE;gBACF,KAAK,EAAE,OAAO,CAAC,UAAU;gBACzB,OAAO,EAAE,SAAS,CAAC,OAAO;aAC7B;SACJ,CAAC,CAAC;;QAEH,cAAc,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;;QAEvC,OAAO,cAAc,CAAC;KACzB,CAAA;;;EAhDgB,SAiDpB,GAAA;;AAED,MAAM,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE;IAClE,MAAM,EAAE;QACJ,QAAQ,EAAE,MAAM;KACnB;IACD,SAAS,EAAE;QACP,OAAO,EAAE,CAAC;QACV,MAAM,EAAE;YACJ,KAAK,EAAE,MAAM;YACb,KAAK,EAAE,CAAC;YACR,OAAO,EAAE,CAAC;SACb;KACJ;CACJ,CAAC,CAAC,AAEH;;ACjEA,IAAM,WAAW,GAAqB;IAAC;;;;;;;;IAAA,sBACnC,WAAW,2BAAG;QACV,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1Bf,yBAAK,CAAC,WAAW,KAAA,CAAC,IAAA,CAAC,CAAC;KACvB,CAAA;;IAED,sBAAA,QAAQ,sBAAC,KAAK,EAAE,MAAM,EAAE;QACpB,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,EAAE;YACrG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;YAC9DA,yBAAK,CAAC,QAAQ,KAAA,CAAC,MAAA,KAAK,EAAE,MAAM,CAAC,CAAC;SACjC,MAAM;YACH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACjD;KACJ,CAAA;;IAED,sBAAA,MAAM,oBAAC,GAAG,EAAE;QACR,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;QAC5BA,yBAAK,CAAC,MAAM,KAAA,CAAC,MAAA,GAAG,CAAC,CAAC;KACrB,CAAA;;IAED,sBAAA,SAAS,yBAAG;QACR,OAAO,MAAM,CAAC;KACjB,CAAA;;IAED,sBAAA,WAAW,yBAAC,KAAK,EAAE,MAAM,EAAE;QACvBZ,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC7BA,IAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACvCA,IAAM,KAAK,GAAG,MAAM,CAAC,OAAO,GAAG,CAAC,0BAA0B,GAAG,WAAW,CAAC,CAAC;QAC1EA,IAAM,gBAAgB,GAAG;YACrB,KAAK,EAAE,KAAK;YACZ,QAAQ,EAAE,0BAA0B,GAAG,KAAK;YAC5C,IAAI,EAAE,MAAM;SACf,CAAC;;QAEFC,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC;QACzC,IAAI,KAAK,CAAC,IAAI,GAAG,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE;YACjD,KAAK,GAAG,cAAc;gBAClB,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK;aACrC,CAAC;SACL;;QAEDA,IAAI,YAAY,GAAG,UAAU,CAAC;YAC1B,MAAM,EAAE;gBACJ,SAAS,EAAE;oBACP,KAAK,EAAE,KAAK;oBACZ,QAAQ,EAAE,0BAA0B,GAAG,KAAK;iBAC/C;aACJ;SACJ,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,EAAE;YAC3C,OAAO,EAAE;gBACL,IAAI,EAAE,MAAM;gBACZ,MAAM,EAAE,MAAM,CAAC,MAAM;gBACrB,OAAO,EAAE,MAAM,CAAC,OAAO;gBACvB,SAAS,EAAE,gBAAgB;aAC9B;SACJ,CAAC,CAAC;;QAEH,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QAClE,IAAI,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YAC1B,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC;SAC9B;;QAED,YAAY,CAAC,OAAO,CAAC,UAAU,GAAG,KAAK,CAAC;;QAExCD,IAAM,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;QAC9C,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;;QAEpB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;;QAEnB,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,sBAAA,iBAAiB,+BAAC,GAAG,EAAE;;;QACnB,OAA6B,GAAG,IAAI;QAAjB,IAAA,MAAM,sBAAnB;QACNA,IAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;;QAEpD,KAAKC,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE;YACzDD,IAAM,aAAa,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;YACvCA,IAAM,YAAY,GAAGQ,MAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;YACjDR,IAAM,OAAO,GAAG,aAAa,CAAC,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,EAAE,EAAE,CAAC,CAAC;YACtEA,IAAM,OAAO,GAAG,aAAa,CAAC,OAAO,IAAI,OAAO,GAAG,GAAG,CAAC;YACvDA,IAAM,IAAI,GAAG,OAAO,GAAG,CAAC,CAAC;YACzBA,IAAM,IAAI,GAAG,OAAO,GAAG,CAAC,CAAC;YACzBA,IAAM,OAAO,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC;YACtCA,IAAM,OAAO,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC;YACtCA,IAAM,SAAS,GAAG,OAAO,GAAG,OAAO,CAAC;YACpCA,IAAM,SAAS,GAAG,SAAS,GAAGQ,MAAI,CAAC,QAAQ,CAAC;;YAE5C,KAAKP,IAAI,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,YAAY,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE;gBAC5DD,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;gBACpC,IAAI,KAAK,EAAE;oBACPA,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;oBACpDA,IAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;oBACrDA,IAAM,UAAU,GAAG,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;oBAC3DA,IAAM,MAAM,GAAG,UAAU,GAAG,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC;;oBAEhD,UAAU,CAAC,KAAK,CAAC,OAAO,EAAE;wBACtB,MAAM,EAAE,MAAM;wBACd,OAAO,EAAE;4BACL,IAAI,EAAE,MAAM,GAAG,CAAC;4BAChB,MAAM,EAAE,MAAM;yBACjB;wBACD,MAAM,EAAE;4BACJ,MAAM,EAAE,MAAM,GAAG,CAAC;yBACrB;qBACJ,CAAC,CAAC;iBACN;aACJ;SACJ;KACJ,CAAA;;IAED,sBAAA,gBAAgB,8BAAC,KAAK,EAAE,MAAM,EAAE;QAC5BA,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAC1B,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;KAC9F,CAAA;;IAED,sBAAA,eAAe,+BAAG,EAAE,CAAA;IACpB,sBAAA,YAAY,4BAAG,EAAE,CAAA;;;EAtHK,YAuHzB,GAAA;;AAED,iBAAiB,CAAC,WAAW,EAAE;IAC3B,OAAO,EAAE;QACL,MAAM,EAAE,KAAK;KAChB;IACD,MAAM,EAAE;QACJ,MAAM,EAAE,KAAK;KAChB;CACJ,CAAC,CAAC,AAEH;;ACtIA,IAAM,MAAM,GAAqB;CAAC;;;;;;;;;EAAb,YAAgB,GAAA;;AAErC,UAAU,CAAC,MAAM,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC,AAE/C;;ACKA,IAAM,MAAM,GAAqB;IAAC,eACnB,CAAC,KAAK,EAAE,OAAO,EAAE;QACxBY,eAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;;QAEf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QACxC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC;QACpC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACtB;;;;0CAAA;;IAED,iBAAA,MAAM,sBAAG;QACLZ,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;;QAE7B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;;YAEtB,IAAI,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;gBAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC;oBACrB,IAAI,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK;oBAC1B,UAAU,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK;oBAC9C,OAAO,EAAE,OAAO,CAAC,OAAO;oBACxB,MAAM,EAAE,OAAO,CAAC,MAAM;oBACtB,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,MAAM;oBAC7B,MAAM,EAAE,GAAG;oBACX,KAAK,EAAE,KAAK;iBACf,CAAC,CAAC;;gBAEH,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;gBAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;gBACrC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;;gBAEjC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAC5B;;YAED,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;KACJ,CAAA;;IAED,iBAAA,MAAM,oBAAC,GAAG,EAAE;QACR,IAAI,CAAC,MAAM,EAAE,CAAC;;QAEd,OAAuC,GAAG,IAAI;QAAtC,IAAA,OAAO;QAAE,IAAA,MAAM;QAAS,IAAA,KAAK,aAA/B;QACNA,IAAM,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;QACtCA,IAAM,SAAS,GAAG,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACtDA,IAAM,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,YAAY,EAAE,OAAO,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;QAC3FA,IAAM,eAAe,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC7DA,IAAM,WAAW,GAAG,UAAU,GAAG,eAAe,GAAG,YAAY,CAAC;QAChEA,IAAM,WAAW,GAAG,UAAU,GAAG,YAAY,GAAG,eAAe,CAAC;;QAEhE,IAAI,MAAM,EAAE;YACRA,IAAM,UAAU,GAAG,IAAI,GAAG;gBACtB,WAAW,CAAC,EAAE,EAAE,WAAW,CAAC,EAAE;gBAC9B,WAAW,CAAC,EAAE,EAAE,WAAW,CAAC,EAAE;aACjC,CAAC;YACF,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,UAAU,GAAG,UAAU,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;YACrF,MAAM,CAAC,OAAO,CAAC,KAAK,GAAG,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,EAAE,CAAC;YACnF,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;SAC7B;;QAED,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SACzB;;QAED,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAClB,CAAA;;IAED,iBAAA,YAAY,4BAAG;QACXY,yBAAK,CAAC,YAAY,KAAA,CAAC,IAAA,CAAC,CAAC;;QAErBZ,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,IAAI,GAAGe,8BAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE;YAC/C,IAAI,EAAE;gBACF,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,OAAO,EAAE,OAAO,CAAC,OAAO;aAC3B;YACD,MAAM,EAAE,IAAI;SACf,CAAC,CAAC;;QAEH,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE;YAC1B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE;gBACvB,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK;gBACzC,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK;gBAC3B,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,QAAQ;gBACjC,OAAO,EAAE,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC;aACnE,CAAC,CAAC;SACN;;QAED,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;;QAEvB,gBAAgB,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAC5B,CAAA;;IAED,iBAAA,eAAe,+BAAG;QACd,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,CAAC,SAAS,GAAGA,8BAAI,CAAC,SAAS,CAAC,MAAM;gBAClC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS;aAC1C,CAAC;SACL;KACJ,CAAA;;IAED,iBAAA,eAAe,6BAAC,KAAK,EAAE;QACnB,OAAOA,8BAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,KAAK,CAAC,CAAC;KACvD,CAAA;;IAED,iBAAA,eAAe,+BAAG;QACd,OAAO,IAAI,CAAC,UAAU,CAAC;KAC1B,CAAA;;IAED,iBAAA,mBAAmB,mCAAG;QAClB,OAAO;YACH,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;YACvB,MAAM,EAAE,IAAI,CAAC,UAAU;YACvB,OAAO,EAAE,IAAI,CAAC,OAAO;SACxB,CAAC;KACL,CAAA;;IAED,iBAAA,WAAW,yBAAC,MAAM,EAAE;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;KACpD,CAAA;;;EAtHgB,YAuHpB,GAAA;;AAED,MAAM,CAAC,SAAS,CAAC,aAAa,GAAG,GAAG,CAAC,SAAS,CAAC,aAAa,CAAC;;AAE7D,iBAAiB,CAAC,MAAM,EAAE;IACtB,MAAM,EAAE;QACJ,KAAK,EAAE,CAAC;KACX;IACD,QAAQ,EAAE,KAAK;IACf,OAAO,EAAE,CAAC;IACV,MAAM,EAAE;QACJ,KAAK,EAAE,EAAE;QACT,MAAM,EAAE;YACJ,KAAK,EAAE,CAAC;YACR,KAAK,EAAE,OAAO;SACjB;QACD,IAAI,EAAE;YACF,KAAK,EAAE,CAAC;SACX;KACJ;IACD,OAAO,EAAE;QACL,MAAM,EAAE,+BAA+B;KAC1C;CACJ,CAAC,CAAC;;AAEH,UAAU,CAAC,MAAM,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC;AAC/C,UAAU,CAAC,MAAM,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,AAExC;;ACtJA,IAAM,WAAW,GAAyB;IAAC,oBAC5B,CAAC,QAAQ,EAAE,OAAO,EAAE;;QAE3B,QAAQ,CAAC,OAAO,CAAC,CAAC;;QAElBH,mBAAK,KAAA,CAAC,MAAA,QAAQ,EAAE,OAAO,CAAC,CAAC;KAC5B;;;;oDAAA;;IAED,sBAAA,gBAAgB,8BAAC,aAAa,EAAE;QAC5BZ,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/BA,IAAM,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC;;QAEvC,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;YACrC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;SACxC;KACJ,CAAA;;IAED,sBAAA,SAAS,uBAAC,KAAK,EAAE;QACbD,IAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC5BA,IAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QAC/CA,IAAM,iBAAiB,GAAG,IAAI,CAAC,yBAAyB,CAAC,SAAS,CAAC,CAAC;;QAEpE,OAAO,EAAE,iBAAiB,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,IAAI,iBAAiB,EAAE,CAAC;KAC1E,CAAA;;IAED,sBAAA,WAAW,yBAAC,IAAI,EAAE,MAAM,EAAE;QACtB,IAAQ,UAAU;QAAE,IAAA,QAAQ;QAAE,IAAA,MAAM;QAAE,IAAA,QAAQ,mBAAxC;QACN,OAA2B,GAAG,IAAI;QAA1B,IAAA,OAAO;QAAE,IAAA,QAAQ,gBAAnB;QACNA,IAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;;QAE/BC,IAAI,aAAa,GAAG,UAAU,CAAC;YAC3B,QAAQ,EAAE,CAAC,OAAO,CAAC,UAAU;YAC7B,OAAO,EAAE,MAAM,CAAC,OAAO;YACvB,UAAU,EAAE,UAAU;YACtB,UAAU,EAAE,OAAO,CAAC,UAAU;SACjC,EAAE,MAAM,CAAC,CAAC;;QAEXA,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC;QAC9C,aAAa,GAAG,IAAI,CAAC,gBAAgB;YACjC,aAAa,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ;SAC/D,CAAC;;QAEF,IAAI,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YAC1B,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC;SAC/B;;QAEDD,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;QAChD,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;;QAErBC,IAAI,OAAO,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC;QACnC,IAAI,CAAC,OAAO,EAAE;YACV,OAAO,GAAG,IAAI,aAAa,CAAC;gBACxB,QAAQ,EAAE,OAAO,CAAC,UAAU;gBAC5B,GAAG,EAAE,OAAO,CAAC,GAAG;gBAChB,OAAO,EAAE,OAAO,CAAC,OAAO;aAC3B,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SACxB;;QAED,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;;QAEvB,OAAO,MAAM,CAAC;KACjB,CAAA;;IAED,sBAAA,WAAW,yBAAC,KAAK,EAAE,MAAM,EAAE;QACvB,IAAQ,OAAO;QAAE,IAAA,MAAM,gBAAjB;QACND,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;QACpCC,IAAI,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;;QAE/C,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE;YAC1E,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;gBACtC,SAAS,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC;;YAEpD,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;YACzD,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;SAC5D;KACJ,CAAA;;IAED,sBAAA,gBAAgB,8BAAC,KAAK,EAAE,MAAM,EAAE;QAC5B,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;KACzF,CAAA;;IAED,sBAAA,UAAU,wBAAC,IAAI,EAAE;QACb,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;KACnC,CAAA;;IAED,sBAAA,SAAS,uBAAC,KAAK,EAAE;QACbD,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;;QAElC,OAAO,KAAK,GAAG,CAAC,CAAC;KACpB,CAAA;;IAED,sBAAA,eAAe,+BAAG;;;QACdA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;;QAE3B,IAAI,CAAC,oBAAoB,EAAE,CAAC;;QAE5B,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YAC1CD,IAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;YAC1B,KAAK,CAAC,OAAO,CAAC,SAAS,GAAGQ,MAAI,CAAC,OAAO,CAAC,SAAS,CAAC;YACjD,KAAK,CAAC,eAAe,EAAE,CAAC;SAC3B;KACJ,CAAA;;;EAtGqB,gBAuGzB,GAAA;;AAED,WAAW,CAAC,SAAS,CAAC,oBAAoB,GAAG,QAAQ,CAAC,SAAS,CAAC,oBAAoB,CAAC;;AAErF,iBAAiB,CAAC,WAAW,EAAE;IAC3B,SAAS,EAAE;QACP,IAAI,EAAE,GAAG;KACZ;CACJ,CAAC,CAAC;;AAEH,SAAS,QAAQ,CAAC,OAAO,EAAE;IACvBR,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;;IAE9B,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACpCD,IAAM,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAC7BA,IAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;QAC7B,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;YACjD,UAAU,CAAC,IAAI,GAAG,EAAE,IAAI,EAAE,CAAC;SAC9B;KACJ;CACJ,AAED;;AClIA,IAAM,WAAW,GAAc;IAAC,oBACjB,CAAC,YAAY,EAAE,OAAO,EAAE;QAC/BY,QAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAER,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;KACxD;;;;oDAAA;;IAED,sBAAA,QAAQ,sBAAC,OAAO,EAAE,KAAK,EAAE;QACrB,IAAM,UAAU;QAAmB,IAAA,MAAM,wBAArC;;QAEJ,IAAI,KAAK,EAAE;YACPZ,IAAM,UAAU,GAAG,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;YACtD,UAAU,GAAG,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;YACpD,MAAM,GAAG,cAAc,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;SAC/C;;QAEDA,IAAM,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC,OAAO,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC;;QAE1D,OAAO;YACH,eAAe,EAAE,UAAU;YAC3B,WAAW,EAAE,MAAM;YACnB,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,WAAW,EAAE,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;YAC7C,UAAU,EAAE,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC;YACnC,aAAa,EAAE,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC;YACzC,WAAW,EAAE,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC;YACrC,YAAY,EAAE,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC;SAC1C,CAAC;KACL,CAAA;;IAED,sBAAA,IAAI,kBAAC,OAAO,EAAE,cAAc,EAAE,KAAK,EAAE;QACjC,OAAO,CAAC,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC;;QAEvCA,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;QACnD,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;;QAEtB,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,IAAI2B,4BAAK,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,cAAc,EAAE,GAAG,GAAG,EAAE;YAC3F,OAAO,CAAC,SAAS,GAAG,yBAAyB,CAAC;SACjD;;QAED,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;KACnD,CAAA;;IAED,sBAAA,IAAI,oBAAG;QACH,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;SAC1C;KACJ,CAAA;;IAED,sBAAA,OAAO,uBAAG;QACN,OAAO,IAAI,CAAC,YAAY,CAAC;KAC5B,CAAA;;;EAtDqBd,4BAuDzB,GAAA;;AAED,iBAAiB,CAAC,WAAW,EAAE;IAC3B,MAAM,EAAE;QACJ,KAAK,EAAE,CAAC;KACX;IACD,OAAO,EAAE,CAAC;CACb,CAAC,CAAC,AAEH,AAA2B;;AC/D3B,IAAM,gBAAgB,GAAoB;IAAC,yBAC5B,CAAC,YAAY,EAAE,SAAS,EAAE,OAAO,EAAE;QAC1CD,cAAK,KAAA,CAAC,MAAA,YAAY,EAAE,OAAO,CAAC,CAAC;;QAE7B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC,MAAM,CAAC;QACzC,IAAI,CAAC,YAAY,EAAE,CAAC;KACvB;;;;8DAAA;;IAED,2BAAA,YAAY,4BAAG;QACXZ,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QACjCA,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/BC,IAAI,IAAI,CAAC;QACT,IAAI,QAAQ,CAAC,YAAY,EAAE;YACvB,IAAI,GAAG,IAAI,CAAC,WAAW,GAAG,cAAc,GAAG,WAAW,CAAC;SAC1D,MAAM;YACH,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,OAAO,GAAG,OAAO,CAAC;SACpD;QACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;KACxB,CAAA;;IAED,2BAAA,MAAM,oBAAC,KAAK,EAAE;QACV,OAAsC,GAAG,IAAI;QAAxB,IAAA,IAAI;QAAI,IAAA,OAAO,eAA9B;QACNA,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,aAAa,GAAG,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC;QACzEA,IAAI,cAAc,GAAG,KAAK,CAAC;;QAE3B,IAAI,OAAO,CAAC,MAAM,EAAE;YAChB,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SACnE,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,IAAI,EAAE;YACnC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC;SAC3G;;QAED,IAAI,CAAC,IAAI,CAAC;YACN,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE;YACxB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,KAAK,EAAE,cAAc;YACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS;SAC3C,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;KACpB,CAAA;;IAED,2BAAA,IAAI,oBAAG;QACH,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,YAAY,EAAE;YACnC,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS;SAC3C,CAAC,CAAC;KACN,CAAA;;IAED,2BAAA,SAAS,yBAAG;QACR,OAAmD,GAAG,IAAI;QAAlD,IAAA,SAAS;QAAW,kBAAA,WAAC;QAAC,IAAA,QAAQ;QAAE,IAAA,OAAO,uBAAzC;QACND,IAAM,QAAQ,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QAClDA,IAAM,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QACtCC,IAAI,eAAe,EAAE,aAAa,EAAE,KAAK,CAAC;;QAE1C,IAAI,QAAQ,EAAE;YACV,eAAe,GAAG,MAAM,CAAC;YACzB,IAAI,QAAQ,KAAK,MAAM,EAAE;gBACrB,aAAa,GAAG,GAAG,CAAC;gBACpB,KAAK,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;aACtD,MAAM;gBACH,aAAa,GAAG,MAAM,CAAC;gBACvB,KAAK,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;aACpD;SACJ,MAAM;YACH,aAAa,GAAG,MAAM,CAAC;YACvB,IAAI,QAAQ,KAAK,IAAI,EAAE;gBACnB,eAAe,GAAG,KAAK,CAAC;gBACxB,KAAK,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;aACpD,MAAM;gBACH,eAAe,GAAG,IAAI,CAAC;gBACvB,KAAK,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;aACpD;SACJ;;QAED,OAAO;YACH,KAAK,EAAE,KAAK;YACZ,KAAK,EAAE;gBACH,UAAU,EAAE,eAAe;gBAC3B,QAAQ,EAAE,aAAa;aAC1B;SACJ,CAAC;KACL,CAAA;;;EAnF0B,WAoF9B,GAAA;;AAED,iBAAiB,CAAC,gBAAgB,EAAE;IAChC,OAAO,EAAE,EAAE;CACd,CAAC,CAAC,AAEH,AAAgC;;ACxFhC,IAAM,SAAS,GAAqB;IAAC,kBACtB,CAAC,YAAY,EAAE,IAAI,EAAE,OAAO,EAAE;QACrCW,eAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;;QAEf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,IAAI,YAAY,YAAY,CAAC;;QAE/CZ,IAAM,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;;QAE5C,IAAI,cAAc,CAAC,OAAO,EAAE;YACxB,IAAI,CAAC,OAAO,GAAG,IAAI,gBAAgB,CAAC,YAAY,EAAE,IAAI;gBAClD,UAAU,CAAC,EAAE,EAAE,cAAc,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;aAClE,CAAC;SACL;KACJ;;;;gDAAA;;IAED,oBAAA,MAAM,oBAAC,KAAK,EAAE;QACV,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;;QAExB,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC9B;KACJ,CAAA;;IAED,oBAAA,IAAI,oBAAG;QACH,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;;QAEzB,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;SACvB;KACJ,CAAA;;IAED,oBAAA,QAAQ,wBAAG;QACP,OAAqB,GAAG,IAAI;QAApB,IAAA,IAAI;QAAE,IAAA,KAAK,aAAb;QACNA,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACvCA,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QAC1BA,IAAM,GAAG,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;QAC7BA,IAAM,SAAS,GAAG,IAAIc,+BAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;QACjDb,IAAI,OAAO,CAAC;;QAEZ,IAAI,QAAQ,EAAE;YACV,OAAO,GAAG,IAAIa,+BAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;SAC5C,MAAM;YACH,OAAO,GAAG,IAAIA,+BAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;SAC5C;;QAED,IAAI,KAAK,EAAE;YACP,IAAI,IAAI,CAAC,UAAU,EAAE;gBACjBd,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC1D,SAAS,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC;aACtD,MAAM;gBACH,SAAS,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;aAC9C;SACJ;;QAED,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;;QAEf,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KAC/C,CAAA;;IAED,oBAAA,MAAM,sBAAG;QACLA,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvBA,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QAC5BA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3BA,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACvCA,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,CAAC;QACnCA,IAAM,GAAG,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;QAC7BC,IAAI,WAAW,CAAC;;QAEhB,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7BD,IAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAC5B,IAAI,WAAW,CAAC,OAAO,CAAC,QAAQ,KAAK,QAAQ,EAAE;gBAC3C,IAAI,CAAC,WAAW,EAAE;oBACd,WAAW,GAAG,WAAW,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,CAAC;iBAC/C,MAAM;oBACH,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC;iBAC3C;aACJ;SACJ;;QAED,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;QACpC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;;QAEpC,OAAO,GAAG,CAAC;KACd,CAAA;;IAED,oBAAA,YAAY,4BAAG;QACXY,yBAAK,CAAC,YAAY,KAAA,CAAC,IAAA,CAAC,CAAC;;QAErBZ,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAI,CAAC,IAAI,GAAG,IAAIe,8BAAI,CAAC,IAAI,CAAC;YACtB,MAAM,EAAE;gBACJ,KAAK,EAAE,OAAO,CAAC,KAAK;gBACpB,KAAK,EAAE,OAAO,CAAC,KAAK;gBACpB,OAAO,EAAE,OAAO,CAAC,OAAO;gBACxB,QAAQ,EAAE,OAAO,CAAC,QAAQ;aAC7B;YACD,OAAO,EAAE,KAAK;SACjB,CAAC,CAAC;;QAEH,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACjC,CAAA;;IAED,oBAAA,OAAO,uBAAG;QACN,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;SAC1B;;QAEDH,yBAAK,CAAC,OAAO,KAAA,CAAC,IAAA,CAAC,CAAC;KACnB,CAAA;;;EAhHmB,YAiHvB,GAAA;;AAED,iBAAiB,CAAC,SAAS,EAAE;IACzB,KAAK,EAAE,KAAK;IACZ,KAAK,EAAE,CAAC;IACR,MAAM,EAAE,CAAC,CAAC;IACV,OAAO,EAAE;QACL,OAAO,EAAE,KAAK;KACjB;CACJ,CAAC,CAAC,AAEH;;AChIA,IAAM,cAAc,GAAqB;IAAC,uBAC3B,CAAC,OAAO,EAAE,IAAI,EAAE;QACvBA,eAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KACpB;;;;0DAAA;;IAED,yBAAA,UAAU,0BAAG;QACTZ,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/BA,IAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;;QAE/B,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7B,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,KAAK,IAAI,EAAE;gBACnC,OAAO,IAAI,CAAC;aACf;SACJ;QACD,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,yBAAA,QAAQ,wBAAG;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;KAChC,CAAA;;IAED,yBAAA,YAAY,4BAAG;QACX,IAAI,CAAC,MAAM,GAAG,IAAIc,8BAAI,CAAC,KAAK,CAAC;YACzB,MAAM,EAAE,CAAC;SACZ,CAAC,CAAC;;QAEH,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;YACnBf,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC/CA,IAAM,QAAQ,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;YAClCA,IAAM,QAAQ,GAAGe,8BAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;;YAE9C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC3B,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;KACJ,CAAA;;IAED,yBAAA,SAAS,yBAAG;QACR,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,yBAAA,YAAY,4BAAG;QACX,OAAmC,GAAG,IAAI;QAAxB,IAAA,MAAM;QAAE,IAAA,OAAO,eAA3B;;QAEN,KAAKd,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpCD,IAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,EAAE,CAAC;YACtCA,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;;YAE7B,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7BD,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBACxB,IAAI,KAAK,IAAI,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE;oBAC1DA,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;oBAC1BA,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;;oBAExB,IAAI,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE;wBAChC,IAAI,KAAK,CAAC,cAAc,EAAE;4BACtB,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;yBACjC;wBACD,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;qBAC/B;;oBAED,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;wBAC9B,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;qBAC9B;iBACJ;aACJ;SACJ;KACJ,CAAA;;IAED,yBAAA,OAAO,uBAAG;QACNY,yBAAK,CAAC,OAAO,KAAA,CAAC,IAAA,CAAC,CAAC;;QAEhB,OAAO,IAAI,CAAC,MAAM,CAAC;KACtB,CAAA;;;EAzEwB,YA0E5B,GAAA;;AAED,cAAc,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC,AAE5C;;AC5EA,IAAM,IAAI,GAAmB;IAAC,aACf,CAAC,OAAO,EAAE;QACjBA,aAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;;QAEf,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE,CAAC;;QAEnB,IAAI,CAAC,WAAW,EAAE,CAAC;;QAEnB,IAAI,CAAC,OAAO,GAAG,IAAI,YAAY,EAAE,CAAC;;QAElC,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;QAE1B,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;KACpB;;;;sCAAA;;IAED,eAAA,WAAW,2BAAG;QACVX,IAAI,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QACtC,IAAI,QAAQ,CAAC,YAAY,CAAC,EAAE;YACxB,YAAY,GAAG,UAAU,CAAC,EAAE,EAAE,YAAY,EAAE;gBACxC,KAAK,EAAE,YAAY,CAAC,QAAQ;gBAC5B,QAAQ,EAAE,GAAG;aAChB,CAAC,CAAC;SACN;;QAED,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;KACnF,CAAA;;IAED,eAAA,UAAU,wBAAC,IAAI,EAAE;QACb,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KACpB,CAAA;;IAED,eAAA,WAAW,yBAAC,KAAK,EAAE;QACf,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,IAAI,CAAC,OAAO,EAAE;YAC7C,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SAC5C;;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAClC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;KACrB,CAAA;;IAED,eAAA,KAAK,qBAAG;;;QACJD,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC;;QAE7B,IAAI,QAAQ,EAAE;YACV,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvC,QAAQ,CAAC,UAAU,CAACO,MAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aACrC;;YAED,KAAKP,IAAI2B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAEA,GAAC,EAAE,EAAE;gBACzC,QAAQ,CAAC,WAAW,CAACpB,MAAI,CAAC,MAAM,CAACoB,GAAC,CAAC,CAAC,CAAC;aACxC;SACJ;;QAED,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;;QAEjB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,EAAE,CAAC;KACrC,CAAA;;IAED,eAAA,MAAM,oBAAC,SAAS,EAAE;;QAEd3B,IAAI,OAAO,CAAC;QACZ,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC,OAAO,EAAE;YACtC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;SACjC;;QAEDW,uBAAK,CAAC,MAAM,KAAA,CAAC,MAAA,SAAS,CAAC,CAAC;;QAExB,IAAI,OAAO,EAAE;YACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC/B;;QAED,IAAI,IAAI,CAAC,KAAK,EAAE;YACZ,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;SACjD;KACJ,CAAA;;IAED,eAAA,WAAW,2BAAG;QACVZ,IAAM,KAAK,GAAGY,uBAAK,CAAC,WAAW,KAAA,CAAC,IAAA,CAAC,CAAC;QAClC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;;QAEnB,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,eAAA,cAAc,8BAAG;QACb,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;YACtB,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;KACJ,CAAA;;IAED,eAAA,SAAS,yBAAG;QACR,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,eAAA,QAAQ,wBAAG;QACP,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,eAAA,eAAe,+BAAG;QACdZ,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvBA,IAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC9CA,IAAM,UAAU,GAAG,EAAE,CAAC;QACtBA,IAAM,UAAU,GAAG,EAAE,CAAC;;;;QAItB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClCD,IAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACrBA,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;YACvCA,IAAM,SAAS,GAAG,QAAQ,GAAG,UAAU,GAAG,UAAU,CAAC;YACrD,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrC,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;oBACxBD,IAAM,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;oBAC3B,IAAI,QAAQ,KAAK,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE;wBACvCS,QAAM,CAAC,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC;qBACpD;iBACJ;aACJ;SACJ;KACJ,CAAA;;IAED,eAAA,OAAO,uBAAG;QACN,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;;QAEpB,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;QAC5B,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;;QAE3B,IAAI,IAAI,CAAC,KAAK,EAAE;YACZ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SACzC;;QAED,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;;QAExC,IAAI,CAAC,cAAc,EAAE,CAAC;KACzB,CAAA;;IAED,eAAA,SAAS,yBAAG;QACRT,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvBA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3BA,IAAM,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;;QAE5B,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,EAAE,GAAG,EAAE,EAAE;YACnCD,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;YACvBA,IAAM,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;YACrDA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YAC/B,SAAS,CAAC,cAAc,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC;YAC5D,SAAS,CAAC,cAAc,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC;SAC/D;;QAED,IAAI,SAAS,CAAC,EAAE,KAAK,CAAC,EAAE;YACpBA,IAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YACjCA,IAAM6B,QAAM,GAAG,OAAO,CAAC,MAAM,CAAC;;YAE9B,KAAK5B,IAAIe,KAAG,GAAG,CAAC,EAAEA,KAAG,GAAGa,QAAM,EAAEb,KAAG,EAAE,EAAE;gBACnChB,IAAM8B,MAAI,GAAG,OAAO,CAACd,KAAG,CAAC,CAAC;gBAC1B,IAAI,CAACc,MAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;oBACxB9B,IAAM+B,SAAO,GAAGD,MAAI,CAAC,OAAO,EAAE,CAAC;oBAC/B,SAAS,CAAC,EAAE,GAAGC,SAAO,CAAC,EAAE,CAAC;oBAC1B,SAAS,CAAC,EAAE,GAAGA,SAAO,CAAC,EAAE,CAAC;iBAC7B;aACJ;SACJ;QACD,OAAO,SAAS,CAAC;KACpB,CAAA;;IAED,eAAA,OAAO,uBAAG;QACN,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC;KACtC,CAAA;;;EAhLc,UAiLlB,GAAA;;AAED9B,IAAI,EAAE,GAAG,CAAC,CAAC;;AAEX,SAAS,MAAM,GAAG;IACd,OAAO,MAAM,GAAG,EAAE,EAAE,CAAC;CACxB;;AAED,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC;;AAElC,iBAAiB,CAAC,IAAI,EAAE;IACpB,MAAM,EAAE,CAAC,CAAC;IACV,WAAW,EAAE,IAAI;IACjB,KAAK,EAAE;QACH,KAAK,EAAE,IAAI;KACd;IACD,OAAO,EAAE,IAAI;CAChB,CAAC,CAAC,AAEH;;ACjMA,IAAM,YAAY,GAAqB;IAAC,qBACzB,CAAC,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE;QACvCW,eAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;;QAEf,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;;QAEjC,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;;;;sDAAA;;IAED,uBAAA,UAAU,0BAAG,GAAG,CAAA;;IAEhB,uBAAA,UAAU,0BAAG;QACTZ,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;;QAE3B,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;SACvB;KACJ,CAAA;;IAED,uBAAA,WAAW,2BAAG;;;QACVD,IAAM,QAAQ,GAAG,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC;QACxEA,IAAM,KAAK,GAAG,EAAE,CAAC;QACjBA,IAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC;QAC7CA,IAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;;QAEpD,SAAS,QAAQ,CAAC,OAAO,EAAE,QAAQ,EAAE;YACjC,IAAI,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACzB,OAAO,CAAC,KAAK,GAAG;oBACZ,IAAI,EAAE,OAAO,CAAC,KAAK;iBACtB,CAAC;aACL;;YAED,OAAO,CAAC,KAAK,GAAG,UAAU,CAAC,EAAE,EAAE,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;SACjE;;QAED,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;YAClCD,IAAM,OAAO,GAAG,WAAW,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;YACrC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;;YAE5BA,IAAM,WAAW,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;YACtC,WAAW,CAAC,SAAS,GAAG,CAAC,CAAC;;YAE1B,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACxBQ,MAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SAC5B;;QAED,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACtB,CAAA;;IAED,uBAAA,gBAAgB,8BAAC,KAAkB,EAAE;0BAAf;qCAAA,GAAG,IAAI,CAAC,KAAK;;QAC/B,KAAKP,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnCD,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACtB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvCD,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC1B,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE;oBAC1DA,IAAM,gBAAgB,GAAG,IAAI,SAAS,CAACQ,MAAI,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;;oBAExFA,MAAI,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;oBACvC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;iBACzC;aACJ;SACJ;KACJ,CAAA;;IAED,uBAAA,gBAAgB,8BAAC,IAAI,EAAE;QACnBR,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnCA,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;;QAEvB,KAAKC,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YAC7C,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAClC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE;oBAChC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACxB,MAAM;iBACT;aACJ;SACJ;KACJ,CAAA;;IAED,uBAAA,cAAc,8BAAG;QACbD,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,UAAU,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YAC9C,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;SAC1B;KACJ,CAAA;;IAED,uBAAA,QAAQ,sBAAC,IAAI,EAAE;QACXD,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzBC,IAAI,YAAY,CAAC;;QAEjB,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,KAAK,IAAI,EAAE;gBAChC,YAAY,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBACxB,MAAM;aACT;SACJ;;QAED,OAAO,YAAY,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;KACnC,CAAA;;IAED,uBAAA,aAAa,2BAAC,KAAK,EAAE;QACjBD,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzBC,IAAI,YAAY,CAAC;;QAEjB,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;gBACnC,YAAY,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBACxB,MAAM;aACT;SACJ;;QAED,OAAO,YAAY,CAAC;KACvB,CAAA;;IAED,uBAAA,UAAU,wBAAC,IAAI,EAAE;QACbD,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;;QAE9C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;KACxB,CAAA;;IAED,uBAAA,UAAU,wBAAC,YAAY,EAAE;;;QACrBA,IAAM,YAAY,GAAG,EAAE,CAAC;;QAExB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvCD,IAAM,IAAI,GAAGQ,MAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC1B,IAAI,YAAY,KAAK,IAAI,EAAE;gBACvB,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC3B,MAAM;gBACH,IAAI,CAAC,OAAO,EAAE,CAAC;aAClB;SACJ;;QAED,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;KAC5B,CAAA;;IAED,uBAAA,WAAW,yBAAC,KAAK,EAAE,IAAI,EAAE;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,IAAI,EAAE;YACN,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SAC3B,MAAM;YACH,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACtB;KACJ,CAAA;;IAED,uBAAA,WAAW,yBAAC,aAAa,EAAE;;;QACvBR,IAAM,cAAc,GAAG,EAAE,CAAC;;QAE1B,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzCD,IAAM,KAAK,GAAGQ,MAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,KAAK,KAAK,aAAa,EAAE;gBACzB,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC9B,MAAM;gBACH,KAAK,CAAC,OAAO,EAAE,CAAC;aACnB;SACJ;;QAED,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC;KAChC,CAAA;;IAED,uBAAA,WAAW,yBAAC,MAAM,EAAE;QAChBR,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5BA,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACnCA,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,EAAE,CAAC;QACnCA,IAAM,aAAa,GAAG,MAAM,CAAC,aAAa,IAAI,EAAE,CAAC;QACjDA,IAAM,mBAAmB,GAAG,aAAa,CAAC,MAAM,IAAI,EAAE,CAAC;QACvDA,IAAM,IAAI,GAAG,EAAE,CAAC;;QAEhB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC5BD,IAAM,aAAa,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YAChCA,IAAM,aAAa,GAAG,aAAa,CAAC,OAAO,KAAK,KAAK,CAAC;YACtD,IAAI,aAAa,CAAC,eAAe,KAAK,KAAK,EAAE;gBACzC,SAAS;aACZ;;YAEDC,IAAI,IAAI,GAAG,aAAa,CAAC,IAAI,IAAI,EAAE,CAAC;YACpCD,IAAM,aAAa,GAAG,aAAa,GAAG,WAAW,CAAC,MAAM,CAAC,GAAG,WAAW,CAAC,mBAAmB,CAAC,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC;YACpH,IAAI,aAAa,EAAE;gBACf,IAAI,GAAG,aAAa,CAAC;oBACjB,IAAI,EAAE,IAAI;oBACV,MAAM,EAAE,aAAa;iBACxB,CAAC,CAAC;aACN;;YAEDA,IAAM,QAAQ,GAAG,aAAa,CAAC,SAAS,CAAC;YACzCC,IAAI,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC;YAChC,IAAI,UAAU,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBAC/B,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;aAC1B;;YAEDA,IAAI,gBAAgB,WAAA,EAAE,WAAW,WAAA,CAAC;YAClC,IAAI,aAAa,EAAE;gBACf,gBAAgB,GAAG,EAAE,CAAC;gBACtB,WAAW,GAAG,KAAK,CAAC;aACvB,MAAM;gBACH,gBAAgB,GAAG;oBACf,KAAK,EAAE,mBAAmB,CAAC,KAAK;oBAChC,IAAI,EAAE,mBAAmB,CAAC,IAAI;iBACjC,CAAC;gBACF,WAAW,GAAG,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC;aAC7C;;YAED,IAAI,IAAI,EAAE;gBACN,IAAI,CAAC,IAAI,CAAC;oBACN,IAAI,EAAE,IAAI;oBACV,MAAM,EAAE,gBAAgB;oBACxB,WAAW,EAAE,WAAW;oBACxB,MAAM,EAAE,aAAa;oBACrB,MAAM,EAAE,aAAa;iBACxB,CAAC,CAAC;aACN;SACJ;;QAEDQ,QAAM,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;KAC9B,CAAA;;IAED,uBAAA,SAAS,uBAAC,KAAK,EAAE;QACbT,IAAM,KAAK,GAAG,EAAE,CAAC;QACjBA,IAAM,KAAK,GAAG,EAAE,CAAC;;QAEjB,KAAKC,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE;YAClDD,IAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC;YACpC,KAAKC,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE;gBACrDD,IAAM,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAC9B,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;oBACvB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACpB,MAAM;oBACH,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACpB;aACJ;SACJ;;QAED,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC;KAC3D,CAAA;;IAED,uBAAA,iBAAiB,iCAAG;;;QAChBA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3BA,IAAM,YAAY,GAAG,EAAE,CAAC;;QAExB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpCD,IAAM,aAAa,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YAChCA,IAAM,IAAI,GAAGQ,MAAI,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;;YAEhD,IAAI,YAAY,CAAC,IAAI,CAAC,EAAE;gBACpB,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aAC1C,MAAM;gBACH,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,aAAa,EAAE,CAAC;aAC1C;SACJ;;QAED,OAAO,YAAY,CAAC;KACvB,CAAA;;IAED,uBAAA,mBAAmB,iCAAC,MAAM,EAAE;QACxBR,IAAM,MAAM,GAAG,EAAE,CAAC;;QAElB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpCD,IAAM,aAAa,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,aAAa,CAAC,OAAO,KAAK,KAAK,EAAE;gBACjC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aAC9B;SACJ;;QAED,OAAO,MAAM,CAAC;KACjB,CAAA;;IAED,uBAAA,MAAM,oBAAC,SAAS,EAAE;QACdA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACtCA,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzBA,IAAM,MAAM,GAAG,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;;QAE1C,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC3C,IAAI,CAAC,WAAW,EAAE,CAAC;;QAEnB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACvB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;KAC5B,CAAA;;IAED,uBAAA,MAAM,oBAAC,KAAK,EAAE;;;QACVA,IAAM,UAAU,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,UAAU,EAAE,CAAC;;QAElB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxCO,MAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;YACrC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;SACzB;;QAED,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;;QAE9B,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;;QAElC,KAAKP,IAAI2B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,UAAU,CAAC,MAAM,EAAEA,GAAC,EAAE,EAAE;YACxC,UAAU,CAACA,GAAC,CAAC,CAAC,OAAO,EAAE,CAAC;SAC3B;KACJ,CAAA;;IAED,uBAAA,kBAAkB,gCAAC,IAAI,EAAE,YAAY,EAAE;QACnC5B,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,cAAc,GAAG,EAAE,CAAC,MAAM;YAC5B,OAAO,CAAC,kBAAkB,IAAI,OAAO,CAAC,iBAAiB;SAC1D,CAAC;QACFA,IAAM,WAAW,GAAG,YAAY,CAAC,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC;QAChEA,IAAM,YAAY,GAAG,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;;QAE5C,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;YAClC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACrC;;QAED,OAAO,cAAc,CAAC;KACzB,CAAA;;IAED,uBAAA,WAAW,yBAAC,IAAI,EAAE,UAAU,EAAE,aAAa,EAAE,mBAAmB,EAAE;QAC9DD,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,aAAa,EAAE,IAAI,CAAC,CAAC;QAC9DA,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;QAC9CA,IAAM,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,mBAAmB,EAAE,mBAAmB,EAAE,IAAI,CAAC,CAAC;QACtFA,IAAM,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;QACtDA,IAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS;YAC9B,UAAU,CAAC,CAAC,GAAG,UAAU,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC;YAC/C,UAAU,CAAC,CAAC,GAAG,UAAU,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC;SAClD,CAAC;;QAEF,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,CAAC,IAAI,EAAE;YAC/B,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;SACnE;;QAED,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KACxB,CAAA;;IAED,uBAAA,SAAS,uBAAC,KAAK,EAAE,KAAK,EAAE;;;QACpBA,IAAM,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACzBA,IAAM,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACzBA,IAAM,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACjEA,IAAM,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACjEA,IAAM,WAAW,GAAG,EAAE,CAAC;QACvBA,IAAM,YAAY,GAAG,EAAE,CAAC;QACxBA,IAAM,UAAU,GAAG,EAAE,CAAC;QACtBA,IAAM,aAAa,GAAG,EAAE,CAAC;;QAEzB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnCD,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACtBA,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACvBA,IAAM,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC;;;YAGvBA,IAAM,MAAM,GAAG,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,OAAO,CAAC;YAClDC,IAAI,eAAe,GAAG,gBAAgB,CAAC;;YAEvC,IAAI,MAAM,KAAK,OAAO,EAAE;gBACpB,eAAe,GAAGO,MAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;aAC5D;;YAEDA,MAAI,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,gBAAgB,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;;YAExE,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;gBACvB,SAAS;aACZ;;YAED,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE;;gBAEzD,IAAI,WAAW,CAAC,MAAM,CAAC,EAAE;oBACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG;yBACf,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;yBACtC,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;qBACtC,CAAC;iBACL;;gBAED,WAAW,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;aAC9B;;YAED,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE;;gBAEzD,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oBACjB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;oBACzD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;iBACzB;gBACDA,MAAI,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,gBAAgB,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;;;gBAGxE,IAAI,YAAY,CAAC,MAAM,CAAC,EAAE;oBACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG;yBACf,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;yBACxC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;qBACrC,CAAC;iBACL;;gBAED,YAAY,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;aAC/B;;YAED,IAAI,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE;gBACvC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACzB;SACJ;;QAED,KAAKP,IAAI2B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,KAAK,CAAC,MAAM,EAAEA,GAAC,EAAE,EAAE;YACnC5B,IAAM8B,MAAI,GAAG,KAAK,CAACF,GAAC,CAAC,CAAC;YACtB5B,IAAMgC,MAAI,GAAGF,MAAI,CAAC,IAAI,CAAC;YACvB9B,IAAMiC,QAAM,GAAGD,MAAI,CAAC,EAAE,CAAC;;;YAGvBhC,IAAMkC,QAAM,GAAG,UAAU,CAAC,KAAK,EAAEF,MAAI,CAAC,IAAI,OAAO,CAAC;YAClD/B,IAAIkC,iBAAe,GAAG,gBAAgB,CAAC;YACvC,IAAID,QAAM,KAAK,OAAO,EAAE;gBACpBC,iBAAe,GAAG3B,MAAI,CAAC,kBAAkB,CAAC0B,QAAM,EAAE,KAAK,CAAC,CAAC;aAC5D;;YAED1B,MAAI,CAAC,WAAW,CAACsB,MAAI,EAAEI,QAAM,EAAE,gBAAgB,CAACN,GAAC,CAAC,EAAEO,iBAAe,CAACP,GAAC,CAAC,CAAC,CAAC;;YAExE,IAAIE,MAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;gBACvB,SAAS;aACZ;;YAED,IAAI,KAAK,CAACA,MAAI,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,KAAK,KAAK,CAACI,QAAM,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE;;gBAEzD,IAAI,CAACJ,MAAI,CAAC,SAAS,EAAE;oBACjBA,MAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,CAACA,MAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;oBACzDA,MAAI,CAAC,SAAS,GAAG,IAAI,CAAC;iBACzB;gBACDtB,MAAI,CAAC,WAAW,CAACsB,MAAI,EAAEI,QAAM,EAAE,gBAAgB,CAACN,GAAC,CAAC,EAAEO,iBAAe,CAACP,GAAC,CAAC,CAAC,CAAC;;;gBAGxE,IAAI,UAAU,CAACK,QAAM,CAAC,EAAE;oBACpBH,MAAI,CAAC,MAAM,CAACA,MAAI,CAAC,GAAG;yBACf,OAAO,CAAC,UAAU,CAACG,QAAM,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;yBACpC,SAAS,CAAC,CAAC,EAAE,CAACH,MAAI,CAAC,OAAO,CAAC,MAAM,CAAC;qBACtC,CAAC;iBACL;;gBAED,UAAU,CAACG,QAAM,CAAC,GAAGH,MAAI,CAAC;aAC7B;;YAED,IAAI,KAAK,CAACA,MAAI,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE,eAAe,CAAC,KAAK,KAAK,CAACI,QAAM,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE,eAAe,CAAC,EAAE;;gBAE3F,IAAI,aAAa,CAACD,QAAM,CAAC,EAAE;oBACvBH,MAAI,CAAC,MAAM,CAACA,MAAI,CAAC,GAAG;yBACf,OAAO,CAAC,aAAa,CAACG,QAAM,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC;yBAC1C,SAAS,CAAC,CAAC,EAAEH,MAAI,CAAC,OAAO,CAAC,MAAM,CAAC;qBACrC,CAAC;iBACL;;gBAED,aAAa,CAACG,QAAM,CAAC,GAAGH,MAAI,CAAC;aAChC;;YAED,IAAIF,GAAC,KAAK,CAAC,EAAE;gBACTE,MAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBACtBA,MAAI,CAAC,MAAM,CAACA,MAAI,CAAC,GAAG,CAAC,CAAC;aACzB;SACJ;KACJ,CAAA;;IAED,uBAAA,eAAe,6BAAC,KAAK,EAAE;QACnB9B,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;QACvCA,IAAM,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;QACnCC,IAAI,SAAS,GAAG,CAAC,CAAC;;QAElB,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnCD,IAAM,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;;YAE7B,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC7B,SAAS,GAAG,IAAI,CAAC,GAAG;oBAChB,SAAS;oBACT,OAAO,CAAC,KAAK,EAAE,GAAG,WAAW,CAAC,UAAU,CAAC,KAAK,EAAE;iBACnD,CAAC;aACL;SACJ;;QAED,IAAI,SAAS,KAAK,CAAC,EAAE;YACjB,KAAKC,IAAI2B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,IAAI,CAAC,MAAM,EAAEA,GAAC,EAAE,EAAE;gBAClC5B,IAAM,WAAW,GAAG,IAAI,CAAC4B,GAAC,CAAC,CAAC;;gBAE5B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,EAAE;oBAC/B,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;iBAC5D;aACJ;SACJ;KACJ,CAAA;;IAED,uBAAA,gBAAgB,8BAAC,KAAK,EAAE;QACpB3B,IAAI,QAAQ,CAAC;;QAEb,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnCD,IAAM,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAC7BA,IAAM,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC;YAC9BA,IAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,GAAG,WAAW,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC;;YAE7F,IAAI,SAAS,KAAK,CAAC,EAAE;gBACjB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAClCD,IAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;;oBAE5B,IAAI,WAAW,CAAC,OAAO,CAAC,QAAQ,EAAE;wBAC9B,WAAW,CAAC,MAAM;4BACd,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC;yBACvC,CAAC;qBACL;iBACJ;gBACD,QAAQ,GAAG,IAAI,CAAC;aACnB;SACJ;;QAED,OAAO,QAAQ,CAAC;KACnB,CAAA;;IAED,uBAAA,OAAO,qBAAC,KAAK,EAAE;QACXA,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;QACvCC,IAAI,OAAO,GAAG,CAAC,CAAC;;QAEhB,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnCD,IAAM,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAC7BA,IAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC;YAClCA,IAAM,OAAO,GAAG,WAAW,CAAC,UAAU,CAAC;;YAEvC,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gBACrBA,IAAM,OAAO,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC;;gBAEvCA,IAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC,CAAC;;;gBAG3E,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC,CAAC;;;gBAGrD,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACtCD,IAAM,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;;oBAEhC,WAAW,CAAC,MAAM;wBACd,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC;qBACxC,CAAC;iBACL;aACJ;SACJ;;QAED,KAAKC,IAAI2B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,IAAI,CAAC,MAAM,EAAEA,GAAC,EAAE,EAAE;YAClC5B,IAAMoC,aAAW,GAAG,IAAI,CAACR,GAAC,CAAC,CAAC;;YAE5BQ,aAAW,CAAC,MAAM;gBACdA,aAAW,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;aACxC,CAAC;SACL;KACJ,CAAA;;IAED,uBAAA,UAAU,wBAAC,KAAK,EAAE;;;QACdpC,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;;QAEnC,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnCO,MAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SACjC;;QAED,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;YACxC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;;YAE5B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;;YAEhC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE;gBAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;aAClC;;YAED,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;YAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;;YAE/B,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE;gBAC9B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;aAClC;;YAED,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SACvB;KACJ,CAAA;;IAED,uBAAA,oBAAoB,kCAAC,WAAW,EAAE;;;QAC9B,OAAqB,GAAG,IAAI;QAApB,IAAA,IAAI;QAAE,IAAA,KAAK,aAAb;QACNP,IAAI,OAAO,CAAC;;QAEZ,KAAKA,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YACxCD,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;YACvB,IAAI,IAAI,CAAC,gBAAgB,EAAE,EAAE;gBACzB,OAAO,GAAG,IAAI,CAAC;aAClB;SACJ;;QAED,IAAI,OAAO,EAAE;YACT,KAAKC,IAAIe,KAAG,GAAG,CAAC,EAAEA,KAAG,GAAG,KAAK,CAAC,MAAM,EAAEA,KAAG,EAAE,EAAE;gBACzCR,MAAI,CAAC,cAAc,CAAC,KAAK,CAACQ,KAAG,CAAC,CAAC,CAAC;aACnC;;YAED,IAAI,WAAW,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBACtD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;gBAC7C,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;aAC/B;SACJ;KACJ,CAAA;;IAED,uBAAA,cAAc,4BAAC,IAAI,EAAE;QACjBhB,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvBA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;;QAE3B,IAAI,MAAM,GAAG,CAAC,EAAE;YACZ,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7B,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACnC;SACJ;KACJ,CAAA;;IAED,uBAAA,YAAY,0BAAC,KAAK,EAAE;QAChBD,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3BA,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5BA,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;;QAErB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC5BD,IAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACjC,IAAI,CAAC,SAAS,IAAI,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE;gBACzC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aACzB;SACJ;KACJ,CAAA;;IAED,uBAAA,WAAW,2BAAG;QACV,OAAoB,GAAG,IAAI;QAAnB,IAAA,GAAG;QAAE,IAAA,KAAK,aAAZ;QACNA,IAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC;QACjCC,IAAI,eAAe,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC;QACnCA,IAAI,cAAc,GAAG,WAAW,CAAC;QACjCA,IAAI,eAAe,GAAG,CAAC,CAAC;QACxBA,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC;;QAEjB,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;YAClCD,IAAM,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAC7BA,IAAM,MAAM,GAAG,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC;;YAE1C,WAAW,CAAC,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC;;YAExC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,EAAE;gBAC7B,eAAe,EAAE,CAAC;aACrB,MAAM;gBACH,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;oBACvCA,IAAM,QAAQ,GAAG,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;oBAC5C,WAAW,CAAC,OAAO,CAAC,MAAM,GAAG,QAAQ,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC;iBACxD;;gBAED,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;;gBAEhC,eAAe,IAAI,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC;aACjD;SACJ;;QAED,KAAKC,IAAI2B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,WAAW,EAAEA,GAAC,EAAE,EAAE;YAClC5B,IAAMqC,aAAW,GAAG,KAAK,CAACT,GAAC,CAAC,CAAC;;YAE7B,IAAI,CAACS,aAAW,CAAC,OAAO,CAAC,MAAM,EAAE;gBAC7BA,aAAW,CAAC,OAAO,CAAC,MAAM,GAAG,eAAe,GAAG,eAAe,CAAC;aAClE;SACJ;;QAED,KAAKpC,IAAI2B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,WAAW,EAAEA,GAAC,EAAE,EAAE;YAClC5B,IAAMqC,aAAW,GAAG,KAAK,CAACT,GAAC,CAAC,CAAC;YAC7B5B,IAAM,OAAO,GAAG,GAAG;iBACd,KAAK,EAAE;iBACP,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;;YAEvBqC,aAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;;YAE5B,cAAc,EAAE,CAAC;YACjB,GAAG,IAAIA,aAAW,CAAC,OAAO,CAAC,MAAM,CAAC;SACrC;KACJ,CAAA;;IAED,uBAAA,aAAa,6BAAG;QACZrC,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvBA,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9BC,IAAI,GAAG,CAAC;;QAER,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;YAChCD,IAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;;YAEtB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;gBAChCD,IAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;;gBAEtB,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,KAAK,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE;oBACnDA,IAAM,OAAO,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;;oBAE9D,IAAI,CAAC,GAAG,EAAE;wBACN,GAAG,GAAG,OAAO,CAAC;qBACjB,MAAM;wBACH,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBAC3B;iBACJ;aACJ;SACJ;;QAED,OAAO,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC;KAC1B,CAAA;;IAED,uBAAA,WAAW,2BAAG;QACVA,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzBA,IAAM,KAAK,GAAG,EAAE,CAAC;;QAEjB,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YACzC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC;SACtC;;QAED,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,uBAAA,kBAAkB,gCAAC,SAAS,EAAE;QAC1BD,IAAM,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACjC,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YACzC,SAAS,CAAC,KAAK,CAAC,IAAI,CAACc,8BAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;SACjE;KACJ,CAAA;;IAED,uBAAA,uBAAuB,qCAAC,KAAK,EAAE;QAC3Bf,IAAM,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACjC,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YACzC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;gBACjC,OAAO,IAAI,CAAC;aACf;SACJ;KACJ,CAAA;;IAED,uBAAA,YAAY,4BAAG;QACXW,yBAAK,CAAC,YAAY,KAAA,CAAC,IAAA,CAAC,CAAC;;QAErBZ,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACtC,IAAM,OAAO;QAAE,IAAA,UAAU;QAAW,+DAAA,EAAE,CAAlC;QACJ,IAAI,aAAa,CAAC,UAAU,CAAC,EAAE;YAC3B,UAAU,GAAG,KAAK,CAAC;YACnB,OAAO,GAAG,CAAC,CAAC;SACf;;QAEDA,IAAM,EAAE,GAAG,IAAI,CAAC,SAAS,GAAG,IAAIe,8BAAI,CAAC,SAAS,CAAC;YAC3C,IAAI,EAAE;gBACF,KAAK,EAAE,UAAU;gBACjB,OAAO,EAAE,OAAO;aACnB;YACD,MAAM,EAAE;gBACJ,KAAK,EAAE,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,GAAG,EAAE;gBACvC,KAAK,EAAE,MAAM,CAAC,KAAK;gBACnB,QAAQ,EAAE,MAAM,CAAC,QAAQ;aAC5B;YACD,MAAM,EAAE,CAAC,CAAC;SACb,CAAC,CAAC;;QAEH,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;;QAE5B,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;KACzB,CAAA;;IAED,uBAAA,qBAAqB,mCAAC,aAAa,EAAE;QACjCf,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3BA,IAAM,MAAM,GAAG,EAAE,CAAC;;QAElB,IAAI,aAAa,KAAK,IAAI,EAAE;YACxB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpCD,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBACxB,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,YAAY,EAAE;oBAC1C,SAAS;iBACZ;;gBAEDA,IAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;gBACvD,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE;oBACzB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACpCD,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;wBACxB,IAAI,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,IAAI,EAAE;4BACvD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;yBACtB;qBACJ;iBACJ;aACJ;SACJ;;QAED,OAAO,MAAM,CAAC;KACjB,CAAA;;IAED,uBAAA,mBAAmB,iCAAC,WAAW,EAAE;QAC7B,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,KAAK,EAAE;YACrC,OAAO,KAAK,CAAC,MAAM,CAAC,KAAK,KAAK,WAAW,CAAC;SAC7C,CAAC,CAAC;KACN,CAAA;;IAED,uBAAA,kBAAkB,gCAAC,IAAI,EAAE;QACrB,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,KAAK,EAAE;YACrC,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,IAAI,CAAC;SACrC,CAAC,CAAC;KACN,CAAA;;IAED,uBAAA,YAAY,0BAAC,QAAQ,EAAE;QACnBA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3BA,IAAM,MAAM,GAAG,EAAE,CAAC;;QAElB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpCD,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACxBA,IAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;YAC5B,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpCD,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBACxB,IAAI,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;oBAC1B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACtB;aACJ;SACJ;;QAED,OAAO,MAAM,CAAC;KACjB,CAAA;;IAED,uBAAA,SAAS,uBAAC,QAAQ,EAAE;QAChBA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;;QAE3B,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpCD,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACxBA,IAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;YAC5B,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpCD,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBACxB,IAAI,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;oBAC1B,OAAO,KAAK,CAAC;iBAChB;aACJ;SACJ;KACJ,CAAA;;IAED,uBAAA,WAAW,yBAAC,KAAK,EAAE;QACfA,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;;QAEzB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnCD,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACtB,IAAI,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;gBAC/B,OAAO,IAAI,CAAC;aACf;SACJ;KACJ,CAAA;;;EAp0BsB,YAq0B1B,GAAA;;AAED,SAAS,YAAY,CAAC,IAAI,EAAE;IACxBA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IAC3BC,IAAI,GAAG,CAAC;;IAER,IAAI,MAAM,GAAG,CAAC,EAAE;QACZ,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7BD,IAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;;YAErC,IAAI,CAAC,GAAG,EAAE;gBACN,GAAG,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;aACzB,MAAM;gBACH,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACrB;SACJ;KACJ;;IAED,OAAO,GAAG,IAAI,IAAI,GAAG,EAAE,CAAC;CAC3B;;AAED,SAAS,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE;IAC5B,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAClCD,IAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACvB,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,IAAI,EAAE;YAChC,OAAO,MAAM,CAAC;SACjB;KACJ;CACJ;;AAED,SAAS,aAAa,CAAC,KAAK,EAAE;IAC1B,OAAO,KAAK,KAAK,EAAE,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,aAAa,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;CAC3G;;;AAGD,iBAAiB,CAAC,YAAY,EAAE;IAC5B,MAAM,EAAE,EAAE;IACV,QAAQ,EAAE;QACN,MAAM,EAAE,EAAE;KACb;IACD,UAAU,EAAE,EAAE;IACd,MAAM,EAAE;QACJ,KAAK,EAAE,KAAK;QACZ,KAAK,EAAE,CAAC;KACX;IACD,MAAM,EAAE;QACJ,aAAa,EAAE;YACX,MAAM,EAAE;gBACJ,KAAK,EAAE,SAAS;aACnB;YACD,OAAO,EAAE;gBACL,KAAK,EAAE,SAAS;aACnB;SACJ;KACJ;CACJ,CAAC,CAAC,AAEH;;ACr4BAA,IAAM,mBAAmB,GAAG;IACxB,KAAK,EAAE,SAAS,KAAK,EAAE,CAAC,EAAE;QACtB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC;KAClD;;IAED,KAAK,EAAE,SAAS,KAAK,EAAE,CAAC,EAAE;QACtB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC;KAClD;CACJ,CAAC,AAEF;;ACRA,IAAM,gBAAgB,GAAc;IAAC,yBACtB,CAAC,MAAM,EAAE,MAAM,EAAE,iBAAiB,EAAE;QAC3CY,QAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAERZ,IAAM,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QACvDA,IAAM,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC/CA,IAAM,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC;QAClEA,IAAM,YAAY,GAAG,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QAC7CA,IAAM,QAAQ,GAAG,iBAAiB,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACtDA,IAAM,aAAa,GAAG,MAAM,CAAC,SAAS,IAAI,QAAQ,CAAC;;QAEnD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;;QAEtB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7CD,IAAM,KAAK,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;YACjCC,IAAI,cAAc,WAAA,CAAC;;YAEnB,IAAI,QAAQ,CAAC,aAAa,CAAC,EAAE;gBACzB,cAAc,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC;aACzC,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,KAAK,EAAE,WAAW,CAAC,EAAE;gBAC/C,cAAc,GAAG,aAAa,CAAC;aAClC,MAAM;gBACH,MAAM;aACT;;YAED,IAAI,cAAc,EAAE;gBAChB,YAAY,CAAC,IAAI,CAAC;oBACd,aAAa,EAAE,KAAK;oBACpB,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC;oBACrB,SAAS,EAAE,UAAU,CAAC,cAAc,CAAC,GAAG,cAAc,GAAG,UAAU,CAAC,cAAc,CAAC;iBACtF,CAAC,CAAC;aACN;SACJ;KACJ;;;;8DAAA;;IAED,2BAAA,eAAe,6BAAC,SAAS,EAAE,KAAK,EAAE;;;QAC9B,OAAsD,GAAG,IAAI;QAA5C,IAAA,MAAM;QAAiB,IAAA,YAAY,qBAA9C;QACND,IAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC;QAC/CA,IAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QACxCC,IAAI,MAAM,GAAG,EAAE,CAAC;;QAEhB,IAAI,aAAa,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;YACtED,IAAM,EAAE,GAAG,WAAW,EAAE,CAAC;YACzB,EAAE,CAAC,SAAS,GAAG,aAAa,CAAC;YAC7B,MAAM,GAAG,IAAI,EAAE,EAAE,CAAC;SACrB;;QAED,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1CD,IAAM,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;YAC9BA,IAAM,SAAS,GAAGQ,MAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC;YACpER,IAAM,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;;YAExE,IAAI,KAAK,KAAK,IAAI,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,YAAY,IAAI,CAAC,EAAE;gBACzF,MAAM,GAAG,KAAK,CAAC;gBACf,MAAM;aACT,MAAM;gBACH,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;oBAChB,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;iBACvC;aACJ;SACJ;;QAED,OAAO,MAAM,CAAC;KACjB,CAAA;;IAED,2BAAA,WAAW,yBAAC,MAAM,EAAE;QAChB,OAA0C,GAAG,IAAI;QAAhC,IAAA,MAAM;QAAW,IAAA,MAAM,eAAlC;QACNA,IAAM,MAAM,GAAG,EAAE,CAAC;QAClBA,IAAM,SAAS,GAAG,EAAE,CAAC;;QAErB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpCD,IAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;;YAE1B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC;YAC/C,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;SACxC;;QAED,OAAO;YACH,MAAM,EAAE,MAAM;YACd,SAAS,EAAE,SAAS;SACvB,CAAC;KACL,CAAA;;IAED,2BAAA,UAAU,wBAAC,IAAI,EAAE,KAAK,EAAE;QACpBA,IAAM,MAAM,GAAG,EAAE,CAAC;QAClBA,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;;QAE1B,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC5BD,IAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACrBA,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;YACrCC,IAAI,KAAK,WAAA,CAAC;;YAEV,IAAI,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE;gBAC7B,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;aAC9B,MAAM;gBACH,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aAC9B;;YAED,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACtB;;QAED,OAAO,MAAM,CAAC;KACjB,CAAA;;;EAvG0BY,4BAwG9B,GAAA;;AAED,SAAS,QAAQ,CAAC,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE;IACxCZ,IAAI,SAAS,GAAG,MAAM,CAAC;IACvBA,IAAI,KAAK,GAAG,SAAS,CAAC;;IAEtB,IAAI,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;QAC7BD,IAAM,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;QAEnC,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACrB,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;gBAC5B,SAAS,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;aACzB;YACD,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;SAChC;QACD,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;KACzB;;IAED,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;CAC5B,AAED;;AChIA,IAAM,iBAAiB,GAAc;IAAC,0BACvB,GAAG;QACVY,QAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAER,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACvB;;;;gEAAA;;IAED,4BAAA,QAAQ,sBAAC,WAAW,EAAE,UAAU,EAAE;;;QAC9B,KAAKX,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzCO,MAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;SAC/C;KACJ,CAAA;;IAED,4BAAA,KAAK,mBAAC,UAAU,EAAE;QACd,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;KACrC,CAAA;;;EAf2BK,4BAgB/B,GAAA;;AAED,iBAAiB,CAAC,OAAO,GAAG,IAAI,iBAAiB,EAAE,CAAC,AAEpD;;ACjBA,IAAM,QAAQ,GAAY;IAAC;;;;;;;;IAAA,mBACvB,WAAW,2BAAG;QACVb,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACnCA,IAAM,WAAW,GAAG,UAAU,CAAC,EAAE,EAAE,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;QACxDA,IAAM,SAAS,GAAG,UAAU,CAAC,EAAE,EAAE,MAAM,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;;QAEpD,IAAI,WAAW,CAAC,OAAO,EAAE;YACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;YAChD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC/B;;QAED,IAAI,SAAS,CAAC,OAAO,EAAE;YACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;YAC5C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC7B;KACJ,CAAA;;IAED,mBAAA,YAAY,0BAAC,OAAO,EAAE;QAClBA,IAAM,aAAa,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;QAC3CC,IAAI,SAAS,CAAC;;QAEd,IAAI,aAAa,EAAE;YACf,SAAS,GAAG,aAAa,CAAC;gBACtB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,YAAY,EAAE,IAAI,CAAC,YAAY;gBAC/B,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,MAAM,EAAE,IAAI,CAAC,MAAM;aACtB,CAAC,CAAC;SACN,MAAM;YACH,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAChD;;QAED,OAAO,IAAI,QAAQ,CAAC,SAAS;YACzB,UAAU,CAAC;gBACP,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ;aAClC;YACD,OAAO;SACV,CAAC,CAAC;KACN,CAAA;;IAED,mBAAA,MAAM,oBAAC,SAAS,EAAE;QACd,IAAI,CAAC,MAAM,EAAE,CAAC;;QAEd,OAAmC,GAAG,IAAI;QAAlC,IAAA,SAAS;QAAE,IAAA,OAAO;QAAE,IAAA,KAAK,aAA3B;;QAEN,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;;QAErB,IAAI,SAAS,EAAE;YACX,SAAS,CAAC,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE,CAAC;YACpD,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SAC/B;;QAED,IAAI,OAAO,EAAE;YACT,OAAO,CAAC,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC;YAClD,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SAC7B;;QAED,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SAC/B;KACJ,CAAA;;;EA/DkB,GAgEtB,GAAA;;AAED,QAAQ,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,CAAC,EAAE,EAAE,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE;IACtE,MAAM,EAAE;QACJ,MAAM,EAAE,WAAW;KACtB;IACD,OAAO,EAAE;QACL,MAAM,EAAE,KAAK;KAChB;CACJ,CAAC,CAAC,AAEH;;ACzEA,IAAM,aAAa,GAAiB;IAAC;;;;;;;;IAAA,wBACjC,SAAS,yBAAG;QACR,OAAO,QAAQ,CAAC;KACnB,CAAA;;IAED,wBAAA,UAAU,wBAAC,IAAI,EAAE;QACb,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B,CAAA;;IAED,wBAAA,gBAAgB,8BAAC,KAAK,EAAE,MAAM,EAAE;QAC5B,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,IAAI,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE,KAAK,IAAI,EAAE;YACtD,OAAO,EAAE,CAAC;SACb;;QAED,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;KAClF,CAAA;;IAED,wBAAA,SAAS,uBAAC,KAAK,EAAE;QACb,IAAI,CAAC,KAAK,EAAE;YACR,OAAO,CAAC,CAAC;SACZ;;QAED,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC;KAC/C,CAAA;;IAED,wBAAA,WAAW,yBAAC,KAAK,EAAE,MAAM,EAAE;QACvBD,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;QACpC,IAAQ,IAAI;QAAE,IAAA,EAAE,YAAV;QACNC,IAAI,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;;QAE/C,IAAI,KAAK,KAAK,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,EAAE,CAAC,EAAE;YAClD,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,GAAG,SAAS,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC;;YAE7F,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;YAC9C,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;;YAE9C,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;YAC5C,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;SAC/C;KACJ,CAAA;;IAED,wBAAA,SAAS,uBAAC,KAAK,EAAE;QACbD,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAC1B,OAAO,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE,CAAC;KAChC,CAAA;;;EA5CuB,QA6C3B,GAAA;;AAED,aAAa,CAAC,SAAS,CAAC,UAAU,GAAG,gBAAgB,CAAC,SAAS,CAAC,UAAU,CAAC,AAE3E;;ACtDA,IAAM,SAAS,GAAoB;IAAC;;;;;;;;IAAA,oBAChC,MAAM,oBAAC,GAAG,EAAE;QACR,OAAsC,GAAG,IAAI;QAArC,IAAA,OAAO;QAAE,IAAA,KAAK;QAAS,IAAA,KAAK,aAA9B;QACNA,IAAM,SAAS,GAAG,KAAK,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QACjDA,IAAM,OAAO,GAAG,EAAE,CAAC;QACnBA,IAAM,OAAO,GAAG,EAAE,CAAC;QACnBA,IAAM,QAAQ,GAAG,EAAE,CAAC;;QAEpBA,IAAM,MAAM,GAAG,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;QACxDA,IAAM,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;QACxDA,IAAM,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;;QAE1D,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;QACzC,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;;QAEzCA,IAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;;QAE9B,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;QACrC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;QAChC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;QAChC,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;QACrC,QAAQ,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;QAClC,QAAQ,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;;QAElC,IAAI,CAAC,KAAK,GAAG;YACT,OAAO,EAAE,OAAO,EAAE,QAAQ;SAC7B,CAAC;;QAEF,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;;QAE1D,IAAI,CAAC,UAAU,EAAE,CAAC;KACrB,CAAA;;IAED,oBAAA,UAAU,0BAAG,EAAE,CAAA;;;EAjCK,WAkCvB,GAAA,AAED;;ACnCA,IAAM,SAAS,GAAyB;IAAC;;;;;;;;IAAA,oBACrC,SAAS,yBAAG;QACR,OAAO,SAAS,CAAC;KACpB,CAAA;;;EAHmB,gBAIvB,GAAA,AAED;;ACDA,IAAM,gBAAgB,GAAqB;IAAC,yBAC7B,CAAC,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE;QAC1BY,eAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAER,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACxB;;;;8DAAA;;IAED,2BAAA,UAAU,0BAAG;QACTZ,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,OAAoD,GAAG,IAAI;QAAtC,IAAA,OAAO;QAAe,IAAA,KAAK,cAA1C;QACNA,IAAM,MAAM,GAAG,EAAE,CAAC;;QAElB,IAAI,IAAI,CAAC,UAAU,EAAE;YACjBA,IAAM,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;YACnD,MAAM,CAAC,IAAI;gBACP,EAAE,OAAO,CAAC,EAAE,EAAE,CAAC,EAAE;gBACjB,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE;aAClB,CAAC;SACL,MAAM;YACHA,IAAM,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;YACnD,MAAM,CAAC,IAAI;gBACP,EAAE,CAAC,EAAE,OAAO,CAAC,EAAE,EAAE;gBACjB,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE;aAClB,CAAC;SACL;;QAED,OAAO,MAAM,CAAC;KACjB,CAAA;;IAED,2BAAA,YAAY,4BAAG;QACXY,yBAAK,CAAC,YAAY,KAAA,CAAC,IAAA,CAAC,CAAC;;QAErBZ,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;;QAEpCA,IAAM,IAAI,GAAGe,8BAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE;YACjD,MAAM,EAAE;gBACJ,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;aAC1B;SACJ,CAAC,CAAC;;QAEH,gBAAgB,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAC5B,CAAA;;;EA/C0B,YAgD9B,GAAA;;AAED,iBAAiB,CAAC,gBAAgB,EAAE;IAChC,SAAS,EAAE;QACP,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,0BAA0B;KACpC;CACJ,CAAC,CAAC,AAEH;;ACzDA,IAAM,cAAc,GAAiB;IAAC;;;;;;;;IAAA,yBAClC,MAAM,sBAAG;QACLH,qBAAK,CAAC,MAAM,KAAA,CAAC,IAAA,CAAC,CAAC;QACf,IAAI,CAAC,cAAc,EAAE,CAAC;KACzB,CAAA;;IAED,yBAAA,kBAAkB,gCAAC,QAAQ,EAAE;QACzBZ,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACnCA,IAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC;QAC9DA,IAAM,eAAe,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;QAChDA,IAAM,UAAU,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;;QAE5C,KAAKC,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE;YACzDD,IAAM,aAAa,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;YACvCC,IAAI,KAAK,GAAG,CAAC,CAAC;YACdA,IAAI,YAAY,GAAG,CAAC,CAAC;;YAErB,KAAKA,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,eAAe,EAAE,UAAU,EAAE,EAAE;gBACjED,IAAM,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;gBACvEA,IAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACrCA,IAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;gBACpCC,IAAI,IAAI,GAAG,KAAK,CAAC;gBACjBA,IAAI,EAAE,WAAA,CAAC;;gBAEP,IAAI,OAAO,EAAE;oBACT,IAAI,OAAO,CAAC,WAAW,EAAE,KAAK,OAAO,EAAE;wBACnC,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC;wBAC/B,IAAI,GAAG,CAAC,CAAC;wBACT,EAAE,GAAG,KAAK,CAAC;qBACd,MAAM;wBACH,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,YAAY,CAAC;wBACtC,EAAE,GAAG,IAAI,GAAG,YAAY,CAAC;wBACzB,YAAY,GAAG,CAAC,CAAC;qBACpB;iBACJ,MAAM,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;oBACxB,YAAY,IAAI,KAAK,CAAC;oBACtB,KAAK,IAAI,KAAK,CAAC;oBACf,EAAE,GAAG,KAAK,CAAC;iBACd;;gBAED,QAAQ,CAAC,IAAI,EAAE;oBACX,QAAQ,EAAE,UAAU,CAAC,UAAU,CAAC;oBAChC,UAAU,EAAE,UAAU;oBACtB,MAAM,EAAE,aAAa;oBACrB,QAAQ,EAAE,QAAQ;oBAClB,KAAK,EAAE,KAAK;oBACZ,YAAY,EAAE,YAAY;oBAC1B,IAAI,EAAE,IAAI;oBACV,EAAE,EAAE,EAAE;oBACN,UAAU,EAAE,UAAU;iBACzB,CAAC,CAAC;aACN;SACJ;KACJ,CAAA;;IAED,yBAAA,WAAW,yBAAC,KAAK,EAAE,MAAM,EAAE;QACvBW,qBAAK,CAAC,WAAW,KAAA,CAAC,MAAA,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;KACnD,CAAA;;IAED,yBAAA,SAAS,uBAAC,KAAK,EAAE;QACb,OAAO,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC;KAC3B,CAAA;;IAED,yBAAA,SAAS,uBAAC,KAAK,EAAE;QACb,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC;KACnC,CAAA;;IAED,yBAAA,cAAc,8BAAG;;;QACbZ,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACnCA,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACvCA,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;;QAEpC,KAAKC,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE;YACzDD,IAAM,aAAa,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;YACvCA,IAAM,MAAM,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC;;YAEtC,IAAI,MAAM,EAAE;gBACRC,IAAI,SAAS,WAAA,CAAC;gBACd,KAAKA,IAAI,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,MAAM,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE;oBACtDD,IAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;;oBAE9B,IAAI,KAAK,IAAI,SAAS,EAAE;wBACpBA,IAAM,OAAO,GAAG,IAAI,gBAAgB,CAAC,SAAS,EAAE,KAAK,EAAE,aAAa,CAAC,CAAC;wBACtE,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACvBQ,MAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;qBACxB;;oBAED,SAAS,GAAG,KAAK,CAAC;iBACrB;aACJ;SACJ;KACJ,CAAA;;;EA3FwB,QA4F5B,GAAA,AAED;;ACpGe,SAAS,kBAAkB,CAAC,MAAM,EAAE,KAAK,EAAE;IACtDR,IAAM,MAAM,GAAG,EAAE,CAAC;;IAElBA,IAAM,WAAW,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACrC,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;QAC1CD,IAAM,aAAa,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;QAClC,IAAI,OAAO,CAAC,aAAa,CAAC,IAAI,EAAE,WAAW,CAAC,EAAE;YAC1C,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC9B;KACJ;;IAED,OAAO,MAAM,CAAC;;;ACbH,SAAS,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE;IAC3C,IAAI,CAAC,IAAI,CAAC,EAAE;QACR,OAAO,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;KAC9C;;IAED,OAAO,CAAC,KAAK,CAAC,CAAC;;;ACDJ,SAAS,UAAU,CAAC,WAAW,EAAE,cAAc,EAAE;IAC5DA,IAAM,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC;IAC9BA,IAAM,YAAY,GAAG,cAAc,YAAY,IAAI,CAAC;;IAEpD,OAAO,CAAC,CAAC,IAAI,IAAI,YAAY,CAAC,IAAI,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;;ACRpD,SAAS,eAAe,CAAC,KAAK,EAAE,OAAO,EAAE;IACpD,IAAI,OAAO,KAAK,IAAI,EAAE;QAClB,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACvB;;;ACHU,SAAS,iBAAiB,CAAC,KAAK,EAAE;IAC7C,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;;;ACElC,SAAS,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,WAAW,EAAE;IAC1D,IAAI,GAAG,KAAK,IAAI,EAAE;QACd,OAAO,GAAG,CAAC;KACd;;IAEDA,IAAM,GAAG,GAAG,QAAQ,GAAG,KAAK,CAAC;IAC7BC,IAAI,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;;IAErB,IAAI,CAAC,KAAK,EAAE;QACR,KAAK,GAAG,SAAS,CAAC,WAAW,EAAE,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACzD,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;KACpB;;IAED,OAAO,KAAK,CAAC;;;ACkBjB,IAAM,mBAAmB,GAAqB;IAAC;;;;;;;;IAAA,8BAC3C,UAAU,wBAAC,MAAM,EAAE;;;QACf,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,qBAAqB,GAAG,IAAI,qBAAqB,EAAE,CAAC;;QAEzD,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACnB,IAAI,CAAC,UAAU,GAAG,OAAO;gBACrB,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,aAAa,EAAE,aAAa;iCAC1C,SAAS,EAAE,oBAAoB,EAAE,iBAAiB,EAAE;aACxE,CAAC;;YAEF,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpCD,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBAC9B,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,MAAM,EAAE;oBAChCQ,MAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB,MAAM;iBACT;aACJ;SACJ;;KAEJ,CAAA;;IAED,8BAAA,MAAM,oBAAC,KAAkB,EAAE;qCAAf,GAAG,IAAI,CAAC,KAAK;;QACrB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAC/B,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;QACrC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;KAC/B,CAAA;;IAED,8BAAA,UAAU,wBAAC,IAAI,EAAE;QACbR,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;;QAEnCY,yBAAK,CAAC,UAAU,KAAA,CAAC,MAAA,IAAI,CAAC,CAAC;;QAEvB,IAAI,IAAI,YAAY,YAAY,EAAE;YAC9B,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;SAC3C,MAAM;YACH,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC3C,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;SACxC;;QAED,IAAI,IAAI,KAAK,IAAI,CAAC,YAAY,EAAE;YAC5B,OAAO,IAAI,CAAC,YAAY,CAAC;SAC5B;;QAED,IAAI,IAAI,KAAK,IAAI,CAAC,SAAS,EAAE;YACzB,OAAO,IAAI,CAAC,SAAS,CAAC;SACzB;KACJ,CAAA;;IAED,8BAAA,YAAY,0BAAC,KAAK,EAAE;;;QAChBZ,IAAM,YAAY,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;;QAE9C,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnCD,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACtBA,IAAM,UAAU,GAAG,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,SAAS,CAAC,IAAI,EAAE,CAAC;YACtEQ,MAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;;YAE7BR,IAAM,aAAa,GAAGQ,MAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;YAC3D,IAAI,CAAC,aAAa,EAAE;gBAChB,SAAS;aACZ;;YAEDR,IAAM,MAAM,GAAGQ,MAAI,CAAC,yBAAyB,CAAC,aAAa,CAAC,CAAC;YAC7D,KAAKP,IAAI,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,MAAM,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE;gBACtDO,MAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;aAChD;SACJ;KACJ,CAAA;;IAED,8BAAA,gBAAgB,8BAAC,MAAM,EAAE,IAAI,EAAE;QAC3B,IAAI,CAAC,eAAe;YAChB,kBAAkB,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC,EAAE,IAAI;SAC5D,CAAC;;QAEF,IAAI,CAAC,cAAc;YACf,kBAAkB,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI;SACpD,CAAC;;QAEF,IAAI,CAAC,mBAAmB;YACpB,kBAAkB,CAAC,MAAM,EAAE,EAAE,YAAY,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI;SAChE,CAAC;;QAEF,IAAI,CAAC,iBAAiB;YAClB,kBAAkB,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,eAAe,EAAE,CAAC,EAAE,IAAI;SAChE,CAAC;;QAEF,IAAI,CAAC,sBAAsB;YACvB,kBAAkB,CAAC,MAAM,EAAE,WAAW,CAAC,EAAE,IAAI;SAChD,CAAC;;QAEF,IAAI,CAAC,kBAAkB;YACnB,kBAAkB,CAAC,MAAM,EAAE,EAAE,QAAQ,EAAE,iBAAiB,EAAE,CAAC,EAAE,IAAI;SACpE,CAAC;;QAEF,IAAI,CAAC,eAAe;YAChB,kBAAkB,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,IAAI;SACzC,CAAC;;QAEF,IAAI,CAAC,oBAAoB;YACrB,kBAAkB,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE,oBAAoB,EAAE,CAAC,EAAE,IAAI;SACxE,CAAC;;QAEF,IAAI,CAAC,eAAe;YAChB,kBAAkB,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC,EAAE,IAAI;SAC5D,CAAC;KACL,CAAA;;IAED,8BAAA,mBAAmB,iCAAC,KAAK,EAAE;;;QACvBR,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC;QAC7CA,IAAM,eAAe,GAAG,EAAE,CAAC;;QAE3B,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpCA,IAAI,aAAa,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YAC9BD,IAAM,YAAY,GAAGQ,MAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;YAC5DR,IAAM,QAAQ,GAAGQ,MAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC1DR,IAAM,QAAQ,GAAG,gBAAgB,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;YAEnE,IAAI,CAAC,QAAQ,IAAI,aAAa,CAAC,aAAa,CAAC,IAAI,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE;gBACvE,aAAa,GAAGQ,MAAI,CAAC,eAAe,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;aACrE,MAAM,IAAI,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;gBACjF,aAAa,GAAGA,MAAI,CAAC,YAAY,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;aAClE;;YAED,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACvC;;QAED,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,eAAe,CAAC;KACjC,CAAA;;IAED,8BAAA,YAAY,0BAAC,MAAM,EAAE,YAAY,EAAE;QAC/BR,IAAM,KAAK,GAAG,YAAY,CAAC,iBAAiB,EAAE,CAAC;QAC/CA,IAAM,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC;QACjDA,IAAM,gBAAgB,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC,CAAC;;QAE5F,KAAK,CAAC,GAAG,GAAG,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC3E,IAAI,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACpC,KAAK,CAAC,GAAG,GAAG,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAC5E,MAAM;YACH,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;SAClC;;QAEDA,IAAM,aAAa,GAAG,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;;QAE7C,IAAI,gBAAgB,EAAE;YAClBA,IAAM,WAAW,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;YAClCA,IAAM,aAAa,GAAG,YAAY,CAAC,OAAO,CAAC,aAAa,IAAI,EAAE,CAAC;YAC/D,IAAI,WAAW,IAAI,CAAC,IAAI,WAAW,GAAG,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE;gBAC7D,aAAa,CAAC,mBAAmB,GAAG;oBAChC,IAAI,EAAE,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC;oBACrC,QAAQ,EAAE,aAAa,CAAC,WAAW,CAAC;oBACpC,UAAU,EAAE,CAAC,CAAC;iBACjB,CAAC;aACL;;YAED,IAAI,KAAK,CAAC,GAAG,GAAG,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE;gBACvC,aAAa,CAAC,mBAAmB,GAAG;oBAChC,IAAI,EAAE,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;oBACnC,QAAQ,EAAE,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC;oBAClC,UAAU,EAAE,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG;iBACpC,CAAC;aACL;SACJ;;QAED,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,UAAU,IAAI,CAAC,EAAE,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;QAE5F,aAAa,CAAC,IAAI,GAAG,CAAC,aAAa,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;;QAE5E,OAAO,aAAa,CAAC;KACxB,CAAA;;IAED,8BAAA,eAAe,6BAAC,MAAM,EAAE,YAAY,EAAE;;;QAClCA,IAAM,gBAAgB,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC,CAAC;QAC5F,OAAgE,GAAG,YAAY,CAAC,OAAO;QAA/E,IAAA,UAAU;QAAkB,uFAAA,UAAU;QAAc,uEAAA,EAAE,CAAxD;QACNA,IAAM,QAAQ,GAAG,gBAAgB,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACnEA,IAAM,gBAAgB,GAAG,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;QAChDA,IAAM,MAAM,GAAG,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;QACtCA,IAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC;QAC5BA,IAAM,SAAS,GAAG,EAAE,CAAC;QACrBC,IAAI,gBAAgB,GAAG,SAAS,CAAC;QACjCA,IAAI,gBAAgB,GAAG,SAAS,CAAC;QACjCA,IAAI,KAAK,GAAG,QAAQ,CAAC;QACrBA,IAAI,qBAAqB,EAAE,qBAAqB,CAAC;;QAEjD,IAAI,QAAQ,EAAE;YACV,KAAK,GAAG,YAAY,CAAC;SACxB;;QAED,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrCA,IAAI,QAAQ,WAAA,CAAC;YACb,IAAI,MAAM,CAAC,aAAa,EAAE;gBACtB,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC,CAAC,EAAEO,MAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;aAC9E,MAAM;gBACH,QAAQ,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;aAC/B;;YAED,IAAI,OAAO,CAAC,QAAQ,CAAC,EAAE;gBACnBR,IAAM,UAAU,GAAG,YAAY,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBACxD,IAAI,CAAC,IAAI,UAAU,IAAI,UAAU,GAAG,UAAU,CAAC,MAAM,EAAE;oBACnD,SAAS,CAAC,UAAU,CAAC,GAAG,SAAS,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;oBACpD,SAAS,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACjC,MAAM,IAAI,gBAAgB,EAAE;oBACzB,IAAI,UAAU,GAAG,CAAC,EAAE;wBAChB,IAAI,UAAU,KAAK,gBAAgB,EAAE;4BACjC,qBAAqB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;yBACxC,MAAM,IAAI,UAAU,GAAG,gBAAgB,EAAE;4BACtC,gBAAgB,GAAG,UAAU,CAAC;4BAC9B,qBAAqB,GAAG;gCACpB,QAAQ,EAAE,QAAQ;gCAClB,MAAM,EAAE,EAAE,CAAC,EAAE;6BAChB,CAAC;yBACL;qBACJ,MAAM,IAAI,UAAU,IAAI,UAAU,CAAC,MAAM,EAAE;wBACxC,IAAI,UAAU,KAAK,gBAAgB,EAAE;4BACjC,qBAAqB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;yBACxC,MAAM,IAAI,UAAU,GAAG,gBAAgB,EAAE;4BACtC,gBAAgB,GAAG,UAAU,CAAC;4BAC9B,qBAAqB,GAAG;gCACpB,QAAQ,EAAE,QAAQ;gCAClB,MAAM,EAAE,EAAE,CAAC,EAAE;6BAChB,CAAC;yBACL;qBACJ;iBACJ;aACJ;SACJ;;QAEDA,IAAM,UAAU,GAAG,IAAI,gBAAgB,CAAC,gBAAgB,EAAE,YAAY,CAAC,OAAO,EAAE,iBAAiB,CAAC,OAAO,CAAC,CAAC;QAC3GA,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC;QAC9B,KAAKC,IAAI2B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,UAAU,CAAC,MAAM,EAAEA,GAAC,EAAE,EAAE;YACxC,IAAI,CAACA,GAAC,CAAC,GAAG,UAAU,CAAC,eAAe;gBAChC,SAAS,CAACA,GAAC,CAAC,EAAE,UAAU,CAACA,GAAC,CAAC;aAC9B,CAAC;YACF,IAAI,SAAS,CAACA,GAAC,CAAC,EAAE;gBACd,SAAS,CAACA,GAAC,CAAC,GAAG,IAAI,CAACA,GAAC,CAAC,CAAC;aAC1B;SACJ;;QAED,IAAI,qBAAqB,IAAI,IAAI,CAAC,MAAM,EAAE;YACtC,MAAM,CAAC,mBAAmB,GAAG;gBACzB,IAAI,EAAE,UAAU,CAAC,eAAe;oBAC5B,qBAAqB,CAAC,MAAM,EAAE,qBAAqB,CAAC,QAAQ;iBAC/D;gBACD,UAAU,EAAE,gBAAgB;gBAC5B,QAAQ,EAAE,qBAAqB,CAAC,QAAQ;aAC3C,CAAC;SACL;;QAED,IAAI,qBAAqB,IAAI,IAAI,CAAC,MAAM,EAAE;YACtC,MAAM,CAAC,mBAAmB,GAAG;gBACzB,IAAI,EAAE,UAAU,CAAC,eAAe;oBAC5B,qBAAqB,CAAC,MAAM,EAAE,qBAAqB,CAAC,QAAQ;iBAC/D;gBACD,UAAU,EAAE,gBAAgB;gBAC5B,QAAQ,EAAE,qBAAqB,CAAC,QAAQ;aAC3C,CAAC;SACL;QACD,YAAY,CAAC,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;;QAE3C,OAAO,MAAM,CAAC;KACjB,CAAA;;IAED,8BAAA,WAAW,yBAAC,KAAK,EAAE,IAAI,EAAE;QACrB5B,IAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;QACpCA,IAAM,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QACxDA,IAAM,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC;QACnDC,IAAI,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,eAAe,CAAC,MAAM,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;;QAE/E,OAAO,eAAe,EAAE,EAAE;YACtB,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACvB;;QAED,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;;QAEzDW,yBAAK,CAAC,WAAW,KAAA,CAAC,MAAA,KAAK,EAAE,IAAI,CAAC,CAAC;KAClC,CAAA;;;IAGD,8BAAA,cAAc,4BAAC,MAAM,EAAE;QACnBZ,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC;QAC7BA,IAAM,WAAW,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACjDA,IAAM,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,SAAS,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/EA,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE,EAAE,CAAC;QACtCA,IAAM,eAAe,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,IAAI,SAAS,CAAC;QAC3DA,IAAM,QAAQ,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,IAAI,IAAI,eAAe,CAAC;;QAEtD,OAAO,QAAQ,CAAC;KACnB,CAAA;;IAED,8BAAA,kBAAkB,gCAAC,MAAM,EAAE;QACvBA,IAAM,QAAQ,GAAG,MAAM,CAAC,YAAY,CAAC;QACrCA,IAAM,IAAI,GAAG,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;;QAE7E,IAAI,CAAC,IAAI,EAAE;YACP,MAAM,IAAI,KAAK,CAAC,2CAA2C,GAAG,QAAQ,CAAC,CAAC;SAC3E;;QAED,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,8BAAA,qBAAqB,mCAAC,WAAW,EAAE,IAAI,EAAE;QACrCA,IAAM,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;QAChCA,IAAM,YAAY,GAAG,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,MAAM,CAAC;QACpDA,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;;QAE/B,OAAO;YACH,SAAS,EAAE,KAAK;YAChB,YAAY,EAAE,YAAY;YAC1B,IAAI,EAAE,IAAI;SACb,CAAC;KACL,CAAA;;IAED,8BAAA,yBAAyB,uCAAC,MAAM,EAAE;QAC9BA,IAAM,YAAY,GAAG,EAAE,CAAC;QACxBA,IAAM,MAAM,GAAG,EAAE,CAAC;QAClB,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YAC1CD,IAAM,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,YAAY,IAAI,aAAa,CAAC;YACvD,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;gBAC9B,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;gBACpB,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC3B;SACJ;;QAEDA,IAAM,MAAM,GAAG,EAAE,CAAC;QAClB,KAAKC,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,YAAY,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE;YACzDD,IAAM,IAAI,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;YAClCA,IAAM,UAAU,GAAG,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;YACrD,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;gBACzB,SAAS;aACZ;;YAED,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC3B;;QAED,OAAO,MAAM,CAAC;KACjB,CAAA;;IAED,8BAAA,cAAc,4BAAC,MAAM,EAAE,IAAI,EAAE;QACzB,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACrB,OAAO;SACV;;QAEDA,IAAM,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAC9BA,IAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC;YAC9C,MAAM,EAAE,MAAM;YACd,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,GAAG,EAAE,WAAW,CAAC,GAAG;YACpB,OAAO,EAAE,WAAW,CAAC,OAAO;SAC/B,EAAE,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;;QAEnD,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;KACpC,CAAA;;IAED,8BAAA,mBAAmB,iCAAC,MAAM,EAAE,IAAI,EAAE;QAC9B,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACrB,OAAO;SACV;;QAEDA,IAAM,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAC9BA,IAAM,gBAAgB,GAAG,IAAI,aAAa,CAAC,IAAI,EAAE;YAC7C,MAAM,EAAE,MAAM;YACd,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,GAAG,EAAE,WAAW,CAAC,GAAG;YACpB,OAAO,EAAE,WAAW,CAAC,OAAO;SAC/B,CAAC,CAAC;;QAEH,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;KAC5C,CAAA;;IAED,8BAAA,iBAAiB,+BAAC,MAAM,EAAE,IAAI,EAAE;QAC5B,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACrB,OAAO;SACV;;QAEDA,IAAM,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAC9BA,IAAM,WAAW,GAAG,IAAI,WAAW,CAAC,IAAI,EAAE;YACtC,MAAM,EAAE,MAAM;YACd,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,GAAG,EAAE,WAAW,CAAC,GAAG;YACpB,OAAO,EAAE,WAAW,CAAC,OAAO;YAC5B,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI;SAC1B,CAAC,CAAC;;QAEH,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;KACvC,CAAA;;IAED,8BAAA,eAAe,6BAAC,MAAM,EAAE,IAAI,EAAE;QAC1B,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACrB,OAAO;SACV;;QAEDA,IAAM,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAC9BA,IAAM,SAAS,GAAG,IAAI,SAAS,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC;YAChD,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,MAAM,EAAE,MAAM;SACjB,EAAE,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;;QAEnD,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;KACrC,CAAA;;IAED,8BAAA,eAAe,6BAAC,MAAM,EAAE,IAAI,EAAE;QAC1B,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACrB,OAAO;SACV;;QAEDA,IAAM,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAC9BA,IAAM,SAAS,GAAG,IAAI,SAAS,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC;YAChD,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,MAAM,EAAE,MAAM;SACjB,EAAE,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;;QAEnD,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;KACrC,CAAA;;IAED,8BAAA,eAAe,6BAAC,MAAM,EAAE,IAAI,EAAE;QAC1B,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACrB,OAAO;SACV;;QAEDA,IAAM,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAC9BA,IAAM,KAAK,GAAG,IAAI,SAAS,CAAC,IAAI,EAAE;YAC9B,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,GAAG,EAAE,WAAW,CAAC,GAAG;YACpB,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,WAAW,CAAC,OAAO;YAC5B,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI;SAC1B,CAAC,CAAC;;QAEH,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;KACjC,CAAA;;IAED,8BAAA,sBAAsB,oCAAC,MAAM,EAAE,IAAI,EAAE;QACjC,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACrB,OAAO;SACV;;QAEDA,IAAM,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAC9BA,IAAM,KAAK,GAAG,IAAI,gBAAgB,CAAC,IAAI,EAAE;YACrC,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,GAAG,EAAE,WAAW,CAAC,GAAG;YACpB,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,WAAW,CAAC,OAAO;YAC5B,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI;SAC1B,CAAC,CAAC;;QAEH,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;KACjC,CAAA;;IAED,8BAAA,kBAAkB,gCAAC,MAAM,EAAE,IAAI,EAAE;QAC7B,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACrB,OAAO;SACV;;QAEDA,IAAM,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAC9BA,IAAM,KAAK,GAAG,IAAI,YAAY,CAAC,IAAI,EAAE;YACjC,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,GAAG,EAAE,WAAW,CAAC,GAAG;YACpB,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,WAAW,CAAC,OAAO;YAC5B,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI;SAC1B,CAAC,CAAC;;QAEH,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;KACjC,CAAA;;IAED,8BAAA,oBAAoB,kCAAC,MAAM,EAAE,IAAI,EAAE;QAC/B,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACrB,OAAO;SACV;;QAEDA,IAAM,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAC9BA,IAAM,cAAc,GAAG,IAAI,cAAc,CAAC,IAAI,EAAE;YAC5C,MAAM,EAAE,MAAM;YACd,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,GAAG,EAAE,WAAW,CAAC,GAAG;YACpB,OAAO,EAAE,WAAW,CAAC,OAAO;SAC/B,CAAC,CAAC;;QAEH,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;KAC1C,CAAA;;IAED,8BAAA,oBAAoB,kCAAC,gBAAgB,EAAE,iBAAiB,EAAE;;;QACtDA,IAAM,cAAc,GAAG,kBAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,qBAAqB,CAAC,CAAC;;QAE9E,KAAKC,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE;YAC9DD,IAAM,aAAa,GAAGQ,MAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC5C,IAAI,aAAa,CAAC,IAAI,KAAK,IAAI,IAAI,aAAa,CAAC,IAAI,KAAK,IAAI,EAAE;gBAC5DR,IAAM,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC;gBAChC,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;oBAC7B,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;iBACtC;aACJ;SACJ;;QAED,KAAKC,IAAIyB,UAAQ,GAAG,CAAC,EAAEA,UAAQ,GAAG,cAAc,CAAC,MAAM,EAAEA,UAAQ,EAAE,EAAE;YACjE1B,IAAM,UAAU,GAAG,cAAc,CAAC0B,UAAQ,CAAC,CAAC,YAAY,IAAI,EAAE,CAAC;YAC/D,IAAI,UAAU,KAAK,gBAAgB,IAAI,CAAC,CAAC,UAAU,IAAI,iBAAiB,KAAK,CAAC,CAAC,EAAE;gBAC7E,OAAO,IAAI,CAAC;aACf;SACJ;KACJ,CAAA;;IAED,8BAAA,cAAc,4BAAC,gBAAgB,EAAE,iBAAiB,EAAE;QAChD1B,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;;QAE3B,KAAKC,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE;YACzDD,IAAM,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,IAAI,EAAE,CAAC;YACvD,IAAI,CAAC,UAAU,KAAK,gBAAgB,IAAI,CAAC,CAAC,UAAU,IAAI,iBAAiB,KAAK,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,EAAE;gBACjH,OAAO,IAAI,CAAC;aACf;SACJ;KACJ,CAAA;;IAED,8BAAA,wBAAwB,wCAAG;QACvBA,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClC,IAAI,IAAI,CAAC,CAAC,CAAC,YAAY,YAAY,EAAE;gBACjC,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC;aAC1B;SACJ;KACJ,CAAA;;IAED,8BAAA,kBAAkB,gCAAC,KAAK,EAAE;;;QACtBD,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnCA,IAAM,WAAW,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QACzDA,IAAM,IAAI,GAAG,EAAE,CAAC;;QAEhB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzCA,IAAI,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;YACjCD,IAAM,QAAQ,GAAGQ,MAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;;YAEjD,IAAI,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE;gBAC1B,IAAQ,IAAI;gBAAe,mFAAA,EAAE,CAAvB;gBACN,WAAW,GAAG,UAAU,CAAC;oBACrB,QAAQ,EAAE,UAAU;oBACpB,iBAAiB,EAAE,UAAU,GAAG,SAAS,GAAG,CAAC;iBAChD,EAAE,WAAW,CAAC,CAAC;;gBAEhB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE;oBACjC,WAAW,CAAC,SAAS,GAAGA,MAAI,CAAC,WAAW,EAAE,CAAC;iBAC9C;;gBAED,IAAIA,MAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE;oBACpC,WAAW,CAAC,SAAS,GAAG,KAAK,CAAC;iBACjC;;gBAEDP,IAAI,YAAY,WAAA,CAAC;;gBAEjB,IAAI,UAAU,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;oBACxC,YAAY,GAAG,IAAI,gBAAgB,CAAC,WAAW,EAAEO,MAAI,CAAC,YAAY,CAAC,CAAC;iBACvE,MAAM;oBACH,YAAY,GAAG,IAAI,YAAY,CAAC,WAAW,EAAEA,MAAI,CAAC,YAAY,CAAC,CAAC;iBACnE;;gBAED,IAAI,IAAI,EAAE;oBACN,IAAIA,MAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE;wBAC9B,MAAM,IAAI,KAAK,CAAC,CAAA,0BAAyB,GAAG,IAAI,wBAAqB,CAAC,CAAC,CAAC;qBAC3E;oBACDA,MAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC;iBAC/C;;gBAED,YAAY,CAAC,SAAS,GAAG,CAAC,CAAC;gBAC3B,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBACxBA,MAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;aACjC;SACJ;;QAEDR,IAAM,WAAW,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;;QAEhC,IAAI,UAAU,EAAE;YACZ,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC;SAC5B,MAAM;YACH,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC;SAC5B;KACJ,CAAA;;IAED,8BAAA,WAAW,2BAAG;QACVA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;;QAE3B,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpCD,IAAM,aAAa,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC,EAAE;gBACvD,OAAO,KAAK,CAAC;aAChB;SACJ;;QAED,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,8BAAA,eAAe,6BAAC,KAAK,EAAE;;;QACnBA,IAAM,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC;QAC3CA,IAAM,YAAY,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;QACrCA,IAAM,WAAW,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACtDA,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnCA,IAAM,WAAW,GAAG,EAAE,QAAQ,EAAE,CAAC,UAAU,EAAE,CAAC;QAC9CA,IAAM,IAAI,GAAG,EAAE,CAAC;;QAEhB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,WAAW,CAAC,gBAAgB,GAAG,KAAK,CAAC;YACrC,WAAW,CAAC,MAAM,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;SACzC;;QAED,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzCD,IAAM,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;YACnCA,IAAM,QAAQ,GAAGQ,MAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;;YAEjD,IAAI,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE;gBAC1BR,IAAM,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC;gBAC9BA,IAAM,gBAAgB,GAAG,gBAAgB,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;gBACrHA,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,YAAY,IAAI,gBAAgB,CAAC;;gBAEtE,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,IAAI,YAAY,EAAE;oBAClC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC;oBAClD,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC;iBACrD;;gBAEDC,IAAI,QAAQ,WAAA,CAAC;gBACb,IAAI,gBAAgB,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,EAAE;oBACjD,QAAQ,GAAG,eAAe,CAAC;iBAC9B,MAAM;oBACH,QAAQ,GAAG,WAAW,CAAC;iBAC1B;;gBAEDD,IAAM,SAAS,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG;oBAC/C,UAAU,CAAC,EAAE,EAAE,WAAW,EAAE,WAAW,CAAC;oBACxCQ,MAAI,CAAC,YAAY;iBACpB,CAAC;;gBAEF,IAAI,IAAI,EAAE;oBACN,IAAIA,MAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;wBAC3B,MAAM,IAAI,KAAK,CAAC,CAAA,uBAAsB,GAAG,IAAI,wBAAqB,CAAC,CAAC,CAAC;qBACxE;oBACDA,MAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;iBACzC;gBACD,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC;;gBAExB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBACrBA,MAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;aAC9B;SACJ;;QAEDR,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9C,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;;QAE7B,IAAI,UAAU,EAAE;YACZ,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC;SAC5B,MAAM;YACH,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC;SAC5B;KACJ,CAAA;;IAED,8BAAA,cAAc,4BAAC,KAAK,EAAE,CAAC,EAAE,SAAS,EAAE;QAChCA,IAAM,MAAM,GAAG,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAC1CA,IAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;QAC5CA,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACnCA,IAAM,UAAU,GAAG,EAAE,CAAC;QACtBA,IAAM,MAAM,GAAG,EAAE,CAAC;;QAElB,IAAI,CAAC,IAAI,EAAE;YACP,OAAO;SACV;;QAEDA,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QAC1B,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrCD,IAAM,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YACxB,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;aACjD,MAAM;gBACH,eAAe,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;aACxD;SACJ;;QAED,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YACzB,eAAe,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;SACrE;;QAED,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YAC5C,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE;gBACrB,OAAO,EAAE,YAAY,CAAC,CAAC,CAAC;gBACxB,aAAa,EAAE,CAAC;gBAChB,QAAQ,EAAE,iBAAiB,CAAC,UAAU,CAAC;gBACvC,KAAK,EAAE,iBAAiB,CAAC,MAAM,CAAC;aACnC,CAAC,CAAC;SACN;KACJ,CAAA;;IAED,8BAAA,SAAS,uBAAC,KAAK,EAAE;QACbA,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;;QAEzB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnCD,IAAM,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,WAAW,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;gBAC7C,OAAO,WAAW,CAAC;aACtB;SACJ;KACJ,CAAA;;IAED,8BAAA,iBAAiB,+BAAC,IAAI,EAAE,OAAO,EAAE;QAC7BA,IAAM,WAAW,GAAG,IAAI,YAAY,YAAY,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAC5H,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,OAAO,CAAC,CAAC;KACpD,CAAA;;;EAjsB6B,YAksBjC,GAAA;;AAED,SAAS,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE;IACvC,OAAO,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,EAAE;QAC5B,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,KAAK,IAAI,CAAC,CAAC;KACzE,CAAC,CAAC;CACN;;AAED,iBAAiB,CAAC,mBAAmB,EAAE;IACnC,YAAY,EAAE;QACV,UAAU,EAAE,EAAE;KACjB;IACD,SAAS,EAAE,EAAE;CAChB,CAAC,CAAC;;AAEH,UAAU,CAAC,mBAAmB,CAAC,SAAS,EAAE,mBAAmB,CAAC,CAAC,AAE/D;;ACnvBA,IAAM,SAAS,GAAc;IAAC,kBACf,GAAG;QACVY,QAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAER,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;KACrB;;;;gDAAA;;IAED,oBAAA,OAAO,uBAAG;QACN,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;KACrB,CAAA;;IAED,oBAAA,IAAI,kBAAC,MAAM,EAAE;;;QACTZ,IAAM,WAAW,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,EAAE,CAAC;;QAEZ,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzCD,IAAM,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,KAAK,IAAI,KAAK,CAAC,eAAe,IAAI,KAAK,CAAC,YAAY,EAAE,EAAE;gBACxDQ,MAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;gBACvCA,MAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC5B;SACJ;KACJ,CAAA;;IAED,oBAAA,oBAAoB,kCAAC,KAAK,EAAE,IAAI,EAAE;QAC9BR,IAAM,aAAa,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC;QAC7D,IAAI,aAAa,EAAE;YACfA,IAAM,SAAS,GAAG;gBACd,QAAQ,EAAE,KAAK,CAAC,QAAQ;gBACxB,MAAM,EAAE,KAAK,CAAC,MAAM;gBACpB,QAAQ,EAAE,KAAK,CAAC,QAAQ;gBACxB,KAAK,EAAE,KAAK,CAAC,KAAK;gBAClB,UAAU,EAAE,KAAK,CAAC,UAAU;gBAC5B,cAAc,EAAE,cAAc;gBAC9B,MAAM,EAAE,KAAK,CAAC,eAAe,EAAE;gBAC/B,IAAI,EAAE,IAAI;aACb,CAAC;YACF,aAAa,CAAC,SAAS,CAAC,CAAC;YACzB,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE;gBAC9B,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;aAC/B;SACJ,MAAM;YACH,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SAC/B;KACJ,CAAA;;IAED,oBAAA,IAAI,oBAAG;;;QACHA,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,OAAO,MAAM,CAAC,MAAM,EAAE;YAClBQ,MAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,KAAK,CAAC,CAAC;SAClD;KACJ,CAAA;;IAED,oBAAA,aAAa,2BAAC,OAAO,EAAE;QACnBR,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;;QAE5B,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpCD,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACxB,IAAI,OAAO,KAAK,KAAK,EAAE;gBACnB,OAAO,IAAI,CAAC;aACf;SACJ;;QAED,OAAO,KAAK,CAAC;KAChB,CAAA;;;EAhEmBa,4BAiEvB,GAAA;;AAED,SAAS,cAAc,GAAG;IACtB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;CACjC,AAED;;ACzEe,SAAS,SAAS,CAAC,CAAC,EAAE,QAAQ,EAAE;IAC3Cb,IAAM,GAAG,GAAG,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;IAC3CA,IAAM,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;IACtBA,IAAM,MAAM,GAAG,CAAC,GAAG,KAAK,MAAM,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC;;IAE5G,OAAO,MAAM,CAAC;;;ACLH,SAAS,iBAAiB,CAAC,UAAU,EAAE;IAClDA,IAAM,MAAM,GAAG,EAAE,CAAC;IAClB,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,UAAU,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;QAC9CD,IAAM,SAAS,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;QAClC,IAAI,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;YAC7B,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG;gBAClC,GAAG,EAAE,SAAS,CAAC,KAAK,CAAC,GAAG;gBACxB,GAAG,EAAE,SAAS,CAAC,KAAK,CAAC,GAAG;aAC3B,CAAC;SACL;KACJ;IACD,OAAO,MAAM,CAAC;;;ACLlB,IAAM,QAAQ,GAAc;IAAC,iBACd,CAAC,QAAQ,EAAE,OAAO,EAAE;QAC3BY,QAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAER,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;KACxD;;;;8CAAA;;IAED,mBAAA,KAAK,mBAAC,CAAC,EAAE;QACL,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC9C,OAAO,IAAI,CAAC,OAAO,CAAC;KACvB,CAAA;;IAED,mBAAA,IAAI,kBAAC,CAAC,EAAE;QACJ,IAAI,IAAI,CAAC,OAAO,EAAE;YACdZ,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACrF,IAAI,UAAU,CAAC,MAAM,EAAE;gBACnB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;gBAC7B,OAAO,iBAAiB,CAAC,UAAU,CAAC,CAAC;aACxC;SACJ;KACJ,CAAA;;IAED,mBAAA,GAAG,mBAAG;QACFA,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;;QAErB,OAAO,MAAM,CAAC;KACjB,CAAA;;IAED,mBAAA,GAAG,mBAAG;QACF,OAA8B,GAAG,IAAI;QAA7B,IAAA,QAAQ;QAAE,IAAA,UAAU,kBAAtB;QACN,IAAI,UAAU,CAAC,MAAM,EAAE;YACnB,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,UAAU,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;gBAC9CD,IAAM,KAAK,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;gBAC9B,QAAQ,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;aACvD;YACD,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACnC;KACJ,CAAA;;IAED,mBAAA,OAAO,uBAAG;QACN,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB,CAAA;;IAED,mBAAA,QAAQ,sBAAC,CAAC,EAAE,QAAQ,EAAE;QAClBA,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/BA,IAAM,KAAK,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;QACjCA,IAAM,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;QACrDA,IAAM,WAAW,GAAG,EAAE,CAAC;;QAEvB,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,KAAK,QAAQ,EAAE;YACxDA,IAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;YAC3B,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;gBACxCD,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;;gBAEvB,IAAI,QAAQ,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,QAAQ,KAAK,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;oBACrFA,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;;oBAE9B,IAAI,KAAK,EAAE;wBACP,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC;wBACxB,WAAW,CAAC,IAAI,CAAC;4BACb,IAAI,EAAE,IAAI;4BACV,KAAK,EAAE,KAAK;yBACf,CAAC,CAAC;qBACN;iBACJ;aACJ;SACJ;;QAED,OAAO,WAAW,CAAC;KACtB,CAAA;;;EAvEkBa,4BAwEtB,GAAA;;AAED,QAAQ,CAAC,SAAS,CAAC,OAAO,GAAG;IACzB,GAAG,EAAE,MAAM;IACX,IAAI,EAAE,MAAM;CACf,CAAC,AAEF;;AC/EA,IAAM,aAAa,GAAc;IAAC,sBACnB,CAAC,KAAK,EAAE,OAAO,EAAE;QACxBD,QAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAER,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QACrD,IAAI,CAAC,aAAa,EAAE,CAAC;KACxB;;;;wDAAA;;IAED,wBAAA,aAAa,6BAAG;QACZZ,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC9D,OAAO,CAAC,SAAS,GAAG,WAAW,CAAC;QAChCA,IAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACnD,YAAY,CAAC,SAAS,GAAG,iBAAiB,CAAC;QAC3C,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;KACrC,CAAA;;IAED,wBAAA,aAAa,6BAAG;QACZ,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE;YAC1B,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACvD;KACJ,CAAA;;IAED,wBAAA,SAAS,uBAAC,MAAM,EAAE;QACd,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;KACxC,CAAA;;IAED,wBAAA,KAAK,mBAAC,CAAC,EAAE;QACL,IAAI,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAChCA,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACzBA,IAAM,KAAK,GAAG,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YACzCA,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACrE,IAAI,QAAQ,IAAI,QAAQ,CAAC,OAAO,EAAE,EAAE;gBAChCA,IAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,CAAC;gBAC3CA,IAAM,MAAM,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;;gBAErC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC3C,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;;gBAEhC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACzC,IAAI,CAAC,SAAS,CAAC;oBACX,IAAI,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC;oBACjB,GAAG,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC;oBAChB,KAAK,EAAE,CAAC;oBACR,MAAM,EAAE,CAAC;iBACZ,CAAC,CAAC;;gBAEH,OAAO,IAAI,CAAC;aACf;SACJ;QACD,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,wBAAA,cAAc,8BAAG;QACbA,IAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QACxC,OAAiC,GAAG,aAAa,CAAC,YAAY,EAAE,EAAE,aAAa,EAAE,YAAY,EAAE,CAAC;QAAxF,IAAA,WAAW;QAAE,IAAA,UAAU,kBAAzB;QACNA,IAAM,MAAM,GAAG,aAAa,CAAC,YAAY,CAAC,CAAC;;QAE3C,OAAO;YACH,IAAI,EAAE,WAAW,GAAG,MAAM,CAAC,IAAI;YAC/B,GAAG,EAAE,UAAU,GAAG,MAAM,CAAC,GAAG;SAC/B,CAAC;KACL,CAAA;;IAED,wBAAA,IAAI,kBAAC,CAAC,EAAE;QACJA,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;SAC9C;KACJ,CAAA;;IAED,wBAAA,GAAG,iBAAC,CAAC,EAAE;QACHA,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,IAAI,QAAQ,EAAE;YACVA,IAAMsC,gBAAa,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5CtC,IAAM,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;YACrD,iBAAiB,CAAC,IAAI,IAAIsC,gBAAa,CAAC,IAAI,CAAC;YAC7C,iBAAiB,CAAC,GAAG,IAAIA,gBAAa,CAAC,GAAG,CAAC;;YAE3CtC,IAAM,KAAK,GAAG,EAAE,CAAC,EAAE,iBAAiB,CAAC,IAAI,EAAE,CAAC,EAAE,iBAAiB,CAAC,GAAG,EAAE,CAAC;YACtEA,IAAM,GAAG,GAAG,EAAE,CAAC,EAAE,iBAAiB,CAAC,IAAI,GAAG,iBAAiB,CAAC,KAAK,EAAE,CAAC,EAAE,iBAAiB,CAAC,GAAG,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC;YACzH,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;;YAEnC,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,OAAO,IAAI,CAAC,SAAS,CAAC;;YAEtB,OAAO,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC7C;KACJ,CAAA;;IAED,wBAAA,IAAI,oBAAG;QACHA,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,IAAI,UAAU,IAAI,UAAU,CAAC,MAAM,EAAE;YACjCA,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;YACtC,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,UAAU,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;gBAC9CD,IAAM,SAAS,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;gBAClC,QAAQ,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;aAC/D;YACD,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACnC;KACJ,CAAA;;IAED,wBAAA,OAAO,uBAAG;QACN,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,OAAO,IAAI,CAAC,QAAQ,CAAC;QACrB,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB,CAAA;;IAED,wBAAA,iBAAiB,+BAAC,KAAK,EAAE,GAAG,EAAE;QAC1BA,IAAM,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;QACrDA,IAAM,UAAU,GAAG,EAAE,CAAC;;QAEtBA,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QACjC,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YACxCD,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;YACvBA,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;YACvC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,QAAQ,CAAC,EAAE;gBACzDA,IAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;gBAC3C,IAAI,KAAK,EAAE;oBACP,UAAU,CAAC,IAAI,CAAC;wBACZ,IAAI,EAAE,IAAI;wBACV,KAAK,EAAE,KAAK;qBACf,CAAC,CAAC;iBACN;aACJ;SACJ;;QAED,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAChC,CAAA;;IAED,wBAAA,kBAAkB,gCAAC,CAAC,EAAE;QAClBA,IAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC;QACtCA,IAAM,aAAa,GAAG;YAClB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,aAAa;YACpB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,aAAa;SACvB,CAAC;QACF,IAAuB,KAAK;QAAmB,IAAA,KAAK,gBAA9C;QACNA,IAAM,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;QACrDC,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QAC5CA,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QAC3CA,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAC9CA,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;;QAE/C,IAAI,IAAI,KAAK,CAAC,EAAE;YACZ,IAAI,GAAG,OAAO,CAAC,EAAE,CAAC;YAClB,KAAK,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;SAC3B;QACD,IAAI,IAAI,KAAK,CAAC,EAAE;YACZ,GAAG,GAAG,OAAO,CAAC,EAAE,CAAC;YACjB,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;SAC7B;;QAED,IAAI,KAAK,GAAG,OAAO,CAAC,EAAE,EAAE;YACpB,KAAK,GAAG,OAAO,CAAC,EAAE,GAAG,aAAa,CAAC,CAAC,CAAC;SACxC;;QAED,IAAI,KAAK,GAAG,OAAO,CAAC,EAAE,EAAE;YACpB,KAAK,GAAG,aAAa,CAAC,CAAC,GAAG,OAAO,CAAC,EAAE,CAAC;SACxC;;QAED,IAAI,KAAK,GAAG,OAAO,CAAC,EAAE,EAAE;YACpB,MAAM,GAAG,OAAO,CAAC,EAAE,GAAG,aAAa,CAAC,CAAC,CAAC;SACzC;;QAED,IAAI,KAAK,GAAG,OAAO,CAAC,EAAE,EAAE;YACpB,MAAM,GAAG,aAAa,CAAC,CAAC,GAAG,OAAO,CAAC,EAAE,CAAC;SACzC;;QAED,OAAO;YACH,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,EAAE,CAAC;YAChC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,EAAE,CAAC;YAC9B,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,MAAM;SACjB,CAAC;KACL,CAAA;;;EA9KuBY,4BA+K3B,GAAA;;AAED,aAAa,CAAC,SAAS,CAAC,OAAO,GAAG;IAC9B,GAAG,EAAE,OAAO;IACZ,IAAI,EAAE,MAAM;CACf,CAAC,AAEF;;ACtLA,IAAM,cAAc,GAAc;IAAC,uBACpB,CAAC,KAAK,EAAE,OAAO,EAAE;QACxBD,QAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAER,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;KACxD;;;;0DAAA;;IAED,yBAAA,YAAY,0BAAC,KAAK,EAAE;QAChBZ,IAAM,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;QACrDA,IAAM,UAAU,GAAG,EAAE,CAAC;QACtBA,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC;;QAEvC,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YACxCD,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;YACvBA,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;;YAEvC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,QAAQ,CAAC,EAAE;gBACzDA,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC;;gBAErC,IAAI,KAAK,EAAE;oBACP,UAAU,CAAC,IAAI,CAAC;wBACZ,IAAI,EAAE,IAAI;wBACV,KAAK,EAAE,KAAK;qBACf,CAAC,CAAC;iBACN;aACJ;SACJ;;QAED,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,OAAO,iBAAiB,CAAC,UAAU,CAAC,CAAC;KACxC,CAAA;;IAED,yBAAA,IAAI,oBAAG;QACHA,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,IAAI,UAAU,IAAI,UAAU,CAAC,MAAM,EAAE;YACjCA,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;YACtC,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,UAAU,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;gBAC9CD,IAAM,SAAS,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;gBAClC,QAAQ,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;aAC/D;YACD,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACnC;KACJ,CAAA;;IAED,yBAAA,OAAO,uBAAG;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB,CAAA;;;EA/CwBa,4BAgD5B,GAAA,AAED;;ACpDA,IAAM,YAAY,GAAqB;IAAC,qBAEzB,CAAC,OAAO,EAAE,YAAY,EAAE;QAC/BD,eAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;;QAEf,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KACpC;;;;sDAAA;;IAED,uBAAA,MAAM,sBAAG;QACL,OAA2B,GAAG,IAAI;QAA1B,IAAA,QAAQ;QAAE,IAAA,OAAO,eAAnB;QACNZ,IAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;;QAElC,IAAI,CAAC,MAAM,GAAG,IAAIe,8BAAI,CAAC,MAAM,CAAC,IAAI,EAAE;YAChC,OAAO,EAAE,QAAQ,GAAG,CAAC,GAAG,OAAO,CAAC,OAAO;YACvC,WAAW,EAAE,QAAQ,GAAG,OAAO,CAAC,OAAO,GAAG,CAAC;YAC3C,WAAW,EAAE,QAAQ,GAAG,UAAU,GAAG,YAAY;SACpD,CAAC,CAAC;;QAEH,KAAKd,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YAC5CA,IAAI,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;YAC/B,UAAU,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;YAC7B,UAAU,CAAC,YAAY,EAAE,CAAC;SAC7B;KACJ,CAAA;;IAED,uBAAA,MAAM,oBAAC,GAAG,EAAE;QACR,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QACrBD,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;;QAEvC,IAAI,IAAI,EAAE;YACN,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;SAC9B,MAAM;YACH,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;SACxB;KACJ,CAAA;;IAED,uBAAA,YAAY,4BAAG;QACX,IAAI,CAAC,SAAS,EAAE,CAAC;KACpB,CAAA;;IAED,uBAAA,YAAY,4BAAG,EAAE,CAAA;;;EAzCM,YA0C1B,GAAA,AAED;;ACzCA,IAAM,UAAU,GAAmB;IAAC,mBACrB,CAAC,OAAO,EAAE;QACjBY,aAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;;QAEf,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,EAAE,CAAC;KACtB;;;;kDAAA;;IAED,qBAAA,eAAe,+BAAG;QACd,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;QACnF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAC/B,CAAA;;IAED,qBAAA,YAAY,4BAAG;QACX,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,YAAY,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;KACjE,CAAA;;IAED,qBAAA,aAAa,6BAAG;QACZZ,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;QACxC,OAAO,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,OAAO,EAAE;YACnC,UAAU,EAAE,WAAW;YACvB,MAAM,EAAE;gBACJ,KAAK,EAAE,WAAW;aACrB;SACJ,CAAC,CAAC;KACN,CAAA;;IAED,qBAAA,WAAW,2BAAG;QACVA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,YAAY,GAAG,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;;QAEpD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC;KAClE,CAAA;;IAED,qBAAA,cAAc,8BAAG;QACbY,uBAAK,CAAC,cAAc,KAAA,CAAC,IAAA,CAAC,CAAC;;QAEvBZ,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC;QACzCA,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,GAAGe,8BAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE;YAClF,IAAI,EAAE;gBACF,KAAK,EAAE,KAAK;gBACZ,OAAO,EAAE,CAAC;aACb;YACD,MAAM,EAAE,IAAI;YACZ,MAAM,EAAE,MAAM,CAAC,KAAK,IAAI,MAAM;SACjC,CAAC,CAAC;;QAEH,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KAChC,CAAA;;IAED,qBAAA,KAAK,mBAAC,MAAM,EAAE,CAAC,EAAE;QACbf,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;;QAE/B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,EAAE;YAC1C,CAAC,CAAC,cAAc,EAAE,CAAC;SACtB;KACJ,CAAA;;IAED,qBAAA,KAAK,mBAAC,MAAM,EAAE,CAAC,EAAE;QACbA,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;;QAE/B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,EAAE;YAC1C,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;SAC9D;;;QAGD,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,qBAAA,KAAK,mBAAC,MAAM,EAAE;QACV,MAAM,CAAC,iBAAiB,EAAE,CAAC;KAC9B,CAAA;;IAED,qBAAA,SAAS,uBAAC,CAAC,EAAE;QACTA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;;QAE7B,OAAO;YACH,OAAO,EAAE,YAAY,CAAC,CAAC,CAAC;YACxB,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,WAAW,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK;YACjC,UAAU,EAAE,OAAO,CAAC,UAAU;SACjC,CAAC;KACL,CAAA;;IAED,qBAAA,YAAY,4BAAG;;;QACXA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC;;QAEpC,IAAI,YAAY,EAAE;YACd,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC;gBACvB,MAAM,EAAE,OAAO,CAAC,MAAM;gBACtB,MAAM,EAAE,OAAO,CAAC,MAAM;gBACtB,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE;gBACxB,UAAU,EAAE,OAAO,CAAC,UAAU;gBAC9B,OAAO,EAAE;oBACL,OAAO,EAAE,IAAI,CAAC,aAAa,EAAE;oBAC7B,MAAM,EAAE,OAAO,CAAC,MAAM;iBACzB;gBACD,YAAY,EAAE,YAAG;oBACbQ,MAAI,CAAC,YAAY,EAAE,CAAC;oBACpBA,MAAI,CAAC,cAAc,EAAE,CAAC;oBACtBA,MAAI,CAAC,cAAc,EAAE,CAAC;;oBAEtBR,IAAM,aAAa,GAAGQ,MAAI,CAAC,MAAM,CAAC;;oBAElC,OAAOA,MAAI,CAAC,MAAM,CAAC;;oBAEnB,OAAO,aAAa,CAAC;iBACxB;aACJ,CAAC,CAAC;YACH,IAAI,CAAC,SAAS,EAAE,CAAC;SACpB,MAAM;YACHI,uBAAK,CAAC,YAAY,KAAA,CAAC,IAAA,CAAC,CAAC;SACxB;KACJ,CAAA;;;EAtHoB,UAuHxB,GAAA,AAED,AAA0B;;ACxH1BZ,IAAM,UAAU,GAAG,YAAY,CAAC;AAChCA,IAAM,OAAO,GAAG,SAAS,CAAC;AAC1BA,IAAM,MAAM,GAAG,QAAQ,CAAC;;AAExB,IAAM,MAAM,GAAqB;IAAC,eACnB,CAAC,OAAO,EAAE,YAAY,EAAE;QAC/BY,eAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;;QAEf,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;;QAEjC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,EAAE;YACvE,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;SACjC;;QAED,IAAI,CAAC,eAAe,EAAE,CAAC;;QAEvB,IAAI,CAAC,WAAW,EAAE,CAAC;KACtB;;;;0CAAA;;IAED,iBAAA,eAAe,+BAAG;QACdZ,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAQ,QAAQ;QAAS,IAAA,SAAS,iBAA5B;QACNC,IAAI,KAAK,GAAG,QAAQ,CAAC;QACrBA,IAAI,MAAM,GAAG,MAAM,CAAC;;QAEpB,IAAI,QAAQ,KAAK,MAAM,EAAE;YACrB,KAAK,GAAG,IAAI,CAAC;SAChB,MAAM,IAAI,OAAO,CAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAE;YAC3C,IAAI,SAAS,KAAK,OAAO,EAAE;gBACvB,KAAK,GAAG,IAAI,CAAC;aAChB,MAAM,IAAI,SAAS,KAAK,KAAK,EAAE;gBAC5B,KAAK,GAAG,KAAK,CAAC;aACjB,MAAM;gBACH,KAAK,GAAG,MAAM,CAAC;aAClB;YACD,MAAM,GAAG,QAAQ,CAAC;SACrB,MAAM,IAAI,SAAS,EAAE;YAClB,IAAI,SAAS,KAAK,OAAO,EAAE;gBACvB,MAAM,GAAG,GAAG,CAAC;aAChB,MAAM,IAAI,SAAS,KAAK,KAAK,EAAE;gBAC5B,MAAM,GAAG,MAAM,CAAC;aACnB;SACJ;;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,UAAU,CAAC;YAC5B,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,UAAU,EAAE,OAAO,CAAC,UAAU;YAC9B,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,WAAW,EAAE,IAAI;SACpB,CAAC,CAAC;;QAEH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAC/B,CAAA;;IAED,iBAAA,WAAW,2BAAG;QACVD,IAAM,YAAY,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QACvCA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QACnCA,IAAM,YAAY,GAAG,IAAI,YAAY,CAAC;YAClC,QAAQ,EAAE,QAAQ;YAClB,OAAO,EAAE,OAAO,CAAC,OAAO;SAC3B,EAAE,YAAY,CAAC,CAAC;QACjBC,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;;QAE1B,IAAI,OAAO,CAAC,OAAO,EAAE;YACjB,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;SACpC;;QAEDD,IAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;;QAE3B,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC5BA,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;;YAEpB,YAAY,CAAC,MAAM,CAAC,IAAI,UAAU,CAAC,UAAU,CAAC,EAAE,EAAE;gBAC9C,OAAO,EAAE,OAAO,CAAC,OAAO;gBACxB,MAAM,EAAE,OAAO,CAAC,MAAM;aACzB,EAAE,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;SAC5B;;QAED,YAAY,CAAC,MAAM,EAAE,CAAC;;QAEtB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;KACvC,CAAA;;IAED,iBAAA,UAAU,0BAAG;QACT,OAA+B,GAAG,IAAI,CAAC,OAAO;QAAtC,IAAA,WAAW;QAAE,IAAA,QAAQ,gBAAvB;QACND,IAAM,QAAQ,GAAG,CAAC,QAAQ,KAAK,MAAM,IAAI,WAAW,KAAK,UAAU,CAAC;eAC7D,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,WAAW,KAAK,UAAU,GAAG,OAAO,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;;QAEhG,OAAO,QAAQ,CAAC;KACnB,CAAA;;IAED,iBAAA,QAAQ,wBAAG;QACP,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;KACzD,CAAA;;IAED,iBAAA,MAAM,oBAAC,SAAS,EAAE;QACdA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,SAAS,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;;QAEpC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE;YAClB,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;YACrB,OAAO;SACV;;QAED,IAAI,OAAO,CAAC,QAAQ,KAAK,MAAM,EAAE;YAC7B,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;YACtC,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;SACxB,MAAM;YACH,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;SACnC;KACJ,CAAA;;IAED,iBAAA,eAAe,6BAAC,SAAS,EAAE;QACvB,OAA4B,GAAG,IAAI;QAA3B,IAAA,OAAO;QAAE,IAAA,SAAS,iBAApB;QACN,IAAQ,QAAQ;QAAE,IAAA,KAAK;QAAE,IAAA,MAAM,kBAAzB;QACNA,IAAM,GAAG,GAAG,QAAQ,KAAK,GAAG,IAAI,QAAQ,KAAK,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;QAC5DA,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QACnCA,IAAM,WAAW,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;QACtCC,IAAI,YAAY,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;;QAErC,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,KAAK,EAAE;YACzC,YAAY,CAAC,EAAE,GAAG,WAAW,CAAC,EAAE,GAAG,CAAC,CAAC;SACxC;;QAED,IAAI,QAAQ,IAAI,MAAM,EAAE;YACpB,YAAY,CAAC,EAAE,GAAG,YAAY,CAAC,EAAE,GAAG,MAAM,CAAC;YAC3C,YAAY,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAChE,MAAM,IAAI,CAAC,QAAQ,IAAI,KAAK,EAAE;YAC3B,YAAY,CAAC,EAAE,GAAG,YAAY,CAAC,EAAE,GAAG,KAAK,CAAC;YAC1C,YAAY,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SAC/D;;QAED,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAC/B,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC;;QAE7BD,IAAM,GAAG,GAAG,YAAY,CAAC,KAAK,EAAE,CAAC;;QAEjC,IAAI,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,EAAE;YACpC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;YACzD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;SACvC;;QAED,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;QAClC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;;QAElC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAClB,CAAA;;IAED,iBAAA,qBAAqB,mCAAC,SAAS,EAAE;QAC7B,OAA4B,GAAG,IAAI;QAA3B,IAAA,OAAO;QAAE,IAAA,SAAS,iBAApB;QACN,IAAQ,OAAO;QAAE,IAAA,OAAO;QAAE,IAAA,KAAK;QAAE,IAAA,MAAM,kBAAjC;QACNA,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QACnCC,IAAI,YAAY,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;;QAErC,IAAI,QAAQ,IAAI,MAAM,EAAE;YACpB,YAAY,CAAC,EAAE,GAAG,YAAY,CAAC,EAAE,GAAG,MAAM,CAAC;SAC9C,MAAM,IAAI,CAAC,QAAQ,IAAI,KAAK,EAAE;YAC3B,YAAY,CAAC,EAAE,GAAG,YAAY,CAAC,EAAE,GAAG,KAAK,CAAC;SAC7C;QACD,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAC/B,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC;;QAE7B,SAAS,CAAC,MAAM,CAAC,IAAI,GAAG;YACpB,OAAO,EAAE,OAAO;YAChB,OAAO,GAAG,YAAY,CAAC,KAAK,EAAE,EAAE,OAAO,GAAG,YAAY,CAAC,MAAM,EAAE;SAClE,CAAC,CAAC;KACN,CAAA;;IAED,iBAAA,YAAY,4BAAG;QACX,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;YACjBW,yBAAK,CAAC,YAAY,KAAA,CAAC,IAAA,CAAC,CAAC;SACxB;KACJ,CAAA;;;EA7KgB,YA8KpB,GAAA;;AAED,iBAAiB,CAAC,MAAM,EAAE;IACtB,QAAQ,EAAE,KAAK;IACf,KAAK,EAAE,EAAE;IACT,MAAM,EAAE;QACJ,MAAM,EAAE;YACJ,IAAI,EAAE,CAAC;SACV;KACJ;IACD,OAAO,EAAE,CAAC;IACV,OAAO,EAAE,CAAC;IACV,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC;IACrB,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC;IACtB,MAAM,EAAE;QACJ,KAAK,EAAE,KAAK;QACZ,KAAK,EAAE,CAAC;KACX;IACD,IAAI,EAAE;QACF,MAAM,EAAE,OAAO;KAClB;IACD,OAAO,EAAE,CAAC;IACV,UAAU,EAAE,EAAE;IACd,MAAM,EAAE,CAAC;IACT,OAAO,EAAE;QACL,MAAM,EAAE;YACJ,KAAK,EAAE,CAAC;SACX;QACD,KAAK,EAAE,EAAE;QACT,MAAM,EAAE,CAAC;QACT,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,IAAI;QACX,MAAM,EAAE,MAAM;KACjB;CACJ,CAAC,CAAC,AAEH;;AC3NA,IAAM,eAAe,GAAc;IAAC,wBAErB,GAAG;QACVA,QAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAER,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACvB;;;;4DAAA;;IAED,0BAAA,QAAQ,sBAAC,IAAI,EAAE,WAAW,EAAE;QACxB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YAChB,IAAI,EAAE,IAAI;YACV,WAAW,EAAE,WAAW;SAC3B,CAAC,CAAC;KACN,CAAA;;IAED,0BAAA,MAAM,oBAAC,SAAS,EAAE,OAAO,EAAE,YAAY,EAAE;QACrCZ,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QAChCC,IAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QACxBA,IAAI,MAAM,CAAC;;QAEX,KAAKA,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YAC5CD,IAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;YAC5B,MAAM,GAAG,kBAAkB,CAAC,SAAS,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;;YAE1D,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnB,KAAK,GAAG,KAAK,CAAC;gBACd,MAAM;aACT;SACJ;;QAED,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;KACxD,CAAA;;;EA/ByBa,4BAgC7B,GAAA;;AAED,eAAe,CAAC,OAAO,GAAG,IAAI,eAAe,EAAE,CAAC,AAEhD;;AC7BAb,IAAM,iBAAiB,GAAG,CAAC,CAAC;AAC5BA,IAAM,sBAAsB,GAAG,GAAG,CAAC;;AAEnC,SAAS,SAAS,CAAC,SAAS,EAAE;IAC1BA,IAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC9C,IAAI,SAAS,EAAE;QACX,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;KACjC;;IAED,OAAO,OAAO,CAAC;CAClB;;AAED,SAAS,aAAa,CAAC,OAAO,EAAE;IAC5BC,IAAI,OAAO,GAAG,OAAO,CAAC;IACtB,OAAO,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,UAAU,CAAC,EAAE;QAChD,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC;KAChC;;IAED,OAAO,OAAO,CAAC;CAClB;;AAED,IAAM,SAAS,GAAc;IAAC,kBACf,CAAC,KAAK,EAAE,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE;QAChDW,QAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAERZ,IAAM,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC;QACnCA,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QAClD,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QACrD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,YAAY,gBAAgB,CAAC;QAC/D,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;;QAE3B,IAAI,CAAC,WAAW,EAAE,CAAC;;QAEnB,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;YACtB,IAAI,CAAC,cAAc,EAAE,CAAC;;YAEtB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;;YAEvE,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;KACJ;;;;gDAAA;;IAED,oBAAA,cAAc,8BAAG;QACbA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,YAAY,CAAC,CAAC;QACvD,aAAa,CAAC,OAAO,EAAE;YACnB,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC,GAAG;YACvB,IAAI,EAAE,OAAO,CAAC,MAAM,CAAC,IAAI;YACzB,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,MAAM,EAAE,OAAO,CAAC,MAAM;SACzB,CAAC,CAAC;QACHA,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC;QACpC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC;;QAErC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACpC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;;QAE/B,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC;;QAEnDA,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,wBAAwB,CAAC,CAAC;QACzEA,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,yBAAyB,CAAC,CAAC;QAC5E,UAAU,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,CAAC;QACpC,WAAW,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,CAAC;;QAErC,SAAS,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAClC,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;;QAEnC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACvCA,IAAM,eAAe,GAAG,aAAa,CAAC,SAAS,EAAE,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,QAAQ,EAAE,CAAC,CAAC;QACtGA,IAAM,gBAAgB,GAAG,aAAa,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,MAAM,CAAC;QACpEA,IAAM,iBAAiB,GAAG,aAAa,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,MAAM,CAAC;;QAEtE,OAAO,CAAC,SAAS,GAAG;YAChB,MAAM,EAAE;gBACJ,IAAI,EAAE,eAAe,CAAC,eAAe;gBACrC,KAAK,EAAE,eAAe,CAAC,gBAAgB;aAC1C;SACJ,CAAC;;QAEF,aAAa,CAAC,UAAU,EAAE;YACtB,GAAG,EAAE,CAAC,eAAe,CAAC,MAAM,GAAG,gBAAgB,CAAC,GAAG,CAAC;SACvD,CAAC,CAAC;;QAEH,aAAa,CAAC,WAAW,EAAE;YACvB,GAAG,EAAE,CAAC,eAAe,CAAC,MAAM,GAAG,iBAAiB,CAAC,GAAG,CAAC;SACxD,CAAC,CAAC;;QAEH,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC;KACjD,CAAA;;IAED,oBAAA,UAAU,4BAAG;QACT,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,KAAK,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC;;QAE5G;QAAA,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,QAAA,EAAC,KACtB,EAAE,UAAU,EAAE,GAAA,IAAM,CAAC,kBAAkB,OAC1C,CAAC,CAAC;;QAEH,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE;YACpD,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;YAC7B,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;YAC3B,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACzB,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACzB,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;YAC7B,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC;YAC3C,aAAa,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;YAC7C,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;SAC1C,CAAC,CAAC;KACN,CAAA;;IAED,oBAAA,WAAW,2BAAG;QACV,OAA0C,GAAG,IAAI;QAAzC,IAAA,OAAO;QAAE,IAAA,YAAY;QAAE,IAAA,SAAS,iBAAlC;QACNA,IAAM,mBAAmB,GAAG,YAAY,CAAC,OAAO,EAAE,CAAC;QACnDA,IAAM,gBAAgB,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC;QAC7CA,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC;;QAEjD,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,UAAU,CAAC,OAAO,EAAE;gBAChB,GAAG,EAAE,SAAS,CAAC,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC;gBACxC,GAAG,EAAE,SAAS,CAAC,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC;gBACxC,IAAI,EAAE,SAAS,CAAC,WAAW,EAAE,OAAO,CAAC,IAAI,CAAC;gBAC1C,EAAE,EAAE,SAAS,CAAC,WAAW,EAAE,OAAO,CAAC,EAAE,CAAC;aACzC,CAAC,CAAC;SACN;;QAED,SAAiC,GAAG,aAAa,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,aAAa,EAAE,YAAY,EAAE,CAAC;QAA7F,IAAA,WAAW;QAAE,IAAA,UAAU,oBAAzB;;QAEN,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,EAAE,EAAE;YAC1B,KAAK,EAAE,mBAAmB,CAAC,KAAK,EAAE;YAClC,MAAM,EAAE,gBAAgB,CAAC,MAAM,EAAE,GAAG,sBAAsB;YAC1D,OAAO,EAAE;gBACL,IAAI,EAAE,WAAW;gBACjB,GAAG,EAAE,UAAU;aAClB;YACD,MAAM,EAAE;gBACJ,IAAI,EAAE,gBAAgB,CAAC,EAAE,GAAG,WAAW;gBACvC,GAAG,EAAE,gBAAgB,CAAC,EAAE,GAAG,UAAU;aACxC;YACD,IAAI,EAAE,OAAO,CAAC,GAAG;YACjB,EAAE,EAAE,OAAO,CAAC,GAAG;SAClB,EAAE,OAAO,CAAC,CAAC;KACf,CAAA;;IAED,oBAAA,OAAO,uBAAG;QACN,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,UAAU,CAAC;SAC1B;;QAED,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC9B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;;QAEnB,IAAI,IAAI,CAAC,OAAO,EAAE;YACd;YAAA,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,QAAA,EAAC,KACxB,EAAE,UAAU,EAAE,GAAA,IAAM,CAAC,kBAAkB,OAC1C,CAAC,CAAC;YACH,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC/C;KACJ,CAAA;;IAED,oBAAA,eAAe,6BAAC,KAAK,EAAE;;QAEnB,OAAO;YACH,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,OAAO;YAC/B,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC;YAC7B,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC;SAC5B,CAAC;KACL,CAAA;;IAED,oBAAA,MAAM,oBAAC,CAAC,EAAE;QACNA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,MAAM,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;;QAE/B,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE;YACxB,OAAO;SACV;;QAED,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG;YACV,UAAU,EAAE,aAAa,CAAC,MAAM,CAAC,IAAI,MAAM;YAC3C,aAAa,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC;YACrC,KAAK,EAAE;gBACH,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC;gBAC/B,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC;aAC9B;SACJ,CAAC;;QAEFA,IAAM,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC;YAC9B,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC;YAC/B,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC;SAC9B,CAAC,CAAC;;QAEH,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE;YAClC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACtB;KACJ,CAAA;;IAED,oBAAA,MAAM,oBAAC,CAAC,EAAE;QACNC,IAAI,MAAM,CAAC;QACX,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;SACnC,MAAM;YACH,MAAM,GAAG,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;SAC3C;QACD,IAAI,MAAM,EAAE;YACR,QAAQ,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;SACvC;KACJ,CAAA;;IAED,oBAAA,KAAK,mBAAC,CAAC,EAAE;QACL,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,OAAO;SACV;;QAED,OAA2E,GAAG,IAAI;QAAlE,IAAA,KAAK;QAAE,IAAA,OAAO;QAA6B,IAAA,UAAU,uCAA/D;QACN,IAAQ,KAAK;QAAc,IAAA,MAAM,oBAA3B;QACND,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACvCA,IAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACnCA,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACrCA,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACrCA,IAAM,KAAK,GAAG,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;QACjDA,IAAM,QAAQ,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC;QACpDA,IAAM,IAAI,GAAG,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC;QACnCA,IAAM,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,KAAK,GAAG,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACnFA,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;;QAEzC,IAAI,CAAC,MAAM,EAAE;YACT,OAAO;SACV;;QAED,IAAI,UAAU,CAAC,MAAM,EAAE,4BAA4B,CAAC,EAAE;YAClD,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG;gBACjB,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,GAAG,MAAM,CAAC;gBAC5B,GAAG,GAAG,IAAI;aACb,CAAC;YACF,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG;gBACf,KAAK,CAAC,IAAI,GAAG,IAAI;gBACjB,GAAG;aACN,CAAC;SACL,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE,eAAe,CAAC,EAAE;YAC5C,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG;gBACjB,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,GAAG,MAAM,CAAC;gBAC5B,GAAG,GAAG,CAAC;aACV,CAAC;YACF,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;SACjD,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE,gBAAgB,CAAC,EAAE;YAC7C,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG;gBACf,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC;gBAC9B,GAAG;aACN,CAAC;YACF,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;SACnD;;QAED,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,IAAI,KAAK,CAAC,EAAE,KAAK,QAAQ,CAAC,EAAE,EAAE;YAC1D,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;YAChC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;SACrD;KACJ,CAAA;;IAED,oBAAA,IAAI,oBAAG;QACH,IAAI,IAAI,CAAC,MAAM,EAAE;YACbA,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;YAC1C,IAAI,UAAU,EAAE;gBACZ,WAAW,CAAC,UAAU,EAAE,iBAAiB,CAAC,CAAC;aAC9C;;YAEDA,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;YAChC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;YAC/B,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;;YAEtD,OAAO,IAAI,CAAC,MAAM,CAAC;SACtB;KACJ,CAAA;;IAED,oBAAA,IAAI,kBAAC,CAAC,EAAE;QACJ,OAA+B,GAAG,IAAI;QAA9B,IAAA,OAAO;QAAE,IAAA,YAAY,oBAAvB;QACNA,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAC/CA,IAAM,UAAU,GAAG,YAAY,CAAC,kBAAkB,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7FA,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACvCA,IAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACnCA,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACrCA,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACrCA,IAAM,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC;QACvBA,IAAM,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC;QAC5BA,IAAM,KAAK,GAAG,EAAE,CAAC;QACjBA,IAAM,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC;QACvCC,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,UAAU,CAAC,CAAC;;QAE1C,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,EAAE;YAC3B,OAAO;SACV;;;QAGD,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC;;QAE/B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE;YACjC,MAAM,EAAE,CAAC;SACZ;;QAED,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG;YACjB,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,GAAG,MAAM,CAAC;YAC5B,GAAG,GAAG,IAAI;SACb,CAAC;;QAEF,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,EAAE,GAAG,CAAC,CAAC;;QAE5C,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACf,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,IAAI,EAAE,CAAC;SACf;KACJ,CAAA;;IAED,oBAAA,WAAW,yBAAC,CAAC,EAAE;;;QACXA,IAAI,KAAK,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;;QAE/B,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;;QAExC,IAAI,IAAI,CAAC,MAAM,EAAE;YACbD,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;;YAEhC,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,CAAC,CAAC,eAAe,EAAE,CAAC;;YAEpB,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;gBACrB,KAAK,IAAI,iBAAiB,CAAC;aAC9B;;YAED,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,EAAE;gBACjC,KAAK,IAAI,CAAC,CAAC,CAAC;aACf;;YAED,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;gBACpB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;oBACjB,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,OAAO;oBAC/B,KAAK,EAAE,KAAK;oBACZ,aAAa,EAAE,CAAC;oBAChB,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC;oBAC7B,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC;iBAC5B,CAAC,CAAC;aACN;;YAED,IAAI,IAAI,CAAC,UAAU,EAAE;gBACjB,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACjC;;YAED,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,YAAG;gBAC5BQ,MAAI,CAAC,IAAI,EAAE,CAAC;aACf,EAAE,gBAAgB,CAAC,CAAC;SACxB;KACJ,CAAA;;IAED,oBAAA,aAAa,2BAAC,CAAC,EAAE;QACbR,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;;QAE7B,IAAI,CAAC,MAAM,GAAG;YACV,KAAK,EAAE;gBACH,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC;gBAC/B,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC;aAC9B;SACJ,CAAC;QACFA,IAAM,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;;QAErD,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE;YAClC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACtB,MAAM;YACH,CAAC,CAAC,cAAc,EAAE,CAAC;SACtB;KACJ,CAAA;;IAED,oBAAA,WAAW,2BAAG;QACV,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YAClE,OAAO,IAAI,CAAC,MAAM,CAAC;SACtB;KACJ,CAAA;;IAED,oBAAA,cAAc,4BAAC,CAAC,EAAE;QACd,OAAqD,GAAG,IAAI;QAApD,IAAA,KAAK;QAAU,IAAA,KAAK;QAAE,IAAA,OAAO;QAAE,IAAA,YAAY,oBAA7C;QACNA,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAC1BA,IAAM,EAAE,GAAG,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAChEA,IAAM,EAAE,GAAG,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAChEA,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAC9BA,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;;QAE/B,CAAC,CAAC,cAAc,EAAE,CAAC;;QAEnB,KAAK,CAAC,IAAI,GAAG,YAAY,CAAC,kBAAkB,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC;;QAE7E,KAAK,CAAC,EAAE,GAAG,YAAY,CAAC,kBAAkB,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC;;QAE5E,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;;QAEhC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;KACrD,CAAA;;IAED,oBAAA,MAAM,oBAAC,KAAK,EAAE;QACVC,IAAI,KAAK,GAAG,KAAK,CAAC;;QAElB,IAAI,KAAK,YAAY,IAAI,EAAE;YACvB,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SAClD;;QAED,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,oBAAA,MAAM,oBAAC,KAAK,EAAE;QACVD,IAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC;QACxDC,IAAI,KAAK,GAAG,KAAK,CAAC;;QAElB,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,KAAK,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC/B,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;aAC5B,MAAM;gBACH,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aACxC;SACJ;;QAED,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,oBAAA,KAAK,mBAAC,KAAK,EAAE;QACTD,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACvCA,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;;QAEjC,OAAO,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;KACnD,CAAA;;IAED,oBAAA,IAAI,kBAAC,IAAI,EAAE,EAAE,EAAE;QACXA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAQ,MAAM;QAAE,IAAA,OAAO;QAAe,IAAA,MAAM,4BAAtC;QACNC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC3BD,IAAM,aAAa,GAAG,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;;QAEjE,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE;YACzB,KAAK,EAAE,aAAa;SACvB,CAAC,CAAC;QACH,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE;YAC1B,IAAI,EAAE,aAAa;SACtB,CAAC,CAAC;;;QAGH,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;;QAErBA,IAAM,cAAc,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;QACpF,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE;YAC1B,KAAK,EAAE,cAAc;SACxB,CAAC,CAAC;;QAEHC,IAAI,QAAQ,GAAG,OAAO,CAAC,KAAK,GAAG,cAAc,CAAC;QAC9C,IAAI,QAAQ,KAAK,OAAO,CAAC,KAAK,EAAE;YAC5B,QAAQ,IAAI,MAAM,CAAC,KAAK,CAAC;SAC5B;;QAED,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE;YAC1B,IAAI,EAAE,QAAQ;SACjB,CAAC,CAAC;QACH,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE;YAC1B,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,aAAa,GAAG,cAAc,CAAC,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;SACtF,CAAC,CAAC;KACN,CAAA;;IAED,oBAAA,GAAG,iBAAC,IAAI,EAAE,EAAE,EAAE;QACVD,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACrCA,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACrCA,IAAM,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1DA,IAAM,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,SAAS,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;;QAEhE,IAAI,OAAO,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;SACjC;;QAED,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACtC,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KACrC,CAAA;;IAED,oBAAA,MAAM,oBAAC,KAAK,EAAE;QACVA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACrCA,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACrCA,IAAM,IAAI,GAAG,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC;QACrCA,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACvCA,IAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACnCC,IAAI,KAAK,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACnCD,IAAM,QAAQ,GAAG,UAAU,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;;QAEvC,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;SAC7B;;QAED,IAAI,IAAI,KAAK,KAAK,EAAE;YAChB,KAAK,CAAC,IAAI,GAAG,UAAU;gBACnB,UAAU,CAAC,IAAI,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;gBACnC,GAAG,EAAE,GAAG;aACX,CAAC;SACL;;QAED,IAAI,IAAI,KAAK,IAAI,EAAE;YACf,KAAK,CAAC,EAAE,GAAG,UAAU;gBACjB,UAAU,CAAC,EAAE,GAAG,KAAK,EAAE,KAAK,CAAC,IAAI,GAAG,CAAC,EAAE,GAAG,CAAC;gBAC3C,GAAG;gBACH,GAAG;cACL,CAAC;SACN;;QAED,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,IAAI,KAAK,CAAC,EAAE,KAAK,QAAQ,CAAC,EAAE,EAAE;YAC1D,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;YAC/B,OAAO,IAAI,CAAC;SACf;KACJ,CAAA;;IAED,oBAAA,YAAY,0BAAC,YAAY,EAAE;QACvBA,IAAM,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;QACpCA,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC;;QAE9B,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;YAChCD,IAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;;YAErB,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,KAAK,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE;gBACzD,OAAO,IAAI,CAAC;aACf;SACJ;KACJ,CAAA;;IAED,oBAAA,OAAO,qBAAC,IAAI,EAAE,IAAI,EAAE;QAChB,OAAO,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC5D,CAAA;;;EAhgBmBa,4BAigBvB,GAAA;;AAED,SAAS,eAAe,CAAC,CAAC,EAAE;IACxB,CAAC,CAAC,eAAe,EAAE,CAAC;CACvB;;AAED,iBAAiB,CAAC,SAAS,EAAE;IACzB,OAAO,EAAE,IAAI;IACb,UAAU,EAAE;QACR,IAAI,EAAE,MAAM;KACf;IACD,GAAG,EAAE,SAAS;IACd,GAAG,EAAE,SAAS;CACjB,CAAC,CAAC,AAEH,AAAyB;;AC3iBzB,IAAM,OAAO,GAAoB;IAAC;;;;;;;;IAAA,kBAC9B,IAAI,kBAAC,KAAK,EAAE;QACR,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC,EAAE;YAC9E,OAAO;SACV;;QAEDb,IAAM,OAAO,GAAG,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACpEA,IAAM,MAAM,GAAG,KAAK,CAAC,aAAa,EAAE,CAAC;;QAErC,IAAI,MAAM,EAAE;YACR,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtBY,wBAAK,CAAC,IAAI,KAAA,CAAC,MAAA;gBACP,KAAK,EAAE,KAAK;gBACZ,MAAM,EAAE,MAAM;aACjB,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;SACtB,MAAM;YACH,IAAI,CAAC,IAAI,EAAE,CAAC;SACf;KACJ,CAAA;;IAED,kBAAA,IAAI,oBAAG;QACH,OAAO,IAAI,CAAC,QAAQ,CAAC;QACrBA,wBAAK,CAAC,IAAI,KAAA,CAAC,IAAA,CAAC,CAAC;KAChB,CAAA;;;EAvBiB,WAwBrB,GAAA,AAED;;ACzBA,IAAM,aAAa,GAAoB;IAAC,sBACzB,CAAC,QAAQ,EAAE,OAAO,EAAE;QAC3BA,cAAK,KAAA,CAAC,MAAA,QAAQ,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;;QAEtC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,YAAY,CAAC,MAAM,CAAC;KACrD;;;;wDAAA;;IAED,wBAAA,MAAM,oBAAC,MAAM,EAAE,MAAM,EAAE;QACnBZ,IAAM,aAAa,GAAG,IAAI,CAAC,MAAM,EAAE,SAAS,KAAK,EAAE;YAC/CA,IAAM,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC;YACrCA,IAAM,QAAQ,GAAG,OAAO,IAAI,OAAO,CAAC,OAAO,KAAK,KAAK,CAAC;;YAEtD,OAAO,CAAC,QAAQ,CAAC;SACpB,CAAC,CAAC;;QAEH,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1BA,IAAM,KAAK,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;YAC/BA,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;;YAElEA,IAAM,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;;YAE1F,IAAI,CAAC,IAAI,CAAC;gBACN,MAAM,EAAE,MAAM;gBACd,MAAM,EAAE,IAAI;gBACZ,MAAM,EAAE,MAAM;gBACd,QAAQ,EAAE,KAAK,CAAC,QAAQ;gBACxB,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,KAAK,CAAC,QAAQ,CAAC;gBAClF,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM;aAC/B,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SACpB;KACJ,CAAA;;IAED,wBAAA,WAAW,yBAAC,KAAK,EAAE,IAAI,EAAE;QACrBA,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;QACxCA,IAAM,KAAK,GAAG;YACV,UAAU,EAAE,MAAM;YAClB,QAAQ,EAAE,QAAQ;SACrB,CAAC;;QAEF,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;YACxB,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;SAC7B;;QAED,OAAO;YACH,KAAK,EAAE,KAAK;YACZ,KAAK,EAAE,KAAK;SACf,CAAC;KACL,CAAA;;IAED,wBAAA,cAAc,4BAAC,KAAK,EAAE,IAAI,EAAE;QACxBA,IAAM,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;QACzCA,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC;QAC7DA,IAAM,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC;QAC5BA,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QACjCA,IAAM,KAAK,GAAG;YACV,UAAU,EAAE,QAAQ;YACpB,QAAQ,EAAE,QAAQ;SACrB,CAAC;;QAEFC,IAAI,WAAW,CAAC;QAChB,IAAI,QAAQ,EAAE;YACV,WAAW,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;SACnD,MAAM;YACH,WAAW,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;SACnD;;QAED,OAAO;YACH,KAAK,EAAE,WAAW;YAClB,KAAK,EAAE,KAAK;SACf,CAAC;KACL,CAAA;;;EAvEuB,WAwE3B,GAAA;;AAED,iBAAiB,CAAC,aAAa,EAAE;IAC7B,cAAc,EAAE,OAAO;CAC1B,CAAC,CAAC,AAEH;;AC5EA,IAAM,iBAAiB,GAAuB;IAAC;;;;;;;;IAAA,4BAE3C,KAAK,qBAAG;QACJ,OAA0B,GAAG,IAAI;QAAzB,IAAA,OAAO;QAAE,IAAA,OAAO,eAAlB;QACND,IAAM,IAAI,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;;QAE5B,IAAI,IAAI,EAAE;YACN,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;YAC7BA,IAAM,IAAI,GAAG,OAAO,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;;YAEtCA,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,IAAIc,+BAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACxD,SAAS,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC;;YAE9B,OAAO,CAAC,SAAS,CAACA,+BAAI,CAAC,SAAS,EAAE;iBAC7B,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;aACnC,CAAC;SACL,MAAM;YACH,IAAI,CAAC,KAAK,EAAE,CAAC;SAChB;KACJ,CAAA;;IAED,4BAAA,IAAI,kBAAC,GAAG,EAAE;QACNd,IAAM,MAAM,GAAG,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;QAC1DA,IAAM,MAAM,GAAG,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;;QAE1D,IAAI,CAAC,OAAO,CAAC,SAAS,CAACc,+BAAI,CAAC,SAAS,EAAE;aAClC,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC;SACtC,CAAC;KACL,CAAA;;IAED,4BAAA,KAAK,qBAAG;QACJF,oBAAK,CAAC,KAAK,KAAA,CAAC,IAAA,CAAC,CAAC;QACd,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;KAChC,CAAA;;;EAjC2BG,8BAAI,CAAC,SAkCpC,GAAA;;AAED,iBAAiB,CAAC,iBAAiB,EAAE;IACjC,QAAQ,EAAE,0BAA0B;CACvC,CAAC,CAAC;;AAEHA,8BAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,AAE/D;;AC3CA,IAAM,eAAe,GAAuB;IAAC;;;;;;;;IAAA,0BACzC,KAAK,qBAAG;QACJf,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,SAAS,CAACc,+BAAI,CAAC,SAAS,EAAE;aAClC,KAAK,CAAC,WAAW,EAAE,WAAW,EAAE,MAAM,CAAC;SAC3C,CAAC;KACL,CAAA;;IAED,0BAAA,IAAI,kBAAC,GAAG,EAAE;QACN,IAAI,CAAC,OAAO,CAAC,SAAS,CAACA,+BAAI,CAAC,SAAS,EAAE;aAClC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC;SAChC,CAAC;KACL,CAAA;;;EAZyBC,8BAAI,CAAC,SAalC,GAAA;;AAED,iBAAiB,CAAC,eAAe,EAAE;IAC/B,MAAM,EAAE,gBAAgB;CAC3B,CAAC,CAAC;;AAEHA,8BAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC,AAEhE;;ACrBA,IAAM,eAAe,GAAuB;IAAC;;;;;;;;IAAA,0BACzC,KAAK,qBAAG;QACJ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;KAC3B,CAAA;;IAED,0BAAA,IAAI,kBAAC,GAAG,EAAE;QACN,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;KAC3C,CAAA;;;EARyBA,8BAAI,CAAC,SASlC,GAAA;;AAED,iBAAiB,CAAC,eAAe,EAAE;IAC/B,QAAQ,EAAE,GAAG;IACb,MAAM,EAAE,QAAQ;CACnB,CAAC,CAAC;;AAEHA,8BAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC,AAEhE;;AClBA,IAAM,YAAY,GAAuB;IAAC;;;;;;;;IAAA,uBACtC,KAAK,qBAAG;QACJ,IAAI,CAAC,OAAO,CAAC,SAAS,CAACD,+BAAI,CAAC,SAAS,EAAE;aAClC,KAAK,CAAC,WAAW,EAAE,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;SACxD,CAAC;KACL,CAAA;;IAED,uBAAA,IAAI,kBAAC,GAAG,EAAE;QACN,IAAI,CAAC,OAAO,CAAC,SAAS,CAACA,+BAAI,CAAC,SAAS,EAAE;aAClC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;SACxC,CAAC;KACL,CAAA;;;EAXsBC,8BAAI,CAAC,SAY/B,GAAA;;AAED,iBAAiB,CAAC,YAAY,EAAE;IAC5B,MAAM,EAAE,gBAAgB;IACxB,QAAQ,EAAE,0BAA0B;CACvC,CAAC,CAAC;;AAEHA,8BAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC,AAE1D;;AChBA,IAAM,gBAAgB,GAAqB;IAAC;;;;;;;;IAAA,2BACxC,MAAM,sBAAG;QACLH,yBAAK,CAAC,MAAM,KAAA,CAAC,IAAA,CAAC,CAAC;;QAEf,IAAI,CAAC,cAAc,EAAE,CAAC;KACzB,CAAA;;IAED,2BAAA,aAAa,2BAAC,UAAU,EAAE,aAAa,EAAE,QAAQ,EAAE;QAC/CZ,IAAM,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC;QAClCC,IAAI,SAAS,CAAC;;QAEd,IAAI,KAAK,KAAK,MAAM,EAAE;YAClB,SAAS,GAAG,aAAa,CAAC;SAC7B,MAAM;YACH,SAAS,GAAG,WAAW,CAAC;SAC3B;;QAED,OAAO,IAAI,SAAS,CAAC,UAAU,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;KAC7D,CAAA;;IAED,2BAAA,eAAe,+BAAG;QACdD,IAAM,MAAM,GAAGY,yBAAK,CAAC,eAAe,KAAA,CAAC,IAAA,CAAC,CAAC;QACvC,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACxC,CAAA;;IAED,2BAAA,kBAAkB,gCAAC,KAAK,EAAE,aAAa,EAAE;QACrC,IAAI,aAAa,KAAK,IAAI,EAAE;YACxBZ,IAAM,YAAY,GAAG;gBACjB,CAAC,EAAE,KAAK,CAAC,CAAC;gBACV,CAAC,EAAE,KAAK,CAAC,CAAC;aACb,CAAC;YACF,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE;gBAC3B,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC;aACtB;YACD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE;gBAC3B,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC;aACtB;YACD,OAAO,YAAY,CAAC;SACvB;KACJ,CAAA;;;EAvC0B,YAwC9B,GAAA;;AAED,UAAU,CAAC,gBAAgB,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC,AAEvD;;ACpCA,IAAM,UAAU,GAAqB;IAAC;;;;;;;;IAAA,qBAClC,UAAU,0BAAG;QACT,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;;QAErB,IAAI,CAAC,iBAAiB,GAAG,IAAI,qBAAqB,EAAE,CAAC;QACrD,IAAI,CAAC,iBAAiB,GAAG,IAAI,qBAAqB,EAAE,CAAC;KACxD,CAAA;;IAED,qBAAA,MAAM,oBAAC,KAAkB,EAAE;0BAAf;qCAAA,GAAG,IAAI,CAAC,KAAK;;QACrBA,IAAM,YAAY,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;;QAE9C,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnCD,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACtBA,IAAM,UAAU,GAAG,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,SAAS,CAAC,IAAI,EAAE,CAAC;YACtEQ,MAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;YAC7BR,IAAM,cAAc,GAAGQ,MAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;;YAE5D,IAAI,CAAC,cAAc,EAAE;gBACjB,SAAS;aACZ;;YAEDA,MAAI,CAAC,kBAAkB;gBACnB,kBAAkB,CAAC,cAAc,EAAE,OAAO,CAAC;gBAC3C,IAAI;aACP,CAAC;;YAEFA,MAAI,CAAC,sBAAsB;gBACvB,kBAAkB,CAAC,cAAc,EAAE,YAAY,CAAC;gBAChD,IAAI;aACP,CAAC;;YAEFA,MAAI,CAAC,iBAAiB;gBAClB,kBAAkB,CAAC,cAAc,EAAE,MAAM,CAAC;gBAC1C,IAAI;aACP,CAAC;SACL;;QAED,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;KAC1B,CAAA;;IAED,qBAAA,WAAW,yBAAC,KAAK,EAAE,IAAI,EAAE;QACrB,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACjD,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;;QAEjDI,yBAAK,CAAC,WAAW,KAAA,CAAC,MAAA,KAAK,EAAE,IAAI,CAAC,CAAC;KAClC,CAAA;;IAED,qBAAA,UAAU,wBAAC,IAAI,EAAE;QACbZ,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;;QAEnCY,yBAAK,CAAC,UAAU,KAAA,CAAC,MAAA,IAAI,CAAC,CAAC;;QAEvB,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;YACvB,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YACvC,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;SACpC,MAAM;YACH,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YACvC,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;SACpC;;QAED,IAAI,IAAI,KAAK,IAAI,CAAC,KAAK,EAAE;YACrB,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;;QAED,IAAI,IAAI,KAAK,IAAI,CAAC,KAAK,EAAE;YACrB,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;KACJ,CAAA;;;IAGD,qBAAA,cAAc,4BAAC,MAAM,EAAE;QACnBZ,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC;QAC/BA,IAAM,YAAY,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC9CA,IAAM,KAAK,GAAG,IAAI,CAAC,YAAY,EAAE,SAAS,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAClFA,IAAM,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC;QAC/BA,IAAM,YAAY,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC9CA,IAAM,KAAK,GAAG,IAAI,CAAC,YAAY,EAAE,SAAS,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAClFA,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE,EAAE,CAAC;QACtCA,IAAM,eAAe,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,SAAS,CAAC;QACnDA,IAAM,QAAQ,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,IAAI,IAAI,eAAe,CAAC;;QAE7E,OAAO,QAAQ,CAAC;KACnB,CAAA;;IAED,qBAAA,kBAAkB,gCAAC,MAAM,EAAE,IAAI,EAAE;QAC7B,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACnB,IAAI,CAAC,WAAW;gBACZ,IAAI,YAAY,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACnE,IAAI;aACP,CAAC;SACL;KACJ,CAAA;;IAED,qBAAA,sBAAsB,oCAAC,MAAM,EAAE,IAAI,EAAE;QACjC,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACnB,IAAI,CAAC,WAAW;gBACZ,IAAI,gBAAgB,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACvE,IAAI;aACP,CAAC;SACL;KACJ,CAAA;;IAED,qBAAA,iBAAiB,+BAAC,MAAM,EAAE,IAAI,EAAE;QAC5B,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACnB,IAAI,CAAC,WAAW;gBACZ,IAAI,WAAW,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBAClE,IAAI;aACP,CAAC;SACL;KACJ,CAAA;;IAED,qBAAA,YAAY,0BAAC,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE;QACvCA,IAAM,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC;QAC9BA,IAAM,SAAS,GAAG,QAAQ,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAC/DA,IAAM,OAAO,GAAG,QAAQ,GAAG,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAC3EA,IAAM,WAAW,GAAG,UAAU,CAAC,EAAE,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;QACpEA,IAAM,KAAK,GAAG,gBAAgB,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QAC9DA,IAAM,YAAY,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;QACrCA,IAAM,gBAAgB,GAAG,KAAK,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;QAC3EA,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,YAAY,IAAI,gBAAgB,CAAC;QAC1EA,IAAM,WAAW,GAAG,EAAE,WAAW,CAAC,GAAG,EAAE,WAAW,CAAC,GAAG,EAAE,CAAC;QACzDA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;;QAE3B,KAAKC,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE;YACzDD,IAAM,aAAa,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;YACvCA,IAAM,cAAc,GAAG,aAAa,CAAC,QAAQ,GAAG,OAAO,GAAG,OAAO,CAAC,CAAC;YACnE,IAAI,CAAC,cAAc,KAAK,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;gBAC/EA,IAAM,eAAe,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC;gBACrF,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;;gBAExD,MAAM;aACT;SACJ;;QAED,IAAI,SAAS,KAAK,CAAC,IAAI,YAAY,EAAE;YACjC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC;YAClD,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC;SACrD;;QAEDC,IAAI,YAAY,CAAC;;QAEjB,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,IAAI,WAAW,CAAC,CAAC,CAAC,YAAY,IAAI,EAAE;gBAChC,YAAY,GAAG,IAAI,CAAC;gBACpB,MAAM;aACT;SACJ;;QAEDA,IAAI,QAAQ,CAAC;QACb,IAAI,gBAAgB,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,IAAI,IAAI,YAAY,CAAC,EAAE;YACjF,QAAQ,GAAG,aAAa,CAAC;SAC5B,MAAM,IAAI,KAAK,EAAE;YACd,QAAQ,GAAG,eAAe,CAAC;SAC9B,MAAM;YACH,QAAQ,GAAG,WAAW,CAAC;SAC1B;;QAEDD,IAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAChF,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;;QAE3B,IAAI,QAAQ,EAAE;YACV,IAAI,SAAS,CAAC,QAAQ,CAAC,EAAE;gBACrB,MAAM,IAAI,KAAK,CAAC,CAAA,CAAI,QAAQ,GAAG,GAAG,GAAG,GAAG,CAAA,qBAAkB,GAAG,QAAQ,wBAAqB,CAAC,CAAC,CAAC;aAChG;YACD,SAAS,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;SAC9B;;QAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;;QAEtB,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,qBAAA,UAAU,wBAAC,KAAK,EAAE;;;QACdA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,YAAY,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC9CA,IAAM,KAAK,GAAG,EAAE,CAAC;QACjBA,IAAM,YAAY,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC9CA,IAAM,KAAK,GAAG,EAAE,CAAC;;QAEjB,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,YAAY,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YAChDD,IAAM,QAAQ,GAAGQ,MAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;YACvD,IAAI,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE;gBAC1B,KAAK,CAAC,IAAI,CAACA,MAAI,CAAC,YAAY,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;aAChE;SACJ;;QAED,KAAKP,IAAIe,KAAG,GAAG,CAAC,EAAEA,KAAG,GAAG,YAAY,CAAC,MAAM,EAAEA,KAAG,EAAE,EAAE;YAChDhB,IAAMuC,UAAQ,GAAG/B,MAAI,CAAC,QAAQ,CAAC,YAAY,CAACQ,KAAG,CAAC,CAAC,IAAI,CAAC,CAAC;YACvD,IAAI,OAAO,CAACuB,UAAQ,EAAE,KAAK,CAAC,EAAE;gBAC1B,KAAK,CAAC,IAAI,CAAC/B,MAAI,CAAC,YAAY,CAAC,YAAY,CAACQ,KAAG,CAAC,EAAE,IAAI,EAAEA,KAAG,CAAC,CAAC,CAAC;aAC/D;SACJ;;QAED,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QACpC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;KACvC,CAAA;;IAED,qBAAA,cAAc,4BAAC,KAAK,EAAE,CAAC,EAAE,SAAS,EAAE;QAChChB,IAAM,MAAM,GAAG,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAC1CA,IAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;QAC5CA,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QAC1BA,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAC9BA,IAAM,OAAO,GAAG,EAAE,CAAC;QACnBA,IAAM,OAAO,GAAG,EAAE,CAAC;;QAEnB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7BD,IAAM,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YACxBA,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,OAAO,GAAG,OAAO,CAAC;YACzDA,IAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC1C,IAAI,YAAY,KAAK,IAAI,EAAE;gBACvB,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aAC7B;SACJ;;QAED,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1C,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE;gBACrB,OAAO,EAAE,YAAY,CAAC,CAAC,CAAC;gBACxB,aAAa,EAAE,CAAC;gBAChB,CAAC,EAAE,iBAAiB,CAAC,OAAO,CAAC;gBAC7B,CAAC,EAAE,iBAAiB,CAAC,OAAO,CAAC;aAChC,CAAC,CAAC;SACN;KACJ,CAAA;;IAED,qBAAA,iBAAiB,+BAAC,IAAI,EAAE,OAAO,EAAE;QAC7BA,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACvCA,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxCA,IAAM,KAAK,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACzDA,IAAM,WAAW,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAC3F,UAAU,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;KACpC,CAAA;;;EAxOoB,YAyOxB,GAAA;;AAED,iBAAiB,CAAC,UAAU,EAAE;IAC1B,KAAK,EAAE,EAAE;IACT,KAAK,EAAE,EAAE;CACZ,CAAC,CAAC;;AAEH,UAAU,CAAC,UAAU,CAAC,SAAS,EAAE,mBAAmB,CAAC,CAAC,AAEtD;;ACzPA,IAAM,UAAU,GAAqB;IAAC,mBACvB,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE;QAChCY,eAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;;QAEf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACxB;;;;kDAAA;;IAED,qBAAA,MAAM,sBAAG;QACLZ,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACnCA,IAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;QAC7CC,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;;QAE3B,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,EAAE;YAC1C,OAAO;SACV;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;;QAEtBD,IAAM,aAAa,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;QAC1C,IAAI,aAAa,EAAE;YACf,SAAS,GAAG,aAAa,CAAC;gBACtB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,UAAU,EAAE,IAAI,CAAC,UAAU;aAC9B,CAAC,CAAC;SACN,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE;YACtB,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;SAClE;;QAED,IAAI,MAAM,CAAC,OAAO,IAAI,SAAS,EAAE;YAC7B,IAAI,MAAM,CAAC,QAAQ,KAAK,MAAM,IAAI,MAAM,CAAC,QAAQ,KAAK,UAAU,EAAE;gBAC9D,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;oBACfA,IAAM,eAAe,GAAG,IAAI2B,4BAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,cAAc,EAAE,CAAC;oBACvE,IAAI,eAAe,GAAG,GAAG,EAAE;wBACvB,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;qBACxB,MAAM;wBACH,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;qBACxB;iBACJ;gBACD,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;oBACpB,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;iBAC1C;aACJ,MAAM;gBACH3B,IAAM,WAAW,GAAG,YAAY,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC;gBAC7D,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,WAAW,CAAC,KAAK,CAAC;gBACjD,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,IAAI,WAAW,CAAC,UAAU,CAAC;aACnE;;;YAGD,IAAI,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,EAAE,EAAE,MAAM,EAAE;gBACvD,KAAK,EAAE,MAAM;gBACb,MAAM,EAAE,EAAE;gBACV,SAAS,EAAE;oBACP,IAAI,EAAE,MAAM;oBACZ,KAAK,EAAE,IAAI,CAAC,cAAc;iBAC7B;aACJ,CAAC,CAAC,CAAC;;YAEJ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC3B;KACJ,CAAA;;IAED,qBAAA,MAAM,oBAAC,SAAS,EAAE;QACd,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;QACrB,IAAI,CAAC,WAAW,EAAE,CAAC;KACtB,CAAA;;IAED,qBAAA,WAAW,2BAAG;QACV,OAAmD,GAAG,IAAI;QAA/B,IAAA,aAAa;QAAI,IAAA,KAAK,aAA3C;QACNA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QACnCA,IAAM,cAAc,GAAG,aAAa,CAAC,QAAQ,CAAC;QAC9CA,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;;QAE9B,IAAI,KAAK,EAAE;YACPA,IAAM,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;YACvCA,IAAM,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;YACrCC,IAAI,EAAE,CAAC;;YAEP,IAAI,aAAa,CAAC,QAAQ,KAAK,MAAM,EAAE;gBACnC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC;gBAC1E,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACzB,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,WAAW,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;aACnE,MAAM,IAAI,aAAa,CAAC,QAAQ,KAAK,UAAU,EAAE;gBAC9C,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,WAAW,GAAG,CAAC,CAAC;gBAChD,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACzB,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,WAAW,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;aACnE,MAAM;gBACHA,IAAI,EAAE,CAAC;gBACP,EAAE,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACxD,IAAI,EAAE,CAAC,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE;oBACzB,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,UAAU,CAAC;oBACvB,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC;iBAC7B,MAAM;oBACH,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,UAAU,CAAC;oBACvB,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;iBAC5B;gBACD,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,WAAW,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;aAC7D;SACJ;KACJ,CAAA;;IAED,qBAAA,YAAY,4BAAG;;;QACX,OAAyB,GAAG,IAAI;QAAxB,IAAA,MAAM;QAAE,IAAA,OAAO,eAAjB;;QAENW,yBAAK,CAAC,YAAY,KAAA,CAAC,IAAA,CAAC,CAAC;;QAErB,IAAI,IAAI,CAAC,KAAK,EAAE;YACZ,IAAI,OAAO,CAAC,MAAM,EAAE;gBAChBZ,IAAM,UAAU,GAAG,CAAC,MAAM,CAAC,UAAU,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;gBACnDA,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;oBAC1B,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,MAAM,EAAE,IAAI,CAAC,MAAM;oBACnB,UAAU,EAAE,IAAI,CAAC,UAAU;oBAC3B,MAAM,EAAE,IAAIc,+BAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;oBACxD,MAAM,EAAE,MAAM,CAAC,MAAM;oBACrB,WAAW,EAAE,MAAM,CAAC,WAAW;oBAC/B,UAAU,EAAE,UAAU;oBACtB,QAAQ,EAAE,UAAU,GAAG,MAAM,CAAC,KAAK;oBACnC,OAAO,EAAE,OAAO;oBAChB,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE;oBACxB,YAAY,EAAE,YAAG;wBACbd,IAAM,KAAK,GAAG,IAAIe,8BAAI,CAAC,KAAK,EAAE,CAAC;wBAC/BP,MAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;;wBAEhC,OAAO,KAAK,CAAC;qBAChB;iBACJ,CAAC,CAAC;;gBAEH,IAAI,MAAM,EAAE;oBACR,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;iBAC9B;aACJ,MAAM;gBACH,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACzC;SACJ;KACJ,CAAA;;IAED,qBAAA,mBAAmB,iCAAC,KAAK,EAAE;QACvB,OAAyB,GAAG,IAAI;QAAxB,IAAA,MAAM;QAAE,IAAA,OAAO,eAAjB;QACNR,IAAM,aAAa,GAAG,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC;QAC3CA,IAAM,MAAM,GAAG,aAAa,CAAC,KAAK,GAAG,CAAC,GAAG;YACrC,MAAM,EAAE;gBACJ,KAAK,EAAE,aAAa,CAAC,KAAK;gBAC1B,KAAK,EAAE,aAAa,CAAC,KAAK;gBAC1B,OAAO,EAAE,aAAa,CAAC,OAAO;gBAC9B,QAAQ,EAAE,aAAa,CAAC,QAAQ;aACnC;SACJ,GAAG,EAAE,CAAC;QACPA,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC5BA,IAAM,IAAI,GAAG;YACT,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,OAAO,CAAC,OAAO;SAC3B,CAAC;QACFA,IAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,UAAU,CAAC;YACjD,IAAI,EAAE,IAAI;YACV,MAAM,EAAE;gBACJ,OAAO,EAAE,OAAO,CAAC,OAAO;aAC3B;YACD,MAAM,EAAE,OAAO,CAAC,MAAM;SACzB,EAAE,MAAM,CAAC,CAAC,CAAC;;QAEZ,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;;QAErB,IAAI,kBAAkB,CAAC,OAAO,CAAC,EAAE;YAC7B,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE;gBAC5C,SAAS,EAAE,KAAK;gBAChB,YAAY,EAAE,IAAI;aACrB,EAAE,UAAU,CAAC;gBACV,MAAM,EAAE,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE;gBAC5C,WAAW,EAAE,MAAM,CAAC,WAAW;gBAC/B,MAAM,EAAE,MAAM,CAAC,MAAM;gBACrB,SAAS,EAAE,IAAI;aAClB,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SACzB;KACJ,CAAA;;IAED,qBAAA,aAAa,2BAAC,MAAM,EAAE,OAAO,EAAE;QAC3B,IAAI,OAAO,CAAC,aAAa,EAAE;YACvB,OAAO,IAAIe,8BAAI,CAAC,MAAM,CAAC,IAAID,+BAAI,CAAC,MAAM,CAAC,IAAIA,+BAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC,CAAC;SACrH;;QAED,OAAO,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;KAC3D,CAAA;;IAED,qBAAA,eAAe,+BAAG;QACd,OAAqC,GAAG,IAAI;QAApC,IAAA,OAAO;QAAY,IAAA,MAAM,qBAA3B;;QAEN,UAAU,CAAC,OAAO,EAAE;YAChB,SAAS,EAAE;gBACP,MAAM,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE;gBAC9B,KAAK,EAAE,IAAI,CAAC,cAAc;aAC7B;SACJ,CAAC,CAAC;;QAEHF,yBAAK,CAAC,eAAe,KAAA,CAAC,IAAA,CAAC,CAAC;KAC3B,CAAA;;IAED,qBAAA,eAAe,6BAAC,OAAO,EAAE;QACrBZ,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,EAAE,CAAC;QAC/CA,IAAM,MAAM,GAAG,SAAS,CAAC,MAAM,IAAI,EAAE,CAAC;;QAEtC,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC,EAAE,EAAE,OAAO,EAAE;YAC3D,IAAI,EAAE;gBACF,KAAK,EAAE,SAAS,CAAC,KAAK;gBACtB,OAAO,EAAE,SAAS,CAAC,OAAO;aAC7B;YACD,MAAM,EAAE;gBACJ,OAAO,EAAE,MAAM,CAAC,OAAO;gBACvB,KAAK,EAAE,MAAM,CAAC,KAAK;gBACnB,KAAK,EAAE,MAAM,CAAC,KAAK;aACtB;SACJ,CAAC,CAAC,CAAC;KACP,CAAA;;IAED,qBAAA,eAAe,+BAAG;QACd,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;KAClC,CAAA;;IAED,qBAAA,mBAAmB,mCAAG;QAClBA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;;QAE3B,OAAO;YACH,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,MAAM,EAAE,MAAM,CAAC,MAAM;YACrB,WAAW,EAAE,MAAM,CAAC,WAAW;YAC/B,MAAM,EAAE,IAAIc,+BAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YACxD,UAAU,EAAE,MAAM,CAAC,UAAU;YAC7B,QAAQ,EAAE,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU;YAC1C,MAAM,EAAE,IAAI,CAAC,MAAM;SACtB,CAAC;KACL,CAAA;;IAED,qBAAA,aAAa,6BAAG;QACZd,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAC1DA,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QACjCA,IAAM,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;;QAExC,OAAO;YACH,KAAK,EAAE,QAAQ;YACf,KAAK,EAAE,gBAAgB,CAAC,QAAQ,GAAG,GAAG,CAAC;SAC1C,CAAC;KACL,CAAA;;IAED,qBAAA,WAAW,yBAAC,MAAM,EAAE;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;KACpD,CAAA;;;EA1PoB,YA2PxB,GAAA;;AAEDA,IAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,iBAAiB,CAAC,CAAC;AACjDA,IAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,iBAAiB,CAAC,CAAC;;AAEjD,SAAS,gBAAgB,CAAC,KAAK,EAAE;IAC7BA,IAAM,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;IAC3BA,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,iBAAiB,CAAC,CAAC;IACzDA,IAAM,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,iBAAiB,CAAC,CAAC;;;IAG3DC,IAAI,UAAU,CAAC;IACf,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,MAAM,EAAE;QACzB,UAAU,GAAG,MAAM,CAAC;KACvB,MAAM,IAAI,MAAM,GAAG,CAAC,EAAE;QACnB,UAAU,GAAG,KAAK,CAAC;KACtB,MAAM;QACH,UAAU,GAAG,IAAI,CAAC;KACrB;;IAEDA,IAAI,QAAQ,CAAC;IACb,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,MAAM,EAAE;QACzB,QAAQ,GAAG,MAAM,CAAC;KACrB,MAAM,IAAI,IAAI,GAAG,CAAC,EAAE;QACjB,QAAQ,GAAG,MAAM,CAAC;KACrB,MAAM;QACH,QAAQ,GAAG,GAAG,CAAC;KAClB;;IAED,OAAO;QACH,UAAU,EAAE,UAAU;QACtB,QAAQ,EAAE,QAAQ;KACrB,CAAC;CACL;;AAED,iBAAiB,CAAC,UAAU,EAAE;IAC1B,KAAK,EAAE,KAAK;IACZ,OAAO,EAAE;QACL,QAAQ,EAAE,cAAc;KAC3B;IACD,MAAM,EAAE;QACJ,KAAK,EAAE,GAAG;KACb;IACD,MAAM,EAAE;QACJ,OAAO,EAAE,KAAK;QACd,QAAQ,EAAE,EAAE;QACZ,IAAI,EAAE,YAAY;QAClB,MAAM,EAAE,UAAU,CAAC,GAAG,CAAC;QACvB,KAAK,EAAE,MAAM;QACb,MAAM,EAAE,CAAC;QACT,QAAQ,EAAE,WAAW;KACxB;IACD,SAAS,EAAE;QACP,IAAI,EAAE,GAAG;KACZ;IACD,SAAS,EAAE;QACP,OAAO,EAAE,IAAI;QACb,MAAM,EAAE;YACJ,KAAK,EAAE,CAAC;SACX;KACJ;IACD,OAAO,EAAE,IAAI;CAChB,CAAC,CAAC;;AAEH,UAAU,CAAC,UAAU,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC,AAEnD;;ACvUAD,IAAM,aAAa,GAAG;IAClB,gBAAgB,EAAE,SAAS,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE;QAC9CA,IAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC;QAChDA,IAAM,aAAa,GAAG,aAAa,CAAC,MAAM,IAAI,EAAE,CAAC;QACjDA,IAAM,aAAa,GAAG,aAAa,CAAC,aAAa,IAAI,EAAE,CAAC;QACxDA,IAAM,mBAAmB,GAAG,aAAa,CAAC,MAAM,IAAI,EAAE,CAAC;;QAEvD,IAAI,OAAO,IAAI,OAAO,CAAC,eAAe,KAAK,KAAK,EAAE;YAC9CA,IAAM,YAAY,GAAG,OAAO,CAAC,OAAO,KAAK,KAAK,CAAC;YAC/CA,IAAM,aAAa,GAAG,YAAY,GAAG,WAAW,CAAC,aAAa,CAAC;gBAC3D,WAAW,CAAC,mBAAmB,CAAC,IAAI,WAAW,CAAC,aAAa,CAAC,CAAC;YACnEC,IAAI,IAAI,GAAG,OAAO,CAAC,QAAQ,IAAI,EAAE,CAAC;;YAElC,IAAI,aAAa,EAAE;gBACf,IAAI,GAAG,aAAa,CAAC;oBACjB,IAAI,EAAE,IAAI;oBACV,MAAM,EAAE,OAAO,CAAC,MAAM;oBACtB,QAAQ,EAAE,OAAO,CAAC,QAAQ;oBAC1B,UAAU,EAAE,OAAO,CAAC,UAAU;oBAC9B,KAAK,EAAE,KAAK;iBACf,CAAC,CAAC;aACN;;YAEDA,IAAI,gBAAgB,EAAE,WAAW,CAAC;YAClC,IAAI,YAAY,EAAE;gBACd,gBAAgB,GAAG,EAAE,CAAC;gBACtB,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC;aAC7B,MAAM;gBACH,gBAAgB,GAAG;oBACf,KAAK,EAAE,mBAAmB,CAAC,KAAK;oBAChC,IAAI,EAAE,mBAAmB,CAAC,IAAI;iBACjC,CAAC;gBACF,WAAW,GAAG,CAAC,aAAa,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC;aACrD;;YAED,IAAI,IAAI,EAAE;gBACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;oBAClB,UAAU,EAAE,OAAO,CAAC,KAAK;oBACzB,IAAI,EAAE,IAAI;oBACV,MAAM,EAAE,OAAO,CAAC,MAAM;oBACtB,WAAW,EAAE,WAAW;oBACxB,MAAM,EAAE,gBAAgB;iBAC3B,CAAC,CAAC;aACN;SACJ;KACJ;CACJ,CAAC,AAEF;;AChDe,SAAS,cAAc,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE;IAC1DD,IAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;IAC/B,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;QAClB,OAAO,OAAO,CAAC;KAClB;;IAEDA,IAAM,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;IAC/C,IAAI,eAAe,EAAE;QACjB,OAAO,eAAe,CAAC,KAAK,CAAC,CAAC;KACjC;CACJ;;ACPc,SAAS,WAAW,CAAC,MAAM,EAAE;IACxCA,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;IACzBC,IAAI,GAAG,GAAG,CAAC,CAAC;;IAEZ,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAClCD,IAAM,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAC5DC,IAAI,KAAK,GAAG,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC;;QAExC,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;YACjB,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;SAC7B;;QAEDD,IAAM,OAAO,GAAG,cAAc,CAAC,MAAM,EAAE,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAC5D,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,OAAO,KAAK,KAAK,EAAE;YACtC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAC1B;KACJ;;IAED,OAAO,GAAG,CAAC;CACd;;ACTDA,IAAM,qBAAqB,GAAG,EAAE,CAAC;;AAEjC,IAAM,QAAQ,GAAqB;IAAC,iBACrB,CAAC,QAAQ,EAAE,OAAO,EAAE;QAC3BY,eAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;;QAEf,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC;QAC1C,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,MAAM,EAAE,CAAC;KACjB;;;;8CAAA;;IAED,mBAAA,MAAM,sBAAG;QACL,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACrD,CAAA;;IAED,mBAAA,kBAAkB,gCAAC,QAAQ,EAAE;;;QACzB,OAA+D,GAAG,IAAI;QAA9D,IAAA,OAAO;QAAwC,oGAAA,EAAE,CAAnD;QACNZ,IAAM,WAAW,GAAG,YAAY,CAAC,MAAM,CAAC;QACxCA,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAC9BA,IAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC;;QAElC,KAAKC,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,WAAW,EAAE,QAAQ,EAAE,EAAE;YACvDD,IAAM,aAAa,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;YACvCA,IAAM,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC;YAChCA,IAAM,KAAK,GAAG,WAAW,CAAC,aAAa,CAAC,CAAC;YACzCA,IAAM,aAAa,GAAG,GAAG,GAAG,KAAK,CAAC;YAClCC,IAAI,YAAY,WAAA,CAAC;;YAEjB,IAAI,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE;gBACnC,YAAY,GAAG,aAAa,CAAC,UAAU,CAAC;aAC3C,MAAM;gBACH,YAAY,GAAG,OAAO,CAAC,UAAU,CAAC;aACrC;;YAED,IAAI,QAAQ,KAAK,WAAW,GAAG,CAAC,EAAE;gBAC9B,IAAI,aAAa,CAAC,MAAM,CAAC,QAAQ,KAAK,WAAW,EAAE;oBAC/C,aAAa,CAAC,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC;iBAC1C;aACJ;;YAED,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAClCD,IAAM,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;gBACnEA,IAAM,KAAK,GAAG,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC;gBAC1CA,IAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAClCA,IAAM,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;gBAChCA,IAAM,KAAK,GAAG,SAAS,GAAG,aAAa,CAAC;gBACxCA,IAAM,OAAO,GAAG,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;;gBAE7D,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;oBAClC,aAAa,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,YAAY,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC;iBACvE;;gBAEDC,IAAI,OAAO,GAAG,cAAc,CAAC,aAAa,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;;gBAEvD,QAAQ,CAAC,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,KAAK,CAAC,EAAE;oBACvD,KAAK,EAAEO,MAAI;oBACX,QAAQ,EAAE,MAAM,CAAC,QAAQ,IAAI,EAAE;oBAC/B,KAAK,EAAE,CAAC;oBACR,MAAM,EAAE,aAAa;oBACrB,QAAQ,EAAE,QAAQ;oBAClB,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC;oBACjB,UAAU,EAAE,KAAK,KAAK,CAAC,GAAG,SAAS,GAAG,KAAK,GAAG,CAAC;oBAC/C,OAAO,EAAE,OAAO;oBAChB,eAAe,EAAE,MAAM,CAAC,eAAe;oBACvC,OAAO,EAAE,OAAO;oBAChB,MAAM,EAAE,WAAW,GAAG,QAAQ;oBAC9B,cAAc,EAAEA,MAAI,CAAC,cAAc,CAAC,CAAC,EAAE,QAAQ,EAAE,WAAW,CAAC;iBAChE,CAAC,CAAC;;gBAEH,IAAI,OAAO,KAAK,KAAK,EAAE;oBACnB,YAAY,IAAI,KAAK,CAAC;iBACzB;aACJ;SACJ;KACJ,CAAA;;IAED,mBAAA,kBAAkB,gCAAC,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE;QACvCR,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;;QAE7B,WAAW,CAAC,OAAO,EAAE;YACjB,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE,MAAM,CAAC,QAAQ;YACzB,QAAQ,EAAE,MAAM,CAAC,QAAQ;YACzB,UAAU,EAAE,MAAM,CAAC,UAAU;SAChC,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,SAAS,EAAE,QAAQ,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;KACvG,CAAA;;IAED,mBAAA,QAAQ,sBAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE;QAC5BA,IAAM,cAAc,GAAG,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;QAC9E,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;;QAEvD,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,cAAc,EAAE,MAAM,CAAC,CAAC;;QAErD,IAAI,MAAM,CAAC,OAAO,KAAK,KAAK,EAAE;YAC1B,OAAO;SACV;;QAEDA,IAAM,OAAO,GAAG,IAAI,UAAU,CAAC,KAAK,EAAE,MAAM,EAAE,cAAc,CAAC,CAAC;QAC9D,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC7B,CAAA;;IAED,mBAAA,MAAM,oBAAC,SAAS,EAAE;QACd,OAA6C,GAAG,IAAI;QAA5C,IAAA,OAAO;QAAE,IAAA,MAAM;QAAkB,uFAAA,EAAE,CAArC;QACNA,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5BA,IAAM,GAAG,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;QAC9BA,IAAM,KAAK,GAAG,CAAC,CAAC;QAChBA,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;QACrDA,IAAM,YAAY,GAAG,QAAQ,GAAG,CAAC,CAAC;QAClCA,IAAM,cAAc,GAAG,QAAQ,GAAG,QAAQ,GAAG,IAAI,CAAC;QAClDA,IAAM,MAAM,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,QAAQ,EAAE,GAAG,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC;QAC7EA,IAAM,YAAY,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QACrCA,IAAM,SAAS,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC;QAC/BA,IAAM,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;QAC1CA,IAAM,cAAc,GAAG,EAAE,CAAC;QAC1BA,IAAM,eAAe,GAAG,EAAE,CAAC;QAC3BC,IAAI,OAAO,GAAG,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;;QAE9D,OAAO,GAAG,OAAO,GAAG,YAAY,GAAG,KAAK,GAAG,YAAY,GAAG,KAAK,GAAG,OAAO,CAAC;QAC1E,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;;QAE7ED,IAAM,MAAM,GAAG,YAAY,GAAG,OAAO,CAAC;QACtCA,IAAM,MAAM,GAAG,IAAI,KAAK;YACpB,MAAM,GAAG,MAAM,CAAC,EAAE,GAAG,OAAO;YAC5B,MAAM,GAAG,MAAM,CAAC,EAAE,GAAG,OAAO;SAC/B,CAAC;;QAEF,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC5BD,IAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YAC1BA,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;YAC9BA,IAAM,WAAW,GAAG,OAAO,CAAC,QAAQ,CAAC;YACrC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;YACvB,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;;YAEvB,IAAI,aAAa,CAAC,MAAM,EAAE;gBACtBA,IAAM,YAAY,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC;gBAChD,MAAM,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;gBAC9C,MAAM,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC;aACvC;;YAED,IAAI,WAAW,KAAK,WAAW,GAAG,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE;gBACpD,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;aACzF;;YAED,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;;YAEvBA,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;YAC5B,IAAI,KAAK,EAAE;gBACP,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,KAAK,WAAW,EAAE;oBACxC,IAAI,WAAW,KAAK,WAAW,GAAG,CAAC,EAAE;wBACjC,IAAI,KAAK,CAAC,WAAW,KAAK,KAAK,EAAE;4BAC7B,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;yBAC/B,MAAM;4BACH,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;yBAC9B;qBACJ;iBACJ;aACJ;SACJ;;QAED,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;YAC3B,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;YAChD,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;SACzC;;QAED,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;YAC5B,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,CAAC;SAC3C;;QAED,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC;KACrB,CAAA;;IAED,mBAAA,gBAAgB,8BAAC,MAAM,EAAE;QACrBA,IAAM,SAAS,GAAG,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;;QAErD,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;KAC5C,CAAA;;IAED,mBAAA,iBAAiB,+BAAC,MAAM,EAAE;QACtBA,IAAM,SAAS,GAAG,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;;QAErD,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;KAC5C,CAAA;;IAED,mBAAA,qBAAqB,mCAAC,MAAM,EAAE;QAC1BA,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClCA,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAC9BA,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QAChCA,IAAM,EAAE,GAAG,MAAM,CAAC,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC;QAC3DA,IAAM,SAAS,GAAG,EAAE,CAAC;QACrBC,IAAI,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QAC7BA,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,QAAQ,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;;QAEvG,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;QAEzB,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC5BD,IAAM,SAAS,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;;YAEpC,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;YACzB,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;YAC7C,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC5B;QACD,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;QAC/F,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;QAEzB,OAAO,SAAS,CAAC;KACpB,CAAA;;IAED,mBAAA,gBAAgB,8BAAC,SAAS,EAAE,MAAM,EAAE;;;QAChCA,IAAM,KAAK,GAAG,SAAS,CAAC,MAAM,CAAC;QAC/BC,IAAI,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC;;QAE3B,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC5B,SAAS,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC1B,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC;;YAEjB,OAAO,SAAS,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG,KAAK,CAAC,EAAE;gBAClD,SAAS,GAAGO,MAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;gBAChE,SAAS,GAAGA,MAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;aACpE;SACJ;;QAED,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;KACxC,CAAA;;IAED,mBAAA,aAAa,2BAAC,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE;QAC/CP,IAAI,MAAM,GAAG,MAAM,CAAC;QACpB,IAAI,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACzBD,IAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,CAAC;YACxD,MAAM,IAAI,SAAS,CAAC;YACpB,SAAS,CAAC,QAAQ,CAAC,IAAI,SAAS,CAAC;YACjC,SAAS,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC;SAClC;;QAED,OAAO,MAAM,CAAC;KACjB,CAAA;;IAED,mBAAA,YAAY,0BAAC,SAAS,EAAE,MAAM,EAAE;;;QAC5BA,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClCA,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAC9BA,IAAM,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC;QAC5CA,IAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC;QAClCA,IAAM,aAAa,GAAG,YAAY,CAAC,QAAQ,CAAC;QAC5CC,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,aAAa,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QACtFA,IAAI,IAAI,CAAC;;QAET,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAClB,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;YAClCD,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACxBA,IAAM,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;;YAEtB,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,GAAGQ,MAAI,CAAC,WAAW;gBACnB,GAAG,CAAC,EAAE;gBACN,MAAM,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpC,IAAI;gBACJ,IAAI,GAAG,GAAG,CAAC,MAAM,EAAE;gBACnB,KAAK,CAAC,WAAW,KAAK,KAAK,CAAC,CAAC;;YAEjC,IAAI,KAAK,CAAC,WAAW,KAAK,KAAK,EAAE;gBAC7B,IAAI,YAAY,CAAC,KAAK,KAAK,MAAM,EAAE;oBAC/B,IAAI,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,aAAa,CAAC;iBAC1D;gBACD,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;aAC/D,MAAM;gBACH,IAAI,YAAY,CAAC,KAAK,KAAK,MAAM,EAAE;oBAC/B,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,aAAa,CAAC;iBAC1D;gBACD,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;aAC/D;;YAED,IAAI,IAAI,GAAG,CAAC,MAAM,EAAE,CAAC;SACxB;KACJ,CAAA;;IAED,mBAAA,YAAY,4BAAG;;;QACX,OAAyC,GAAG,IAAI;QAA7B,IAAA,UAAU;QAAI,IAAA,MAAM,cAAjC;QACNR,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5BA,IAAM,KAAK,GAAG,CAAC,CAAC;;QAEhBY,yBAAK,CAAC,YAAY,KAAA,CAAC,IAAA,CAAC,CAAC;;QAErB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;;QAE1B,KAAKX,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC5BD,IAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YAC1B,IAAQ,MAAM;YAAE,IAAA,KAAK,iBAAf;YACNA,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC9BA,IAAM,eAAe,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC,CAAC,KAAK,IAAI,UAAU,CAAC,KAAK,CAAC;;YAErF,IAAI,KAAK,EAAE;gBACPA,IAAM,aAAa,GAAG,IAAIe,8BAAI,CAAC,IAAI,CAAC;oBAChC,MAAM,EAAE;wBACJ,KAAK,EAAE,eAAe;wBACtB,KAAK,EAAE,UAAU,CAAC,KAAK;qBAC1B;oBACD,SAAS,EAAE;wBACP,IAAI,EAAE,MAAM;wBACZ,KAAK,EAAE,OAAO,CAAC,cAAc;qBAChC;iBACJ,CAAC,CAAC;;gBAEH,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,KAAK,WAAW,IAAI,OAAO,CAAC,KAAK,KAAK,CAAC,EAAE;oBAC/Df,IAAM,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;oBACtBA,IAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC;oBAClCC,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBAChCA,IAAI,MAAM,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC/CA,IAAI,EAAE,WAAA,EAAE,GAAG,WAAA,EAAE,QAAQ,WAAA,CAAC;;oBAEtB,KAAK,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBAC/D,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;;oBAEvC,IAAI,KAAK,CAAC,WAAW,KAAK,KAAK,EAAE;wBAC7B,GAAG,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;wBAC7D,QAAQ,GAAG,YAAY,CAAC,WAAW,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;wBACzD,MAAM,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;wBACzC,QAAQ,GAAG,QAAQ,IAAI,MAAM,CAAC;wBAC9B,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;;wBAE5C,IAAIO,MAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;4BAClE,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE;4BAC9B,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;4BAC7C,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,KAAK,MAAM,EAAE;gCACzC,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,EAAE;oCACf,aAAa,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;iCACrC,MAAM;oCACH,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;iCACtD;6BACJ,MAAM;gCACH,aAAa,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;6BACrC;4BACD,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;yBACzC,MAAM;4BACH,QAAQ,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;4BACnB,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;yBAChD;qBACJ,MAAM;wBACH,GAAG,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;wBAC7D,QAAQ,GAAG,YAAY,CAAC,WAAW,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;wBACzD,MAAM,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;wBACzC,QAAQ,GAAG,QAAQ,IAAI,MAAM,CAAC;wBAC9B,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;;wBAE5C,IAAIA,MAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;4BAClE,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE;4BAC9B,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;4BAC7C,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,KAAK,MAAM,EAAE;gCACzC,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,EAAE;oCACf,aAAa,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;iCACrC,MAAM;oCACH,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;iCACtD;6BACJ,MAAM;gCACH,aAAa,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;6BACrC;4BACD,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;yBACzC,MAAM;4BACH,QAAQ,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;4BACnB,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;yBAChD;qBACJ;;oBAED,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;;oBAEnCA,MAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;oBACzCA,MAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;iBACrC;aACJ;SACJ;KACJ,CAAA;;IAED,mBAAA,eAAe,6BAAC,OAAO,EAAE;QACrBR,IAAM,YAAY,GAAG,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;;QAEtC,OAAO,SAAS,CAAC,EAAE,CAAC,EAAE;YAClBA,IAAM,KAAK,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;YACrDA,IAAM,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;YACtD,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,GAAG,YAAY,CAAC;SAC1C,CAAC;KACL,CAAA;;IAED,mBAAA,WAAW,yBAAC,SAAS,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE;QAC9C,IAAQ,MAAM;QAAU,oBAAA,aAAC;QAAI,IAAA,EAAE;QAAK,IAAA,EAAE,mBAAhC;QACNA,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;;QAEzD,IAAI,CAAC,GAAG,MAAM,EAAE;YACZ,OAAO,SAAS,CAAC;SACpB;;QAED,OAAO,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KAC7E,CAAA;;IAED,mBAAA,aAAa,2BAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE;QACjC,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;KAClG,CAAA;;IAED,mBAAA,gBAAgB,8BAAC,KAAK,EAAE,MAAM,EAAE;QAC5B,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;KAC7D,CAAA;;IAED,mBAAA,cAAc,4BAAC,aAAa,EAAE;QAC1B,OAAO,aAAa,GAAG,qBAAqB,CAAC;KAChD,CAAA;;;EArZkB,YAsZtB,GAAA;;AAED,SAAS,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IAClCA,IAAM,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1EA,IAAM,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;;IAEzEC,IAAI,MAAM,CAAC;IACX,IAAI,EAAE,KAAK,CAAC,EAAE;QACVD,IAAM,EAAE,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;;QAEtB,MAAM,GAAG,IAAI,KAAK;YACd,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YACzB,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;SAC5B,CAAC;KACL;;IAED,OAAO,MAAM,CAAC;CACjB;;AAED,iBAAiB,CAAC,QAAQ,EAAE;IACxB,UAAU,EAAE,EAAE;IACd,UAAU,EAAE;QACR,KAAK,EAAE,CAAC;QACR,KAAK,EAAE,SAAS;QAChB,OAAO,EAAE,CAAC;KACb;IACD,aAAa,EAAE;QACX,OAAO,EAAE,EAAE;QACX,MAAM,EAAE,EAAE;KACb;CACJ,CAAC,CAAC;;AAEH,UAAU,CAAC,QAAQ,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC,AAE9C,AAAwB;;ACpcxB,IAAM,WAAW,GAAqB;IAAC;;;;;;;;IAAA,sBACnC,MAAM,sBAAG;QACL,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACpC,CAAA;;IAED,sBAAA,cAAc,4BAAC,MAAM,EAAE;QACnBA,IAAM,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAC9BA,IAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,EAAE;YAChC,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,WAAW,CAAC,OAAO;YAC5B,UAAU,EAAE,WAAW,CAAC,UAAU;YAClC,UAAU,EAAE,WAAW,CAAC,UAAU;YAClC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM;SAC9B,CAAC,CAAC;;QAEH,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;KAC9B,CAAA;;IAED,sBAAA,WAAW,yBAAC,KAAK,EAAE,IAAI,EAAE;QACrBY,yBAAK,CAAC,WAAW,KAAA,CAAC,MAAA,KAAK,EAAE,IAAI,CAAC,CAAC;QAC/BH,QAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;KACxD,CAAA;;;EArBqB,YAsBzB,GAAA,AAED;;ACnBA,IAAM,YAAY,GAAmB;IAAC;;;;;;;;IAAA,uBAClC,WAAW,2BAAG;QACV,OAAmD,GAAG,IAAI;QAA/B,IAAA,aAAa;QAAI,IAAA,KAAK,aAA3C;QACNT,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QACnCA,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;;QAE9B,IAAI,KAAK,EAAE;YACPA,IAAM,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;YACvC,IAAI,aAAa,CAAC,QAAQ,KAAK,MAAM,EAAE;gBACnC,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;;gBAE1DA,IAAM,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;;gBAE/B,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,WAAW,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;aACnE,MAAM;gBACHY,uBAAK,CAAC,WAAW,KAAA,CAAC,IAAA,CAAC,CAAC;aACvB;SACJ;KACJ,CAAA;;IAED,uBAAA,aAAa,2BAAC,MAAM,EAAE,OAAO,EAAE;QAC3B,OAAO,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;KAC3D,CAAA;;;EAtBsB,UAuB1B,GAAA;;AAED,iBAAiB,CAAC,YAAY,EAAE;IAC5B,OAAO,EAAE;QACL,QAAQ,EAAE,cAAc;KAC3B;IACD,MAAM,EAAE;QACJ,QAAQ,EAAE,MAAM;KACnB;IACD,SAAS,EAAE;QACP,IAAI,EAAE,GAAG;KACZ;CACJ,CAAC,CAAC;;AAEH,UAAU,CAAC,YAAY,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC,AAGrD,AAA4B;;AC3C5BZ,IAAM,uBAAuB,GAAG,EAAE,CAAC;;AAEnC,IAAM,UAAU,GAAiB;IAAC;;;;;;;;IAAA,qBAC9B,QAAQ,sBAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE;QAC5BA,IAAM,cAAc,GAAG,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;QAC9E,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;;QAEvD,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,cAAc,EAAE,MAAM,CAAC,CAAC;;QAErD,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,OAAO,KAAK,KAAK,EAAE;YACpC,OAAO;SACV;;QAEDA,IAAM,OAAO,GAAG,IAAI,YAAY,CAAC,KAAK,EAAE,MAAM,EAAE,cAAc,CAAC,CAAC;;QAEhE,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC7B,CAAA;;IAED,qBAAA,MAAM,oBAAC,SAAS,EAAE;;;QACdA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,GAAG,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;QAC9BA,IAAM,KAAK,GAAG,CAAC,CAAC;QAChBA,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;QACrDA,IAAM,YAAY,GAAG,QAAQ,GAAG,CAAC,CAAC;QAClCA,IAAM,cAAc,GAAG,QAAQ,GAAG,QAAQ,GAAG,IAAI,CAAC;QAClDA,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAC9BA,IAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC;;QAElCC,IAAI,OAAO,GAAG,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;QAC9D,OAAO,GAAG,OAAO,GAAG,YAAY,GAAG,KAAK,GAAG,YAAY,GAAG,KAAK,GAAG,OAAO,CAAC;;QAE1EA,IAAI,SAAS,GAAG,YAAY,GAAG,OAAO,CAAC;QACvCA,IAAI,iBAAiB,GAAG,CAAC,CAAC;QAC1BA,IAAI,QAAQ,CAAC;;QAEb,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;YAClCD,IAAM,aAAa,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,KAAK,CAAC,EAAE;gBACT,IAAI,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE;oBACjC,QAAQ,GAAG,aAAa,CAAC,QAAQ,CAAC;oBAClC,SAAS,IAAI,aAAa,CAAC,QAAQ,CAAC;iBACvC;aACJ;;YAED,IAAI,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;gBAC7B,SAAS,IAAI,aAAa,CAAC,IAAI,CAAC;aACnC,MAAM;gBACH,iBAAiB,EAAE,CAAC;aACvB;;YAED,IAAI,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,WAAW,GAAG,CAAC,EAAE;gBACxD,SAAS,IAAI,aAAa,CAAC,MAAM,CAAC;aACrC;SACJ;;QAED,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YACpBA,IAAM,WAAW,GAAG,CAAC,YAAY,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC;YACpE,QAAQ,GAAG,WAAW,GAAG,IAAI,CAAC;YAC9B,SAAS,IAAI,QAAQ,CAAC;SACzB;;QAEDC,IAAI,WAAW,GAAG,QAAQ,CAAC;QAC3BA,IAAI,MAAM,GAAG,CAAC,CAAC;QACfA,IAAI,IAAI,EAAE,MAAM,CAAC;;QAEjB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;;QAExB,KAAKA,IAAI2B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,WAAW,EAAEA,GAAC,EAAE,EAAE;YAClC5B,IAAMwC,eAAa,GAAG,MAAM,CAACZ,GAAC,CAAC,CAAC;YAChC,IAAI,GAAG,cAAc,CAACY,eAAa,CAAC,IAAI,EAAE,SAAS,GAAG,iBAAiB,CAAC,CAAC;YACzE,WAAW,IAAI,MAAM,CAAC;YACtB,MAAM,GAAG,WAAW,GAAG,IAAI,CAAC;YAC5BhC,MAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;YACtE,MAAM,GAAGgC,eAAa,CAAC,MAAM,IAAI,CAAC,CAAC;YACnC,WAAW,GAAG,MAAM,CAAC;SACxB;;QAED5B,qBAAK,CAAC,MAAM,KAAA,CAAC,MAAA,SAAS,CAAC,CAAC;KAC3B,CAAA;;IAED,qBAAA,cAAc,4BAAC,aAAa,EAAE,WAAW,EAAE,WAAW,EAAE;QACpD,OAAO,aAAa,GAAG,uBAAuB;YAC1C,CAAC,0BAA0B,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;KAC5E,CAAA;;;EAnFoB,QAoFxB,GAAA;;;AAGD,iBAAiB,CAAC,UAAU,EAAE;IAC1B,UAAU,EAAE,EAAE;IACd,UAAU,EAAE;QACR,KAAK,EAAE,CAAC;QACR,KAAK,EAAE,SAAS;QAChB,OAAO,EAAE,CAAC;KACb;CACJ,CAAC,CAAC,AAEH;;ACtGA,IAAM,aAAa,GAAoB;IAAC;;;;;;;;IAAA,wBACpC,MAAM,sBAAG;QACL,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACtC,CAAA;;IAED,wBAAA,gBAAgB,8BAAC,MAAM,EAAE;QACrBZ,IAAM,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAC9BA,IAAM,UAAU,GAAG,IAAI,UAAU,CAAC,IAAI,EAAE;YACpC,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,WAAW,CAAC,OAAO;YAC5B,UAAU,EAAE,WAAW,CAAC,UAAU;YAClC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM;SAC9B,CAAC,CAAC;;QAEH,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;KAChC,CAAA;;;EAfuB,WAgB3B,GAAA,AAED;;ACbAA,IAAM,eAAe,GAAG,IAAI,CAAC;;AAE7B,IAAM,iBAAiB,GAAqB;IAAC;;;;;;;;IAAA,4BACzC,UAAU,0BAAG;QACT,IAAI,CAAC,qBAAqB,GAAG,IAAI,qBAAqB,EAAE,CAAC;KAC5D,CAAA;;IAED,4BAAA,MAAM,sBAAG;QACL,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,eAAe,EAAE,CAAC;KAC1B,CAAA;;IAED,4BAAA,SAAS,yBAAG;QACRA,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;QAC5BA,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QAC3BA,IAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;QACnEA,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QACzCA,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAChDA,IAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS;YAC9B,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE;YAClB,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE;SACrB,CAAC;;QAEF,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KACxB,CAAA;;IAED,4BAAA,eAAe,+BAAG;QACdA,IAAM,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC;QAC3CA,IAAM,YAAY,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;QACrCA,IAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC;YACtC,gBAAgB,EAAE,KAAK;YACvB,MAAM,EAAE,CAAC,CAAC;SACb,CAAC,CAAC;QACHC,IAAI,QAAQ,EAAE,gBAAgB,CAAC;;QAE/B,IAAI,WAAW,CAAC,IAAI,KAAK,WAAW,EAAE;YAClC,QAAQ,GAAG,oBAAoB,CAAC;YAChC,gBAAgB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;SAC3C,MAAM;YACH,QAAQ,GAAG,gBAAgB,CAAC;YAC5B,gBAAgB,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;SACzC;;QAEDD,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,YAAY,IAAI,gBAAgB,CAAC;;QAEtE,IAAI,KAAK,IAAI,YAAY,EAAE;YACvB,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC;YAClD,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC;SACrD;;QAEDA,IAAM,SAAS,GAAG,IAAI,QAAQ;YAC1B,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG;YACpB,WAAW;YACX,IAAI,CAAC,YAAY;SACpB,CAAC;;QAEF,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;KAC9B,CAAA;;IAED,4BAAA,UAAU,0BAAG;QACT,OAAmE,GAAG,IAAI;QAA7C,IAAA,OAAO;QAAI,IAAA,SAAS;QAAE,IAAA,SAAS;QAAE,IAAA,GAAG,WAA3D;QACNA,IAAM,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,eAAe,CAAC;QAC7EA,IAAM,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC,OAAO,IAAI,EAAE,EAAE,cAAc,CAAC,CAAC;QAClEA,IAAM,OAAO,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC3CA,IAAM,YAAY,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;;QAErE,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC1B,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAC/BA,IAAM,UAAU,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QACzE,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC;;QAE3D,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;KAC3B,CAAA;;IAED,4BAAA,aAAa,6BAAG;QACZ,OAAO,IAAI,CAAC,GAAG,CAAC;KACnB,CAAA;;;EA9E2B,YA+E/B,GAAA,AAED;;ACrFA,IAAM,iBAAiB,GAAqB;IAAC;;;;;;;;IAAA,4BACzC,SAAS,uBAAC,KAAK,EAAE,KAAK,EAAE;QACpBA,IAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC;QAC9CA,IAAM,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;;QAEzE,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;KAClD,CAAA;;;EAN2B,YAO/B,GAAA;;AAED,iBAAiB,CAAC,iBAAiB,EAAE;IACjC,IAAI,EAAE,KAAK;CACd,CAAC,CAAC,AAEH;;ACdA,IAAM,cAAc,GAAyB;IAAC;;;;;;;;;EAAjB,gBAC5B,GAAA;;AAED,cAAc,CAAC,SAAS,CAAC,SAAS,GAAG,iBAAiB,CAAC,SAAS,CAAC,SAAS,CAAC;;AAE3E,iBAAiB,CAAC,cAAc,EAAE;IAC9B,IAAI,EAAE,KAAK;CACd,CAAC,CAAC,AAEH;;ACVA,IAAM,sBAAsB,GAA0B;IAAC;;;;;;;;IAAA,iCACnD,SAAS,uBAAC,QAAQ,EAAE;QAChBA,IAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACvC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;KACvC,CAAA;;IAED,iCAAA,gBAAgB,gCAAG;QACfA,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC;QACjDA,IAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QACtC,OAAO,MAAM,CAAC;KACjB,CAAA;;IAED,iCAAA,cAAc,8BAAG;QACbC,IAAI,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC;;QAEpC,IAAI,CAAC,QAAQ,EAAE;YACXD,IAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACvCA,IAAM,cAAc,GAAG,IAAI,cAAc,CAAC,KAAK,CAAC,CAAC;YACjDA,IAAM,UAAU,GAAG,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;YAE3D,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACxB,QAAQ,GAAG,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YACrE,QAAQ,CAAC,GAAG,EAAE,CAAC;SAClB;;QAED,OAAO,QAAQ,CAAC;KACnB,CAAA;;;EA1BgC,iBA2BpC,GAAA,AAED;;AC9BA,IAAM,gBAAgB,GAAoB;IAAC;;;;;;;;IAAA,2BACvC,MAAM,sBAAG;QACL,OAA0D,GAAG,IAAI;QAAnC,IAAA,SAAS;QAAM,IAAA,WAAW,mBAAlD;QACNA,IAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QACtCA,IAAM,MAAM,GAAG,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;;QAEpE,MAAM,CAAC,OAAO,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;QACvC,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;;QAEpC,OAAO,MAAM,CAAC;KACjB,CAAA;;;EAV0B,WAW9B,GAAA,AAED;;ACRA,IAAM,cAAc,GAAuB;IAAC;;;;;;;;IAAA,yBACxC,aAAa,2BAAC,UAAU,EAAE,aAAa,EAAE,QAAQ,EAAE;QAC/CA,IAAM,KAAK,GAAG,CAAC,aAAa,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC;QAC/CC,IAAI,OAAO,CAAC;;QAEZ,IAAI,KAAK,KAAK,MAAM,EAAE;YAClB,OAAO,GAAG,IAAI,sBAAsB,CAAC,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;SAC1F,MAAM;YACH,OAAO,GAAG,IAAI,gBAAgB,CAAC,UAAU,EAAE,EAAE,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;SAC3E;QACD,OAAO,OAAO,CAAC;KAClB,CAAA;;IAED,yBAAA,kBAAkB,gCAAC,KAAK,EAAE,aAAa,EAAE;QACrCA,IAAI,YAAY,CAAC;;QAEjB,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,aAAa,KAAK,WAAW,EAAE;YACpD,YAAY,GAAG;gBACX,CAAC,EAAE,KAAK,CAAC,CAAC;gBACV,CAAC,EAAE,KAAK,CAAC,CAAC;aACb,CAAC;YACF,IAAI,aAAa,KAAK,IAAI,EAAE;gBACxB,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC;aACtB;SACJ;;QAED,OAAO,YAAY,CAAC;KACvB,CAAA;;IAED,yBAAA,mBAAmB,iCAAC,MAAM,EAAE;QACxB,OAAO,MAAM,CAAC,aAAa,IAAI,IAAI,CAAC;KACvC,CAAA;;IAED,yBAAA,oBAAoB,oCAAG;;;QACnBD,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;;QAEnC,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YAC1C,IAAIO,MAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;gBAC/C,OAAO,IAAI,CAAC;aACf;SACJ;KACJ,CAAA;;IAED,yBAAA,UAAU,wBAAC,MAAM,EAAE;;;QACf,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;;QAEvB,IAAI,IAAI,CAAC,oBAAoB,EAAE,EAAE;YAC7B,KAAKP,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;gBAC1CD,IAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC1B,IAAI,KAAK,EAAE;oBACPA,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;oBAC1B,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,IAAIQ,MAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE;wBACtE,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;qBACtB;iBACJ;aACJ;SACJ;;QAED,OAAO,MAAM,CAAC;KACjB,CAAA;;;EA3DwB,cA4D5B,GAAA;;AAED,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE;IACrB,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;CAChC,AAED;;AC1DA,IAAM,aAAa,GAA0B;IAAC;;;;;;;;IAAA,wBAC1C,eAAe,+BAAG;QACdR,IAAM,SAAS,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;;QAEvE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;QACvB,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;KAC9B,CAAA;;IAED,wBAAA,gBAAgB,8BAAC,QAAQ,EAAE;QACvB,OAAO,UAAU,CAAC,QAAQ,EAAE;YACxB,cAAc,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE;YAC7B,cAAc,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE;SAChC,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;KAC1B,CAAA;;IAED,wBAAA,eAAe,+BAAG;QACdY,8BAAK,CAAC,eAAe,KAAA,CAAC,IAAA,CAAC,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;KAC/B,CAAA;;IAED,wBAAA,WAAW,yBAAC,KAAK,EAAE,IAAI,EAAE;QACrB,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;;QAErD,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;KAC9D,CAAA;;IAED,wBAAA,YAAY,4BAAG;QACXZ,IAAM,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrDA,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;QAE3B,IAAI,CAAC,eAAe;YAChB,kBAAkB,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,CAAC;YAC1C,IAAI;SACP,CAAC;;QAEF,IAAI,CAAC,kBAAkB;YACnB,kBAAkB,CAAC,MAAM,EAAE,EAAE,aAAa,EAAE,CAAC;YAC7C,IAAI;SACP,CAAC;;QAEF,IAAI,CAAC,eAAe;YAChB,kBAAkB,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,CAAC;YAC1C,IAAI;SACP,CAAC;KACL,CAAA;;IAED,wBAAA,eAAe,6BAAC,MAAM,EAAE,IAAI,EAAE;QAC1B,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACrB,OAAO;SACV;;QAEDA,IAAM,SAAS,GAAG,IAAI,cAAc,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;;QAE/D,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;KACrC,CAAA;;IAED,wBAAA,kBAAkB,gCAAC,MAAM,EAAE,IAAI,EAAE;QAC7B,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACrB,OAAO;SACV;;QAEDA,IAAM,YAAY,GAAG,IAAI,iBAAiB,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;;QAErE,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;KACxC,CAAA;;IAED,wBAAA,eAAe,6BAAC,MAAM,EAAE,IAAI,EAAE;QAC1B,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACrB,OAAO;SACV;;QAEDA,IAAM,SAAS,GAAG,IAAI,cAAc,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;;QAE/D,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;KACrC,CAAA;;IAED,wBAAA,cAAc,4BAAC,KAAK,EAAE,CAAC,EAAE,SAAS,EAAE;QAChCA,IAAM,MAAM,GAAG,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAC1CA,IAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;QAC5CA,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC1CA,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;;QAE1C,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,IAAI,EAAE;YACpC,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE;gBACrB,OAAO,EAAE,YAAY,CAAC,CAAC,CAAC;gBACxB,CAAC,EAAE,MAAM;gBACT,CAAC,EAAE,MAAM;aACZ,CAAC,CAAC;SACN;KACJ,CAAA;;IAED,wBAAA,gBAAgB,gCAAG,EAAE,CAAA;;;EA5FG,iBA6F3B,GAAA;;AAED,iBAAiB,CAAC,aAAa,EAAE;IAC7B,KAAK,EAAE,EAAE;IACT,KAAK,EAAE,EAAE;CACZ,CAAC,CAAC;;AAEH,UAAU,CAAC,aAAa,CAAC,SAAS,EAAE,mBAAmB,CAAC,CAAC,AAEzD;;AC5GA,IAAM,cAAc,GAAkB;IAAC;;;;;;;;IAAA,yBAEnC,SAAS,uBAAC,YAAY,EAAE,SAAS,EAAE;QAC/BA,IAAM,WAAW,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC;QACzDA,IAAM,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,MAAM,EAAE,YAAY,CAAC,MAAM,EAAE,EAAE,WAAW,CAAC,CAAC;;QAErF,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;KAClD,CAAA;;IAED,yBAAA,aAAa,2BAAC,UAAU,EAAE,aAAa,EAAE,QAAQ,EAAE;QAC/CA,IAAM,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC;QAClCC,IAAI,SAAS,CAAC;;QAEd,IAAI,KAAK,KAAK,MAAM,EAAE;YAClB,SAAS,GAAG,aAAa,CAAC;SAC7B,MAAM;YACH,SAAS,GAAG,WAAW,CAAC;SAC3B;;QAEDD,IAAM,OAAO,GAAG,IAAI,SAAS,CAAC,UAAU,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;;QAEnE,IAAI,UAAU,CAAC,MAAM,KAAK,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE;YACjD,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;SACjC;;QAED,OAAO,OAAO,CAAC;KAClB,CAAA;;;EA1BwB,SA2B5B,GAAA;;AAED,iBAAiB,CAAC,cAAc,EAAE;IAC9B,IAAI,EAAE,KAAK;CACd,CAAC,CAAC,AAEH;;ACzCA,IAAM,sBAAsB,GAA0B;IAAC;;;;;;;;IAAA,iCACnD,SAAS,yBAAG,EAAE,CAAA;;;EADmB,iBAEpC,GAAA,AAED;;ACHA,IAAM,gBAAgB,GAAoB;IAAC;;;;;;;;IAAA,2BACvC,MAAM,sBAAG;QACL,OAAO,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;KACpE,CAAA;;;EAH0B,WAI9B,GAAA,AAED;;ACHA,IAAM,cAAc,GAAuB;IAAC;;;;;;;;IAAA,yBACxC,aAAa,2BAAC,UAAU,EAAE,aAAa,EAAE,QAAQ,EAAE,WAAW,EAAE;QAC5DA,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QACzCA,IAAM,KAAK,GAAG,CAAC,aAAa,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC;QAC/CC,IAAI,OAAO,CAAC;;QAEZ,IAAI,KAAK,KAAK,MAAM,EAAE;YAClB,OAAO,GAAG,IAAI,sBAAsB,CAAC,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;YAClG,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;SACjC,MAAM;YACHA,IAAI,WAAW,CAAC;YAChB,IAAI,SAAS,IAAI,QAAQ,GAAG,CAAC,IAAI,WAAW,EAAE;gBAC1C,WAAW,GAAG,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;aAC3D;;YAED,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,OAAO,GAAG,IAAI,gBAAgB,CAAC,UAAU,EAAE,WAAW,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;SACpF;;QAED,OAAO,OAAO,CAAC;KAClB,CAAA;;IAED,yBAAA,mBAAmB,iCAAC,MAAM,EAAE;QACxB,OAAO,MAAM,CAAC,aAAa,IAAI,IAAI,CAAC;KACvC,CAAA;;;EAxBwB,cAyB5B,GAAA,AAED;;AC7BA,IAAM,YAAY,GAAqB;IAAC,qBACzB,CAAC,KAAK,EAAE,OAAO,EAAE;QACxBW,eAAK,KAAA,CAAC,MAAA,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;KAC/B;;;;sDAAA;;;EAHsB,YAI1B,GAAA;;AAED,iBAAiB,CAAC,YAAY,EAAE;IAC5B,OAAO,EAAE;QACL,QAAQ,EAAE,MAAM;KACnB;IACD,MAAM,EAAE;QACJ,QAAQ,EAAE,EAAE;KACf;CACJ,CAAC,CAAC,AAEH;;ACfA,IAAM,kBAAkB,GAAqB;IAAC;;;;;;;;IAAA,6BAC1C,MAAM,oBAAC,MAAM,EAAE;QACX,OAA2B,GAAG,IAAI;QAA1B,IAAA,OAAO;QAAE,IAAA,QAAQ,gBAAnB;QACN,IAAQ,GAAG;QAAE,IAAA,OAAO,mBAAd;QACNZ,IAAM,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC9BA,IAAM,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,OAAO,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;QACpDA,IAAM,SAAS,GAAG,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QACvCC,IAAI,KAAK,GAAG,MAAM,CAAC,UAAU,GAAG,SAAS,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;;QAEtD,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC5BD,IAAM,UAAU,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;YAClC,UAAU,CAAC,UAAU,GAAG,KAAK,CAAC;YAC9B,UAAU,CAAC,KAAK,GAAG,SAAS,CAAC;;YAE7B,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;gBACpB,UAAU,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;aACjD;;YAED,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAC/B,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,UAAU,CAAC;;YAEhC,KAAK,IAAI,SAAS,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC,CAAC;SAC9C;KACJ,CAAA;;;EAvB4B,YAwBhC,GAAA;;AAED,iBAAiB,CAAC,kBAAkB,EAAE;IAClC,GAAG,EAAE,CAAC;IACN,OAAO,EAAE,CAAC;CACb,CAAC,CAAC,AAEH;;ACjCA,IAAM,gBAAgB,GAAqB;IAAC;;;;;;;;IAAA,2BACxC,MAAM,oBAAC,MAAM,EAAE;QACX,OAAwC,GAAG,IAAI;QAA5B,IAAA,OAAO;QAAI,IAAA,QAAQ,gBAAhC;QACNA,IAAM,aAAa,GAAG,QAAQ,CAAC,MAAM,CAAC;QACtCA,IAAM,KAAK,GAAG,OAAO,GAAG,aAAa,GAAG,CAAC,GAAG,CAAC,CAAC;QAC9CA,IAAM,IAAI,GAAG,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;;QAE9B,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;;QAErB,KAAKC,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,aAAa,EAAE,CAAC,IAAI,IAAI,EAAE;YACxDD,IAAM,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;YACvC,WAAW,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;YAC3C,WAAW,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;SACpC;KACJ,CAAA;;;EAd0B,YAe9B,GAAA,AAED;;ACXA,IAAM,aAAa,GAAiB;IAAC;;;;;;;;IAAA,wBACjC,SAAS,yBAAG;QACR,OAAO,YAAY,CAAC;KACvB,CAAA;;IAED,wBAAA,WAAW,2BAAG;QACV,OAAO,kBAAkB,CAAC;KAC7B,CAAA;;IAED,wBAAA,SAAS,yBAAG;QACR,OAAO,gBAAgB,CAAC;KAC3B,CAAA;;IAED,wBAAA,YAAY,0BAAC,YAAY,EAAE,UAAU,EAAE;QACnC,OAAO,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;KAC3C,CAAA;;IAED,wBAAA,SAAS,uBAAC,YAAY,EAAE,SAAS,EAAE;QAC/BA,IAAM,IAAI,GAAG,YAAY,CAAC,KAAK,EAAE,CAAC;QAClCA,IAAM,CAAC,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;;QAEhC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC;;QAEpC,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,wBAAA,WAAW,yBAAC,KAAK,EAAE,SAAS,EAAE;QAC1B,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC;QACzB,KAAK,CAAC,MAAM,EAAE,CAAC;KAClB,CAAA;;IAED,wBAAA,eAAe,+BAAG;QACd,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC;QAC3DY,qBAAK,CAAC,eAAe,KAAA,CAAC,IAAA,CAAC,CAAC;KAC3B,CAAA;;;EAnCuB,QAoC3B,GAAA;;AAED,aAAa,CAAC,SAAS,CAAC,MAAM,GAAG,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC;;AAEnE,iBAAiB,CAAC,aAAa,EAAE;IAC7B,IAAI,EAAE,KAAK;IACX,SAAS,EAAE;QACP,IAAI,EAAE,KAAK;KACd;CACJ,CAAC,CAAC,AAEH;;ACvCA,IAAM,aAAa,GAA0B;IAAC;;;;;;;;IAAA,wBAC1C,eAAe,+BAAG;QACdZ,IAAM,YAAY,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;;QAEzF,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC;QAC9B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QAC9B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,wBAAwB,EAAE,CAAC;KACnC,CAAA;;IAED,wBAAA,gBAAgB,8BAAC,QAAQ,EAAE;QACvB,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,UAAU,CAAC,QAAQ,EAAE;gBACjB,cAAc,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE;gBAC7B,cAAc,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE;aAChC,CAAC,CAAC;SACN;;QAED,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,UAAU,CAAC,QAAQ,EAAE;gBACjB,gBAAgB,EAAE,KAAK;gBACvB,MAAM,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;aAC3B,CAAC,CAAC;SACN;;QAED,OAAO,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;KACvD,CAAA;;IAED,wBAAA,mBAAmB,mCAAG;;QAElB,mBAAmB,CAAC,SAAS,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;KAC5E,CAAA;;IAED,wBAAA,wBAAwB,wCAAG;QACvB,mBAAmB,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;KACjF,CAAA;;IAED,wBAAA,YAAY,0BAAC,aAAa,EAAE;;QAExB,OAAO,aAAa,CAAC;KACxB,CAAA;;IAED,wBAAA,YAAY,4BAAG;QACXA,IAAM,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrDA,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;QAE3B,IAAI,CAAC,eAAe;YAChB,kBAAkB,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,CAAC;YAC1C,IAAI;SACP,CAAC;;QAEF,IAAI,CAAC,eAAe;YAChB,kBAAkB,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,CAAC;YAC1C,IAAI;SACP,CAAC;;QAEF,IAAI,CAAC,cAAc;YACf,kBAAkB,CAAC,MAAM,EAAE,EAAE,YAAY,EAAE,CAAC;YAC5C,IAAI;SACP,CAAC;KACL,CAAA;;IAED,wBAAA,YAAY,0BAAC,MAAM,EAAE;QACjBA,IAAM,OAAO,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;QACnCA,IAAM,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,WAAW,EAAE;YACbA,IAAM,cAAc,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;YACxDA,IAAM,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;YAChC,OAAO,CAAC,SAAS,GAAG,KAAK,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC;YACvD,OAAO,CAAC,YAAY,GAAG,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,MAAM,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC;;YAEnF,IAAI,OAAO,CAAC,YAAY,EAAE;gBACtB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;aAC7B;SACJ;;QAED,OAAO,OAAO,CAAC;KAClB,CAAA;;IAED,wBAAA,eAAe,6BAAC,MAAM,EAAE,IAAI,EAAE;QAC1B,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACrB,OAAO;SACV;;QAEDA,IAAM,SAAS,GAAG,IAAI,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;QACtE,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;KACrC,CAAA;;IAED,wBAAA,eAAe,6BAAC,MAAM,EAAE,IAAI,EAAE;QAC1B,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACrB,OAAO;SACV;;QAEDA,IAAM,SAAS,GAAG,IAAI,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;QACtE,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;KACrC,CAAA;;IAED,wBAAA,cAAc,4BAAC,MAAM,EAAE,IAAI,EAAE;QACzB,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACrB,OAAO;SACV;;QAEDA,IAAM,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAC9BA,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAC1C,OAAO,CAAC,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC;QAC9B,OAAO,CAAC,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;;QAEtCA,IAAM,QAAQ,GAAG,IAAI,aAAa,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAClD,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;;QAEjC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;KAC7B,CAAA;;IAED,wBAAA,kBAAkB,kCAAG;QACjB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC5B,CAAA;;IAED,wBAAA,cAAc,4BAAC,KAAK,EAAE,CAAC,EAAE,SAAS,EAAE;QAChCA,IAAM,MAAM,GAAG,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAC1CA,IAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;QAC5CA,IAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACtDA,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;;QAE7C,IAAI,QAAQ,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,EAAE;YACrC,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE;gBACrB,OAAO,EAAE,YAAY,CAAC,CAAC,CAAC;gBACxB,QAAQ,EAAE,QAAQ;gBAClB,KAAK,EAAE,KAAK;aACf,CAAC,CAAC;SACN;KACJ,CAAA;;IAED,wBAAA,gBAAgB,gCAAG,EAAE,CAAA;;;EArIG,iBAsI3B,GAAA;;AAED,UAAU,CAAC,aAAa,CAAC,SAAS,EAAE,mBAAmB,EAAE;IACrD,WAAW,EAAE,mBAAmB,CAAC,SAAS,CAAC,WAAW;IACtD,eAAe,EAAE,mBAAmB,CAAC,SAAS,CAAC,eAAe;CACjE,CAAC,CAAC;;AAEH,iBAAiB,CAAC,aAAa,EAAE;IAC7B,YAAY,EAAE;QACV,UAAU,EAAE,EAAE;KACjB;IACD,SAAS,EAAE,EAAE;CAChB,CAAC,CAAC,AAEH;;AC5JA,IAAM,aAAa,GAAqB;IAAC,sBAC1B,CAAC,KAAK,EAAE,OAAO,EAAE,cAAc,EAAE;QACxCY,eAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;;QAEf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC;KAC7C;;;;wDAAA;;IAED,wBAAA,MAAM,oBAAC,QAAQ,EAAE;QACbZ,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3BA,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;;QAE/B,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEvE,IAAI,KAAK,EAAE;YACP,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC7E;KACJ,CAAA;;IAED,wBAAA,YAAY,4BAAG;;;QACXA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BC,IAAI,MAAM,CAAC;;QAEXW,yBAAK,CAAC,YAAY,KAAA,CAAC,IAAA,CAAC,CAAC;;QAErB,IAAI,OAAO,CAAC,MAAM,EAAE;YAChB,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;gBACpB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,OAAO,EAAE,OAAO;gBAChB,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE;gBACxB,YAAY,EAAE,YAAG,SAAGJ,MAAI,CAAC,UAAU,EAAE,GAAA;aACxC,CAAC,CAAC;SACN,MAAM;YACH,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;SAC9B;;QAED,IAAI,MAAM,EAAE;YACR,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SAC9B;KACJ,CAAA;;IAED,wBAAA,UAAU,0BAAG;QACTR,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAC9BA,IAAM,IAAI,GAAGe,8BAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE;YAC3C,IAAI,EAAE;gBACF,KAAK,EAAE,OAAO,CAAC,KAAK;gBACpB,OAAO,EAAE,OAAO,CAAC,OAAO;aAC3B;YACD,MAAM,EAAE;gBACJ,KAAK,EAAE,MAAM,CAAC,KAAK;gBACnB,OAAO,EAAE,MAAM,CAAC,OAAO;gBACvB,KAAK,EAAE,MAAM,CAAC,KAAK;aACtB;SACJ,CAAC,CAAC,KAAK,EAAE,CAAC;;QAEX,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,wBAAA,eAAe,6BAAC,KAAK,EAAE;QACnB,OAAOA,8BAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;KACnD,CAAA;;IAED,wBAAA,eAAe,+BAAG;QACd,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;KAClC,CAAA;;IAED,wBAAA,mBAAmB,mCAAG;QAClBf,IAAM,IAAI,GAAGe,8BAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC;;QAEvD,OAAO;YACH,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,IAAI,EAAE,IAAI;SACb,CAAC;KACL,CAAA;;IAED,wBAAA,aAAa,6BAAG;QACZf,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACrB,OAAO;YACH,KAAK,EAAE,IAAI,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC;YACxC,KAAK,EAAE;gBACH,UAAU,EAAE,QAAQ;gBACpB,QAAQ,EAAE,KAAK;aAClB;SACJ,CAAC;KACL,CAAA;;IAED,wBAAA,WAAW,yBAAC,MAAM,EAAE;QAChBA,IAAM,KAAK,GAAG,IAAI,CAAC;QACnB,OAAO,KAAK,CAAC,KAAK,CAAC,gBAAgB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;KACtD,CAAA;;;EA/FuB,YAgG3B,GAAA;;AAED,iBAAiB,CAAC,aAAa,EAAE;IAC7B,KAAK,EAAE,KAAK;IACZ,MAAM,EAAE;QACJ,KAAK,EAAE,CAAC;KACX;CACJ,CAAC,CAAC;;AAEH,UAAU,CAAC,aAAa,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC,AAEtD;;ACrGA,IAAM,WAAW,GAAqB;IAAC,oBACxB,CAAC,QAAQ,EAAE,OAAO,EAAE;QAC3BY,eAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;;QAEf,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,MAAM,EAAE,CAAC;KACjB;;;;oDAAA;;IAED,sBAAA,gBAAgB,8BAAC,KAAK,EAAE,MAAM,EAAE;QAC5B,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KAC5D,CAAA;;IAED,sBAAA,MAAM,sBAAG;;;QACL,OAA+D,GAAG,IAAI;QAA9D,IAAA,OAAO;QAAwC,oGAAA,EAAE,CAAnD;QACNZ,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjCA,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;;QAEzB,IAAI,CAAC,IAAI,EAAE;YACP,OAAO;SACV;;QAEDA,IAAM,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;;QAElC,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClCD,IAAM,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC5DA,IAAM,KAAK,GAAG,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC;;YAE1C,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE;gBACvC,SAAS;aACZ;;YAEDC,IAAI,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;;YAE9B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;gBAC3B,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,YAAY,CAAC,CAAC,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;aACxE;;YAEDD,IAAM,OAAO,GAAG,cAAc,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;YAClD,MAAM,GAAG,UAAU,CAAC;gBAChB,KAAK,EAAE,CAAC;gBACR,KAAK,EAAEQ,MAAI;gBACX,MAAM,EAAE,MAAM;gBACd,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC;gBACjB,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,KAAK;aACtC,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;;YAEjCR,IAAM,OAAO,GAAGQ,MAAI,CAAC,aAAa,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAClDR,IAAM,KAAK,GAAGQ,MAAI,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;;YAE9C,IAAI,OAAO,IAAI,KAAK,EAAE;gBAClB,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aACzB;SACJ;KACJ,CAAA;;IAED,sBAAA,kBAAkB,gCAAC,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE;QACvCR,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;;QAE7B,WAAW,CAAC,OAAO,EAAE;YACjB,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE,MAAM,CAAC,QAAQ;YACzB,KAAK,EAAE,MAAM,CAAC,KAAK;SACtB,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,SAAS,EAAE,QAAQ,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;KACvG,CAAA;;IAED,sBAAA,aAAa,2BAAC,KAAK,EAAE,MAAM,EAAE;QACzBA,IAAM,aAAa,GAAG,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;;QAEtD,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,aAAa,EAAE,MAAM,CAAC,CAAC;;QAEpD,IAAI,MAAM,CAAC,OAAO,KAAK,KAAK,EAAE;;YAE1BA,IAAM,OAAO,GAAG,IAAI,aAAa,CAAC,KAAK,EAAE,aAAa,EAAE,MAAM,CAAC,CAAC;YAChE,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;;YAE/B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;YAE1B,OAAO,OAAO,CAAC;SAClB;KACJ,CAAA;;IAED,sBAAA,WAAW,yBAAC,KAAK,EAAE,MAAM,EAAE;QACvB,IAAQ,MAAM;QAAE,IAAA,QAAQ,mBAAlB;QACNA,IAAM,MAAM,GAAG,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;QAClEC,IAAI,IAAI,GAAG,KAAK,CAAC;;QAEjB,IAAI,MAAM,CAAC,OAAO,EAAE;YAChBD,IAAM,aAAa,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;YAC1C,IAAI,aAAa,EAAE;gBACf,IAAI,GAAG,aAAa,CAAC;oBACjB,QAAQ,EAAE,QAAQ;oBAClB,KAAK,EAAE,KAAK;oBACZ,UAAU,EAAE,MAAM,CAAC,UAAU;oBAC7B,QAAQ,EAAE,MAAM,CAAC,QAAQ;oBACzB,MAAM,EAAE,MAAM;iBACjB,CAAC,CAAC;aACN,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE;gBACtB,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;aACtE;;YAED,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;gBACfA,IAAM,eAAe,GAAG,IAAI2B,4BAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,cAAc,EAAE,CAAC;gBACjE,IAAI,eAAe,GAAG,GAAG,EAAE;oBACvB,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;iBACxB,MAAM;oBACH,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;iBACxB;gBACD,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;oBACpB,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC;iBACpC;aACJ;;YAED,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;YAC/C3B,IAAM,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC;gBACzC,MAAM,EAAE,MAAM,CAAC,QAAQ;aAC1B,EAAE,MAAM,CAAC,CAAC,CAAC;;YAEZ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;YAE1B,OAAO,OAAO,CAAC;SAClB;KACJ,CAAA;;IAED,sBAAA,YAAY,4BAAG;QACXA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3BA,IAAM,OAAO,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;;QAEtC,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpCD,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACxBA,IAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;YAClC,IAAI,KAAK,KAAK,MAAM,EAAE;gBAClBA,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;;gBAEpC,IAAI,KAAK,KAAK,IAAI,EAAE;oBAChB,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;iBAChD,MAAM;oBACH,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;iBAClD;aACJ;SACJ;;QAED,OAAO,OAAO,CAAC;KAClB,CAAA;;IAED,sBAAA,kBAAkB,gCAAC,GAAG,EAAE,KAAK,EAAE,WAAW,EAAE;QACxC,OAAmC,GAAG,IAAI;QAAlC,IAAA,OAAO;QAAU,IAAA,QAAQ,cAA3B;QACNA,IAAM,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC9BA,IAAM,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QACjCC,IAAI,UAAU,GAAG,YAAY,CAAC;;QAE9B,KAAKA,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YAC5C,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,EAAE;gBAClD,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;aAC9B;SACJ;;QAEDA,IAAI,aAAa,GAAG,CAAC,YAAY,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC;QAC9EA,IAAI,cAAc,GAAG,CAAC,KAAK,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC;QACjDA,IAAI,cAAc,GAAG,CAAC,CAAC;;QAEvB,KAAKA,IAAIe,KAAG,GAAG,CAAC,EAAEA,KAAG,GAAG,KAAK,EAAEA,KAAG,EAAE,EAAE;YAClChB,IAAM,UAAU,GAAG,QAAQ,CAACgB,KAAG,CAAC,CAAC,UAAU,CAAC;YAC5ChB,IAAM,WAAW,GAAG,QAAQ,CAACgB,KAAG,GAAG,CAAC,CAAC,CAAC;YACtChB,IAAM,cAAc,GAAG,CAAC,WAAW,GAAG,WAAW,CAAC,UAAU,GAAG,UAAU,CAAC,CAAC;YAC3EA,IAAM,MAAM,GAAG,QAAQ,CAACgB,KAAG,CAAC,CAAC,MAAM,GAAG,EAAE,CAAC;YACzChB,IAAM,MAAM,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,GAAG,UAAU,CAAC,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC;YAC5FC,IAAI,MAAM,WAAA,CAAC;;YAEX,IAAI,CAAC,UAAU,EAAE;gBACb,MAAM,GAAG,cAAc,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;aAC3C,MAAM;gBACH,MAAM,GAAG,CAAC,KAAK,GAAG,aAAa,GAAG,CAAC,cAAc,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC;aACxE;;YAED,MAAM,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;;YAEtC,MAAM,CAAC,IAAI,CAAC,IAAIa,+BAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,cAAc,EAAE,GAAG,CAAC,EAAE,GAAG,cAAc,CAAC,CAAC,CAAC;YAC9E,MAAM,CAAC,IAAI,CAAC,IAAIA,+BAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,KAAK,GAAG,cAAc,EAAE,GAAG,CAAC,EAAE,GAAG,cAAc,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,IAAI,CAAC,IAAIA,+BAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,KAAK,GAAG,MAAM,EAAE,GAAG,CAAC,EAAE,GAAG,MAAM,GAAG,cAAc,CAAC,CAAC,CAAC;YACvF,MAAM,CAAC,IAAI,CAAC,IAAIA,+BAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,MAAM,EAAE,GAAG,CAAC,EAAE,GAAG,MAAM,GAAG,cAAc,CAAC,CAAC,CAAC;;YAE/E,cAAc,GAAG,MAAM,CAAC;YACxB,cAAc,IAAI,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC;YAClD,aAAa,GAAG,UAAU,CAAC,KAAK,GAAG,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;SAC5D;KACJ,CAAA;;IAED,sBAAA,mBAAmB,iCAAC,GAAG,EAAE,KAAK,EAAE,WAAW,EAAE;QACzC,OAAmC,GAAG,IAAI;QAAlC,IAAA,OAAO;QAAU,IAAA,QAAQ,cAA3B;QACNd,IAAM,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC9BA,IAAM,eAAe,GAAG,OAAO,CAAC,SAAS,IAAI,CAAC,CAAC;QAC/CA,IAAM,SAAS,GAAG,eAAe,GAAG,OAAO,CAAC,SAAS,GAAG,KAAK,GAAG,KAAK,CAAC;QACtEC,IAAI,cAAc,GAAG,eAAe,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACnFD,IAAM,YAAY,GAAG,eAAe,GAAG,KAAK,GAAG,KAAK,GAAG,cAAc,GAAG,CAAC,CAAC;QAC1EA,IAAM,WAAW,GAAG,CAAC,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;QACnDC,IAAI,cAAc,GAAG,CAAC,CAAC;;QAEvB,KAAKA,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,EAAE,GAAG,EAAE,EAAE;YAClCD,IAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,EAAE,CAAC;YACzCA,IAAM,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC;YAC5CA,IAAM,MAAM,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,GAAG,UAAU,CAAC,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC;YAC5FA,IAAM,MAAM,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,GAAG,UAAU,CAAC,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC;;YAE5F,MAAM,CAAC,IAAI,CAAC,IAAIc,+BAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,cAAc,EAAE,GAAG,CAAC,EAAE,GAAG,cAAc,CAAC,CAAC,CAAC;YAC9E,MAAM,CAAC,IAAI,CAAC,IAAIA,+BAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,KAAK,GAAG,cAAc,EAAE,GAAG,CAAC,EAAE,GAAG,cAAc,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,IAAI,CAAC,IAAIA,+BAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,KAAK,GAAG,cAAc,GAAG,MAAM,EAAE,GAAG,CAAC,EAAE,GAAG,MAAM,GAAG,cAAc,CAAC,CAAC,CAAC;YACxG,MAAM,CAAC,IAAI,CAAC,IAAIA,+BAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,cAAc,GAAG,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,MAAM,GAAG,cAAc,CAAC,CAAC,CAAC;YAC/F,cAAc,IAAI,MAAM,CAAC;YACzB,cAAc,IAAI,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC;SACrD;KACJ,CAAA;;IAED,sBAAA,MAAM,oBAAC,QAAQ,EAAE;QACbd,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3BA,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;;QAE5B,IAAI,CAAC,KAAK,EAAE;YACR,OAAO;SACV;;QAEDA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,GAAG,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;QACxDA,IAAM,WAAW,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,cAAc,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QACxEA,IAAM,KAAK,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC;;QAE1B,IAAI,OAAO,CAAC,YAAY,EAAE;YACtB,IAAI,CAAC,kBAAkB,CAAC,GAAG,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;SACpD,MAAM;YACH,IAAI,CAAC,mBAAmB,CAAC,GAAG,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;SACrD;;QAED,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,EAAE,GAAG,EAAE,EAAE;YAClC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SAChC;KACJ,CAAA;;;EAhPqB,YAiPzB,GAAA;;AAED,iBAAiB,CAAC,WAAW,EAAE;IAC3B,SAAS,EAAE,GAAG;IACd,KAAK,EAAE,GAAG;IACV,YAAY,EAAE,KAAK;IACnB,aAAa,EAAE,IAAI;IACnB,cAAc,EAAE,CAAC;IACjB,MAAM,EAAE;QACJ,OAAO,EAAE,KAAK;QACd,KAAK,EAAE,MAAM;QACb,QAAQ,EAAE,MAAM;QAChB,MAAM,EAAE,CAAC;KACZ;CACJ,CAAC,CAAC;;AAEH,UAAU,CAAC,WAAW,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC,AAEjD,AAA2B;;AC5Q3B,IAAM,cAAc,GAAqB;IAAC;;;;;;;;IAAA,yBACtC,MAAM,sBAAG;QACL,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACvC,CAAA;;IAED,yBAAA,iBAAiB,+BAAC,MAAM,EAAE;QACtBD,IAAM,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAC9BA,IAAM,WAAW,GAAG,IAAI,WAAW,CAAC,IAAI,EAAE;YACtC,MAAM,EAAE,MAAM;YACd,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM;YAC3B,SAAS,EAAE,WAAW,CAAC,SAAS;YAChC,aAAa,EAAE,WAAW,CAAC,aAAa;YACxC,YAAY,EAAE,WAAW,CAAC,YAAY;YACtC,cAAc,EAAE,WAAW,CAAC,cAAc;YAC1C,SAAS,EAAE,WAAW,CAAC,SAAS;SACnC,CAAC,CAAC;;QAEH,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;KACjC,CAAA;;IAED,yBAAA,WAAW,yBAAC,KAAK,EAAE,IAAI,EAAE;QACrBY,yBAAK,CAAC,WAAW,KAAA,CAAC,MAAA,KAAK,EAAE,IAAI,CAAC,CAAC;QAC/BH,QAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;KACxD,CAAA;;;EAvBwB,YAwB5B,GAAA,AAED;;ACbAT,IAAM,KAAK,GAAG,OAAO,CAAC;AACtBA,IAAM,KAAK,GAAG,OAAO,CAAC;AACtBA,IAAM,IAAI,GAAG,MAAM,CAAC;AACpBA,IAAM,GAAG,GAAG,KAAK,CAAC;AAClBA,IAAM,GAAG,GAAG,KAAK,CAAC;AAClBA,IAAM,SAAS,GAAG,UAAU,CAAC;AAC7BA,IAAM,aAAa,GAAG,SAAS,CAAC;AAChCA,IAAM,EAAE,GAAG,IAAI,CAAC;;AAEhB,eAAe,CAAC,OAAO,CAAC,QAAQ,CAAC,mBAAmB,EAAE;IAClD,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,aAAa;IACrD,WAAW,EAAE,IAAI,EAAE,MAAM,EAAE,eAAe,EAAE,QAAQ,EAAE,iBAAiB;IACvE,YAAY,EAAE,SAAS,EAAE,SAAS,EAAE,oBAAoB;CAC3D,CAAC,CAAC;;AAEH,eAAe,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE;IACzC,OAAO,EAAE,YAAY,EAAE,MAAM;CAChC,CAAC,CAAC;;AAEH,eAAe,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;AACvD,eAAe,CAAC,OAAO,CAAC,QAAQ,CAAC,aAAa,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;AAC3D,eAAe,CAAC,OAAO,CAAC,QAAQ,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;;AAE7D,eAAe,CAAC,OAAO,CAAC,QAAQ,CAAC,aAAa,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE,aAAa,EAAE,CAAC,CAAC;AAC3F,eAAe,CAAC,OAAO,CAAC,QAAQ,CAAC,aAAa,EAAE,EAAE,UAAU,EAAE,YAAY,EAAE,UAAU,EAAE,CAAC,CAAC;;AAE1F,YAAY,CAAC,OAAO,CAAC,QAAQ;IACzB,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,aAAa,EAAE;IACzD,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,eAAe,EAAE,gBAAgB,EAAE;CAC/E,CAAC;;AAEF,YAAY,CAAC,OAAO,CAAC,QAAQ;IACzB,EAAE,YAAY,EAAE,SAAS,EAAE;IAC3B,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE;CAC/C,CAAC;;AAEF,YAAY,CAAC,OAAO,CAAC,QAAQ;IACzB,EAAE,SAAS,EAAE,oBAAoB,EAAE;IACnC,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,aAAa,EAAE;CAC3D,CAAC;;AAEF,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,aAAa,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;AAC9F,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,YAAY,EAAE,UAAU,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;;AAE9F,YAAY,CAAC,OAAO,CAAC,QAAQ;IACzB,EAAE,MAAM,EAAE;IACV,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,iBAAiB,EAAE,SAAS,EAAE;CAC/D,CAAC;;AAEF,iBAAiB,CAAC,OAAO,CAAC,QAAQ;IAC9B,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,oBAAoB,EAAE;IAC1F,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE;CAC/E,CAAC;;AAEF,iBAAiB,CAAC,OAAO,CAAC,QAAQ;IAC9B,EAAE,YAAY,EAAE,SAAS,EAAE;IAC3B,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;CACxD,CAAC;;AAEF,iBAAiB,CAAC,OAAO,CAAC,QAAQ;IAC9B,EAAE,UAAU,EAAE,YAAY,EAAE,UAAU,EAAE;IACxC,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;CAC/B,CAAC;;AAEF,YAAY,CAAC,OAAO,CAAC,QAAQ;IACzB,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE;IACjC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,kBAAkB,EAAE;CAC/G,CAAC;;AAEF,YAAY,CAAC,OAAO,CAAC,QAAQ;IACzB,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE;CAC/D,CAAC;;AAEF,YAAY,CAAC,OAAO,CAAC,QAAQ;IACzB,EAAE,WAAW,EAAE,IAAI,EAAE;IACrB,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE;CAClF,CAAC;;AAEF,iBAAiB,CAAC,OAAO,CAAC,QAAQ;IAC9B,EAAE,WAAW,EAAE,IAAI,EAAE;IACrB,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;MAC1C,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;CACtD,CAAC;;AAEF,YAAY,CAAC,OAAO,CAAC,QAAQ;IACzB,EAAE,QAAQ,EAAE,iBAAiB,EAAE;IAC/B,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE;CACjG,CAAC;;AAEF,iBAAiB,CAAC,OAAO,CAAC,QAAQ;IAC9B,EAAE,QAAQ,EAAE,iBAAiB,EAAE;IAC/B,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK;MACjF,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;CACpC,CAAC;;AAEF,YAAY,CAAC,OAAO,CAAC,QAAQ;IACzB,EAAE,MAAM,EAAE,eAAe,EAAE;IAC3B,EAAE,SAAS,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,iBAAiB,EAAE,SAAS,EAAE;CAC7E,CAAC;;AAEF,iBAAiB,CAAC,OAAO,CAAC,QAAQ;IAC9B,EAAE,MAAM,EAAE,eAAe,EAAE;IAC3B,EAAE,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;CAC/D,CAAC;;AAEF,YAAY,CAAC,OAAO,CAAC,QAAQ;IACzB,EAAE,GAAG,EAAE,KAAK,EAAE;IACd,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,iBAAiB,EAAE,SAAS,EAAE;CAC1E;;AC5FDA,IAAM,UAAU,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;;AAE7CA,IAAM,SAAS,GAAG,WAAW,CAAC;AAC9BA,IAAM,WAAW,GAAG,aAAa,CAAC;AAClCA,IAAM,eAAe,GAAG,EAAE,CAAC;;AAE3B,IAAM,KAAK,GAAc;IAAC,cACX,CAAC,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,OAAY,EAAE;0BAAP;yCAAA,GAAG,EAAE;;QACxDY,QAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAER,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACnC,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QACpD,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,YAAY,CAAC;;QAEvC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;;QAE3BZ,IAAM,OAAO,GAAG,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QAC1D,IAAI,CAAC,gBAAgB,GAAG,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;;QAEvC,IAAI,CAAC,YAAY,EAAE,CAAC;;QAEpB,IAAI,CAAC,aAAa,EAAE,CAAC;;QAErB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,UAAU,CAAC,YAAY,CAAC,WAAW,EAAE,YAAG;YACpC,IAAI,CAACQ,MAAI,CAAC,UAAU,EAAE;gBAClBA,MAAI,CAAC,OAAO,EAAE,CAAC;gBACfA,MAAI,CAAC,aAAa,EAAE,CAAC;aACxB;SACJ,CAAC,CAAC;KACN;;;;wCAAA;;IAED,gBAAA,YAAY,0BAAC,OAAO,EAAE;QAClB,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;QAC/B,OAAO,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;QACpC,OAAO,OAAO,CAAC,UAAU,EAAE;YACvB,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SAC3C;QACD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KAC1B,CAAA;;IAED,gBAAA,gBAAgB,8BAAC,OAAO,EAAE;QACtB,QAAQ,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;KAChC,CAAA;;IAED,gBAAA,UAAU,wBAAC,OAAO,EAAE,YAAY,EAAE;QAC9BR,IAAM,YAAY,GAAG,EAAE,CAAC;QACxBA,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC;;QAEpC,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACnD;QACD,OAAO,CAAC,MAAM,GAAG,YAAY,CAAC;;QAE9B,kBAAkB,CAAC,OAAO,CAAC,CAAC;QAC5B,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;;;QAG1C,IAAI,OAAO,CAAC,YAAY,KAAK,IAAI,EAAE;YAC/B,OAAO,OAAO,CAAC,YAAY,CAAC;SAC/B;;QAED,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,EAAE,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;QACrD,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAC5B,CAAA;;IAED,gBAAA,OAAO,uBAAG;QACN,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;;KAEjF,CAAA;;IAED,gBAAA,MAAM,oBAAC,KAAK,EAAE;QACVD,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC5BA,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;;QAE/B,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,KAAK,WAAW,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,KAAK,WAAW,CAAC,MAAM,CAAC,EAAE;YAC1I,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC1B,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;SAChC;KACJ,CAAA;;IAED,gBAAA,OAAO,uBAAG;QACN,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC/B,CAAA;;IAED,gBAAA,MAAM,oBAAC,QAAQ,EAAE;QACb,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,CAAC,iBAAiB,EAAE,CAAC;;QAEzB,IAAI,QAAQ,EAAE;YACVA,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;YACvCA,IAAM,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACzC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACzB,MAAM;YACH,IAAI,CAAC,OAAO,EAAE,CAAC;SAClB;KACJ,CAAA;;IAED,gBAAA,OAAO,qBAAC,IAAI,EAAE;QACVA,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;;QAEjC,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YACxC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,KAAK,IAAI,EAAE;gBACjC,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;aACnC;SACJ;KACJ,CAAA;;IAED,gBAAA,cAAc,4BAAC,IAAI,EAAE;QACjB,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KAC7B,CAAA;;IAED,gBAAA,cAAc,4BAAC,IAAI,EAAE;QACjBD,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;;QAEnC,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YACzC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,KAAK,IAAI,EAAE;gBAClC,OAAO,IAAI,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;aACpC;SACJ;KACJ,CAAA;;IAED,gBAAA,eAAe,6BAAC,GAAG,EAAE;QACjBD,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QACnC,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE;YACZ,OAAO,IAAI,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;SACpC;KACJ,CAAA;;IAED,gBAAA,QAAQ,wBAAG;QACP,OAAO,IAAI,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAC5C,CAAA;;IAED,gBAAA,eAAe,6BAAC,IAAI,EAAE,MAAM,EAAE;QAC1BA,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QAChCA,IAAM,WAAW,GAAG,CAAC,QAAQ,CAAC,SAAS,IAAI,QAAQ,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACrEC,IAAI,MAAM,CAAC;;QAEX,IAAI,UAAU,CAAC,MAAM,CAAC,EAAE;YACpB,MAAM,GAAG,QAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;SAC1C,MAAM;YACHA,IAAI,UAAU,EAAE,YAAY,CAAC;YAC7B,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;gBAClB,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;gBAC3B,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC;aAClC,MAAM;gBACH,UAAU,GAAG,YAAY,GAAG,MAAM,CAAC;aACtC;;YAED,IAAI,WAAW,CAAC,IAAI,KAAK,KAAK,EAAE;gBAC5B,MAAM,GAAG,mBAAmB,CAAC,QAAQ,CAAC,kBAAkB,CAAC,UAAU,CAAC,EAAE,YAAY,CAAC,CAAC;aACvF,MAAM,IAAI,WAAW,CAAC,IAAI,KAAK,GAAG,IAAI,WAAW,CAAC,IAAI,KAAK,MAAM,EAAE;gBAChE,MAAM,GAAG,mBAAmB,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;aACjF,MAAM;gBACH,MAAM,GAAG,QAAQ,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;aACpD;SACJ;;QAED,IAAI,MAAM,EAAE;YACR,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;SAC5C;KACJ,CAAA;;IAED,gBAAA,qBAAqB,mCAAC,IAAI,EAAE,MAAM,EAAE;QAChCD,IAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;QAClC,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YAC1C,SAAS,CAAC,oBAAoB,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;SACrD;KACJ,CAAA;;IAED,gBAAA,WAAW,yBAAC,MAAM,EAAE;QAChBD,IAAM,MAAM,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QACrC,OAAgD,GAAG,IAAI;QAArC,IAAA,OAAO;QAAa,IAAA,QAAQ,iBAAxC;QACNC,IAAI,KAAK,EAAE,aAAa,CAAC;;QAEzB,IAAI,UAAU,CAAC,MAAM,CAAC,EAAE;YACpB,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACnC,IAAI,KAAK,IAAI,MAAM,EAAE;gBACjB,aAAa,GAAG,KAAK,CAAC,UAAU,CAAC;aACpC;SACJ,MAAM,IAAI,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE;YAClC,aAAa,GAAG,QAAQ,CAAC,YAAY,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;SAC/D;;QAED,IAAI,MAAM,EAAE;YACR,IAAI,aAAa,IAAI,CAAC,EAAE;gBACpBD,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC;gBACnE,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;aAC1B;SACJ,MAAM,IAAI,KAAK,EAAE;YACd,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACvB;KACJ,CAAA;;IAED,gBAAA,WAAW,2BAAG;QACV,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;KACxB,CAAA;;IAED,gBAAA,YAAY,4BAAG;QACXA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,IAAI,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;;QAEjCA,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QACzC,IAAI,SAAS,CAAC,KAAK,EAAE;YACjBU,aAAW,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC;SACjD;QACD,IAAI,SAAS,CAAC,MAAM,EAAE;YAClBA,aAAW,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;SACnD;;QAED,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,KAAK,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;YAC5D,IAAI,OAAO,EAAE;gBACT,OAAO,CAAC,OAAO,EAAE,CAAC;aACrB;;YAED,IAAI,CAAC,OAAO,GAAGK,8BAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE;gBACrC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ;aAC9B,CAAC,CAAC;;SAEN,MAAM;YACH,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YACrB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;SACzB;KACJ,CAAA;;IAED,gBAAA,YAAY,4BAAG;QACX,OAAO,IAAI,CAAC,OAAO,CAAC;KACvB,CAAA;;IAED,gBAAA,OAAO,uBAAG;QACNf,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;;QAE/B,IAAI,CAAC,YAAY,EAAE,CAAC;;QAEpB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;;QAEjC,KAAK,CAAC,YAAY,EAAE,CAAC;;QAErB,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,KAAK,EAAE;YACpC,KAAK,CAAC,QAAQ,CAAC,SAAS,OAAO,EAAE;gBAC7B,IAAI,OAAO,CAAC,SAAS,EAAE;oBACnB,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;iBAC7B;aACJ,CAAC,CAAC;SACN;;QAED,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;;QAEhC,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,KAAK,EAAE;YACpC,KAAK,CAAC,QAAQ,CAAC,SAAS,OAAO,EAAE;gBAC7B,IAAI,OAAO,CAAC,SAAS,EAAE;oBACnB,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;iBAC5B;aACJ,CAAC,CAAC;SACN;;QAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QACtC,IAAI,CAAC,UAAU,GAAG,IAAI,SAAS,EAAE,CAAC;QAClC,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,qBAAqB,EAAE,CAAC;;QAE7B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;;QAErB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACjB,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAC3B;KACJ,CAAA;;IAED,gBAAA,YAAY,0BAAC,OAAO,EAAE;QAClBC,IAAI,MAAM,CAAC;QACX,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE;YAC9CD,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;YACzCA,IAAM,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC;;YAE1D,UAAU,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;;YAE/BA,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;;YAE/B,SAAS,CAAC,KAAK,GAAG,iBAAiB,CAAC,KAAK,CAAC;YAC1C,SAAS,CAAC,MAAM,GAAG,iBAAiB,CAAC,MAAM,CAAC;;YAE5C,KAAK,CAAC,YAAY,EAAE,CAAC;;YAErB,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;SACzB,MAAM;YACH,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;SACxC;;QAED,OAAO,MAAM,CAAC;KACjB,CAAA;;IAED,gBAAA,cAAc,8BAAG;QACb,OAAO,IAAI,CAAC,SAAS,YAAY,mBAAmB,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC;KACvF,CAAA;;IAED,gBAAA,eAAe,+BAAG;QACdA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAI,OAAO,CAAC,QAAQ,KAAK,KAAK,EAAE;YAC5B,IAAI,CAAC,SAAS,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;SACnE;KACJ,CAAA;;IAED,gBAAA,oBAAoB,oCAAG;QACnBA,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACvCA,IAAM,SAAS,GAAG,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,SAAS,CAAC;QAC7C,IAAI,QAAQ,KAAK,KAAK,IAAI,SAAS,KAAK,KAAK,EAAE;YAC3C,IAAI,CAAC,cAAc,GAAG,IAAI,aAAa,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;SAC5D;KACJ,CAAA;;IAED,gBAAA,cAAc,8BAAG;QACb,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;YAC/C,OAAO;SACV;;QAEDA,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACvCA,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACvCA,IAAM,SAAS,GAAG,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,SAAS,CAAC;QAC7C,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,KAAK,KAAK,IAAI,SAAS,KAAK,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,EAAE;YACpH,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SACpC,MAAM;YACH,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACnC;KACJ,CAAA;;IAED,gBAAA,qBAAqB,qCAAG;QACpBA,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACvCA,IAAM,UAAU,GAAG,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,UAAU,CAAC;QAC/C,IAAI,QAAQ,KAAK,KAAK,IAAI,UAAU,KAAK,KAAK,EAAE;YAC5C,IAAI,CAAC,eAAe,GAAG,IAAI,cAAc,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;SAC/D;KACJ,CAAA;;IAED,gBAAA,cAAc,8BAAG;QACb,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;YAC/C,OAAO;SACV;;QAEDA,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACvCA,IAAM,UAAU,GAAG,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,UAAU,CAAC;QAC/C,IAAI,CAAC,QAAQ,KAAK,KAAK,IAAI,UAAU,KAAK,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,EAAE;YACxG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SACpC,MAAM;YACH,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACnC;KACJ,CAAA;;IAED,gBAAA,cAAc,8BAAG;QACb,OAA8C,GAAG,IAAI;QAAzB,IAAA,cAAc,uBAApC;QACNC,IAAI,OAAO,CAAC;;QAEZ,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;YACvB,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC;SACvD,MAAM;YACH,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;SAC5D;;QAED,OAAO,OAAO,CAAC;KAClB,CAAA;;IAED,gBAAA,oBAAoB,kCAAC,OAAO,EAAE;QAC1B,OAAO,IAAI,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;KACrD,CAAA;;IAED,gBAAA,aAAa,2BAAC,OAAO,EAAE,YAAY,EAAE;QACjC,iBAAiB,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;QACzC,mBAAmB,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;KAC9C,CAAA;;IAED,gBAAA,iBAAiB,iCAAG;QAChBD,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAC9BA,IAAM,MAAM,GAAG,OAAO,CAAC,YAAY,IAAI,EAAE,CAAC;;QAE1C,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpCD,IAAM,aAAa,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YAChCA,IAAM,WAAW,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;YAC9CA,IAAM,QAAQ,GAAG,aAAa,CAAC,SAAS,CAAC;;YAEzC,aAAa,CAAC,KAAK,GAAG,aAAa,CAAC,KAAK,IAAI,WAAW,CAAC;YACzD,IAAI,QAAQ,EAAE;gBACV,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,IAAI,WAAW,CAAC;aAClD;SACJ;KACJ,CAAA;;IAED,gBAAA,SAAS,yBAAG;QACRA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACxCA,IAAM,KAAK,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;QACpD,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;QACnB,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC;;QAE3B,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;;QAEvC,IAAI,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE;YACxB,KAAK,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;SACxE;QACD,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACvB,KAAK,CAAC,MAAM,EAAE,CAAC;;QAEf,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,gBAAA,aAAa,6BAAG;QACZ,OAA0B,GAAG,IAAI;QAAzB,IAAA,OAAO;QAAE,IAAA,OAAO,eAAlB;QACNA,IAAM,IAAI,GAAGU,aAAW,CAAC,OAAO,CAAC,CAAC;;QAElC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;QAElB,OAAO,UAAU,CAAC;YACd,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,aAAa;YAC9C,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,cAAc;YACjD,WAAW,EAAE,OAAO,CAAC,WAAW;SACnC,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC;KACzB,CAAA;;IAED,gBAAA,eAAe,6BAAC,UAAU,EAAE;QACxBV,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;;QAE7BA,IAAM,QAAQ,GAAG,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,GAAG,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;;QAE9G,OAAO,QAAQ,CAAC;KACnB,CAAA;;IAED,gBAAA,aAAa,6BAAG;QACZ,OAAO,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;KACtD,CAAA;;IAED,gBAAA,eAAe,+BAAG;;;QACd,OAA6B,GAAG,IAAI;QAAf,IAAA,IAAI,sBAAnB;QACNA,IAAM,UAAU,GAAG,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;;QAEzC,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClCD,IAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACrBA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC7B,IAAI,IAAI,YAAY,YAAY,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;gBACrEC,IAAI,GAAG,GAAG,CAAC,CAAC;gBACZA,IAAI,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;;gBAExC,IAAI,IAAI,YAAY,gBAAgB,EAAE;oBAClC,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;oBAC9B,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;iBACjC;;gBAED,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;oBACpB,IAAI,IAAI,YAAY,gBAAgB,EAAE;wBAClC,GAAG,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,EAAE,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC;qBACrE,MAAM;wBACH,GAAG,EAAE,CAAC;qBACT;iBACJ;;gBAEDD,IAAM,SAAS,GAAG,IAAI,SAAS,CAACQ,MAAI,EAAE,IAAI;oBACtC,UAAU,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,OAAO,CAAC,MAAM,CAAC;iBACrD,CAAC;;gBAEF,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAC9B;SACJ;KACJ,CAAA;;IAED,gBAAA,YAAY,0BAAC,CAAC,EAAE;QACZ,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;KACxC,CAAA;;IAED,gBAAA,OAAO,qBAAC,CAAC,EAAE;QACP,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;KAClC,CAAA;;IAED,gBAAA,UAAU,wBAAC,CAAC,EAAE;QACV,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;KACtC,CAAA;;IAED,gBAAA,aAAa,6BAAG;QACZ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtD,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5D,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;QAE3D,IAAI,CAAC,UAAU,GAAGiC,+BAAQ;YACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;YAC1B,eAAe;SAClB,CAAC;KACL,CAAA;;IAED,gBAAA,WAAW,yBAAC,QAAQ,EAAE;QAClB,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACjC;KACJ,CAAA;;IAED,gBAAA,cAAc,4BAAC,QAAQ,EAAE;QACrBzC,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC/C,IAAI,KAAK,IAAI,CAAC,EAAE;YACZ,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SACnC;KACJ,CAAA;;IAED,gBAAA,gBAAgB,8BAAC,UAAU,EAAE;QACzBA,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACjC,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,SAAS,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YAC7C,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE;gBAC7C,OAAO,IAAI,CAAC;aACf;SACJ;KACJ,CAAA;;IAED,gBAAA,OAAO,qBAAC,IAAI,EAAE,IAAS,EAAE;mCAAP,GAAG,EAAE;;QACnB,IAAI,IAAI,KAAK,YAAY,EAAE;YACvB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACtE;QACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;;QAEnBD,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACjCC,IAAI,kBAAkB,GAAG,KAAK,CAAC;QAC/B,KAAKA,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,SAAS,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YAC7C,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;gBACpC,kBAAkB,GAAG,IAAI,CAAC;aAC7B;SACJ;;QAED,OAAO,kBAAkB,CAAC;KAC7B,CAAA;;IAED,gBAAA,aAAa,6BAAG;QACZ,OAA0B,GAAG,IAAI;QAAzB,IAAA,OAAO;QAAE,IAAA,OAAO,eAAlB;;QAEN,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,yBAAyB,CAAC,CAAC;QAC3D,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,yBAAyB,CAAC,CAAC;QAC3D;QAAA,UAAU,CAAC,OAAO,EAAE,QAAA,EAAC,KACjB,EAAE,WAAW,EAAE,GAAA,IAAM,CAAC,aAAa,KAAC,EAClC,UAAU,EAAE,GAAA,IAAM,CAAC,kBAAkB,OAC1C,CAAC,CAAC;;QAEH,IAAI,IAAI,CAAC,sBAAsB,EAAE,EAAE;YAC/B;YAAA,UAAU,CAAC,OAAO,EAAE,UAAA,EAAC,OAAC,EAAE,SAAS,EAAE,GAAA,IAAM,CAAC,UAAU,SAAE,CAAC,CAAC;SAC3D;;QAED,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE;YACnD,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;YAC7B,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;YAC3B,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACzB,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACzB,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC;YAC3C,aAAa,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;YAC7C,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;SAC1C,CAAC,CAAC;;QAEH,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,EAAE,CAAC;KACzB,CAAA;;IAED,gBAAA,gBAAgB,gCAAG;QACf,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;YACzC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;SAC3B;KACJ,CAAA;;IAED,gBAAA,aAAa,2BAAC,CAAC,EAAE;QACb,IAAI,IAAI,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;YACjD,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,QAAQ,CAAC;YACnC,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;SAClC;KACJ,CAAA;;IAED,gBAAA,WAAW,yBAAC,CAAC,EAAE;QACX,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;YAC1C,IAAI,IAAI,CAAC,OAAO,EAAE;gBACd,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC;aACjC;YACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;SAC9B;KACJ,CAAA;;IAED,gBAAA,cAAc,4BAAC,CAAC,EAAE;QACdD,IAAM,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC;;QAE5C,IAAI,cAAc,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;YAC3C,CAAC,CAAC,cAAc,EAAE,CAAC;YACnBA,IAAM,uBAAuB,GAAG,IAAI,CAAC,gBAAgB,CAAC;YACtDC,IAAI,UAAU,GAAG,CAAC,CAAC,CAAC,QAAQ,GAAG,uBAAuB,GAAG,CAAC,CAAC;;YAE3D,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,GAAG,EAAE;gBAC7B,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC,CAAC;;gBAEzC,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,QAAQ,CAAC;gBACnCD,IAAM,IAAI,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,aAAa,EAAE,CAAC,EAAE,CAAC;gBAClG,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,EAAE;;oBAElD,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;wBAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;qBACxB;;oBAEDA,IAAM,MAAM,GAAG,IAAI,CAAC,UAAU,GAAG,cAAc,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;oBACzE,IAAI,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;wBACrC,cAAc,CAAC,IAAI,EAAE,CAAC;qBACzB;iBACJ;aACJ;SACJ;KACJ,CAAA;;IAED,gBAAA,SAAS,uBAAC,CAAC,EAAE;QACT,IAAI,CAAC,CAAC,OAAO,EAAE;YACXA,IAAM,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;;YAExD,IAAI,OAAO,IAAI,OAAO,CAAC,KAAK,EAAE;gBAC1B,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC;aACxC;SACJ;KACJ,CAAA;;IAED,gBAAA,MAAM,oBAAC,CAAC,EAAE;QACNA,IAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;;QAEzC,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,MAAM,CAAC,EAAE;YAC3E,OAAO;SACV;;;QAGD,IAAI,IAAI,CAAC,gBAAgB,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,EAAE;YACvD,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;SAChD;;QAED,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YAC3C,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;YAC/B,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC9B;;QAED,IAAI,IAAI,CAAC,cAAc,EAAE;YACrB,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;gBAC9B,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,UAAU,EAAE,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,aAAa,EAAE,CAAC,EAAE,CAAC,CAAC;aAC/F;SACJ;KACJ,CAAA;;IAED,gBAAA,KAAK,mBAAC,CAAC,EAAE;QACL,OAA6C,GAAG,IAAI;QAAnC,IAAA,KAAK;QAAa,IAAA,QAAQ,iBAAvC;;QAEJ,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;YACxB,OAAO;SACV;;QAED,IAAI,QAAQ,EAAE;YACVA,IAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;YAEhC,IAAI,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,aAAa,EAAE,CAAC,EAAE,CAAC,EAAE;gBACzE,QAAQ,CAAC,GAAG,EAAE,CAAC;aAClB;SACJ,MAAM,IAAI,KAAK,EAAE;YACdA,IAAM0C,QAAM,GAAG,EAAE,CAAC;YAClB1C,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;;YAExB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAClCD,IAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC5BA,IAAM,QAAQ,GAAG,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC;gBAC1C,IAAI,QAAQ,EAAE;oBACVA,IAAM,IAAI,GAAG,WAAW,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACtDA,IAAM,KAAK,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC;;oBAEjD,IAAI,KAAK,KAAK,CAAC,EAAE;wBACb0C,QAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;qBACxE;iBACJ;aACJ;;YAED,KAAK,CAAC,UAAU,GAAGA,QAAM,CAAC;YAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;gBACf,UAAU,EAAEA,QAAM;gBAClB,aAAa,EAAE,CAAC;aACnB,CAAC,CAAC;SACN;;QAED,IAAI,IAAI,CAAC,cAAc,EAAE;YACrB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC/B;KACJ,CAAA;;IAED,gBAAA,IAAI,kBAAC,CAAC,EAAE;QACJ,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;YACxB,OAAO;SACV;;QAED1C,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,IAAI,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;YAC7B,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC;YAC9B,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;gBACnB,UAAU,EAAE,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBAC3C,aAAa,EAAE,CAAC;aACnB,CAAC,CAAC;YACH,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;SAC/B,MAAM;YACH,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;SACpC;;QAED,IAAI,IAAI,CAAC,cAAc,EAAE;YACrBA,IAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1C,IAAI,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,aAAa,EAAE,CAAC,EAAE,CAAC,EAAE;gBACzE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;gBAC3B,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,aAAa,EAAE,CAAC,EAAE,CAAC,CAAC;aACpE;SACJ;KACJ,CAAA;;IAED,gBAAA,cAAc,8BAAG;QACb,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC;KAC/B,CAAA;;IAED,gBAAA,WAAW,yBAAC,CAAC,EAAE;;;QACXA,IAAM,KAAK,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;QACjCA,IAAM,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC;QAC5CA,IAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;;QAEzC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,MAAM,CAAC,EAAE;YACjD,OAAO;SACV;;QAED,IAAI,cAAc,EAAE;YAChBA,IAAM,IAAI,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,aAAa,EAAE,CAAC,EAAE,CAAC;YAC7F,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,EAAE;gBAClD,CAAC,CAAC,cAAc,EAAE,CAAC;;gBAEnB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;oBAChB,IAAI,CAAC,iBAAiB,EAAE,CAAC;oBACzB,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;oBAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;iBACxB;;gBAED,IAAI,IAAI,CAAC,UAAU,EAAE;oBACjB,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;iBACjC;;gBAED,IAAI,CAAC,UAAU,GAAG,cAAc,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACrD,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;oBAC9C,cAAc,CAAC,IAAI,EAAE,CAAC;iBACzB;;gBAED,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,YAAG;oBAC5BQ,MAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;oBAC7BA,MAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACtB,IAAIA,MAAI,CAAC,OAAO,EAAE;wBACdA,MAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC;qBACjC;iBACJ,EAAE,gBAAgB,CAAC,CAAC;aACxB;SACJ,MAAM;YACHP,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;YAC3B,IAAI,CAAC,KAAK,EAAE;gBACRD,IAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;gBAC/D,IAAI,CAAC,SAAS,EAAE;oBACZ,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;iBAC1B;aACJ;;YAED,IAAI,KAAK,EAAE;gBACPA,IAAM,UAAU,GAAG,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC;gBAC7C,KAAK,CAAC,UAAU,GAAG,UAAU,GAAG,KAAK,CAAC;;gBAEtCA,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBACjCA,IAAM,MAAM,GAAG,EAAE,CAAC;;gBAElB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAClCD,IAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC5BA,IAAM,QAAQ,GAAG,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC;oBAC1C,IAAI,QAAQ,EAAE;wBACV,MAAM,CAAC,QAAQ,CAAC,GAAG,WAAW,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC;qBAC1D;iBACJ;;gBAED,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;oBACf,KAAK,EAAE,KAAK;oBACZ,UAAU,EAAE,MAAM;oBAClB,aAAa,EAAE,CAAC;iBACnB,CAAC,CAAC;;gBAEH,IAAI,IAAI,CAAC,UAAU,EAAE;oBACjB,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;iBACjC;;gBAED,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,YAAG;oBAC5BQ,MAAI,CAAC,cAAc,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;iBACpC,EAAE,gBAAgB,CAAC,CAAC;aACxB;SACJ;KACJ,CAAA;;IAED,gBAAA,gBAAgB,8BAAC,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE;QACpCR,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;QACvCA,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC5CA,IAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;QAEpC,IAAI,CAAC,IAAI,EAAE;YACP,OAAO;SACV;;QAEDA,IAAM,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;;QAEhCA,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;YACvC,UAAU,EAAE,MAAM;YAClB,aAAa,EAAE,CAAC;SACnB,CAAC,CAAC;;QAEH,IAAI,SAAS,EAAE;YACX,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAC3B,MAAM;YACH,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,SAAS,GAAG;gBACb,UAAU,EAAE,MAAM;gBAClB,IAAI,EAAE,IAAI;gBACV,IAAI,EAAE,IAAI;aACb,CAAC;SACL;KACJ,CAAA;;IAED,gBAAA,cAAc,4BAAC,CAAC,EAAE,UAAU,EAAE;QAC1B,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;gBACrB,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU;gBACrC,aAAa,EAAE,CAAC;aACnB,CAAC,CAAC;YACH,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACzB;KACJ,CAAA;;IAED,gBAAA,gBAAgB,8BAAC,CAAC,EAAE,KAAK,EAAE;QACvBA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAC5C,IAAI,OAAO,EAAE;YACT,OAAO,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;SACvD;KACJ,CAAA;;IAED,gBAAA,oBAAoB,kCAAC,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE;QACpCC,IAAI,OAAO,GAAG,OAAO,CAAC;QACtBA,IAAI,YAAY,CAAC;QACjB,OAAO,OAAO,IAAI,CAAC,YAAY,EAAE;YAC7B,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;YACpC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC;SAC5B;;QAED,IAAI,YAAY,EAAE;YACd,IAAI,YAAY,CAAC,QAAQ,EAAE;gBACvB,YAAY,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;aACtE;;YAED,IAAI,KAAK,EAAE;gBACP,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aAC9C;;YAED,OAAO,YAAY,CAAC;SACvB;KACJ,CAAA;;IAED,gBAAA,iBAAiB,+BAAC,CAAC,EAAE;QACjBD,IAAM,WAAW,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;KACjE,CAAA;;IAED,gBAAA,eAAe,+BAAG;QACd,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAChB,OAAiC,GAAG,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,aAAa,EAAE,YAAY,EAAE,CAAC;YAAxF,IAAA,WAAW;YAAE,IAAA,UAAU,kBAAzB;YACN,IAAI,CAAC,QAAQ,GAAG;gBACZ,GAAG,EAAE,UAAU;gBACf,IAAI,EAAE,WAAW;aACpB,CAAC;SACL;;QAED,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB,CAAA;;IAED,gBAAA,sBAAsB,oCAAC,KAAK,EAAE;QAC1BA,IAAM,OAAO,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACvCA,IAAM,MAAM,GAAG,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;QAE3C,OAAO;YACH,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;YACjD,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;SACjD,CAAC;KACL,CAAA;;IAED,gBAAA,mBAAmB,iCAAC,OAAO,EAAE,OAAO,EAAE;QAClCA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,MAAM,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC;QACtCA,IAAM,OAAO,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;;QAEvC,OAAO,IAAI,KAAK;YACZ,OAAO,GAAG,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI;YACpC,OAAO,GAAG,MAAM,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG;SACrC,CAAC;KACL,CAAA;;IAED,gBAAA,IAAI,kBAAC,CAAC,EAAE;;;QACJA,IAAM,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QACnDA,IAAM,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;;QAE7D,IAAI,IAAI,CAAC,YAAY,KAAK,OAAO,EAAE;YAC/B,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;SACpC,MAAM;YACH,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,CAAC,EAAE;gBACtC,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAC5B;;YAED,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;SACpC;;;QAGD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,UAAU,CAAC,YAAG;YACVQ,MAAI,CAAC,WAAW,GAAG,KAAK,CAAC;SAC5B,EAAE,CAAC,CAAC,CAAC;KACT,CAAA;;IAED,gBAAA,MAAM,oBAAC,CAAC,EAAE;QACNR,IAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;QACzC,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;KACpC,CAAA;;IAED,gBAAA,eAAe,6BAAC,OAAO,EAAE,CAAC,EAAE;;;QACxBC,IAAI,OAAO,GAAG,OAAO,CAAC;QACtB,OAAO,OAAO,EAAE;YACZ,IAAI,OAAO,CAAC,KAAK,EAAE;gBACf,OAAO,CAAC,KAAK,CAACO,MAAI,EAAE,CAAC,CAAC,CAAC;aAC1B;;YAED,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC;SAC5B;KACJ,CAAA;;IAED,gBAAA,WAAW,yBAAC,OAAO,EAAE,CAAC,EAAE;QACpBR,IAAM,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAC3D,OAAkD,GAAG,IAAI;QAAvC,IAAA,OAAO;QAAc,IAAA,SAAS,kBAA1C;;QAEN,IAAI,IAAI,CAAC,cAAc,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;YACrG,OAAO,KAAK,CAAC;SAChB;;QAEDA,IAAM,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAC,EAAE,SAAS,OAAO,EAAE;YAClE,OAAO,OAAO,CAAC,KAAK,IAAI,CAAC,CAAC,OAAO,YAAY,YAAY,CAAC,CAAC;SAC9D,CAAC,CAAC;;QAEH,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE;YAChC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;;YAE1BA,IAAM,cAAc,GAAG,UAAU,CAAC,EAAE,EAAE,cAAc,EAAE,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAC7E,IAAI,cAAc,CAAC,OAAO,EAAE;gBACxB,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACvB;;YAED,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;YAEtB,OAAO,KAAK,CAAC;SAChB;KACJ,CAAA;;IAED,gBAAA,UAAU,wBAAC,CAAC,EAAE;QACVA,IAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC;;QAE3D,IAAI,KAAK,IAAI,KAAK,CAAC,eAAe,EAAE;YAChC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,IAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChG;YAAA,UAAU,CAAC,QAAQ,EAAE,QAAA,EAAC,KAClB,EAAE,SAAS,EAAE,GAAA,IAAM,CAAC,sBAAsB,OAC7C,CAAC,CAAC;SACN;KACJ,CAAA;;IAED,gBAAA,kBAAkB,gCAAC,CAAC,EAAE;QAClB,OAAgF,GAAG,IAAI;QAA/E,IAAA,OAAO;QAAY,IAAA,OAAO;QAAc,IAAA,SAAS;QAAgB,IAAA,KAAK,oBAAxE;QACNA,IAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;;QAEzC,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE;YAC1C,IAAI,KAAK,IAAI,KAAK,CAAC,eAAe,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,eAAe,EAAE;gBAChFA,IAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;gBACrF,IAAI,WAAW,IAAI,WAAW,KAAK,KAAK,EAAE;oBACtC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;oBAC3B,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;;oBAEhCA,IAAM,cAAc,GAAG,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;oBAC9E,IAAI,cAAc,CAAC,OAAO,EAAE;wBACxB,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;qBAC7B;;oBAED,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;iBAC/B;aACJ;SACJ,MAAM;YACH;YAAA,YAAY,CAAC,QAAQ,EAAE,QAAA,EAAC,KACpB,EAAE,SAAS,EAAE,GAAA,IAAM,CAAC,sBAAsB,OAC7C,CAAC,CAAC;YACH,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC5B;KACJ,CAAA;;IAED,gBAAA,UAAU,wBAAC,CAAC,EAAE;QACVA,IAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;;QAEzC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;;QAE9B,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACtB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;SACjC;;QAED,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;YACvB,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;SACvC;KACJ,CAAA;;IAED,gBAAA,gBAAgB,8BAAC,MAAM,EAAE;QACrBA,IAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;;QAE7C,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxCD,IAAM,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;;YAE9B,IAAI,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE;gBACnC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;aAC1B,MAAM;gBACH,OAAO,CAAC,IAAI,EAAE,CAAC;aAClB;SACJ;KACJ,CAAA;;IAED,gBAAA,mBAAmB,iCAAC,MAAM,EAAE,CAAC,EAAE;QAC3B,OAA0I,GAAG,IAAI;QAArH,IAAA,cAAc;QAAe,IAAA,QAAQ;QAAe,IAAA,YAAY;QAAc,IAAA,OAAO;QAAc,IAAA,SAAS,kBAAlI;;QAEN,IAAI,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE;YACpCA,IAAM,KAAK,GAAG,YAAY,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;YACtD,IAAI,KAAK,KAAK,IAAI,CAAC,kBAAkB,EAAE;gBACnCA,IAAM,MAAM,GAAG,QAAQ,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;;gBAErDA,IAAM,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,SAAS,KAAK,EAAE;oBACzC,OAAO,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;iBAC7B,CAAC,CAAC;;gBAEHA,IAAM,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;gBACrC,SAAS,CAAC,cAAc,GAAG,SAAS,CAAC;;gBAErC,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,EAAE;oBAC7D,IAAI,cAAc,CAAC,OAAO,EAAE;wBACxB,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;qBAClC;;oBAED,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBAC1B,MAAM;oBACH,OAAO,CAAC,IAAI,EAAE,CAAC;iBAClB;;gBAED,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;aACnC;SACJ;KACJ,CAAA;;IAED,gBAAA,YAAY,4BAAG;QACX,OAAuE,GAAG,IAAI;QAA3D,IAAA,QAAQ;QAAY,IAAA,OAAO;QAAc,IAAA,SAAS,kBAA/D;QACN,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;;QAEzB,QAAQ,CAAC,cAAc,EAAE,CAAC;;QAE1B,SAAS,CAAC,IAAI,EAAE,CAAC;;QAEjB,OAAO,CAAC,IAAI,EAAE,CAAC;;QAEf,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAClC,CAAA;;IAED,gBAAA,iBAAiB,iCAAG;QAChB,OAAkD,GAAG,IAAI;QAAvC,IAAA,OAAO;QAAc,IAAA,SAAS,kBAA1C;;QAEN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;;QAEzB,IAAI,OAAO,EAAE;YACT,OAAO,CAAC,IAAI,EAAE,CAAC;SAClB;;QAED,IAAI,SAAS,EAAE;YACX,SAAS,CAAC,IAAI,EAAE,CAAC;SACpB;KACJ,CAAA;;IAED,gBAAA,YAAY,4BAAG;QACX,IAAI,CAAC,OAAO,EAAE,CAAC;KAClB,CAAA;;IAED,gBAAA,mBAAmB,mCAAG;QAClB,IAAI,IAAI,CAAC,cAAc,EAAE;YACrB,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YACnC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC9B;KACJ,CAAA;;IAED,gBAAA,cAAc,8BAAG;;;QACbA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,WAAW,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;;QAEpD,KAAKC,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE;YACxDD,IAAM,IAAI,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;YACjC,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,EAAE;gBACzBQ,MAAI,CAAC,0BAA0B,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;aACjD;SACJ;KACJ,CAAA;;IAED,gBAAA,0BAA0B,wCAAC,IAAI,EAAE,MAAM,EAAE;;;QACrCR,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACnCA,IAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC;QACnCA,IAAM,gBAAgB,GAAG,EAAE,CAAC;QAC5BC,IAAI,KAAK,GAAG,EAAE,CAAC;QACfA,IAAI,QAAQ,CAAC;;QAEb,KAAKA,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,YAAY,EAAE,QAAQ,EAAE,EAAE;YACxDD,IAAM,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC3BA,IAAM,MAAM,GAAG,CAAC,CAAC,YAAY,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,IAAI,MAAM,KAAK,CAAC,CAAC,CAAC;YACjFA,IAAM,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;YACpBA,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;;YAE/B,IAAI,CAAC,CAAC,aAAa,IAAI,MAAM,IAAI,UAAU,GAAG,CAAC,EAAE;gBAC7C,QAAQ,GAAG,UAAU,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;gBAEhEA,IAAM,KAAK,GAAG,QAAQ,GAAG,YAAY,GAAG,QAAQ,CAAC;;gBAEjD,KAAKC,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,UAAU,EAAE,MAAM,EAAE,EAAE;oBAChDD,IAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC7BA,IAAM,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,aAAa,EAAE,OAAO,EAAEQ,MAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;;oBAEzE,IAAI,QAAQ,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE;wBACzC,KAAK,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC;;wBAElC,IAAI,CAAC,QAAQ,EAAE;4BACX,gBAAgB,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;yBACrC;qBACJ;iBACJ;aACJ;SACJ;;QAED,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YAClB,IAAI,QAAQ,EAAE;gBACV,KAAK,GAAG,WAAW,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE;oBACtC,OAAO,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACnC,CAAC,CAAC;aACN;;YAEDR,IAAM,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;SAC/B;KACJ,CAAA;;IAED,gBAAA,WAAW,yBAAC,MAAM,EAAE;QAChBA,IAAM,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC7DC,IAAI,MAAM,GAAG,IAAI,CAAC;;QAElB,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzCA,IAAI,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,KAAK,KAAK,KAAK,EAAE;gBACjB,KAAK,GAAG,OAAO,CAAC;aACnB,MAAM;gBACH,KAAK,GAAG,KAAK,GAAG,OAAO,CAAC;aAC3B;;YAED,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;gBACzB,MAAM,GAAG,KAAK,CAAC;gBACf,MAAM;aACT;SACJ;;QAED,OAAO,MAAM,CAAC;KACjB,CAAA;;IAED,gBAAA,oBAAoB,oCAAG;QACnBD,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BC,IAAI,gBAAgB,CAAC;;QAErB,IAAI,OAAO,CAAC,WAAW,EAAE;YACrB,OAAO,CAAC,WAAW,GAAG,KAAK,CAAC;YAC5B,gBAAgB,GAAG,IAAI,CAAC;SAC3B;;QAED,IAAI,CAAC,OAAO,EAAE,CAAC;;QAEf,IAAI,gBAAgB,EAAE;YAClB,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;SAC9B;KACJ,CAAA;;IAED,gBAAA,gBAAgB,8BAAC,WAAW,EAAE,UAAU,EAAE;QACtC,OAAoD,GAAG,IAAI;QAAxC,IAAA,QAAQ;QAAc,IAAA,SAAS,kBAA5C;QACND,IAAM,aAAa,GAAG,CAAC,QAAQ,CAAC,SAAS,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC;QAC3EC,IAAI,KAAK,CAAC;;QAEV,IAAI,OAAO,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE;YACrD,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC,SAAS,KAAK,EAAE;gBACvC,OAAO,KAAK,CAAC,MAAM,CAAC,KAAK,KAAK,WAAW,IAAI,KAAK,CAAC,KAAK,KAAK,UAAU,CAAC;aAC3E,CAAC,CAAC;SACN,MAAM;YACH,KAAK,GAAG,QAAQ,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;SACrD;;QAED,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACzB,CAAA;;IAED,gBAAA,sBAAsB,sCAAG;QACrB,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,EAAE,eAAe,EAAE,CAAC,CAAC;KACrI,CAAA;;IAED,gBAAA,sBAAsB,sCAAG;QACrB;QAAA,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,QAAA,EAAC,KACxB,EAAE,SAAS,EAAE,GAAA,IAAM,CAAC,UAAU,OACjC,CAAC,CAAC;;QAEH,IAAI,IAAI,CAAC,sBAAsB,EAAE,EAAE;YAC/B;YAAA,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,UAAA,EAAC,OACtB,EAAE,SAAS,EAAE,GAAA,IAAM,CAAC,UAAU,SACjC,CAAC,CAAC;SACN;KACJ,CAAA;;IAED,gBAAA,YAAY,0BAAC,OAAO,EAAE,KAAK,EAAE;QACzB,kBAAkB,CAAC,IAAI,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;QACnD,IAAI,CAAC,gBAAgB,GAAG,UAAU,CAAC,IAAI,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;QACnE,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;;QAErD,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;SACnC;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KAC9C,CAAA;;IAED,gBAAA,UAAU,wBAAC,OAAO,EAAE,KAAK,EAAE;QACvB,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAClC,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,sBAAsB,EAAE,CAAC;;QAE9B,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,EAAE,CAAC;KACzB,CAAA;;IAED,gBAAA,OAAO,uBAAG;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;;QAEvB;QAAA,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,QAAA,EAAC,KACxB,EAAE,WAAW,EAAE,GAAA,IAAM,CAAC,aAAa,KAAC,EAClC,UAAU,EAAE,GAAA,IAAM,CAAC,kBAAkB,KACvC,EAAE,SAAS,EAAE,GAAA,IAAM,CAAC,UAAU,OACjC,CAAC,CAAC;;QAEH,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;YACzB,OAAO,IAAI,CAAC,SAAS,CAAC;SACzB;;QAED;QAAA,YAAY,CAAC,QAAQ,EAAE,UAAA,EAAC,OACpB,EAAE,SAAS,EAAE,GAAA,IAAM,CAAC,sBAAsB,SAC7C,CAAC,CAAC;;QAEH,IAAI,CAAC,YAAY,EAAE,CAAC;;QAEpB,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACvB;;QAED,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC9B,CAAA;;IAED,gBAAA,YAAY,4BAAG;QACX,OAAgD,GAAG,IAAI;QAAvC,IAAA,KAAK;QAAe,IAAA,UAAU,mBAAxC;;QAEN,IAAI,KAAK,EAAE;YACP,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACtB;;QAED,IAAI,UAAU,EAAE;YACZ,OAAO,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC1B,UAAU,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC;aAChC;SACJ;;QAED,IAAI,CAAC,iBAAiB,EAAE,CAAC;;QAEzB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;SAC3B;;QAED,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;SAC7B;;QAED,IAAI,IAAI,CAAC,cAAc,EAAE;YACrB,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;YAC9B,OAAO,IAAI,CAAC,cAAc,CAAC;SAC9B;;QAED,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;YACzB,OAAO,IAAI,CAAC,SAAS,CAAC;SACzB;;QAED,IAAI,IAAI,CAAC,eAAe,EAAE;YACtB,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;YAC/B,OAAO,IAAI,CAAC,eAAe,CAAC;SAC/B;KACJ,CAAA;;;EA7xCeY,4BA8xCnB,GAAA;;AAED,SAAS,kBAAkB,CAAC,OAAO,EAAE;IACjCb,IAAM,OAAO,GAAG,UAAU,CAAC;;IAE3B,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;QAC3CD,IAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;QACpC,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;YAChB,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;YAChD,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC;SACzB;KACJ;CACJ;;AAED,SAAS,mBAAmB,CAAC,MAAM,EAAE,IAAI,EAAE;IACvC,IAAI,MAAM,EAAE;QACR,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YAC1C,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,KAAK,IAAI,EAAE;gBAC/B,OAAO,EAAE,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC;aAC1B;SACJ;KACJ;CACJ;;AAED,SAAS,iBAAiB,CAAC,OAAO,EAAE,YAAY,EAAE;IAC9CD,IAAM,iBAAiB,GAAG,CAAC,CAAC,YAAY,IAAI,EAAE,CAAC,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;IACpEC,IAAI,QAAQ,EAAE,YAAY,EAAE,IAAI,CAAC;;IAEjC,SAAS,cAAc,CAAC,WAAW,EAAE;QACjCD,IAAM,SAAS,GAAG,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC,KAAK,IAAI,YAAY,CAAC,KAAK,CAAC;QAClEA,IAAM,MAAM,GAAG,UAAU,CAAC,EAAE;YACxB,iBAAiB;YACjB,iBAAiB,CAAC,QAAQ,CAAC;YAC3B,YAAY;YACZ,YAAY,CAAC,QAAQ,CAAC,EAAE;gBACpB,IAAI,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE;gBAC1B,MAAM,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE;gBAC5B,KAAK,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE;aAC9B;YACD,WAAW;SACd,CAAC;;QAEF,OAAO,MAAM,CAAC,QAAQ,CAAC,CAAC;;QAExB,OAAO,MAAM,CAAC;KACjB;;IAED,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,UAAU,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;QAC9C,QAAQ,GAAG,UAAU,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;QACpC,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,EAAE,CAAC;QAC1C,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;;QAEpC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;;QAEhC,OAAO,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;KACxD;CACJ;;AAED,SAAS,mBAAmB,CAAC,OAAO,EAAE,YAAY,EAAE;IAChDD,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;IAC9BA,IAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC;IACnCA,IAAM,cAAc,GAAG,OAAO,CAAC,cAAc,CAAC;IAC9CA,IAAM,cAAc,GAAG,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,cAAc,CAAC,CAAC;IAC9DA,IAAM,mBAAmB,GAAG,YAAY,GAAG,UAAU,CAAC,EAAE,EAAE,YAAY,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC;IAC5FA,IAAM,mBAAmB,GAAG,UAAU,CAAC,EAAE,EAAE,mBAAmB,CAAC,CAAC;;IAEhE,2BAA2B,CAAC,cAAc,CAAC,CAAC;IAC5C,2BAA2B,CAAC,mBAAmB,CAAC,CAAC;;IAEjD,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,CAAC,EAAE,EAAE;QACnCD,IAAM,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC;;QAEjEA,IAAM,WAAW,GAAG,UAAU;YAC1B,EAAE,IAAI,EAAE,EAAE,EAAE;YACZ,mBAAmB;YACnB,mBAAmB,CAAC,UAAU,CAAC;YAC/B,EAAE,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE;YAC5B,cAAc;YACd,cAAc,CAAC,UAAU,CAAC;SAC7B,CAAC;;QAEF,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,WAAW,CAAC;QAClC,MAAM,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,EAAE,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;KACtD;CACJ;;AAED,SAAS,2BAA2B,CAAC,cAAc,EAAE;IACjD,OAAO,cAAc,CAAC,GAAG,CAAC;IAC1B,OAAO,cAAc,CAAC,MAAM,CAAC;IAC7B,OAAO,cAAc,CAAC,WAAW,CAAC;IAClC,OAAO,cAAc,CAAC,IAAI,CAAC;IAC3B,OAAO,cAAc,CAAC,YAAY,CAAC;IACnC,OAAO,cAAc,CAAC,GAAG,CAAC;IAC1B,OAAO,cAAc,CAAC,KAAK,CAAC;IAC5B,OAAO,cAAc,CAAC,IAAI,CAAC;IAC3B,OAAO,cAAc,CAAC,YAAY,CAAC;IACnC,OAAO,cAAc,CAAC,OAAO,CAAC;IAC9B,OAAO,cAAc,CAAC,WAAW,CAAC;IAClC,OAAO,cAAc,CAAC,MAAM,CAAC;IAC7B,OAAO,cAAc,CAAC,WAAW,CAAC;IAClC,OAAO,cAAc,CAAC,IAAI,CAAC;IAC3B,OAAO,cAAc,CAAC,OAAO,CAAC;IAC9B,OAAO,cAAc,CAAC,MAAM,CAAC;IAC7B,OAAO,cAAc,CAAC,cAAc,CAAC;IACrC,OAAO,cAAc,CAAC,SAAS,CAAC;IAChC,OAAO,cAAc,CAAC,SAAS,CAAC;IAChC,OAAO,cAAc,CAAC,SAAS,CAAC;IAChC,OAAO,cAAc,CAAC,SAAS,CAAC;IAChC,OAAO,cAAc,CAAC,SAAS,CAAC;CACnC;;;AAGD,SAAS,UAAU,CAAC,IAAI,EAAE;IACtBA,IAAM,MAAM,GAAG,EAAE,CAAC;;IAElB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAClCD,IAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACrBA,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QACnC,IAAI,QAAQ,EAAE;YACV,MAAM,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;SACnC;KACJ;;IAED,OAAO,MAAM,CAAC;CACjB;;AAED,SAAS,SAAS,CAAC,KAAK,EAAE,QAAuB,EAAE;uCAAjB,GAAG,YAAY;;IAC7C,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;QACpD,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YACtC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACrB,MAAM;SACT;KACJ;;IAED,OAAO,KAAK,CAAC;CAChB;;AAED,SAAS,WAAW,CAAC,QAAQ,EAAE,QAAuB,EAAE;uCAAjB,GAAG,YAAY;;IAClDD,IAAM,KAAK,GAAG,SAAS,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IAC5CA,IAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;IAC5BA,IAAM,MAAM,GAAG,MAAM,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC;;IAE9C,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;QAC7B,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,EAAE;YACxC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SACzB;KACJ;;IAED,OAAO,MAAM,CAAC;CACjB;;AAED,SAAS,SAAS,CAAC,IAAI,EAAE;IACrBD,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC;IAC7BA,IAAM,MAAM,GAAG,EAAE,CAAC;;IAElB,KAAKC,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,QAAQ,EAAE,KAAK,EAAE,EAAE;QAC3CD,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;QACxBA,IAAM,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC;;QAE5B,KAAKC,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,QAAQ,EAAE,KAAK,EAAE,EAAE;YAC3C,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YACpC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;SAClC;KACJ;;IAED,OAAO,MAAM,CAAC;CACjB;;AAED,SAAS,kBAAkB,CAAC,eAAe,EAAE,OAAO,EAAE;IAClD,KAAKA,IAAI,KAAK,IAAI,OAAO,EAAE;QACvBD,IAAM,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;QAClCA,IAAM,aAAa,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,OAAO,CAAC,aAAa,CAAC,EAAE;YACxBA,IAAM,SAAS,GAAG,UAAU,KAAK,IAAI,CAAC;YACtC,IAAI,CAAC,SAAS,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE;gBACrC,OAAO,eAAe,CAAC,KAAK,CAAC,CAAC;gBAC9B,IAAI,SAAS,EAAE;oBACX,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC;iBACzB;aACJ,MAAM,IAAI,aAAa,IAAI,QAAQ,CAAC,UAAU,CAAC,EAAE;gBAC9C,IAAI,QAAQ,CAAC,aAAa,CAAC,EAAE;oBACzB,kBAAkB,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;iBACjD;aACJ;SACJ;KACJ;CACJ;;AAED,iBAAiB,CAAC,KAAK,EAAE;IACrB,QAAQ,EAAE,EAAE;IACZ,SAAS,EAAE,EAAE;IACb,MAAM,EAAE;QACJ,OAAO,EAAE,IAAI;QACb,MAAM,EAAE,EAAE;KACb;IACD,YAAY,EAAE,EAAE;IAChB,cAAc,EAAE;QACZ,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,EAAE;QACR,SAAS,EAAE;YACP,OAAO,EAAE,IAAI;SAChB;QACD,MAAM,EAAE,EAAE;QACV,cAAc,EAAE;YACZ,OAAO,EAAE,KAAK;SACjB;KACJ;IACD,MAAM,EAAE,EAAE;IACV,YAAY,EAAE,IAAI;IAClB,OAAO,EAAE;QACL,OAAO,EAAE,KAAK;KACjB;IACD,WAAW,EAAE,IAAI;IACjB,SAAS,EAAE,EAAE;IACb,QAAQ,EAAE,EAAE;IACZ,KAAK,EAAE,EAAE;IACT,KAAK,EAAE,EAAE;IACT,KAAK,EAAE,EAAE;IACT,KAAK,EAAE,EAAE,EAAE,EAAE;IACb,QAAQ,EAAE,KAAK;IACf,QAAQ,EAAE,KAAK;CAClB,CAAC,CAAC,AAEH,AAAqB;;ACniDrBA,IAAM,UAAU,GAAG,CAAC,CAAC,CAAC;;AAEtB,IAAM2C,eAAa,GAA2B;IAAC;;;;;;;;IAAAA,2BAC3C,WAAW,yBAAC,MAAM,EAAE,IAAI,EAAE;QACtB3C,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;QACxCA,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACvCA,IAAM,KAAK,GAAG,QAAQ,GAAG;YACrB,UAAU,EAAE,MAAM;YAClB,QAAQ,EAAE,QAAQ;SACrB,GAAG;YACA,UAAU,EAAE,QAAQ;YACpB,QAAQ,EAAE,QAAQ;SACrB,CAAC;;QAEFC,IAAI,KAAK,CAAC;;QAEV,IAAI,QAAQ,EAAE;YACV,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;SAC5D,MAAM;YACH,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;SAClD;;QAED,OAAO;YACH,KAAK,EAAE,KAAK;YACZ,KAAK,EAAE,KAAK;SACf,CAAC;KACL,CAAA;;IAED0C,2BAAA,cAAc,4BAAC,KAAK,EAAE,IAAI,EAAE;QACxB,OAAO,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;KACrC,CAAA;;;EA5BuBC,aA6B3B,GAAA,AAED;;AC9BA5C,IAAM,gBAAgB,GAAG,GAAG,CAAC;AAC7BA,IAAM,mBAAmB,GAAG,GAAG,CAAC;AAChCA,IAAM,YAAY,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC;;AAErC,SAAS6C,MAAI,CAAC,QAAQ,EAAE;IACpB7C,IAAM,KAAK,GAAG,EAAE,CAAC;IACjB,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;QAC5CD,IAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC5B,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;QACjC,KAAK,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;KAChC;;IAED,OAAO,KAAK,CAAC;CAChB;;AAED,SAAS8C,MAAI,CAAC,QAAQ,EAAE,KAAK,EAAE;IAC3B,KAAK7C,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;QAC5C,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;KAC5C;CACJ;;AAED,SAAS,UAAU,CAAC,KAAK,EAAE;IACvB,OAAO,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC;CAC9C;;AAED,IAAM,SAAS,GAAc;IAAC;;;;;;;;IAAA,oBAC1B,gBAAgB,8BAAC,OAAO,EAAE;QACtB,QAAQ,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;KACpC,CAAA;;IAED,oBAAA,YAAY,0BAAC,OAAO,EAAE;QAClBW,kBAAK,CAAC,YAAY,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;;QAE5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAACF,aAAW,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC;KAC/D,CAAA;;IAED,oBAAA,OAAO,uBAAG;QACNV,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,KAAK,GAAG6C,MAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;;QAEvC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAACnC,aAAW,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC;;QAE5DoC,MAAI,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;;QAEhClC,kBAAK,CAAC,OAAO,KAAA,CAAC,IAAA,CAAC,CAAC;KACnB,CAAA;;IAED,oBAAA,aAAa,6BAAG;QACZZ,IAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC;QAClCA,IAAM,KAAK,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAClCA,IAAM,YAAY,GAAG6C,MAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;;QAE5C7C,IAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC7C,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC;;QAE3B,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;;QAEzBA,IAAM,OAAO,GAAG,UAAU,CAAC;YACvB,KAAK,EAAE,IAAI,CAAC,UAAU;YACtB,MAAM,EAAEU,aAAW,CAAC,KAAK,CAAC,CAAC,MAAM;YACjC,WAAW,EAAE,YAAY,CAAC,WAAW;SACxC,EAAE,YAAY,CAAC,SAAS,EAAE;YACvB,MAAM,EAAE,IAAI;YACZ,KAAK,EAAE,KAAK;SACf,CAAC,CAAC;;QAEHA,aAAW,CAAC,KAAK,EAAE;YACf,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,MAAM,EAAE,OAAO,CAAC,MAAM;SACzB,CAAC,CAAC;;QAEH,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;;QAEzBoC,MAAI,CAAC,KAAK,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;;QAEtB,OAAO,OAAO,CAAC;KAClB,CAAA;;IAED,oBAAA,YAAY,4BAAG;QACX,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACb9C,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAC1D,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SACnC;QACD,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB,CAAA;;IAED,oBAAA,eAAe,6BAAC,UAAU,EAAE;QACxBA,IAAM,QAAQ,GAAGY,kBAAK,CAAC,eAAe,KAAA,CAAC,MAAA,UAAU,CAAC,CAAC;QACnD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;;QAEvE,OAAO,QAAQ,CAAC;KACnB,CAAA;;IAED,oBAAA,eAAe,6BAAC,QAAQ,EAAE;QACtBZ,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,MAAM,GAAG,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACpDA,IAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC/BA,IAAM,KAAK,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAClCC,IAAI,KAAK,GAAG,CAAC,CAAC;;;QAGd,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpCD,IAAM,YAAY,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YAC/BA,IAAM,WAAW,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3D,IAAI,CAAC,WAAW,EAAE;gBACd,SAAS;aACZ;;YAED,IAAI,WAAW,CAAC,IAAI,KAAK,GAAG,EAAE;gBAC1B,OAAO,gBAAgB,CAAC;aAC3B;;YAED,IAAI,WAAW,CAAC,IAAI,KAAK,MAAM,EAAE;gBAC7B,OAAO,mBAAmB,CAAC;aAC9B;;YAED,IAAI,WAAW,CAAC,IAAI,KAAK,GAAG,EAAE;gBAC1B,OAAOU,aAAW,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC;aACpC;;YAEDV,IAAM,YAAY,GAAG,YAAY,CAAC,YAAY,CAAC;YAC/C,IAAI,YAAY,EAAE;gBACdA,IAAM,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM;oBACtD,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,eAAe,EAAE,CAAC,GAAG,YAAY,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;;gBAExI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;aACxC;SACJ;;QAEDC,IAAI,IAAI,GAAG,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC;QACtC,IAAI,IAAI,GAAG,CAAC,EAAE;YACV,IAAI,IAAI,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC;SACtC;;QAED,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,oBAAA,oBAAoB,kCAAC,OAAO,EAAE;QAC1B,OAAO,IAAI0C,eAAa,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;KACrD,CAAA;;IAED,UAAA,gBAAuB,8BAAC,WAAW,EAAE;QACjC1C,IAAI,OAAO,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC;;QAEtC,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YAClB,OAAO,GAAG,EAAE,cAAc,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,CAAC;SACnD,MAAM;YACH,OAAO,GAAG,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;SACrC;;QAED,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACjB,OAAO,CAAC,MAAM,GAAG,EAAE,EAAE,IAAI,EAAE,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;SAC3D;;QAED,UAAU,CAAC,OAAO,EAAE;YAChB,cAAc,EAAE;gBACZ,IAAI,EAAE,OAAO,CAAC,IAAI;aACrB;SACJ,CAAC,CAAC;;QAEH,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,YAAY,CAAC;YAC7C,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,EAAE,YAAY,CAAC,EAAE;YACpD,OAAO,GAAG,UAAU,CAAC,EAAE,EAAE;gBACrB,YAAY,EAAE;oBACV,SAAS,EAAE;wBACP,OAAO,EAAE,KAAK;qBACjB;iBACJ;aACJ,EAAE,OAAO,CAAC,CAAC;SACf;;QAED,OAAO,OAAO,CAAC;KAClB,CAAA;;;EApJmB,KAqJvB,GAAA;;AAED,iBAAiB,CAAC,SAAS,EAAE;IACzB,SAAS,EAAE;QACP,MAAM,EAAE,CAAC;KACZ;IACD,YAAY,EAAE;QACV,OAAO,EAAE,KAAK;QACd,cAAc,EAAE;YACZ,OAAO,EAAE,KAAK;SACjB;QACD,SAAS,EAAE;YACP,WAAW,EAAE,IAAI;SACpB;KACJ;IACD,cAAc,EAAE;QACZ,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE;YACF,IAAI,EAAE;gBACF,KAAK,EAAE,GAAG;aACb;SACJ;QACD,GAAG,EAAE;YACD,KAAK,EAAE,IAAI;SACd;QACD,OAAO,EAAE,CAAC;QACV,KAAK,EAAE,GAAG;QACV,OAAO,EAAE;YACL,QAAQ,EAAE,IAAI;SACjB;QACD,SAAS,EAAE;YACP,OAAO,EAAE,KAAK;SACjB;QACD,MAAM,EAAE;YACJ,KAAK,EAAE,CAAC;SACX;QACD,OAAO,EAAE;YACL,IAAI,EAAE,CAAC;YACP,OAAO,EAAE,KAAK;SACjB;KACJ;IACD,OAAO,EAAE;QACL,OAAO,EAAE,IAAI;QACb,MAAM,EAAE,IAAI;KACf;IACD,YAAY,EAAE;QACV,SAAS,EAAE;YACP,OAAO,EAAE,IAAI;YACb,OAAO,EAAE;gBACL,OAAO,EAAE,KAAK;aACjB;SACJ;KACJ;IACD,MAAM,EAAE;QACJ,OAAO,EAAE,KAAK;KACjB;IACD,WAAW,EAAE,KAAK;;IAElB,UAAU,EAAE,CAAC;;IAEb,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;CAC7B,CAAC,CAAC,AAEH;;AC9OA,IAAM,gBAAgB,GAAuB;IAAC;;;;;;;;IAAA,2BAE1C,KAAK,qBAAG;QACJ,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC;KACrF,CAAA;;IAED,2BAAA,IAAI,kBAAC,GAAG,EAAE;QACN,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE;YACxB,OAAO,EAAE,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;SAClE,CAAC,CAAC;KACN,CAAA;;IAED,2BAAA,KAAK,qBAAG;QACJW,oBAAK,CAAC,KAAK,KAAA,CAAC,IAAA,CAAC,CAAC;QACd,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE;YACxB,OAAO,EAAE,MAAM;YACf,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;SACxC,CAAC,CAAC;KACN,CAAA;;IAED,2BAAA,MAAM,sBAAG;QACLA,oBAAK,CAAC,KAAK,KAAA,CAAC,IAAA,CAAC,CAAC;QACd,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE;YACxB,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;SACxC,CAAC,CAAC;KACN,CAAA;;;EAzB0BG,8BAAI,CAAC,SA0BnC,GAAA,AAED;;AC5BA,SAASgC,WAAS,CAAC,SAAS,EAAE,KAAK,EAAE;IACjC/C,IAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC1C,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;IAC1B,IAAI,KAAK,EAAE;QACP,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;KAC7B;;IAED,OAAO,GAAG,CAAC;CACd;;AAED,IAAM,aAAa,GAAc;IAAC,sBACnB,CAAC,SAAS,EAAE,YAAY,EAAE,OAAO,EAAE;QAC1CY,QAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAER,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QACrD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;;QAEjCZ,IAAM,OAAO,GAAG,aAAa,CAAC,SAAS,EAAE,EAAE,aAAa,EAAE,YAAY,EAAE,CAAC,CAAC;QAC1E,IAAI,CAAC,YAAY,GAAG;YAChB,GAAG,EAAE,OAAO,CAAC,UAAU;YACvB,IAAI,EAAE,OAAO,CAAC,WAAW;SAC5B,CAAC;;QAEF,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACvC;;;;wDAAA;;IAED,wBAAA,cAAc,8BAAG;QACbA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG+C,WAAS,CAAC,kBAAkB,EAAE,yDAAyD,CAAC,CAAC;QACxH/C,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG+C,WAAS,CAAC,2BAA2B,CAAC,CAAC;QACtE/C,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG+C,WAAS,CAAC,UAAU,CAAC,CAAC;;QAEnD,OAAO,CAAC,SAAS,GAAG,QAAQ,CAAC;;QAE7B,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC7B,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;KAC/B,CAAA;;IAED,wBAAA,IAAI,kBAAC,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE;QACjB,OAA2C,GAAG,IAAI;QAA1C,IAAA,OAAO;QAAE,IAAA,OAAO;QAAE,IAAA,MAAM;QAAE,IAAA,OAAO,eAAnC;QACN/C,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5DA,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,GAAG,CAAC;QACvCA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,WAAW,CAAC;QAC7CA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAC/BA,IAAM,QAAQ,GAAG,MAAM,GAAG,MAAM,CAAC;QACjCA,IAAM,KAAK,GAAG,OAAO,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;QACxCA,IAAM,KAAK,GAAG,QAAQ,GAAG,KAAK,CAAC;QAC/BA,IAAM,MAAM,GAAG,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC;QACpCC,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;QACnED,IAAM,QAAQ,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;;QAEtC,IAAI,CAAC,gBAAgB,EAAE,CAAC;;QAExB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAChB,aAAa,CAAC,OAAO,EAAE;gBACnB,UAAU,EAAE,QAAQ;gBACpB,OAAO,EAAE,OAAO;aACnB,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACxB;;QAED,IAAI,QAAQ,EAAE;YACV,IAAI,GAAG,QAAQ,CAAC;gBACZ,IAAI,EAAE,IAAI;gBACV,EAAE,EAAE,EAAE;aACT,CAAC,CAAC;SACN;;QAED,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC;QACzB,aAAa,CAAC,OAAO,EAAE;YACnB,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,OAAO,CAAC,WAAW,GAAG,CAAC;YAC/C,GAAG,EAAE,IAAI,CAAC,EAAE;SACf,CAAC,CAAC;;QAEHA,IAAM,YAAY,GAAG,aAAa,CAAC,OAAO,EAAE,EAAE,WAAW,EAAE,gBAAgB,EAAE,QAAQ,EAAE,CAAC,CAAC;;QAEzF,aAAa,CAAC,MAAM,EAAE;YAClB,KAAK,EAAE,WAAW;YAClB,IAAI,EAAE,MAAM,GAAG,MAAM,GAAG,KAAK;YAC7B,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,YAAY,CAAC,SAAS,GAAG,YAAY,CAAC,cAAc,GAAG,YAAY,CAAC,MAAM,GAAG,CAAC;SAChG,CAAC,CAAC;;QAEH,aAAa,CAAC,OAAO,EAAE;YACnB,UAAU,EAAE,SAAS;SACxB,CAAC,CAAC;KACN,CAAA;;IAED,wBAAA,gBAAgB,gCAAG;QACf,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACnC;;QAED,IAAI,IAAI,CAAC,cAAc,EAAE;YACrB,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;SAChC;KACJ,CAAA;;IAED,wBAAA,IAAI,oBAAG;;;QACH,IAAI,CAAC,gBAAgB,EAAE,CAAC;;QAExB,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,YAAG;YAC9BQ,MAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtBA,MAAI,CAAC,cAAc,GAAG,IAAI,gBAAgB,CAACA,MAAI,CAAC,OAAO,CAAC,CAAC;YACzDA,MAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YAC5BA,MAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;SAC9B,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;KAC9B,CAAA;;IAED,wBAAA,OAAO,uBAAG;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC5C;QACD,OAAO,IAAI,CAAC,SAAS,CAAC;QACtB,OAAO,IAAI,CAAC,YAAY,CAAC;QACzB,OAAO,IAAI,CAAC,OAAO,CAAC;QACpB,OAAO,IAAI,CAAC,OAAO,CAAC;QACpB,OAAO,IAAI,CAAC,MAAM,CAAC;KACtB,CAAA;;;EA7GuBK,4BA8G3B,GAAA;;AAED,iBAAiB,CAAC,aAAa,EAAE;IAC7B,MAAM,EAAE,eAAe;IACvB,SAAS,EAAE,GAAG;CACjB,CAAC,CAAC,AAEH;;ACnIAb,IAAM,cAAc,GAAG,YAAY,CAAC;AACpCA,IAAM,cAAc,GAAG,cAAc,CAAC;;AAEtC;;;;;;;ACKAA,IAAMgD,mBAAiB,GAAG,CAAC,CAAC;;AAE5B,IAAM,SAAS,GAAc;IAAC,kBACf,CAAC,KAAK,EAAE;QACfpC,QAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAER,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnBZ,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACrFA,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAC9B,IAAI,MAAM,EAAE;YACR,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC1C,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;SACzC;;QAED,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YAChC,OAAO,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;SAC1C;;QAED;QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,gBAAgB,CAAC,IAAI,EAAE,QAAA,EAAC,KAC7C,CAAC,IAAI,CAAC,GAAA,OAAS,KAAC,CACf,QAAQ,CAAC,GAAA,UAAY,KACtB,CAAC,IAAI,CAAC,GAAA,OAAS,KACf,CAAC,QAAQ,CAAC,GAAA,UAAY,OACzB,CAAC,CAAC;QACH,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KACzC;;;;gDAAA;;IAED,oBAAA,SAAS,yBAAC,KAAK,EAAE;QACb,OAAO,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KACzD,CAAA;;IAED,oBAAA,OAAO,uBAAG;QACN,IAAI,IAAI,CAAC,KAAK,EAAE;YACZ,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAC9C,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;;QAED,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;YACzB,OAAO,IAAI,CAAC,SAAS,CAAC;SACzB;;QAED,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YACpB,OAAO,IAAI,CAAC,IAAI,CAAC;SACpB;KACJ,CAAA;;IAED,oBAAA,MAAM,sBAAG;QACL,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,aAAa,EAAE,CAAC;KACxB,CAAA;;IAED,oBAAA,aAAa,6BAAG;QACZ,OAAwB,GAAG,IAAI;QAAvB,IAAA,KAAK;QAAE,IAAA,OAAO,eAAhB;QACNA,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC7B,SAAkB,GAAG,IAAI,CAAC,KAAK,EAAE;QAAzB,IAAA,GAAG;QAAE,IAAA,GAAG,aAAV;QACN,SAA8B,GAAG,OAAO,CAAC,MAAM;QAAvC,IAAA,IAAI;QAAE,IAAA,EAAE;QAAE,IAAA,UAAU,oBAAtB;QACNA,IAAM,SAAS,GAAGiD,OAAK,CAAC,IAAI,CAAC,CAAC;QAC9BjD,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;QACvCC,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;;QAE/B,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACrB,OAAO;SACV;;QAED,IAAI,SAAS,EAAE;YACX,SAAS,CAAC,OAAO,EAAE,CAAC;SACvB;;;QAGD,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;;QAEzB,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,SAAS,CAAC,KAAK,EAAE,SAAS,EAAE;YACzD,GAAG,EAAE,GAAG;YACR,GAAG,EAAE,GAAG;YACR,IAAI,EAAE,IAAI,IAAI,GAAG;YACjB,EAAE,EAAE,EAAE,IAAI,GAAG;YACb,UAAU,EAAE,cAAc,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;YACxD,OAAO,EAAE,OAAO,CAAC,OAAO;SAC3B,EAAE,IAAI,gBAAgB,CAAC,IAAI,EAAE;YAC1B,WAAW,EAAE,cAAc;YAC3B,MAAM,EAAE,SAAS;YACjB,SAAS,EAAE,YAAY;SAC1B,CAAC,CAAC,CAAC;;QAEJ,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;SACvB;;QAED,IAAI,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE;YACtB,IAAI,CAAC,IAAI,GAAG,IAAI,aAAa,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,YAAY,EAAE;gBAC7D,GAAG,EAAE,GAAG;gBACR,GAAG,EAAE,GAAG;gBACR,QAAQ,EAAE,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC;gBACnC,MAAM,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM;aAC9B,CAAC,CAAC;SACN;KACJ,CAAA;;IAED,oBAAA,QAAQ,wBAAG;QACPD,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAClDA,IAAM,IAAI,GAAG,QAAQ,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;;QAExD,OAAkB,GAAG,IAAI,CAAC,KAAK,EAAE;QAAzB,IAAA,GAAG;QAAE,IAAA,GAAG,WAAV;;QAENA,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC;QACzCC,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,GAAG,CAAC;QAC9B,IAAI,IAAI,GAAG,GAAG,EAAE;YACZ,IAAI,GAAG,GAAG,CAAC;SACd;;QAEDA,IAAI,EAAE,GAAG,MAAM,CAAC,EAAE,IAAI,GAAG,CAAC;QAC1B,IAAI,EAAE,GAAG,GAAG,EAAE;YACV,EAAE,GAAG,GAAG,CAAC;SACZ;;QAED,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,UAAU,CAAC,EAAE,EAAE,MAAM,EAAE;YACzC,IAAI,EAAE,IAAI;YACV,EAAE,EAAE,EAAE;SACT,CAAC,CAAC;;QAEH,IAAI,CAAC,UAAU,EAAE,CAAC;KACrB,CAAA;;IAED,oBAAA,WAAW,yBAAC,MAAM,EAAE;QAChBD,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;;QAEtC,IAAI,QAAQ,EAAE;YACV,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC;SACjD;KACJ,CAAA;;IAED,oBAAA,YAAY,4BAAG;QACXA,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzBA,IAAM,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC;QACjCA,IAAM,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;;QAG/C,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;QAC1C,QAAQ,CAAC,OAAO,CAAC,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC;;QAE3D,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;KAC/B,CAAA;;IAED,oBAAA,KAAK,mBAAC,CAAC,EAAE;QACL,OAA0B,GAAG,IAAI;QAAzB,IAAA,KAAK;QAAE,IAAA,SAAS,iBAAlB;QACNA,IAAM,MAAM,GAAG,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;QACxDA,IAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QACtCA,IAAM,SAAS,GAAG,aAAa,CAAC,UAAU,EAAE,CAAC;QAC7CA,IAAM,WAAW,GAAG,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QACjEA,IAAM,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC;QAC1CA,IAAM,KAAK,GAAG,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC9CA,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACnCC,IAAIiD,WAAQ,CAAC;;QAEb,IAAI,CAAC,KAAK,IAAI,WAAW,IAAI,CAAC,SAAS,EAAE;YACrC,OAAO;SACV;;QAED,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,EAAE,EAAE;YAC1BA,WAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACtD,MAAM;YACHA,WAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAC5E;;QAEDlD,IAAM,IAAI,GAAG,MAAM,CAAC,UAAU;YAC1B,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC;YACjB,SAAS,CAAC,GAAG,EAAE,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,GAAGkD,WAAQ;SAClD,CAAC,CAAC;;QAEHlD,IAAM,EAAE,GAAG,MAAM,CAAC,UAAU;YACxB,MAAM,CAAC,IAAI,CAAC,GAAGkD,WAAQ;YACvB,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,GAAGA,WAAQ,EAAE,SAAS,CAAC,GAAG;SAClD,CAAC,CAAC;;QAEH,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;;QAE7C,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;YACvB,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;;QAED,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;;QAExB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;KAC3B,CAAA;;IAED,oBAAA,QAAQ,wBAAG;QACP,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,YAAY,EAAE,CAAC;;QAEpB,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;SACpB;KACJ,CAAA;;IAED,oBAAA,aAAa,6BAAG;QACZ,OAAmE,GAAG,IAAI;QAA5C,4BAAA,qBAAC;QAAC,IAAA,IAAI;QAAE,IAAA,EAAE;QAAiB,IAAA,MAAM,sBAAzD;;QAEN,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC;KAClB,CAAA;;IAED,oBAAA,UAAU,0BAAG;QACT,OAA0C,GAAG,IAAI;QAArB,mEAAA,GAAG;QAAI,IAAA,KAAK,aAAlC;QACNlD,IAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC;QAC3C,IAAQ,IAAI;QAAE,IAAA,EAAE,aAAV;;QAEN,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YAC3CD,IAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;YAC1B,IAAI,IAAI,CAAC,IAAI,KAAK,cAAc,EAAE;gBAC9B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;gBAChB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;aACjB;SACJ;KACJ,CAAA;;IAED,oBAAA,MAAM,sBAAG;QACL,OAAoC,GAAG,IAAI;QAAnC,IAAA,KAAK;QAAa,IAAA,MAAM,sBAA1B;QACN,IAAI,KAAK,CAAC,gBAAgB,CAAC,EAAE,iBAAiB,EAAE,CAAC,EAAE;YAC/CA,IAAM,WAAW,GAAG,IAAI,gBAAgB,CAAC,UAAU,CAAC;gBAChD,QAAQ,EAAE,KAAK;aAClB,EAAE,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE;gBAC9B,UAAU,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,EAAE;aACzC,CAAC,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC;;YAEhC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAiB,EAAE;gBAClC,IAAI,EAAE,WAAW,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,WAAW,CAAC,YAAY,EAAE,WAAW,CAAC,QAAQ,CAAC;gBACnF,EAAE,EAAE,WAAW,CAAC,WAAW,CAAC,GAAG,EAAE,WAAW,CAAC,YAAY,EAAE,WAAW,CAAC,QAAQ,CAAC;aACnF,CAAC,CAAC;SACN;KACJ,CAAA;;IAED,oBAAA,KAAK,mBAAC,CAAC,EAAE;QACL,OAAgG,GAAG,IAAI;QAA3D,IAAA,IAAI;QAAM,IAAA,SAAS;QAAW,kBAAA,WAAC;QAAC,IAAA,MAAM;QAAE,IAAA,QAAQ,wBAAtF;QACNA,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC;QACtDC,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;;QAEpB,IAAI,CAAC,SAAS,EAAE;YACZ,OAAO;SACV;;QAEDD,IAAM,MAAM,GAAG,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QAChEA,IAAM,IAAI,GAAG,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;;QAE5D,CAAC,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;;QAEjC,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;YACrB,KAAK,IAAIgD,mBAAiB,CAAC;SAC9B;;QAED,IAAI,IAAI,GAAG,MAAM,GAAG,CAAC,EAAE;YACnB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACxB,IAAI,CAAC,aAAa,EAAE,CAAC;SACxB,MAAM;YACH,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC;YAC/B,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;SAC/C;;QAED,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;;QAED,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;;QAEtC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;KACnE,CAAA;;IAED,oBAAA,QAAQ,sBAAC,CAAC,EAAE;QACR,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;KACpB,CAAA;;IAED,oBAAA,QAAQ,sBAAC,IAAI,EAAE,EAAE,EAAE;QACfhD,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;;QAEtC,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC;SACtD;KACJ,CAAA;;IAED,oBAAA,YAAY,0BAAC,CAAC,EAAE;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;KACrC,CAAA;;IAED,oBAAA,OAAO,qBAAC,CAAC,EAAE;QACP,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;;QAE5B,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;KAChC,CAAA;;IAED,oBAAA,UAAU,wBAAC,CAAC,EAAE;QACV,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;SACpB;;QAED,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,YAAY,EAAE,CAAC;;QAEpB,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;KACnC,CAAA;;IAED,oBAAA,QAAQ,wBAAG;QACPA,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;;QAEtC,IAAI,QAAQ,EAAE;YACV,OAAO,QAAQ,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;SACrD;KACJ,CAAA;;IAED,oBAAA,MAAM,oBAAC,IAAI,EAAE,EAAE,EAAE;QACbA,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;;QAEnC,IAAI,IAAI,IAAI,EAAE,EAAE;YACZ,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACnC,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;;YAE/B,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,IAAI,CAAC,YAAY,EAAE,CAAC;;YAEpB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;SAChC;;QAED,OAAO;YACH,IAAI,EAAE,MAAM,CAAC,IAAI;YACjB,EAAE,EAAE,MAAM,CAAC,EAAE;SAChB,CAAC;KACL,CAAA;;IAED,UAAA,KAAY,mBAAC,OAAY,EAAE,YAAiB,EAAE;yCAA1B,GAAG,EAAE,CAAc;mDAAA,GAAG,EAAE;;QACxC,IAAI,OAAO,CAAC,MAAM,EAAE;YAChB,OAAO;SACV;QACD,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;;QAEtBA,IAAM,WAAW,GAAG,UAAU,CAAC,EAAE,EAAE,YAAY,CAAC,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC;QAC9EA,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACvDA,IAAM,WAAW,GAAG,UAAU,CAAC,EAAE,EAAE,WAAW,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC,CAAC;;QAE/E,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;YACtB,WAAW,CAAC,OAAO,GAAG,KAAK,CAAC;YAC5B,WAAW,CAAC,MAAM,GAAG,GAAG,CAAC;SAC5B;;QAED,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;;QAExB,SAAS,CAAC,UAAU,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QAC3C,SAAS,CAAC,YAAY,CAAC,OAAO,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;KAC9D,CAAA;;IAED,UAAA,UAAiB,wBAAC,OAAO,EAAE,WAAW,EAAE;QACpCA,IAAM,MAAM,GAAG,WAAW,CAAC,MAAM,IAAI,EAAE,CAAC;QACxCA,IAAM,YAAY,GAAG,OAAO,CAAC,YAAY,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QAC5EA,IAAM,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;;QAEnEA,IAAM,mBAAmB,GAAG,kBAAkB,CAAC,MAAM,EAAE,qBAAqB,CAAC,CAAC;QAC9EA,IAAM,WAAW,GAAG,mBAAmB,CAAC,MAAM,KAAK,CAAC,CAAC;;QAErDA,IAAM,IAAI,GAAG,UAAU,CAAC;YACpB,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE,cAAc;YACpB,eAAe,EAAE,CAAC,WAAW;YAC7B,SAAS,EAAE,WAAW;YACtB,SAAS,EAAE,KAAK;YAChB,UAAU,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;YAC7B,OAAO,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE;YAC3B,MAAM,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE;YACnB,QAAQ,EAAE,WAAW,CAAC,gBAAgB;YACtC,iBAAiB,EAAE;gBACf,OAAO,EAAE,EAAE,CAAC,EAAE;gBACd,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE;gBACf,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE;gBACd,KAAK,EAAE,EAAE;gBACT,MAAM,EAAE,EAAE,CAAC,EAAE;gBACb,KAAK,EAAE,EAAE,CAAC,EAAE;aACf;SACJ,CAAC,CAAC;QACHA,IAAM,IAAI,GAAG,WAAW,CAAC,YAAY,CAAC;;QAEtC,YAAY,CAAC,IAAI;YACb,UAAU,CAAC,EAAE,EAAE,IAAI,EAAE;gBACjB,aAAa,EAAE,GAAG;aACrB,EAAE,IAAI,EAAE;gBACL,IAAI,EAAE,cAAc;gBACpB,KAAK,EAAE,IAAI;gBACX,QAAQ,EAAE,KAAK;gBACf,YAAY,EAAE,MAAM;gBACpB,MAAM,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE;gBAC1B,UAAU,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE;aACjC,CAAC,EAAE,UAAU,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;gBAC3B,IAAI,EAAE,cAAc,GAAG,SAAS;gBAChC,aAAa,EAAE,EAAE;gBACjB,YAAY,EAAE,MAAM;gBACpB,SAAS,EAAE,EAAE;gBACb,iBAAiB,EAAE;oBACf,OAAO,EAAE,EAAE;iBACd;gBACD,QAAQ,EAAE,IAAI;aACjB,CAAC,EAAE,UAAU,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;gBAC3B,IAAI,EAAE,cAAc,GAAG,QAAQ;gBAC/B,aAAa,EAAE,GAAG;gBAClB,UAAU,EAAE;oBACR,KAAK,EAAE,GAAG;iBACb;gBACD,SAAS,EAAE,EAAE;gBACb,KAAK,EAAE,IAAI;gBACX,MAAM,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE;gBACxC,QAAQ,EAAE,IAAI;aACjB,CAAC;SACL,CAAC;;QAEF,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC;YACtB,IAAI,EAAE,cAAc;YACpB,IAAI,EAAE,cAAc;YACpB,cAAc,EAAE;gBACZ,OAAO,EAAE,KAAK;aACjB;YACD,OAAO,EAAE,KAAK;SACjB,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC;KAC9B,CAAA;;IAED,UAAA,YAAmB,0BAAC,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE;QACpDA,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC;QACrDA,IAAM,eAAe,GAAG,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC;QAC5DA,IAAM,YAAY,GAAG,YAAY,CAAC,YAAY,CAAC;QAC/CA,IAAM,QAAQ,GAAG,WAAW,CAAC,cAAc,CAAC;;QAE5C,KAAKC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,eAAe,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YACnD,MAAM,CAAC,IAAI;gBACP,UAAU,CAAC;oBACP,KAAK,EAAE,YAAY,CAAC,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC;oBAC9C,aAAa,EAAE,WAAW,CAAC,SAAS;oBACpC,eAAe,EAAE,KAAK;oBACtB,OAAO,EAAE;wBACL,OAAO,EAAE,KAAK;qBACjB;iBACJ,EAAE,QAAQ,EAAE,eAAe,CAAC,GAAG,CAAC,EAAE;oBAC/B,IAAI,EAAE,cAAc;oBACpB,YAAY,EAAE,cAAc;oBAC5B,QAAQ,EAAE,WAAW,CAAC,gBAAgB;iBACzC,CAAC;aACL,CAAC;SACL;KACJ,CAAA;;;EA9bmBY,4BA+bvB,GAAA;;AAED,SAAS,YAAY,GAAG,GAAG;AAC3B,SAASoC,OAAK,CAAC,GAAG,EAAE;IAChB,YAAY,CAAC,SAAS,GAAG,GAAG,CAAC;IAC7B,OAAO,IAAI,YAAY,EAAE,CAAC;CAC7B,AAED;;AC1cAjD,IAAM,mBAAmB,GAAG,EAAE,CAAC;;AAE/B,IAAM,UAAU,GAAc;IAAC;;;;;;;;IAAA,qBAE3B,aAAa,2BAAC,OAAO,EAAE,YAAY,EAAE;QACjCA,IAAM,KAAK,GAAGU,aAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,IAAI,aAAa,CAAC;QAC/DT,IAAI,KAAK,GAAG,YAAY,CAAC;;QAEzBD,IAAM,aAAa,GAAG;YAClB,cAAc,EAAE;gBACZ,aAAa,EAAE,OAAO,CAAC,SAAS;aACnC;YACD,YAAY,EAAE;gBACV,YAAY,EAAE;oBACV,IAAI,EAAE,SAAS;oBACf,cAAc,EAAE;wBACZ,OAAO,EAAE,KAAK;qBACjB;oBACD,MAAM,EAAE;wBACJ,IAAI,EAAE,CAAC;qBACV;oBACD,UAAU,EAAE;wBACR,OAAO,EAAE,KAAK;qBACjB;oBACD,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,mBAAmB,CAAC;iBACzD;aACJ;SACJ,CAAC;;QAEF,IAAI,KAAK,EAAE;YACP,KAAK,GAAG,UAAU,CAAC,EAAE,EAAE,KAAK,EAAE,aAAa,CAAC,CAAC;SAChD;;QAED,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;;QAEhCY,kBAAK,CAAC,aAAa,KAAA,CAAC,MAAA,OAAO,EAAE,KAAK,CAAC,CAAC;KACvC,CAAA;;IAED,qBAAA,gBAAgB,8BAAC,OAAO,EAAE;QACtB,QAAQ,CAAC,OAAO,EAAE,sBAAsB,CAAC,CAAC;KAC7C,CAAA;;IAED,qBAAA,UAAU,wBAAC,OAAO,EAAE;QAChB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxBA,kBAAK,CAAC,UAAU,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;KAC7B,CAAA;;IAED,qBAAA,OAAO,uBAAG;QACNZ,IAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;;QAE7C,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,WAAW,CAAC;KAC1C,CAAA;;IAED,qBAAA,OAAO,uBAAG;QACNA,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;;QAEjC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,SAAS,IAAI,SAAS,CAAC,OAAO,CAAC,aAAa,EAAE;YAChE,SAAS,CAAC,YAAY,EAAE,CAAC;SAC5B,MAAM;YACH,IAAI,CAAC,WAAW,EAAE,CAAC;SACtB;KACJ,CAAA;;IAED,qBAAA,MAAM,sBAAG;QACLA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,IAAM,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACnEA,IAAM,WAAW,GAAG,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,EAAE,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC;QAChFA,IAAM,KAAK,GAAG,IAAI,CAAC,YAAY,KAAK,WAAW,CAAC;QAChD,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;;QAEhC,OAAO,KAAK,CAAC;KAChB,CAAA;;IAED,qBAAA,WAAW,2BAAG;QACVC,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;;QAE/B,IAAI,CAAC,SAAS,EAAE;YACZ,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC;SAC9D;;QAED,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrBW,kBAAK,CAAC,OAAO,KAAA,CAAC,IAAA,CAAC,CAAC;QAChB,SAAS,CAAC,aAAa,EAAE,CAAC;KAC7B,CAAA;;IAED,qBAAA,mBAAmB,iCAAC,MAAM,EAAE;QACxBZ,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QAChCA,IAAM,IAAI,GAAG,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;;QAE1C,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,cAAc,EAAE;YAC9C,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC5B,MAAM;YACHY,kBAAK,CAAC,mBAAmB,KAAA,CAAC,MAAA,MAAM,CAAC,CAAC;SACrC;KACJ,CAAA;;IAED,qBAAA,cAAc,8BAAG;QACbA,kBAAK,CAAC,cAAc,KAAA,CAAC,IAAA,CAAC,CAAC;QACvB,IAAI,CAAC,uBAAuB,EAAE,CAAC;KAClC,CAAA;;IAED,qBAAA,uBAAuB,uCAAG;QACtBZ,IAAM,WAAW,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QACzDC,IAAI,UAAU,CAAC;;QAEf,KAAKA,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE;YACxDD,IAAM,IAAI,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;YACjC,IAAI,IAAI,CAAC,IAAI,KAAK,cAAc,EAAE;gBAC9B,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;aAChC,MAAM,IAAI,UAAU,IAAI,IAAI,CAAC,IAAI,KAAK,cAAc,EAAE;gBACnD,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;aAChC;SACJ;KACJ,CAAA;;IAED,qBAAA,gBAAgB,gCAAG;QACf,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;YACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACzB;KACJ,CAAA;;IAED,qBAAA,OAAO,uBAAG;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxBY,kBAAK,CAAC,OAAO,KAAA,CAAC,IAAA,CAAC,CAAC;KACnB,CAAA;;IAED,qBAAA,cAAc,4BAAC,CAAC,EAAE;QACdZ,IAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QACzCA,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;;QAEhD,OAAOY,kBAAK,CAAC,cAAc,KAAA,CAAC,MAAA,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,cAAc,CAAC,CAAC;KACpF,CAAA;;;EArIoB,KAsIxB,GAAA;;AAED,iBAAiB,CAAC,UAAU,EAAE;IAC1B,SAAS,EAAE,MAAM;IACjB,YAAY,EAAE;QACV,YAAY,EAAE;YACV,IAAI,EAAE,MAAM;YACZ,QAAQ,EAAE,KAAK;YACf,SAAS,EAAE,IAAI;SAClB;QACD,SAAS,EAAE;YACP,WAAW,EAAE,IAAI;YACjB,MAAM,EAAE;gBACJ,MAAM,EAAE,GAAG;aACd;SACJ;KACJ;IACD,SAAS,EAAE;QACP,MAAM,EAAE,EAAE;QACV,cAAc,EAAE;YACZ,OAAO,EAAE;gBACL,OAAO,EAAE,KAAK;aACjB;YACD,OAAO,EAAE;gBACL,OAAO,EAAE,IAAI;aAChB;YACD,IAAI,EAAE;gBACF,KAAK,EAAE,CAAC;aACX;SACJ;QACD,IAAI,EAAE,EAAE;QACR,OAAO,EAAE,IAAI;KAChB;IACD,OAAO,EAAE;QACL,OAAO,EAAE,IAAI;KAChB;IACD,MAAM,EAAE;QACJ,OAAO,EAAE,KAAK;KACjB;CACJ,CAAC,CAAC,AAEH;;ACxLAZ,IAAM,OAAO,GAAG,GAAG,CAAC;AACpBA,IAAM,WAAW,GAAG,GAAG,CAAC;AACxBA,IAAMmD,OAAK,GAAG,MAAM,CAAC;AACrBnD,IAAM,IAAI,GAAG,8BAA8B,CAAC;AAC5CA,IAAM,MAAM,GAAG,OAAO,GAAG,IAAI,CAAC;AAC9BA,IAAM,MAAM,GAAG,OAAO,GAAG,IAAI,CAAC;AAC9BA,IAAM,MAAM,GAAG,OAAO,GAAG,IAAI,CAAC;AAC9BA,IAAM,WAAW,GAAG,aAAa,CAAC;AAClCA,IAAMoD,OAAK,GAAG,MAAM,CAAC;;AAErBpD,IAAM,KAAK,GAAG,YAAG,SAAG,CAAC;IACjB,IAAI,EAAE;QACF,MAAM,EAAE;YACJ,KAAK,EAAE,CAAC;SACX;KACJ;IACD,KAAK,EAAE;QACH,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,CAAC;KACb;IACD,IAAI,EAAE;QACF,MAAM,EAAE,EAAE;QACV,KAAK,EAAE,CAAC;KACX;IACD,OAAO,EAAE,IAAI;CAChB,CAAC,GAAA,CAAC;;AAEHA,IAAM,YAAY,GAAG,YAAG,SAAG,CAAC;IACxB,MAAM,EAAE;QACJ,IAAI,EAAE,MAAM;KACf;IACD,KAAK,EAAE,KAAK,EAAE;IACd,KAAK,EAAE;QACH,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,CAAC;KACZ;CACJ,CAAC,GAAA,CAAC;;AAEHA,IAAM,UAAU,GAAG,YAAG,SAAG,CAAC;IACtB,SAAS,EAAE;QACP,OAAO,EAAE;YACL,MAAM,EAAE,EAAE;SACb;KACJ;IACD,IAAI,EAAE;QACF,OAAO,EAAE,CAAC;QACV,KAAK,EAAE,CAAC;KACX;IACD,OAAO,EAAE;QACL,IAAI,EAAE,CAAC;QACP,OAAO,EAAE,KAAK;KACjB;IACD,OAAO,EAAE,GAAG;CACf,CAAC,GAAA,CAAC;;AAEHA,IAAM,SAAS,GAAG,YAAG,SAAG,CAAC;IACrB,GAAG,EAAE,OAAO;IACZ,OAAO,EAAE,WAAW;CACvB,CAAC,GAAA,CAAC;;AAEHA,IAAM,aAAa,GAAG,YAAG,SAAG,CAAC;IACzB,aAAa,EAAE,EAAE;IACjB,SAAS,EAAE,EAAE;IACb,MAAM,EAAE;QACJ,WAAW,EAAE,GAAG;QAChB,KAAK,EAAE,CAAC;KACX;IACD,SAAS,EAAEoD,OAAK;IAChB,GAAG,EAAE,CAAC;IACN,SAAS,EAAE;QACP,MAAM,EAAE;YACJ,OAAO,EAAE,CAAC;YACV,KAAK,EAAE,CAAC;SACX;QACD,QAAQ,EAAE;YACN,KAAK,EAAE,CAAC;SACX;QACD,IAAI,EAAE;YACF,KAAK,EAAE,CAAC;SACX;QACD,MAAM,EAAE;YACJ,KAAK,EAAE,CAAC;SACX;KACJ;IACD,IAAI,EAAE;QACF,KAAK,EAAE,CAAC;KACX;IACD,MAAM,EAAE;QACJ,KAAK,EAAE,CAAC;KACX;IACD,OAAO,EAAE,GAAG;IACZ,QAAQ,EAAE;QACN,KAAK,EAAE,CAAC;KACX;CACJ,CAAC,GAAA,CAAC;;AAEHpD,IAAM,YAAY,GAAG,YAAG,SAAG,CAAC;IACxB,MAAM,EAAE;QACJ,KAAK,EAAE,CAAC;KACX;IACD,MAAM,EAAE;QACJ,UAAU,EAAE,WAAW;KAC1B;IACD,OAAO,EAAE,GAAG;CACf,CAAC,GAAA,CAAC;;AAEHA,IAAM,YAAY,GAAG,YAAG,SAAG,CAAC;IACxB,GAAG,EAAE,OAAO;IACZ,OAAO,EAAE,WAAW;IACpB,MAAM,EAAE;QACJ,KAAK,EAAE,SAAS;KACnB;CACJ,CAAC,GAAA,CAAC;;AAEHA,IAAM,iBAAiB,GAAG,YAAG,SAAG,CAAC;IAC7B,MAAM,EAAE;QACJ,WAAW,EAAE,GAAG;QAChB,KAAK,EAAE,CAAC;KACX;IACD,SAAS,EAAEoD,OAAK;IAChB,GAAG,EAAE,CAAC;IACN,SAAS,EAAE;QACP,MAAM,EAAE;YACJ,OAAO,EAAE,CAAC;YACV,KAAK,EAAE,CAAC;SACX;QACD,IAAI,EAAE;YACF,KAAK,EAAE,CAAC;SACX;KACJ;IACD,IAAI,EAAE;QACF,KAAK,EAAED,OAAK;QACZ,KAAK,EAAE,CAAC;KACX;IACD,OAAO,EAAE,GAAG;CACf,CAAC,GAAA,CAAC;;AAEHnD,IAAM,YAAY,GAAG,YAAG,SAAG,CAAC;IACxB,GAAG,EAAE,OAAO;IACZ,OAAO,EAAE,WAAW;CACvB,CAAC,GAAA,CAAC;;AAEHA,IAAM,WAAW,GAAG,YAAG,SAAG,CAAC;IACvB,MAAM,EAAE,CAAC;CACZ,CAAC,GAAA,CAAC;;AAEHA,IAAM,UAAU,GAAG,YAAG,SAAG,CAAC;IACtB,KAAK,EAAE,CAAC;CACX,CAAC,GAAA,CAAC;;AAEHA,IAAM,UAAU,GAAG,YAAG,SAAG,CAAC;IACtB,GAAG,EAAE,CAAC;IACN,SAAS,EAAE;QACP,IAAI,EAAE;YACF,OAAO,EAAE,CAAC;YACV,KAAK,EAAE,CAAC;SACX;KACJ;IACD,IAAI,EAAE;QACF,KAAK,EAAE,CAAC;KACX;IACD,OAAO,EAAE,GAAG;CACf,CAAC,GAAA,CAAC;;AAEHA,IAAM,eAAe,GAAG,YAAG,SAAG,CAAC;IAC3B,IAAI,EAAE;QACF,OAAO,EAAE,CAAC;QACV,KAAK,EAAE,CAAC;KACX;IACD,OAAO,EAAE;QACL,IAAI,EAAE,CAAC;QACP,OAAO,EAAE,KAAK;KACjB;IACD,OAAO,EAAE,GAAG;CACf,CAAC,GAAA,CAAC;;AAEHA,IAAM,eAAe,GAAG,YAAG,SAAG,CAAC;IAC3B,OAAO,EAAE;QACL,OAAO,EAAE,KAAK;KACjB;IACD,KAAK,EAAE,CAAC;CACX,CAAC,GAAA,CAAC;;AAEHA,IAAM,cAAc,GAAG,YAAG,SAAG,CAAC;IAC1B,GAAG,EAAE,OAAO;IACZ,OAAO,EAAE,WAAW;CACvB,CAAC,GAAA,CAAC;;AAEHA,IAAM,iBAAiB,GAAG,YAAG,SAAG,CAAC;IAC7B,GAAG,EAAE,OAAO;IACZ,OAAO,EAAE,WAAW;CACvB,CAAC,GAAA,CAAC;;AAEHA,IAAM,iBAAiB,GAAG,YAAG,SAAG,CAAC;IAC7B,KAAK,EAAE,CAAC;CACX,CAAC,GAAA,CAAC;;AAEHA,IAAM,eAAe,GAAG,YAAG,SAAG,CAAC;IAC3B,GAAG,EAAE,GAAG;IACR,IAAI,EAAE;QACF,KAAK,EAAEmD,OAAK;QACZ,KAAK,EAAE,CAAC;KACX;IACD,OAAO,EAAE,WAAW;CACvB,CAAC,GAAA,CAAC;;AAEHnD,IAAM,SAAS,GAAG,YAAG,SAAG,CAAC;IACrB,MAAM,EAAE;QACJ,UAAU,EAAE,EAAE;QACd,KAAK,EAAE,EAAE;QACT,OAAO,EAAE;YACL,GAAG,EAAE,CAAC;YACN,MAAM,EAAE,CAAC;YACT,IAAI,EAAE,CAAC;YACP,KAAK,EAAE,CAAC;SACX;KACJ;CACJ,CAAC,GAAA,CAAC;;AAEHA,IAAM,YAAY,GAAG,YAAG,SAAG,CAAC;IACxB,MAAM,EAAE;QACJ,UAAU,EAAE,EAAE;QACd,KAAK,EAAE,EAAE;QACT,OAAO,EAAE;YACL,GAAG,EAAE,CAAC;YACN,MAAM,EAAE,CAAC;YACT,IAAI,EAAE,CAAC;YACP,KAAK,EAAE,CAAC;SACX;KACJ;CACJ,CAAC,GAAA,CAAC;;AAEHA,IAAM,cAAc,GAAG,UAAC,OAAO,EAAE,SAAG,CAAC;IACjC,OAAO,EAAE,IAAI;IACb,MAAM,EAAE;QACJ,IAAI,EAAE,MAAM;KACf;IACD,OAAO,EAAE,OAAO,CAAC,SAAS,GAAG,EAAE,GAAG;QAC9B,QAAQ,EAAE,MAAM;KACnB;IACD,IAAI,EAAE,UAAU,EAAE;IAClB,GAAG,EAAE,SAAS,EAAE;IAChB,OAAO,EAAE,aAAa,EAAE;IACxB,MAAM,EAAE,YAAY,EAAE;IACtB,MAAM,EAAE,YAAY,EAAE;IACtB,WAAW,EAAE,iBAAiB,EAAE;IAChC,MAAM,EAAE,YAAY,EAAE;IACtB,GAAG,EAAE,SAAS,EAAE;IAChB,KAAK,EAAE,WAAW,EAAE;IACpB,MAAM,EAAE,YAAY,EAAE;IACtB,mBAAmB,EAAE,eAAe,EAAE;IACtC,IAAI,EAAE,UAAU,EAAE;IAClB,KAAK,EAAE,KAAK,EAAE;IACd,IAAI,EAAE,UAAU,EAAE;IAClB,SAAS,EAAE,eAAe,EAAE;IAC5B,SAAS,EAAE,eAAe,EAAE;IAC5B,SAAS,EAAE,eAAe,EAAE;IAC5B,SAAS,EAAE,eAAe,EAAE;IAC5B,QAAQ,EAAE,cAAc,EAAE;IAC1B,WAAW,EAAE,iBAAiB,EAAE;IAChC,WAAW,EAAE,iBAAiB,EAAE;IAChC,YAAY,EAAE,UAAU,EAAE;IAC1B,eAAe,EAAE,aAAa,EAAE;IAChC,cAAc,EAAE,YAAY,EAAE;IAC9B,YAAY,EAAE,UAAU,EAAE;IAC1B,SAAS,EAAE,eAAe,EAAE;CAC/B,CAAC,GAAA,CAAC;;AAEHA,IAAM,KAAK,GAAG,YAAG,SAAG,CAAC;IACjB,IAAI,EAAE,MAAM;CACf,CAAC,GAAA,CAAC;;AAEHA,IAAM,MAAM,GAAG,YAAG,SAAG,CAAC;IAClB,MAAM,EAAE;QACJ,IAAI,EAAE,MAAM;KACf;CACJ,CAAC,GAAA,CAAC;;AAEH,AAAOA,IAAM,SAAS,GAAG,UAAC,OAAY,EAAE;qCAAP,GAAG,EAAE;;WAAK,CAAC;IACxC,YAAY,EAAE,YAAY,EAAE;IAC5B,YAAY,EAAE;QACV,cAAc,EAAE;YACZ,OAAO,EAAE,IAAI;SAChB;KACJ;IACD,SAAS,EAAE;QACP,IAAI,EAAE;YACF,MAAM,EAAE,EAAE;YACV,MAAM,EAAE;gBACJ,GAAG,EAAE,EAAE;aACV;SACJ;KACJ;IACD,cAAc,EAAE,cAAc,CAAC,OAAO,CAAC;IACvC,KAAK,EAAE,KAAK,EAAE;IACd,MAAM,EAAE,MAAM,EAAE;CACnB,CAAC;CAAA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}