{"version":3,"file":"navigator.js","sources":["navigator.js"],"sourcesContent":["import NavigatorHint from './navigator-hint';\nimport { Selection, filterSeriesByType } from '../chart';\nimport { DRAG, DRAG_END, EQUALLY_SPACED_SERIES, ZOOM, ZOOM_END } from '../chart/constants';\nimport { DateCategoryAxis } from '../core';\nimport { addDuration, lteDateIndex, parseDate, toDate, toTime } from '../date-utils';\nimport { Class, deepExtend, defined, getTemplate, InstanceObserver, last, limitValue, valueOrDefault } from '../common';\nimport { NAVIGATOR_AXIS, NAVIGATOR_PANE } from './constants';\n\nconst ZOOM_ACCELERATION = 3;\n\nclass Navigator extends Class {\n    constructor(chart) {\n        super();\n\n        this.chart = chart;\n        const options = this.options = deepExtend({}, this.options, chart.options.navigator);\n        const select = options.select;\n        if (select) {\n            select.from = this.parseDate(select.from);\n            select.to = this.parseDate(select.to);\n        }\n\n        if (!defined(options.hint.visible)) {\n            options.hint.visible = options.visible;\n        }\n\n        this.chartObserver = new InstanceObserver(this, {\n            [DRAG]: '_drag',\n            [DRAG_END]: '_dragEnd',\n            [ZOOM]: '_zoom',\n            [ZOOM_END]: '_zoomEnd'\n        });\n        chart.addObserver(this.chartObserver);\n    }\n\n    parseDate(value) {\n        return parseDate(this.chart.chartService.intl, value);\n    }\n\n    destroy() {\n        if (this.chart) {\n            this.chart.removeObserver(this.chartObserver);\n            delete this.chart;\n        }\n\n        if (this.selection) {\n            this.selection.destroy();\n            delete this.selection;\n        }\n\n        if (this.hint) {\n            this.hint.destroy();\n            delete this.hint;\n        }\n    }\n\n    redraw() {\n        this._redrawSelf();\n        this.initSelection();\n    }\n\n    initSelection() {\n        const { chart, options } = this;\n        const axis = this.mainAxis();\n        const { min, max } = axis.range();\n        const { from, to, mousewheel } = options.select;\n        const axisClone = clone(axis);\n        const groups = axis.options.categories;\n        let selection = this.selection;\n\n        if (groups.length === 0) {\n            return;\n        }\n\n        if (selection) {\n            selection.destroy();\n        }\n\n        // \"Freeze\" the selection axis position until the next redraw\n        axisClone.box = axis.box;\n\n        selection = this.selection = new Selection(chart, axisClone, {\n            min: min,\n            max: max,\n            from: from || min,\n            to: to || max,\n            mousewheel: valueOrDefault(mousewheel, { zoom: \"left\" }),\n            visible: options.visible\n        }, new InstanceObserver(this, {\n            selectStart: '_selectStart',\n            select: '_select',\n            selectEnd: '_selectEnd'\n        }));\n\n        if (this.hint) {\n            this.hint.destroy();\n        }\n\n        if (options.hint.visible) {\n            this.hint = new NavigatorHint(chart.element, chart.chartService, {\n                min: min,\n                max: max,\n                template: getTemplate(options.hint),\n                format: options.hint.format\n            });\n        }\n    }\n\n    setRange() {\n        const plotArea = this.chart._createPlotArea(true);\n        const axis = plotArea.namedCategoryAxes[NAVIGATOR_AXIS];\n\n        const { min, max } = axis.range();\n\n        const select = this.options.select || {};\n        let from = select.from || min;\n        if (from < min) {\n            from = min;\n        }\n\n        let to = select.to || max;\n        if (to > max) {\n            to = max;\n        }\n\n        this.options.select = deepExtend({}, select, {\n            from: from,\n            to: to\n        });\n\n        this.filterAxes();\n    }\n\n    _redrawSelf(silent) {\n        const plotArea = this.chart._plotArea;\n\n        if (plotArea) {\n            plotArea.redraw(last(plotArea.panes), silent);\n        }\n    }\n\n    redrawSlaves() {\n        const chart = this.chart;\n        const plotArea = chart._plotArea;\n        const slavePanes = plotArea.panes.slice(0, -1);\n\n        // Update the original series and categoryAxis before partial refresh.\n        plotArea.srcSeries = chart.options.series;\n        plotArea.options.categoryAxis = chart.options.categoryAxis;\n\n        plotArea.redraw(slavePanes);\n    }\n\n    _drag(e) {\n        const { chart, selection } = this;\n        const coords = chart._eventCoordinates(e.originalEvent);\n        const navigatorAxis = this.mainAxis();\n        const naviRange = navigatorAxis.datesRange();\n        const inNavigator = navigatorAxis.pane.box.containsPoint(coords);\n        const axis = chart._plotArea.categoryAxis;\n        const range = e.axisRanges[axis.options.name];\n        const select = this.options.select;\n        let duration;\n\n        if (!range || inNavigator || !selection) {\n            return;\n        }\n\n        if (select.from && select.to) {\n            duration = toTime(select.to) - toTime(select.from);\n        } else {\n            duration = toTime(selection.options.to) - toTime(selection.options.from);\n        }\n\n        const from = toDate(limitValue(\n            toTime(range.min),\n            naviRange.min, toTime(naviRange.max) - duration\n        ));\n\n        const to = toDate(limitValue(\n            toTime(from) + duration,\n            toTime(naviRange.min) + duration, naviRange.max\n        ));\n\n        this.options.select = { from: from, to: to };\n\n        if (this.options.liveDrag) {\n            this.filterAxes();\n            this.redrawSlaves();\n        }\n\n        selection.set(from, to);\n\n        this.showHint(from, to);\n    }\n\n    _dragEnd() {\n        this.filterAxes();\n        this.filter();\n        this.redrawSlaves();\n\n        if (this.hint) {\n            this.hint.hide();\n        }\n    }\n\n    readSelection() {\n        const { selection: { options: { from, to } }, options: { select } } = this;\n\n        select.from = from;\n        select.to = to;\n    }\n\n    filterAxes() {\n        const { options: { select = { } }, chart } = this;\n        const allAxes = chart.options.categoryAxis;\n        const { from, to } = select;\n\n        for (let idx = 0; idx < allAxes.length; idx++) {\n            const axis = allAxes[idx];\n            if (axis.pane !== NAVIGATOR_PANE) {\n                axis.min = from;\n                axis.max = to;\n            }\n        }\n    }\n\n    filter() {\n        const { chart, options: { select } } = this;\n        if (chart.requiresHandlers([ \"navigatorFilter\" ])) {\n            const axisOptions = new DateCategoryAxis(deepExtend({\n                baseUnit: \"fit\"\n            }, chart.options.categoryAxis[0], {\n                categories: [ select.from, select.to ]\n            }), chart.chartService).options;\n\n            this.chart.trigger(\"navigatorFilter\", {\n                from: addDuration(axisOptions.min, -axisOptions.baseUnitStep, axisOptions.baseUnit),\n                to: addDuration(axisOptions.max, axisOptions.baseUnitStep, axisOptions.baseUnit)\n            });\n        }\n    }\n\n    _zoom(e) {\n        const { chart: { _plotArea: { categoryAxis: axis } }, selection, options: { select, liveDrag } } = this;\n        const categories = this.mainAxis().options.categories;\n        let delta = e.delta;\n\n        if (!selection) {\n            return;\n        }\n\n        const fromIx = lteDateIndex(selection.options.from, categories);\n        const toIx = lteDateIndex(selection.options.to, categories);\n\n        e.originalEvent.preventDefault();\n\n        if (Math.abs(delta) > 1) {\n            delta *= ZOOM_ACCELERATION;\n        }\n\n        if (toIx - fromIx > 1) {\n            selection.expand(delta);\n            this.readSelection();\n        } else {\n            axis.options.min = select.from;\n            select.from = axis.scaleRange(-e.delta).min;\n        }\n\n        if (liveDrag) {\n            this.filterAxes();\n            this.redrawSlaves();\n        }\n\n        selection.set(select.from, select.to);\n\n        this.showHint(this.options.select.from, this.options.select.to);\n    }\n\n    _zoomEnd(e) {\n        this._dragEnd(e);\n    }\n\n    showHint(from, to) {\n        const plotArea = this.chart._plotArea;\n\n        if (this.hint) {\n            this.hint.show(from, to, plotArea.backgroundBox());\n        }\n    }\n\n    _selectStart(e) {\n        return this.chart._selectStart(e);\n    }\n\n    _select(e) {\n        this.showHint(e.from, e.to);\n\n        return this.chart._select(e);\n    }\n\n    _selectEnd(e) {\n        if (this.hint) {\n            this.hint.hide();\n        }\n\n        this.readSelection();\n        this.filterAxes();\n        this.filter();\n        this.redrawSlaves();\n\n        return this.chart._selectEnd(e);\n    }\n\n    mainAxis() {\n        const plotArea = this.chart._plotArea;\n\n        if (plotArea) {\n            return plotArea.namedCategoryAxes[NAVIGATOR_AXIS];\n        }\n    }\n\n    select(from, to) {\n        const select = this.options.select;\n\n        if (from && to) {\n            select.from = this.parseDate(from);\n            select.to = this.parseDate(to);\n\n            this.filterAxes();\n            this.filter();\n            this.redrawSlaves();\n\n            this.selection.set(from, to);\n        }\n\n        return {\n            from: select.from,\n            to: select.to\n        };\n    }\n\n    static setup(options = {}, themeOptions = {}) {\n        if (options.__navi) {\n            return;\n        }\n        options.__navi = true;\n\n        const naviOptions = deepExtend({}, themeOptions.navigator, options.navigator);\n        const panes = options.panes = [].concat(options.panes);\n        const paneOptions = deepExtend({}, naviOptions.pane, { name: NAVIGATOR_PANE });\n\n        if (!naviOptions.visible) {\n            paneOptions.visible = false;\n            paneOptions.height = 0.1;\n        }\n\n        panes.push(paneOptions);\n\n        Navigator.attachAxes(options, naviOptions);\n        Navigator.attachSeries(options, naviOptions, themeOptions);\n    }\n\n    static attachAxes(options, naviOptions) {\n        const series = naviOptions.series || [];\n        const categoryAxes = options.categoryAxis = [].concat(options.categoryAxis);\n        const valueAxes = options.valueAxis = [].concat(options.valueAxis);\n\n        const equallySpacedSeries = filterSeriesByType(series, EQUALLY_SPACED_SERIES);\n        const justifyAxis = equallySpacedSeries.length === 0;\n\n        const base = deepExtend({\n            type: \"date\",\n            pane: NAVIGATOR_PANE,\n            roundToBaseUnit: !justifyAxis,\n            justified: justifyAxis,\n            _collapse: false,\n            majorTicks: { visible: true },\n            tooltip: { visible: false },\n            labels: { step: 1 },\n            autoBind: naviOptions.autoBindElements,\n            autoBaseUnitSteps: {\n                minutes: [ 1 ],\n                hours: [ 1, 2 ],\n                days: [ 1, 2 ],\n                weeks: [],\n                months: [ 1 ],\n                years: [ 1 ]\n            }\n        });\n        const user = naviOptions.categoryAxis;\n\n        categoryAxes.push(\n            deepExtend({}, base, {\n                maxDateGroups: 200\n            }, user, {\n                name: NAVIGATOR_AXIS,\n                title: null,\n                baseUnit: \"fit\",\n                baseUnitStep: \"auto\",\n                labels: { visible: false },\n                majorTicks: { visible: false }\n            }), deepExtend({}, base, user, {\n                name: NAVIGATOR_AXIS + \"_labels\",\n                maxDateGroups: 20,\n                baseUnitStep: \"auto\",\n                plotBands: [],\n                autoBaseUnitSteps: {\n                    minutes: []\n                },\n                _overlap: true\n            }), deepExtend({}, base, user, {\n                name: NAVIGATOR_AXIS + \"_ticks\",\n                maxDateGroups: 200,\n                majorTicks: {\n                    width: 0.5\n                },\n                plotBands: [],\n                title: null,\n                labels: { visible: false, mirror: true },\n                _overlap: true\n            })\n        );\n\n        valueAxes.push(deepExtend({\n            name: NAVIGATOR_AXIS,\n            pane: NAVIGATOR_PANE,\n            majorGridLines: {\n                visible: false\n            },\n            visible: false\n        }, naviOptions.valueAxis));\n    }\n\n    static attachSeries(options, naviOptions, themeOptions) {\n        const series = options.series = options.series || [];\n        const navigatorSeries = [].concat(naviOptions.series || []);\n        const seriesColors = themeOptions.seriesColors;\n        const defaults = naviOptions.seriesDefaults;\n\n        for (let idx = 0; idx < navigatorSeries.length; idx++) {\n            series.push(\n                deepExtend({\n                    color: seriesColors[idx % seriesColors.length],\n                    categoryField: naviOptions.dateField,\n                    visibleInLegend: false,\n                    tooltip: {\n                        visible: false\n                    }\n                }, defaults, navigatorSeries[idx], {\n                    axis: NAVIGATOR_AXIS,\n                    categoryAxis: NAVIGATOR_AXIS,\n                    autoBind: naviOptions.autoBindElements\n                })\n            );\n        }\n    }\n}\n\nfunction ClonedObject() { }\nfunction clone(obj) {\n    ClonedObject.prototype = obj;\n    return new ClonedObject();\n}\n\nexport default Navigator;"],"names":["const","super","let"],"mappings":"AAAA,OAAO,aAAa,MAAM,kBAAkB,CAAC;AAC7C,SAAS,SAAS,EAAE,kBAAkB,QAAQ,UAAU,CAAC;AACzD,SAAS,IAAI,EAAE,QAAQ,EAAE,qBAAqB,EAAE,IAAI,EAAE,QAAQ,QAAQ,oBAAoB,CAAC;AAC3F,SAAS,gBAAgB,QAAQ,SAAS,CAAC;AAC3C,SAAS,WAAW,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,QAAQ,eAAe,CAAC;AACrF,SAAS,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,EAAE,gBAAgB,EAAE,IAAI,EAAE,UAAU,EAAE,cAAc,QAAQ,WAAW,CAAC;AACxH,SAAS,cAAc,EAAE,cAAc,QAAQ,aAAa,CAAC;;AAE7DA,GAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;;AAE5B,IAAM,SAAS,GAAc;IAAC,AAC1B,kBAAW,CAAC,KAAK,EAAE;QACfC,KAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAER,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnBD,GAAK,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACrFA,GAAK,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAC9B,IAAI,MAAM,EAAE;YACR,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC1C,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;SACzC;;QAED,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YAChC,OAAO,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;SAC1C;;QAED;QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,gBAAgB,CAAC,IAAI,EAAE,QAAA,CAItB,AAC1B,CALiD,KAC7C,CAAC,IAAI,CAAC,GAAA,AAAE,OAAO,KAAC,AAChB,CAAC,QAAQ,CAAC,GAAA,AAAE,UAAU,KACtB,CAAC,IAAI,CAAC,GAAA,AAAE,OAAO,KACf,CAAC,QAAQ,CAAC,GAAA,AAAE,UAAU,OACzB,CAAC,CAAC;QACH,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KACzC;;;;gDAAA;;IAED,oBAAA,SAAS,wBAAA,CAAC,KAAK,EAAE;QACb,OAAO,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KACzD,CAAA;;IAED,oBAAA,OAAO,oBAAA,GAAG;QACN,IAAI,IAAI,CAAC,KAAK,EAAE;YACZ,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAC9C,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;;QAED,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;YACzB,OAAO,IAAI,CAAC,SAAS,CAAC;SACzB;;QAED,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YACpB,OAAO,IAAI,CAAC,IAAI,CAAC;SACpB;KACJ,CAAA;;IAED,oBAAA,MAAM,mBAAA,GAAG;QACL,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,aAAa,EAAE,CAAC;KACxB,CAAA;;IAED,oBAAA,aAAa,0BAAA,GAAG;QACZ,AAAK,AAAmB,OAAA,GAAG,IAAI;QAAvB,IAAA,KAAK;QAAE,IAAA,OAAO,eAAhB,AAAO,AAAS,AAAS,AAAC;QAChCA,GAAK,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC7B,AAAK,AAAa,SAAA,GAAG,IAAI,CAAC,KAAK,EAAE;QAAzB,IAAA,GAAG;QAAE,IAAA,GAAG,aAAV,AAAK,AAAK,AAAiB,AAAC;QAClC,AAAK,AAAyB,SAAA,GAAG,OAAO,CAAC,MAAM;QAAvC,IAAA,IAAI;QAAE,IAAA,EAAE;QAAE,IAAA,UAAU,oBAAtB,AAAM,AAAI,AAAY,AAAmB,AAAC;QAChDA,GAAK,CAAC,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;QAC9BA,GAAK,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;QACvCE,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;;QAE/B,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACrB,OAAO;SACV;;QAED,IAAI,SAAS,EAAE;YACX,SAAS,CAAC,OAAO,EAAE,CAAC;SACvB;;;QAGD,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;;QAEzB,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,SAAS,CAAC,KAAK,EAAE,SAAS,EAAE;YACzD,GAAG,EAAE,GAAG;YACR,GAAG,EAAE,GAAG;YACR,IAAI,EAAE,IAAI,IAAI,GAAG;YACjB,EAAE,EAAE,EAAE,IAAI,GAAG;YACb,UAAU,EAAE,cAAc,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;YACxD,OAAO,EAAE,OAAO,CAAC,OAAO;SAC3B,EAAE,IAAI,gBAAgB,CAAC,IAAI,EAAE;YAC1B,WAAW,EAAE,cAAc;YAC3B,MAAM,EAAE,SAAS;YACjB,SAAS,EAAE,YAAY;SAC1B,CAAC,CAAC,CAAC;;QAEJ,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;SACvB;;QAED,IAAI,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE;YACtB,IAAI,CAAC,IAAI,GAAG,IAAI,aAAa,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,YAAY,EAAE;gBAC7D,GAAG,EAAE,GAAG;gBACR,GAAG,EAAE,GAAG;gBACR,QAAQ,EAAE,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC;gBACnC,MAAM,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM;aAC9B,CAAC,CAAC;SACN;KACJ,CAAA;;IAED,oBAAA,QAAQ,qBAAA,GAAG;QACPF,GAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAClDA,GAAK,CAAC,IAAI,GAAG,QAAQ,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;;QAExD,AAAK,AAAa,OAAA,GAAG,IAAI,CAAC,KAAK,EAAE;QAAzB,IAAA,GAAG;QAAE,IAAA,GAAG,WAAV,AAAK,AAAK,AAAiB,AAAC;;QAElCA,GAAK,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC;QACzCE,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,GAAG,CAAC;QAC9B,IAAI,IAAI,GAAG,GAAG,EAAE;YACZ,IAAI,GAAG,GAAG,CAAC;SACd;;QAEDA,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,IAAI,GAAG,CAAC;QAC1B,IAAI,EAAE,GAAG,GAAG,EAAE;YACV,EAAE,GAAG,GAAG,CAAC;SACZ;;QAED,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,UAAU,CAAC,EAAE,EAAE,MAAM,EAAE;YACzC,IAAI,EAAE,IAAI;YACV,EAAE,EAAE,EAAE;SACT,CAAC,CAAC;;QAEH,IAAI,CAAC,UAAU,EAAE,CAAC;KACrB,CAAA;;IAED,oBAAA,WAAW,wBAAA,CAAC,MAAM,EAAE;QAChBF,GAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;;QAEtC,IAAI,QAAQ,EAAE;YACV,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC;SACjD;KACJ,CAAA;;IAED,oBAAA,YAAY,yBAAA,GAAG;QACXA,GAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzBA,GAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC;QACjCA,GAAK,CAAC,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;;QAG/C,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;QAC1C,QAAQ,CAAC,OAAO,CAAC,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC;;QAE3D,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;KAC/B,CAAA;;IAED,oBAAA,KAAK,kBAAA,CAAC,CAAC,EAAE;QACL,AAAK,AAAqB,OAAA,GAAG,IAAI;QAAzB,IAAA,KAAK;QAAE,IAAA,SAAS,iBAAlB,AAAO,AAAW,AAAS,AAAC;QAClCA,GAAK,CAAC,MAAM,GAAG,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;QACxDA,GAAK,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QACtCA,GAAK,CAAC,SAAS,GAAG,aAAa,CAAC,UAAU,EAAE,CAAC;QAC7CA,GAAK,CAAC,WAAW,GAAG,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QACjEA,GAAK,CAAC,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC;QAC1CA,GAAK,CAAC,KAAK,GAAG,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC9CA,GAAK,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACnCE,GAAG,CAAC,QAAQ,CAAC;;QAEb,IAAI,CAAC,KAAK,IAAI,WAAW,IAAI,CAAC,SAAS,EAAE;YACrC,OAAO;SACV;;QAED,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,EAAE,EAAE;YAC1B,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACtD,MAAM;YACH,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAC5E;;QAEDF,GAAK,CAAC,IAAI,GAAG,MAAM,CAAC,UAAU;YAC1B,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC;YACjB,SAAS,CAAC,GAAG,EAAE,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,QAAQ;SAClD,CAAC,CAAC;;QAEHA,GAAK,CAAC,EAAE,GAAG,MAAM,CAAC,UAAU;YACxB,MAAM,CAAC,IAAI,CAAC,GAAG,QAAQ;YACvB,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,QAAQ,EAAE,SAAS,CAAC,GAAG;SAClD,CAAC,CAAC;;QAEH,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;;QAE7C,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;YACvB,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;;QAED,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;;QAExB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;KAC3B,CAAA;;IAED,oBAAA,QAAQ,qBAAA,GAAG;QACP,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,YAAY,EAAE,CAAC;;QAEpB,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;SACpB;KACJ,CAAA;;IAED,oBAAA,aAAa,0BAAA,GAAG;QACZ,AAAK,AAA8D,OAAA,GAAG,IAAI;QAA5C,4BAAA,qBAAC;QAAC,IAAA,IAAI;QAAE,IAAA,EAAE;QAAiB,IAAA,MAAM,sBAAzD,AAAa,AAAY,AAAK,AAAI,AAAE,AAAE,AAAW,AAAQ,AAAE,AAAS,AAAC;;QAE3E,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC;KAClB,CAAA;;IAED,oBAAA,UAAU,uBAAA,GAAG;QACT,AAAK,AAAqC,OAAA,GAAG,IAAI;QAArB,mEAAA,GAAG;QAAI,IAAA,KAAK,aAAlC,AAAW,AAAc,AAAE,AAAO,AAAS,AAAC;QAClDA,GAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC;QAC3C,AAAK,AAAG,IAAA,IAAI;QAAE,IAAA,EAAE,aAAV,AAAM,AAAI,AAAE,AAAS,AAAC;;QAE5B,KAAKE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YAC3CF,GAAK,CAAC,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;YAC1B,IAAI,IAAI,CAAC,IAAI,KAAK,cAAc,EAAE;gBAC9B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;gBAChB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;aACjB;SACJ;KACJ,CAAA;;IAED,oBAAA,MAAM,mBAAA,GAAG;QACL,AAAK,AAA+B,OAAA,GAAG,IAAI;QAAnC,IAAA,KAAK;QAAa,IAAA,MAAM,sBAA1B,AAAO,AAAW,AAAQ,AAAE,AAAS,AAAC;QAC5C,IAAI,KAAK,CAAC,gBAAgB,CAAC,EAAE,iBAAiB,EAAE,CAAC,EAAE;YAC/CA,GAAK,CAAC,WAAW,GAAG,IAAI,gBAAgB,CAAC,UAAU,CAAC;gBAChD,QAAQ,EAAE,KAAK;aAClB,EAAE,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE;gBAC9B,UAAU,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,EAAE;aACzC,CAAC,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC;;YAEhC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAiB,EAAE;gBAClC,IAAI,EAAE,WAAW,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,WAAW,CAAC,YAAY,EAAE,WAAW,CAAC,QAAQ,CAAC;gBACnF,EAAE,EAAE,WAAW,CAAC,WAAW,CAAC,GAAG,EAAE,WAAW,CAAC,YAAY,EAAE,WAAW,CAAC,QAAQ,CAAC;aACnF,CAAC,CAAC;SACN;KACJ,CAAA;;IAED,oBAAA,KAAK,kBAAA,CAAC,CAAC,EAAE;QACL,AAAK,AAA2F,OAAA,GAAG,IAAI;QAA3D,IAAA,IAAI;QAAM,IAAA,SAAS;QAAW,kBAAA,WAAC;QAAC,IAAA,MAAM;QAAE,IAAA,QAAQ,wBAAtF,AAAS,AAAa,AAAoB,AAAE,AAAE,AAAW,AAAY,AAAO,AAAU,AAAE,AAAS,AAAC;QACxGA,GAAK,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC;QACtDE,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;;QAEpB,IAAI,CAAC,SAAS,EAAE;YACZ,OAAO;SACV;;QAEDF,GAAK,CAAC,MAAM,GAAG,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QAChEA,GAAK,CAAC,IAAI,GAAG,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;;QAE5D,CAAC,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;;QAEjC,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;YACrB,KAAK,IAAI,iBAAiB,CAAC;SAC9B;;QAED,IAAI,IAAI,GAAG,MAAM,GAAG,CAAC,EAAE;YACnB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACxB,IAAI,CAAC,aAAa,EAAE,CAAC;SACxB,MAAM;YACH,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC;YAC/B,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;SAC/C;;QAED,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;;QAED,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;;QAEtC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;KACnE,CAAA;;IAED,oBAAA,QAAQ,qBAAA,CAAC,CAAC,EAAE;QACR,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;KACpB,CAAA;;IAED,oBAAA,QAAQ,qBAAA,CAAC,IAAI,EAAE,EAAE,EAAE;QACfA,GAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;;QAEtC,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC;SACtD;KACJ,CAAA;;IAED,oBAAA,YAAY,yBAAA,CAAC,CAAC,EAAE;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;KACrC,CAAA;;IAED,oBAAA,OAAO,oBAAA,CAAC,CAAC,EAAE;QACP,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;;QAE5B,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;KAChC,CAAA;;IAED,oBAAA,UAAU,uBAAA,CAAC,CAAC,EAAE;QACV,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;SACpB;;QAED,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,YAAY,EAAE,CAAC;;QAEpB,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;KACnC,CAAA;;IAED,oBAAA,QAAQ,qBAAA,GAAG;QACPA,GAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;;QAEtC,IAAI,QAAQ,EAAE;YACV,OAAO,QAAQ,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;SACrD;KACJ,CAAA;;IAED,oBAAA,MAAM,mBAAA,CAAC,IAAI,EAAE,EAAE,EAAE;QACbA,GAAK,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;;QAEnC,IAAI,IAAI,IAAI,EAAE,EAAE;YACZ,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACnC,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;;YAE/B,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,IAAI,CAAC,YAAY,EAAE,CAAC;;YAEpB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;SAChC;;QAED,OAAO;YACH,IAAI,EAAE,MAAM,CAAC,IAAI;YACjB,EAAE,EAAE,MAAM,CAAC,EAAE;SAChB,CAAC;KACL,CAAA;;IAED,UAAA,AAAO,KAAK,kBAAA,CAAC,OAAY,EAAE,YAAiB,EAAE,CAA1B;yCAAA,GAAG,EAAE,CAAc;mDAAA,GAAG,EAAE;AAAG;QAC3C,IAAI,OAAO,CAAC,MAAM,EAAE;YAChB,OAAO;SACV;QACD,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;;QAEtBA,GAAK,CAAC,WAAW,GAAG,UAAU,CAAC,EAAE,EAAE,YAAY,CAAC,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC;QAC9EA,GAAK,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACvDA,GAAK,CAAC,WAAW,GAAG,UAAU,CAAC,EAAE,EAAE,WAAW,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC,CAAC;;QAE/E,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;YACtB,WAAW,CAAC,OAAO,GAAG,KAAK,CAAC;YAC5B,WAAW,CAAC,MAAM,GAAG,GAAG,CAAC;SAC5B;;QAED,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;;QAExB,SAAS,CAAC,UAAU,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QAC3C,SAAS,CAAC,YAAY,CAAC,OAAO,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;KAC9D,CAAA;;IAED,UAAA,AAAO,UAAU,uBAAA,CAAC,OAAO,EAAE,WAAW,EAAE;QACpCA,GAAK,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,IAAI,EAAE,CAAC;QACxCA,GAAK,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QAC5EA,GAAK,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;;QAEnEA,GAAK,CAAC,mBAAmB,GAAG,kBAAkB,CAAC,MAAM,EAAE,qBAAqB,CAAC,CAAC;QAC9EA,GAAK,CAAC,WAAW,GAAG,mBAAmB,CAAC,MAAM,KAAK,CAAC,CAAC;;QAErDA,GAAK,CAAC,IAAI,GAAG,UAAU,CAAC;YACpB,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE,cAAc;YACpB,eAAe,EAAE,CAAC,WAAW;YAC7B,SAAS,EAAE,WAAW;YACtB,SAAS,EAAE,KAAK;YAChB,UAAU,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;YAC7B,OAAO,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE;YAC3B,MAAM,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE;YACnB,QAAQ,EAAE,WAAW,CAAC,gBAAgB;YACtC,iBAAiB,EAAE;gBACf,OAAO,EAAE,EAAE,CAAC,EAAE;gBACd,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE;gBACf,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE;gBACd,KAAK,EAAE,EAAE;gBACT,MAAM,EAAE,EAAE,CAAC,EAAE;gBACb,KAAK,EAAE,EAAE,CAAC,EAAE;aACf;SACJ,CAAC,CAAC;QACHA,GAAK,CAAC,IAAI,GAAG,WAAW,CAAC,YAAY,CAAC;;QAEtC,YAAY,CAAC,IAAI;YACb,UAAU,CAAC,EAAE,EAAE,IAAI,EAAE;gBACjB,aAAa,EAAE,GAAG;aACrB,EAAE,IAAI,EAAE;gBACL,IAAI,EAAE,cAAc;gBACpB,KAAK,EAAE,IAAI;gBACX,QAAQ,EAAE,KAAK;gBACf,YAAY,EAAE,MAAM;gBACpB,MAAM,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE;gBAC1B,UAAU,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE;aACjC,CAAC,EAAE,UAAU,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;gBAC3B,IAAI,EAAE,cAAc,GAAG,SAAS;gBAChC,aAAa,EAAE,EAAE;gBACjB,YAAY,EAAE,MAAM;gBACpB,SAAS,EAAE,EAAE;gBACb,iBAAiB,EAAE;oBACf,OAAO,EAAE,EAAE;iBACd;gBACD,QAAQ,EAAE,IAAI;aACjB,CAAC,EAAE,UAAU,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;gBAC3B,IAAI,EAAE,cAAc,GAAG,QAAQ;gBAC/B,aAAa,EAAE,GAAG;gBAClB,UAAU,EAAE;oBACR,KAAK,EAAE,GAAG;iBACb;gBACD,SAAS,EAAE,EAAE;gBACb,KAAK,EAAE,IAAI;gBACX,MAAM,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE;gBACxC,QAAQ,EAAE,IAAI;aACjB,CAAC;SACL,CAAC;;QAEF,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC;YACtB,IAAI,EAAE,cAAc;YACpB,IAAI,EAAE,cAAc;YACpB,cAAc,EAAE;gBACZ,OAAO,EAAE,KAAK;aACjB;YACD,OAAO,EAAE,KAAK;SACjB,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC;KAC9B,CAAA;;IAED,UAAA,AAAO,YAAY,yBAAA,CAAC,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE;QACpDA,GAAK,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC;QACrDA,GAAK,CAAC,eAAe,GAAG,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC;QAC5DA,GAAK,CAAC,YAAY,GAAG,YAAY,CAAC,YAAY,CAAC;QAC/CA,GAAK,CAAC,QAAQ,GAAG,WAAW,CAAC,cAAc,CAAC;;QAE5C,KAAKE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,eAAe,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YACnD,MAAM,CAAC,IAAI;gBACP,UAAU,CAAC;oBACP,KAAK,EAAE,YAAY,CAAC,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC;oBAC9C,aAAa,EAAE,WAAW,CAAC,SAAS;oBACpC,eAAe,EAAE,KAAK;oBACtB,OAAO,EAAE;wBACL,OAAO,EAAE,KAAK;qBACjB;iBACJ,EAAE,QAAQ,EAAE,eAAe,CAAC,GAAG,CAAC,EAAE;oBAC/B,IAAI,EAAE,cAAc;oBACpB,YAAY,EAAE,cAAc;oBAC5B,QAAQ,EAAE,WAAW,CAAC,gBAAgB;iBACzC,CAAC;aACL,CAAC;SACL;KACJ,CAAA,AACJ;;;EA/buB,KA+bvB,GAAA;;AAED,SAAS,YAAY,GAAG,GAAG;AAC3B,SAAS,KAAK,CAAC,GAAG,EAAE;IAChB,YAAY,CAAC,SAAS,GAAG,GAAG,CAAC;IAC7B,OAAO,IAAI,YAAY,EAAE,CAAC;CAC7B;;AAED,eAAe,SAAS"}