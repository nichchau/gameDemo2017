{"version":3,"file":"logarithmic-axis.js","sources":["logarithmic-axis.js"],"sourcesContent":["\nimport Axis from './axis';\nimport AxisLabel from './axis-label';\nimport Box from './box';\n\nimport createAxisTick from './utils/create-axis-tick';\nimport createAxisGridLine from './utils/create-axis-grid-line';\nimport limitCoordinate from './utils/limit-coordinate';\n\nimport { DEFAULT_PRECISION, BLACK, X, Y } from '../common/constants';\nimport { deepExtend, defined, inArray, limitValue, round, setDefaultOptions } from '../common';\n\nconst DEFAULT_MAJOR_UNIT = 10;\n\nclass LogarithmicAxis extends Axis {\n    constructor(seriesMin, seriesMax, options, chartService) {\n\n        const axisOptions = deepExtend({ majorUnit: DEFAULT_MAJOR_UNIT, min: seriesMin, max: seriesMax }, options);\n        const base = axisOptions.majorUnit;\n        const autoMax = autoAxisMax(seriesMax, base);\n        const autoMin = autoAxisMin(seriesMin, seriesMax, axisOptions);\n        const range = initRange(autoMin, autoMax, axisOptions, options);\n\n        axisOptions.max = range.max;\n        axisOptions.min = range.min;\n        axisOptions.minorUnit = options.minorUnit || round(base - 1, DEFAULT_PRECISION);\n\n        super(axisOptions, chartService);\n\n        this.totalMin = defined(options.min) ? Math.min(autoMin, options.min) : autoMin;\n        this.totalMax = defined(options.max) ? Math.max(autoMax, options.max) : autoMax;\n        this.logMin = round(log(range.min, base), DEFAULT_PRECISION);\n        this.logMax = round(log(range.max, base), DEFAULT_PRECISION);\n        this.seriesMin = seriesMin;\n        this.seriesMax = seriesMax;\n\n        this.createLabels();\n    }\n\n    startValue() {\n        return this.options.min;\n    }\n\n    getSlot(a, b, limit) {\n        const { options, logMin, logMax } = this;\n        const { reverse, vertical, majorUnit: base } = options;\n        const valueAxis = vertical ? Y : X;\n        const lineBox = this.lineBox();\n        const lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n        const lineSize = vertical ? lineBox.height() : lineBox.width();\n        const dir = reverse ? -1 : 1;\n        const step = dir * (lineSize / (logMax - logMin));\n        const slotBox = new Box(lineBox.x1, lineBox.y1, lineBox.x1, lineBox.y1);\n        let start = a;\n        let end = b;\n\n        if (!defined(start)) {\n            start = end || 1;\n        }\n\n        if (!defined(end)) {\n            end = start || 1;\n        }\n\n        if (start <= 0 || end <= 0) {\n            return null;\n        }\n\n        if (limit) {\n            start = Math.max(Math.min(start, options.max), options.min);\n            end = Math.max(Math.min(end, options.max), options.min);\n        }\n\n        start = log(start, base);\n        end = log(end, base);\n\n        let p1, p2;\n\n        if (vertical) {\n            p1 = logMax - Math.max(start, end);\n            p2 = logMax - Math.min(start, end);\n        } else {\n            p1 = Math.min(start, end) - logMin;\n            p2 = Math.max(start, end) - logMin;\n        }\n\n        slotBox[valueAxis + 1] = limitCoordinate(lineStart + step * (reverse ? p2 : p1));\n        slotBox[valueAxis + 2] = limitCoordinate(lineStart + step * (reverse ? p1 : p2));\n\n        return slotBox;\n    }\n\n    getValue(point) {\n        const { options, logMin, logMax } = this;\n        const { reverse, vertical, majorUnit: base } = options;\n        const lineBox = this.lineBox();\n        const dir = vertical === reverse ? 1 : -1;\n        const startEdge = dir === 1 ? 1 : 2;\n        const lineSize = vertical ? lineBox.height() : lineBox.width();\n        const step = ((logMax - logMin) / lineSize);\n        const valueAxis = vertical ? Y : X;\n        const lineStart = lineBox[valueAxis + startEdge];\n        const offset = dir * (point[valueAxis] - lineStart);\n        const valueOffset = offset * step;\n\n        if (offset < 0 || offset > lineSize) {\n            return null;\n        }\n\n        const value = logMin + valueOffset;\n\n        return round(Math.pow(base, value), DEFAULT_PRECISION);\n    }\n\n    range() {\n        const options = this.options;\n        return { min: options.min, max: options.max };\n    }\n\n    scaleRange(delta) {\n        const base = this.options.majorUnit;\n        const offset = -delta;\n\n        return {\n            min: Math.pow(base, this.logMin - offset),\n            max: Math.pow(base, this.logMax + offset)\n        };\n    }\n\n    translateRange(delta) {\n        const { options, logMin, logMax } = this;\n        const { reverse, vertical, majorUnit: base } = options;\n        const lineBox = this.lineBox();\n        const size = vertical ? lineBox.height() : lineBox.width();\n        const scale = size / (logMax - logMin);\n        let offset = round(delta / scale, DEFAULT_PRECISION);\n\n        if ((vertical || reverse) && !(vertical && reverse )) {\n            offset = -offset;\n        }\n\n        return {\n            min: Math.pow(base, logMin + offset),\n            max: Math.pow(base, logMax + offset)\n        };\n    }\n\n    labelsCount() {\n        const floorMax = Math.floor(this.logMax);\n        const count = Math.floor(floorMax - this.logMin) + 1;\n\n        return count;\n    }\n\n    getMajorTickPositions() {\n        const ticks = [];\n\n        this.traverseMajorTicksPositions((position) => {\n            ticks.push(position);\n        }, { step: 1, skip: 0 });\n\n        return ticks;\n    }\n\n    createTicks(lineGroup) {\n        const options = this.options;\n        const { majorTicks, minorTicks, vertical } = options;\n        const mirror = options.labels.mirror;\n        const lineBox = this.lineBox();\n        const ticks = [];\n        const tickLineOptions = {\n            // TODO\n            // _alignLines: options._alignLines,\n            vertical: vertical\n        };\n\n        function render(tickPosition, tickOptions) {\n            tickLineOptions.tickX = mirror ? lineBox.x2 : lineBox.x2 - tickOptions.size;\n            tickLineOptions.tickY = mirror ? lineBox.y1 - tickOptions.size : lineBox.y1;\n            tickLineOptions.position = tickPosition;\n\n            lineGroup.append(createAxisTick(tickLineOptions, tickOptions));\n        }\n\n        if (majorTicks.visible) {\n            this.traverseMajorTicksPositions(render, majorTicks);\n        }\n\n        if (minorTicks.visible) {\n            this.traverseMinorTicksPositions(render, minorTicks);\n        }\n\n        return ticks;\n    }\n\n    createGridLines(altAxis) {\n        const options = this.options;\n        const { minorGridLines, majorGridLines, vertical } = options;\n        const lineBox = altAxis.lineBox();\n        const lineOptions = {\n            lineStart: lineBox[vertical ? \"x1\" : \"y1\"],\n            lineEnd: lineBox[vertical ? \"x2\" : \"y2\"],\n            vertical: vertical\n        };\n        const majorTicks = [];\n\n        const container = this.gridLinesVisual();\n        function render(tickPosition, gridLine) {\n            if (!inArray(tickPosition, majorTicks)) {\n                lineOptions.position = tickPosition;\n                container.append(createAxisGridLine(lineOptions, gridLine));\n\n                majorTicks.push(tickPosition);\n            }\n        }\n\n        if (majorGridLines.visible) {\n            this.traverseMajorTicksPositions(render, majorGridLines);\n        }\n\n        if (minorGridLines.visible) {\n            this.traverseMinorTicksPositions(render, minorGridLines);\n        }\n\n        return container.children;\n    }\n\n    traverseMajorTicksPositions(callback, tickOptions) {\n        const { lineStart, step } = this._lineOptions();\n        const { logMin, logMax } = this;\n\n        for (let power = Math.ceil(logMin) + tickOptions.skip; power <= logMax; power += tickOptions.step) {\n            let position = round(lineStart + step * (power - logMin), DEFAULT_PRECISION);\n            callback(position, tickOptions);\n        }\n    }\n\n    traverseMinorTicksPositions(callback, tickOptions) {\n        const { min, max, minorUnit, majorUnit: base } = this.options;\n        const { lineStart, step } = this._lineOptions();\n        const { logMin, logMax } = this;\n        const start = Math.floor(logMin);\n\n        for (let power = start; power < logMax; power++) {\n            const minorOptions = this._minorIntervalOptions(power);\n            for (let idx = tickOptions.skip; idx < minorUnit; idx += tickOptions.step) {\n                const value = minorOptions.value + idx * minorOptions.minorStep;\n                if (value > max) {\n                    break;\n                }\n                if (value >= min) {\n                    const position = round(lineStart + step * (log(value, base) - logMin), DEFAULT_PRECISION);\n                    callback(position, tickOptions);\n                }\n            }\n        }\n    }\n\n    createAxisLabel(index, labelOptions) {\n        const power = Math.ceil(this.logMin + index);\n        const value = Math.pow(this.options.majorUnit, power);\n        const text = this.axisLabelText(value, null, labelOptions);\n\n        return new AxisLabel(value, text, index, null, labelOptions);\n    }\n\n    shouldRenderNote(value) {\n        const range = this.range();\n        return range.min <= value && value <= range.max;\n    }\n\n    pan(delta) {\n        const range = this.translateRange(delta);\n        return this.limitRange(range.min, range.max, this.totalMin, this.totalMax, -delta);\n    }\n\n    pointsRange(start, end) {\n        const startValue = this.getValue(start);\n        const endValue = this.getValue(end);\n        const min = Math.min(startValue, endValue);\n        const max = Math.max(startValue, endValue);\n\n        return {\n            min: min,\n            max: max\n        };\n    }\n\n    zoomRange(delta) {\n        const { options, totalMin, totalMax } = this;\n        const newRange = this.scaleRange(delta);\n        const min = limitValue(newRange.min, totalMin, totalMax);\n        const max = limitValue(newRange.max, totalMin, totalMax);\n        const base = options.majorUnit;\n        const acceptOptionsRange = max > min && options.min && options.max && (round(log(options.max, base) - log(options.min, base), DEFAULT_PRECISION) < 1);\n        const acceptNewRange = !(options.min === totalMin && options.max === totalMax) && round(log(max, base) - log(min, base), DEFAULT_PRECISION) >= 1;\n\n        if (acceptOptionsRange || acceptNewRange) {\n            return {\n                min: min,\n                max: max\n            };\n        }\n    }\n\n    _minorIntervalOptions(power) {\n        const { minorUnit, majorUnit: base } = this.options;\n        const value = Math.pow(base, power);\n        const nextValue = Math.pow(base, power + 1);\n        const difference = nextValue - value;\n        const minorStep = difference / minorUnit;\n\n        return {\n            value: value,\n            minorStep: minorStep\n        };\n    }\n\n    _lineOptions() {\n        const { reverse, vertical } = this.options;\n        const valueAxis = vertical ? Y : X;\n        const lineBox = this.lineBox();\n        const dir = vertical === reverse ? 1 : -1;\n        const startEdge = dir === 1 ? 1 : 2;\n        const lineSize = vertical ? lineBox.height() : lineBox.width();\n        const step = dir * (lineSize / (this.logMax - this.logMin));\n        const lineStart = lineBox[valueAxis + startEdge];\n\n        return {\n            step: step,\n            lineStart: lineStart,\n            lineBox: lineBox\n        };\n    }\n}\n\nfunction initRange(autoMin, autoMax, axisOptions, options) {\n    let { min, max } = axisOptions;\n\n    if (defined(axisOptions.axisCrossingValue) && axisOptions.axisCrossingValue <= 0) {\n        throwNegativeValuesError();\n    }\n\n    if (!defined(options.max)) {\n        max = autoMax;\n    } else if (options.max <= 0) {\n        throwNegativeValuesError();\n    }\n\n    if (!defined(options.min)) {\n        min = autoMin;\n    } else if (options.min <= 0) {\n        throwNegativeValuesError();\n    }\n\n    return {\n        min: min,\n        max: max\n    };\n}\n\nfunction autoAxisMin(min, max, options) {\n    const base = options.majorUnit;\n    let autoMin = min;\n    if (min <= 0) {\n        autoMin = max <= 1 ? Math.pow(base, -2) : 1;\n    } else if (!options.narrowRange) {\n        autoMin = Math.pow(base, Math.floor(log(min, base)));\n    }\n    return autoMin;\n}\n\nfunction autoAxisMax(max, base) {\n    const logMaxRemainder = round(log(max, base), DEFAULT_PRECISION) % 1;\n    let autoMax;\n    if (max <= 0) {\n        autoMax = base;\n    } else if (logMaxRemainder !== 0 && (logMaxRemainder < 0.3 || logMaxRemainder > 0.9)) {\n        autoMax = Math.pow(base, log(max, base) + 0.2);\n    } else {\n        autoMax = Math.pow(base, Math.ceil(log(max, base)));\n    }\n\n    return autoMax;\n}\n\nfunction throwNegativeValuesError() {\n    throw new Error(\"Non positive values cannot be used for a logarithmic axis\");\n}\n\nfunction log(y, x) {\n    return Math.log(y) / Math.log(x);\n}\n\nsetDefaultOptions(LogarithmicAxis, {\n    type: \"log\",\n    majorUnit: DEFAULT_MAJOR_UNIT,\n    minorUnit: 1,\n    axisCrossingValue: 1,\n    vertical: true,\n    majorGridLines: {\n        visible: true,\n        width: 1,\n        color: BLACK\n    },\n    zIndex: 1,\n    _deferLabels: true\n});\n\nexport default LogarithmicAxis;"],"names":["const","super","let","this"],"mappings":"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"}