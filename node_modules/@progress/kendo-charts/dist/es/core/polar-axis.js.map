{"version":3,"file":"polar-axis.js","sources":["polar-axis.js"],"sourcesContent":["import { geometry as geom } from '@progress/kendo-drawing';\n\nimport GridLinesMixin from './mixins/grid-lines-mixin';\nimport RadarCategoryAxis from './radar-category-axis';\nimport NumericAxis from './numeric-axis';\nimport Axis from './axis';\nimport Ring from './ring';\nimport Box from './box';\n\nimport { BLACK } from '../common/constants';\nimport { deepExtend, deg, getSpacing, inArray, limitValue, setDefaultOptions } from '../common';\n\nclass PolarAxis extends Axis {\n    constructor(options, chartService) {\n        super(options, chartService);\n\n        const instanceOptions = this.options;\n\n        instanceOptions.minorUnit = instanceOptions.minorUnit || instanceOptions.majorUnit / 2;\n    }\n\n    getDivisions(stepValue) {\n        return NumericAxis.prototype.getDivisions.call(this, stepValue) - 1;\n    }\n\n    reflow(box) {\n        this.box = box;\n        this.reflowLabels();\n    }\n\n    reflowLabels() {\n        const { options, labels, options: { labels: labelOptions } } = this;\n        const skip = labelOptions.skip || 0;\n        const step = labelOptions.step || 1;\n\n        const measureBox = new Box();\n        const divs = this.intervals(options.majorUnit, skip, step);\n\n        for (let i = 0; i < labels.length; i++) {\n            labels[i].reflow(measureBox);\n            const labelBox = labels[i].box;\n\n            labels[i].reflow(this.getSlot(divs[i]).adjacentBox(0, labelBox.width(), labelBox.height()));\n        }\n    }\n\n    lineBox() {\n        return this.box;\n    }\n\n    intervals(size, skipOption, stepOption, skipAngles = false) {\n        const min = this.options.min;\n        const divisions = this.getDivisions(size);\n        const divs = [];\n        const skip = skipOption || 0;\n        const step = stepOption || 1;\n\n        for (let i = skip; i < divisions; i += step) {\n            const current = (360 + min + i * size) % 360;\n            if (!(skipAngles && inArray(current, skipAngles))) {\n                divs.push(current);\n            }\n        }\n\n        return divs;\n    }\n\n    majorIntervals() {\n        return this.intervals(this.options.majorUnit);\n    }\n\n    minorIntervals() {\n        return this.intervals(this.options.minorUnit);\n    }\n\n    intervalAngle(i) {\n        return (540 - i - this.options.startAngle) % 360;\n    }\n\n    createLine() {\n        return [];\n    }\n\n    majorGridLineAngles(altAxis) {\n        const majorGridLines = this.options.majorGridLines;\n        return this.gridLineAngles(altAxis, this.options.majorUnit, majorGridLines.skip, majorGridLines.step);\n    }\n\n    minorGridLineAngles(altAxis, skipMajor) {\n        const options = this.options;\n        const { minorGridLines, majorGridLines } = options;\n        const majorGridLineAngles = skipMajor ? this.intervals(options.majorUnit, majorGridLines.skip, majorGridLines.step) : null;\n\n        return this.gridLineAngles(altAxis, options.minorUnit, minorGridLines.skip, minorGridLines.step, majorGridLineAngles);\n    }\n\n    plotBandSlot(band) {\n        return this.getSlot(band.from, band.to);\n    }\n\n    getSlot(a, b) {\n        const { options, box } = this;\n        const startAngle = options.startAngle;\n        let start = limitValue(a, options.min, options.max);\n        let end = limitValue(b || start, start, options.max);\n\n        if (options.reverse) {\n            start *= -1;\n            end *= -1;\n        }\n\n        start = (540 - start - startAngle) % 360;\n        end = (540 - end - startAngle) % 360;\n\n        if (end < start) {\n            const tmp = start;\n            start = end;\n            end = tmp;\n        }\n\n        return new Ring(box.center(), 0, box.height() / 2, start, end - start);\n    }\n\n    slot(from, to = from) {\n        const options = this.options;\n        const start = 360 - options.startAngle;\n        const slot = this.getSlot(from, to);\n        const min = Math.min(from, to);\n        const max = Math.max(from, to);\n        let startAngle, endAngle;\n\n        if (options.reverse) {\n            startAngle = min;\n            endAngle = max;\n        } else {\n            startAngle = 360 - max;\n            endAngle = 360 - min;\n        }\n\n        startAngle = (startAngle + start) % 360;\n        endAngle = (endAngle + start) % 360;\n\n        return new geom.Arc([ slot.center.x, slot.center.y ], {\n            startAngle: startAngle,\n            endAngle: endAngle,\n            radiusX: slot.radius,\n            radiusY: slot.radius\n        });\n    }\n\n    getValue(point) {\n        const options = this.options;\n        const center = this.box.center();\n        const dx = point.x - center.x;\n        const dy = point.y - center.y;\n        let theta = Math.round(deg(Math.atan2(dy, dx)));\n        let start = options.startAngle;\n\n        if (!options.reverse) {\n            theta *= -1;\n            start *= -1;\n        }\n\n        return (theta + start + 360) % 360;\n    }\n\n    valueRange() {\n        return {\n            min: 0,\n            max: Math.PI * 2\n        };\n    }\n}\n\nsetDefaultOptions(PolarAxis, {\n    type: \"polar\",\n    startAngle: 0,\n    reverse: false,\n    majorUnit: 60,\n    min: 0,\n    max: 360,\n    labels: {\n        margin: getSpacing(10)\n    },\n    majorGridLines: {\n        color: BLACK,\n        visible: true,\n        width: 1\n    },\n    minorGridLines: {\n        color: \"#aaa\"\n    }\n});\n\ndeepExtend(PolarAxis.prototype, GridLinesMixin, {\n    createPlotBands: RadarCategoryAxis.prototype.createPlotBands,\n    majorAngles: RadarCategoryAxis.prototype.majorAngles,\n    range: NumericAxis.prototype.range,\n    labelsCount: NumericAxis.prototype.labelsCount,\n    createAxisLabel: NumericAxis.prototype.createAxisLabel\n});\n\nexport default PolarAxis;"],"names":["super","const","let","this"],"mappings":"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"}