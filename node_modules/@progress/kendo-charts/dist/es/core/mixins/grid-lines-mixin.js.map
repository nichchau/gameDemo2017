{"version":3,"file":"grid-lines-mixin.js","sources":["grid-lines-mixin.js"],"sourcesContent":["import { geometry as geom, drawing as draw } from '@progress/kendo-drawing';\n\nimport { append, map } from '../../common';\n\nconst GridLinesMixin = {\n    createGridLines: function(altAxis) {\n        const options = this.options;\n        const radius = Math.abs(this.box.center().y - altAxis.lineBox().y1);\n        let gridLines = [];\n        let skipMajor = false;\n        let majorAngles, minorAngles;\n\n        if (options.majorGridLines.visible) {\n            majorAngles = this.majorGridLineAngles(altAxis);\n            skipMajor = true;\n\n            gridLines = this.renderMajorGridLines(\n                majorAngles, radius, options.majorGridLines\n            );\n        }\n\n        if (options.minorGridLines.visible) {\n            minorAngles = this.minorGridLineAngles(altAxis, skipMajor);\n\n            append(gridLines, this.renderMinorGridLines(\n                minorAngles, radius, options.minorGridLines, altAxis, skipMajor\n            ));\n        }\n\n        return gridLines;\n    },\n\n    renderMajorGridLines: function(angles, radius, options) {\n        return this.renderGridLines(angles, radius, options);\n    },\n\n    renderMinorGridLines: function(angles, radius, options, altAxis, skipMajor) {\n        const radiusCallback = this.radiusCallback && this.radiusCallback(radius, altAxis, skipMajor);\n        return this.renderGridLines(angles, radius, options, radiusCallback);\n    },\n\n    renderGridLines: function(angles, radius, options, radiusCallback) {\n        const style = {\n            stroke: {\n                width: options.width,\n                color: options.color,\n                dashType: options.dashType\n            }\n        };\n\n        const center = this.box.center();\n        const circle = new geom.Circle([ center.x, center.y ], radius);\n        const container = this.gridLinesVisual();\n\n        for (let i = 0; i < angles.length; i++) {\n            const line = new draw.Path(style);\n            if (radiusCallback) {\n                circle.radius = radiusCallback(angles[i]);\n            }\n\n            line.moveTo(circle.center)\n                .lineTo(circle.pointAt(angles[i] + 180));\n\n            container.append(line);\n        }\n\n        return container.children;\n    },\n\n    gridLineAngles: function(altAxis, size, skip, step, skipAngles) {\n        const divs = this.intervals(size, skip, step, skipAngles);\n        const options = altAxis.options;\n        const altAxisVisible = options.visible && (options.line || {}).visible !== false;\n\n        return map(divs, (d) => {\n            const alpha = this.intervalAngle(d);\n\n            if (!altAxisVisible || alpha !== 90) {\n                return alpha;\n            }\n        });\n    }\n};\n\nexport default GridLinesMixin;"],"names":["const","let","this"],"mappings":"AAAA,SAAS,QAAQ,IAAI,IAAI,EAAE,OAAO,IAAI,IAAI,QAAQ,yBAAyB,CAAC;;AAE5E,SAAS,MAAM,EAAE,GAAG,QAAQ,cAAc,CAAC;;AAE3CA,GAAK,CAAC,cAAc,GAAG;IACnB,eAAe,EAAE,SAAS,OAAO,EAAE;QAC/BA,GAAK,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7BA,GAAK,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACpEC,GAAG,CAAC,SAAS,GAAG,EAAE,CAAC;QACnBA,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC;QACtBA,GAAG,CAAC,WAAW,EAAE,WAAW,CAAC;;QAE7B,IAAI,OAAO,CAAC,cAAc,CAAC,OAAO,EAAE;YAChC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;YAChD,SAAS,GAAG,IAAI,CAAC;;YAEjB,SAAS,GAAG,IAAI,CAAC,oBAAoB;gBACjC,WAAW,EAAE,MAAM,EAAE,OAAO,CAAC,cAAc;aAC9C,CAAC;SACL;;QAED,IAAI,OAAO,CAAC,cAAc,CAAC,OAAO,EAAE;YAChC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;;YAE3D,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,oBAAoB;gBACvC,WAAW,EAAE,MAAM,EAAE,OAAO,CAAC,cAAc,EAAE,OAAO,EAAE,SAAS;aAClE,CAAC,CAAC;SACN;;QAED,OAAO,SAAS,CAAC;KACpB;;IAED,oBAAoB,EAAE,SAAS,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE;QACpD,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;KACxD;;IAED,oBAAoB,EAAE,SAAS,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE;QACxED,GAAK,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;QAC9F,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;KACxE;;IAED,eAAe,EAAE,SAAS,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,cAAc,EAAE;QAC/DA,GAAK,CAAC,KAAK,GAAG;YACV,MAAM,EAAE;gBACJ,KAAK,EAAE,OAAO,CAAC,KAAK;gBACpB,KAAK,EAAE,OAAO,CAAC,KAAK;gBACpB,QAAQ,EAAE,OAAO,CAAC,QAAQ;aAC7B;SACJ,CAAC;;QAEFA,GAAK,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QACjCA,GAAK,CAAC,MAAM,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;QAC/DA,GAAK,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;;QAEzC,KAAKC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpCD,GAAK,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAClC,IAAI,cAAc,EAAE;gBAChB,MAAM,CAAC,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;aAC7C;;YAED,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;iBACrB,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;;YAE7C,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC1B;;QAED,OAAO,SAAS,CAAC,QAAQ,CAAC;KAC7B;;IAED,cAAc,EAAE,SAAS,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;;AAAA;QAC7DA,GAAK,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;QAC1DA,GAAK,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;QAChCA,GAAK,CAAC,cAAc,GAAG,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,CAAC;;QAEjF,OAAO,GAAG,CAAC,IAAI,EAAE,SAAA,CAAC,CAAC,EAAE,AAAG;YACpBA,GAAK,CAAC,KAAK,GAAGE,MAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;;YAEpC,IAAI,CAAC,cAAc,IAAI,KAAK,KAAK,EAAE,EAAE;gBACjC,OAAO,KAAK,CAAC;aAChB;SACJ,CAAC,CAAC;KACN;CACJ,CAAC;;AAEF,eAAe,cAAc"}