{"version":3,"file":"radar-numeric-axis-mixin.js","sources":["radar-numeric-axis-mixin.js"],"sourcesContent":["import { geometry as geom, drawing as draw } from '@progress/kendo-drawing';\n\nimport ShapeBuilder from '../shape-builder';\nimport Ring from '../ring';\nimport Point from '../point';\n\nimport { ARC } from '../../common/constants';\nimport { append, deg, rad } from '../../common';\n\nconst RadarNumericAxisMixin = {\n    options: {\n        majorGridLines: {\n            visible: true\n        }\n    },\n\n    createPlotBands: function() {\n        const { majorGridLines: { type }, plotBands = [] } = this.options;\n        const altAxis = this.plotArea.polarAxis;\n        const majorAngles = altAxis.majorAngles();\n        const center = altAxis.box.center();\n        const group = this._plotbandGroup = new draw.Group({\n            zIndex: -1\n        });\n\n        for (let i = 0; i < plotBands.length; i++) {\n            const band = plotBands[i];\n            const bandStyle = {\n                fill: {\n                    color: band.color,\n                    opacity: band.opacity\n                },\n                stroke: {\n                    opacity: band.opacity\n                }\n            };\n\n            const slot = this.getSlot(band.from, band.to, true);\n            const ring = new Ring(center, center.y - slot.y2, center.y - slot.y1, 0, 360);\n\n            let shape;\n            if (type === ARC) {\n                shape = ShapeBuilder.current.createRing(ring, bandStyle);\n            } else {\n                shape = draw.Path.fromPoints(this.plotBandPoints(ring, majorAngles), bandStyle).close();\n            }\n\n            group.append(shape);\n        }\n\n        this.appendVisual(group);\n    },\n\n    plotBandPoints: function(ring, angles) {\n        const innerPoints = [];\n        const outerPoints = [];\n        const center = [ ring.center.x, ring.center.y ];\n        const innerCircle = new geom.Circle(center, ring.innerRadius);\n        const outerCircle = new geom.Circle(center, ring.radius);\n\n        for (let i = 0; i < angles.length; i++) {\n            innerPoints.push(innerCircle.pointAt(angles[i] + 180));\n            outerPoints.push(outerCircle.pointAt(angles[i] + 180));\n        }\n\n        innerPoints.reverse();\n        innerPoints.push(innerPoints[0]);\n        outerPoints.push(outerPoints[0]);\n\n        return outerPoints.concat(innerPoints);\n    },\n\n    createGridLines: function(altAxis) {\n        const options = this.options;\n        const majorTicks = this.radarMajorGridLinePositions();\n        const majorAngles = altAxis.majorAngles();\n        const center = altAxis.box.center();\n        let gridLines = [];\n\n        if (options.majorGridLines.visible) {\n            gridLines = this.renderGridLines(\n                center, majorTicks, majorAngles, options.majorGridLines\n            );\n        }\n\n        if (options.minorGridLines.visible) {\n            const minorTicks = this.radarMinorGridLinePositions();\n            append(gridLines, this.renderGridLines(\n                center, minorTicks, majorAngles, options.minorGridLines\n            ));\n        }\n\n        return gridLines;\n    },\n\n    renderGridLines: function(center, ticks, angles, options) {\n        const style = {\n            stroke: {\n                width: options.width,\n                color: options.color,\n                dashType: options.dashType\n            }\n        };\n        const { skip = 0, step = 0 } = options;\n        const container = this.gridLinesVisual();\n\n        for (let tickIx = skip; tickIx < ticks.length; tickIx += step) {\n            const tickRadius = center.y - ticks[tickIx];\n            if (tickRadius > 0) {\n                const circle = new geom.Circle([ center.x, center.y ], tickRadius);\n                if (options.type === ARC) {\n                    container.append(new draw.Circle(circle, style));\n                } else {\n                    const line = new draw.Path(style);\n                    for (let angleIx = 0; angleIx < angles.length; angleIx++) {\n                        line.lineTo(circle.pointAt(angles[angleIx] + 180));\n                    }\n\n                    line.close();\n                    container.append(line);\n                }\n            }\n        }\n\n        return container.children;\n    },\n\n    getValue: function(point) {\n        const lineBox = this.lineBox();\n        const altAxis = this.plotArea.polarAxis;\n        const majorAngles = altAxis.majorAngles();\n        const center = altAxis.box.center();\n        const radius = point.distanceTo(center);\n        let distance = radius;\n\n        if (this.options.majorGridLines.type !== ARC && majorAngles.length > 1) {\n            const dx = point.x - center.x;\n            const dy = point.y - center.y;\n            const theta = (deg(Math.atan2(dy, dx)) + 540) % 360;\n\n            majorAngles.sort(function(a, b) {\n                return angularDistance(a, theta) - angularDistance(b, theta);\n            });\n\n            // Solve triangle (center, point, axis X) using one side (radius) and two angles.\n            // Angles are derived from triangle (center, point, gridline X)\n            const midAngle = angularDistance(majorAngles[0], majorAngles[1]) / 2;\n            const alpha = angularDistance(theta, majorAngles[0]);\n            const gamma = 90 - midAngle;\n            const beta = 180 - alpha - gamma;\n\n            distance = radius * (Math.sin(rad(beta)) / Math.sin(rad(gamma)));\n        }\n\n        return this.axisType().prototype.getValue.call(\n            this, new Point(lineBox.x1, lineBox.y2 - distance)\n        );\n    }\n};\n\nfunction angularDistance(a, b) {\n    return 180 - Math.abs(Math.abs(a - b) - 180);\n}\n\nexport default RadarNumericAxisMixin;"],"names":["const","let","this"],"mappings":"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"}