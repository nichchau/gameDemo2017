{"version":3,"file":"axis.js","sources":["axis.js"],"sourcesContent":["import { drawing as draw, geometry as geom } from '@progress/kendo-drawing';\n\nimport ChartElement from './chart-element';\nimport TextBox from './text-box';\nimport AxisLabel from './axis-label';\nimport Note from './note';\nimport Box from './box';\nimport { ChartService } from '../services';\n\nimport createAxisTick from './utils/create-axis-tick';\nimport createAxisGridLine from './utils/create-axis-grid-line';\n\nimport { NONE, BLACK, CENTER, TOP, BOTTOM, LEFT, RIGHT, OUTSIDE, X, Y, WIDTH, HEIGHT } from '../common/constants';\nimport { alignPathToPixel, deepExtend, getTemplate, grep, defined, isObject, inArray, limitValue, round, setDefaultOptions } from '../common';\n\nclass Axis extends ChartElement {\n    constructor(options, chartService = new ChartService()) {\n        super(options);\n\n        this.chartService = chartService;\n\n        if (!this.options.visible) {\n            this.options = deepExtend({}, this.options, {\n                labels: {\n                    visible: false\n                },\n                line: {\n                    visible: false\n                },\n                margin: 0,\n                majorTickSize: 0,\n                minorTickSize: 0\n            });\n        }\n\n        this.options.minorTicks = deepExtend({}, {\n            color: this.options.line.color,\n            width: this.options.line.width,\n            visible: this.options.minorTickType !== NONE\n        }, this.options.minorTicks, {\n            size: this.options.minorTickSize,\n            align: this.options.minorTickType\n        });\n\n        this.options.majorTicks = deepExtend({}, {\n            color: this.options.line.color,\n            width: this.options.line.width,\n            visible: this.options.majorTickType !== NONE\n        }, this.options.majorTicks, {\n            size: this.options.majorTickSize,\n            align: this.options.majorTickType\n        });\n\n        if (!this.options._deferLabels) {\n            this.createLabels();\n        }\n\n        this.createTitle();\n        this.createNotes();\n    }\n\n    // abstract labelsCount(): Number\n    // abstract createAxisLabel(index, options): AxisLabel\n\n    labelsRange() {\n        return {\n            min: this.options.labels.skip,\n            max: this.labelsCount()\n        };\n    }\n\n    createLabels() {\n        const options = this.options;\n        const align = options.vertical ? RIGHT : CENTER;\n        const labelOptions = deepExtend({ }, options.labels, {\n            align: align,\n            zIndex: options.zIndex\n        });\n        const step = Math.max(1, labelOptions.step);\n\n        this.children = grep(this.children, child => !(child instanceof AxisLabel));\n\n        this.labels = [];\n\n        if (labelOptions.visible) {\n            const range = this.labelsRange();\n            const rotation = labelOptions.rotation;\n\n            if (isObject(rotation)) {\n                labelOptions.alignRotation = rotation.align;\n                labelOptions.rotation = rotation.angle;\n            }\n\n            if (labelOptions.rotation === \"auto\") {\n                labelOptions.rotation = 0;\n                options.autoRotateLabels = true;\n            }\n\n            for (let idx = range.min; idx < range.max; idx += step) {\n                let label = this.createAxisLabel(idx, labelOptions);\n                if (label) {\n                    this.append(label);\n                    this.labels.push(label);\n                }\n            }\n        }\n    }\n\n    lineBox() {\n        const { options, box } = this;\n        const vertical = options.vertical;\n        const mirror = options.labels.mirror;\n        const axisX = mirror ? box.x1 : box.x2;\n        const axisY = mirror ? box.y2 : box.y1;\n        const lineWidth = options.line.width || 0;\n\n        return vertical ?\n            new Box(axisX, box.y1, axisX, box.y2 - lineWidth) :\n            new Box(box.x1, axisY, box.x2 - lineWidth, axisY);\n    }\n\n    createTitle() {\n        const options = this.options;\n        const titleOptions = deepExtend({\n            rotation: options.vertical ? -90 : 0,\n            text: \"\",\n            zIndex: 1,\n            visualSize: true\n        }, options.title);\n\n        if (titleOptions.visible && titleOptions.text) {\n            const title = new TextBox(titleOptions.text, titleOptions);\n            this.append(title);\n            this.title = title;\n        }\n    }\n\n    createNotes() {\n        const options = this.options;\n        const notes = options.notes;\n        const items = notes.data || [];\n\n        this.notes = [];\n\n        for (let i = 0; i < items.length; i++) {\n            const item = deepExtend({}, notes, items[i]);\n            item.value = this.parseNoteValue(item.value);\n\n            const note = new Note({\n                value: item.value,\n                text: item.label.text,\n                dataItem: item\n            }, item, this.chartService);\n\n            if (note.options.visible) {\n                if (defined(note.options.position)) {\n                    if (options.vertical && !inArray(note.options.position, [ LEFT, RIGHT ])) {\n                        note.options.position = options.reverse ? LEFT : RIGHT;\n                    } else if (!options.vertical && !inArray(note.options.position, [ TOP, BOTTOM ])) {\n                        note.options.position = options.reverse ? BOTTOM : TOP;\n                    }\n                } else {\n                    if (options.vertical) {\n                        note.options.position = options.reverse ? LEFT : RIGHT;\n                    } else {\n                        note.options.position = options.reverse ? BOTTOM : TOP;\n                    }\n                }\n                this.append(note);\n                this.notes.push(note);\n            }\n        }\n    }\n\n    parseNoteValue(value) {\n        return value;\n    }\n\n    renderVisual() {\n        super.renderVisual();\n\n        this.createPlotBands();\n    }\n\n    createVisual() {\n        super.createVisual();\n\n        this.createBackground();\n        this.createLine();\n    }\n\n    gridLinesVisual() {\n        let gridLines = this._gridLines;\n        if (!gridLines) {\n            gridLines = this._gridLines = new draw.Group({\n                zIndex: -2\n            });\n            this.appendVisual(this._gridLines);\n        }\n\n        return gridLines;\n    }\n\n    createTicks(lineGroup) {\n        const options = this.options;\n        const lineBox = this.lineBox();\n        const mirror = options.labels.mirror;\n        const majorUnit = options.majorTicks.visible ? options.majorUnit : 0;\n        const tickLineOptions = {\n            // TODO\n            // _alignLines: options._alignLines,\n            vertical: options.vertical\n        };\n\n        function render(tickPositions, tickOptions, skipUnit) {\n            const count = tickPositions.length;\n            const step = Math.max(1, tickOptions.step);\n\n            if (tickOptions.visible) {\n                for (let i = tickOptions.skip; i < count; i += step) {\n                    if (defined(skipUnit) && (i % skipUnit === 0)) {\n                        continue;\n                    }\n\n                    tickLineOptions.tickX = mirror ? lineBox.x2 : lineBox.x2 - tickOptions.size;\n                    tickLineOptions.tickY = mirror ? lineBox.y1 - tickOptions.size : lineBox.y1;\n                    tickLineOptions.position = tickPositions[i];\n\n                    lineGroup.append(createAxisTick(tickLineOptions, tickOptions));\n                }\n            }\n        }\n\n        render(this.getMajorTickPositions(), options.majorTicks);\n        render(this.getMinorTickPositions(), options.minorTicks, majorUnit / options.minorUnit);\n    }\n\n    createLine() {\n        const options = this.options;\n        const line = options.line;\n        const lineBox = this.lineBox();\n\n        if (line.width > 0 && line.visible) {\n            const path = new draw.Path({\n                stroke: {\n                    width: line.width,\n                    color: line.color,\n                    dashType: line.dashType\n                }\n\n                /* TODO\n                zIndex: line.zIndex,\n                */\n            });\n\n            path.moveTo(lineBox.x1, lineBox.y1)\n                .lineTo(lineBox.x2, lineBox.y2);\n\n            if (options._alignLines) {\n                alignPathToPixel(path);\n            }\n\n            const group = this._lineGroup = new draw.Group();\n            group.append(path);\n\n            this.visual.append(group);\n            this.createTicks(group);\n        }\n    }\n\n    getActualTickSize() {\n        const options = this.options;\n        let tickSize = 0;\n\n        if (options.majorTicks.visible && options.minorTicks.visible) {\n            tickSize = Math.max(options.majorTicks.size, options.minorTicks.size);\n        } else if (options.majorTicks.visible) {\n            tickSize = options.majorTicks.size;\n        } else if (options.minorTicks.visible) {\n            tickSize = options.minorTicks.size;\n        }\n\n        return tickSize;\n    }\n\n    createBackground() {\n        const { options, box } = this;\n        const background = options.background;\n\n        if (background) {\n            this._backgroundPath = draw.Path.fromRect(box.toRect(), {\n                fill: {\n                    color: background\n                },\n                stroke: null\n            });\n\n            this.visual.append(this._backgroundPath);\n        }\n    }\n\n    createPlotBands() {\n        const options = this.options;\n        const plotBands = options.plotBands || [];\n        const vertical = options.vertical;\n        const plotArea = this.plotArea;\n\n        if (plotBands.length === 0) {\n            return;\n        }\n\n        const group = this._plotbandGroup = new draw.Group({\n            zIndex: -1\n        });\n\n        const altAxis = grep(this.pane.axes, axis => axis.options.vertical !== this.options.vertical)[0];\n\n        for (let idx = 0; idx < plotBands.length; idx++) {\n            let item = plotBands[idx];\n            let slotX, slotY;\n\n            if (vertical) {\n                slotX = (altAxis || plotArea.axisX).lineBox();\n                slotY = this.getSlot(item.from, item.to, true);\n            } else {\n                slotX = this.getSlot(item.from, item.to, true);\n                slotY = (altAxis || plotArea.axisY).lineBox();\n            }\n\n            if (slotX.width() !== 0 && slotY.height() !== 0) {\n                const bandRect = new geom.Rect(\n                    [ slotX.x1, slotY.y1 ],\n                    [ slotX.width(), slotY.height() ]\n                );\n\n                const path = draw.Path.fromRect(bandRect, {\n                    fill: {\n                        color: item.color,\n                        opacity: item.opacity\n                    },\n                    stroke: null\n                });\n\n                group.append(path);\n            }\n        }\n\n        this.appendVisual(group);\n    }\n\n    createGridLines(altAxis) {\n        const options = this.options;\n        const { minorGridLines, majorGridLines, minorUnit, vertical } = options;\n        const axisLineVisible = altAxis.options.line.visible;\n        const majorUnit = majorGridLines.visible ? options.majorUnit : 0;\n        const lineBox = altAxis.lineBox();\n        const linePos = lineBox[vertical ? \"y1\" : \"x1\"];\n        const lineOptions = {\n            lineStart: lineBox[vertical ? \"x1\" : \"y1\"],\n            lineEnd: lineBox[vertical ? \"x2\" : \"y2\"],\n            vertical: vertical\n        };\n        const majorTicks = [];\n\n        const container = this.gridLinesVisual();\n\n        function render(tickPositions, gridLine, skipUnit) {\n            const count = tickPositions.length;\n            const step = Math.max(1, gridLine.step);\n\n            if (gridLine.visible) {\n                for (let i = gridLine.skip; i < count; i += step) {\n                    let pos = round(tickPositions[i]);\n                    if (!inArray(pos, majorTicks)) {\n                        if (i % skipUnit !== 0 && (!axisLineVisible || linePos !== pos)) {\n                            lineOptions.position = pos;\n                            container.append(createAxisGridLine(lineOptions, gridLine));\n\n                            majorTicks.push(pos);\n                        }\n                    }\n                }\n            }\n        }\n\n        render(this.getMajorTickPositions(), majorGridLines);\n        render(this.getMinorTickPositions(), minorGridLines, majorUnit / minorUnit);\n\n        return container.children;\n    }\n\n    reflow(box) {\n        const { options, labels, title } = this;\n        const vertical = options.vertical;\n        const count = labels.length;\n        const sizeFn = vertical ? WIDTH : HEIGHT;\n        const titleSize = title ? title.box[sizeFn]() : 0;\n        const space = this.getActualTickSize() + options.margin + titleSize;\n        const rootBox = (this.getRoot() || {}).box || box;\n        const boxSize = rootBox[sizeFn]();\n        let maxLabelSize = 0;\n\n        for (let i = 0; i < count; i++) {\n            let labelSize = labels[i].box[sizeFn]();\n            if (labelSize + space <= boxSize) {\n                maxLabelSize = Math.max(maxLabelSize, labelSize);\n            }\n        }\n\n        if (vertical) {\n            this.box = new Box(\n                box.x1, box.y1,\n                box.x1 + maxLabelSize + space, box.y2\n            );\n        } else {\n            this.box = new Box(\n                box.x1, box.y1,\n                box.x2, box.y1 + maxLabelSize + space\n            );\n        }\n\n        this.arrangeTitle();\n        this.arrangeLabels();\n        this.arrangeNotes();\n    }\n\n    getLabelsTickPositions() {\n        return this.getMajorTickPositions();\n    }\n\n    labelTickIndex(label) {\n        return label.index;\n    }\n\n    arrangeLabels() {\n        const { options, labels } = this;\n        const labelsBetweenTicks = !options.justified;\n        const vertical = options.vertical;\n        const lineBox = this.lineBox();\n        const mirror = options.labels.mirror;\n        const tickPositions = this.getLabelsTickPositions();\n        const labelOffset = this.getActualTickSize() + options.margin;\n\n        for (let idx = 0; idx < labels.length; idx++) {\n            const label = labels[idx];\n            const tickIx = this.labelTickIndex(label);\n            const labelSize = vertical ? label.box.height() : label.box.width();\n            let labelPos = tickPositions[tickIx] - (labelSize / 2);\n            let labelBox, firstTickPosition, nextTickPosition;\n\n            if (vertical) {\n                if (labelsBetweenTicks) {\n                    firstTickPosition = tickPositions[tickIx];\n                    nextTickPosition = tickPositions[tickIx + 1];\n\n                    let middle = firstTickPosition + (nextTickPosition - firstTickPosition) / 2;\n                    labelPos = middle - (labelSize / 2);\n                }\n\n                let labelX = lineBox.x2;\n\n                if (mirror) {\n                    labelX += labelOffset;\n                    label.options.rotationOrigin = LEFT;\n                } else {\n                    labelX -= labelOffset + label.box.width();\n                    label.options.rotationOrigin = RIGHT;\n                }\n\n                labelBox = label.box.move(labelX, labelPos);\n            } else {\n                if (labelsBetweenTicks) {\n                    firstTickPosition = tickPositions[tickIx];\n                    nextTickPosition = tickPositions[tickIx + 1];\n                } else {\n                    firstTickPosition = labelPos;\n                    nextTickPosition = labelPos + labelSize;\n                }\n\n                let labelY = lineBox.y1;\n\n                if (mirror) {\n                    labelY -= labelOffset + label.box.height();\n                    label.options.rotationOrigin = BOTTOM;\n                } else {\n                    labelY += labelOffset;\n                    label.options.rotationOrigin = TOP;\n                }\n\n                labelBox = new Box(firstTickPosition, labelY,\n                                nextTickPosition, labelY + label.box.height());\n            }\n\n            label.reflow(labelBox);\n        }\n    }\n\n    autoRotateLabels() {\n        if (this.options.autoRotateLabels && !this.options.vertical) {\n            const tickPositions = this.getMajorTickPositions();\n            const labels = this.labels;\n            let angle;\n\n            for (let idx = 0; idx < labels.length; idx++) {\n                const width = tickPositions[idx + 1] - tickPositions[idx];\n                const labelBox = labels[idx].box;\n\n                if (labelBox.width() > width) {\n                    if (labelBox.height() > width) {\n                        angle = -90;\n                        break;\n                    }\n                    angle = -45;\n                }\n            }\n\n            if (angle) {\n                for (let idx = 0; idx < labels.length; idx++) {\n                    labels[idx].options.rotation = angle;\n                    labels[idx].reflow(new Box());\n                }\n                return true;\n            }\n        }\n    }\n\n    arrangeTitle() {\n        const { options, title } = this;\n        const mirror = options.labels.mirror;\n        const vertical = options.vertical;\n\n        if (title) {\n            if (vertical) {\n                title.options.align = mirror ? RIGHT : LEFT;\n                title.options.vAlign = title.options.position;\n            } else {\n                title.options.align = title.options.position;\n                title.options.vAlign = mirror ? TOP : BOTTOM;\n            }\n\n            title.reflow(this.box);\n        }\n    }\n\n    arrangeNotes() {\n        for (let idx = 0; idx < this.notes.length; idx++) {\n            const item = this.notes[idx];\n            const value = item.options.value;\n            let slot;\n\n            if (defined(value)) {\n                if (this.shouldRenderNote(value)) {\n                    item.show();\n                } else {\n                    item.hide();\n                }\n\n                slot = this.noteSlot(value);\n            } else {\n                item.hide();\n            }\n\n            item.reflow(slot || this.lineBox());\n        }\n    }\n\n    noteSlot(value) {\n        return this.getSlot(value);\n    }\n\n    alignTo(secondAxis) {\n        const lineBox = secondAxis.lineBox();\n        const vertical = this.options.vertical;\n        const pos = vertical ? Y : X;\n\n        this.box.snapTo(lineBox, pos);\n        if (vertical) {\n            this.box.shrink(0, this.lineBox().height() - lineBox.height());\n        } else {\n            this.box.shrink(this.lineBox().width() - lineBox.width(), 0);\n        }\n        this.box[pos + 1] -= this.lineBox()[pos + 1] - lineBox[pos + 1];\n        this.box[pos + 2] -= this.lineBox()[pos + 2] - lineBox[pos + 2];\n    }\n\n    axisLabelText(value, dataItem, options) {\n        const tmpl = getTemplate(options);\n        let text = value;\n\n        if (tmpl) {\n            text = tmpl({ value: value, dataItem: dataItem, format: options.format, culture: options.culture });\n        } else if (options.format) {\n            text = this.chartService.format.localeAuto(options.format, [ value ], options.culture);\n        }\n\n        return text;\n    }\n\n    slot(from , to, limit) {\n        const slot = this.getSlot(from, to, limit);\n        if (slot) {\n            return slot.toRect();\n        }\n    }\n\n    contentBox() {\n        const box = this.box.clone();\n        const labels = this.labels;\n        if (labels.length) {\n            if (labels[0].options.visible) {\n                box.wrap(labels[0].box);\n            }\n            const lastLabel = labels[labels.length - 1];\n            if (lastLabel.options.visible) {\n                box.wrap(lastLabel.box);\n            }\n        }\n\n        return box;\n    }\n\n    limitRange(from, to, min, max, offset) {\n        const options = this.options;\n\n        if ((from < min && offset < 0 && (!defined(options.min) || options.min <= min)) || (max < to && offset > 0 && (!defined(options.max) || max <= options.max))) {\n            return null;\n        }\n\n        if ((to < min && offset > 0) || (max < from && offset < 0)) {\n            return {\n                min: from,\n                max: to\n            };\n        }\n\n        const rangeSize = to - from;\n        let minValue = from;\n        let maxValue = to;\n\n        if (from < min) {\n            minValue = limitValue(from, min, max);\n            maxValue = limitValue(from + rangeSize, min + rangeSize, max);\n        } else if (to > max) {\n            maxValue = limitValue(to, min, max);\n            minValue = limitValue(to - rangeSize, min, max - rangeSize);\n        }\n\n        return {\n            min: minValue,\n            max: maxValue\n        };\n    }\n\n    valueRange() {\n        return {\n            min: this.seriesMin,\n            max: this.seriesMax\n        };\n    }\n}\n\nsetDefaultOptions(Axis, {\n    labels: {\n        visible: true,\n        rotation: 0,\n        mirror: false,\n        step: 1,\n        skip: 0\n    },\n    line: {\n        width: 1,\n        color: BLACK,\n        visible: true\n    },\n    title: {\n        visible: true,\n        position: CENTER\n    },\n    majorTicks: {\n        align: OUTSIDE,\n        size: 4,\n        skip: 0,\n        step: 1\n    },\n    minorTicks: {\n        align: OUTSIDE,\n        size: 3,\n        skip: 0,\n        step: 1\n    },\n    axisCrossingValue: 0,\n    majorTickType: OUTSIDE,\n    minorTickType: NONE,\n    majorGridLines: {\n        skip: 0,\n        step: 1\n    },\n    minorGridLines: {\n        visible: false,\n        width: 1,\n        color: BLACK,\n        skip: 0,\n        step: 1\n    },\n    // TODO: Move to line or labels options\n    margin: 5,\n    visible: true,\n    reverse: false,\n    justified: true,\n    notes: {\n        label: {\n            text: \"\"\n        }\n    },\n\n    _alignLines: true,\n    _deferLabels: false\n});\n\nexport default Axis;"],"names":["super","const","let","this","idx"],"mappings":"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"}