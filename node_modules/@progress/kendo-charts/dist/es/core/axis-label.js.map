{"version":3,"file":"axis-label.js","sources":["axis-label.js"],"sourcesContent":["import { geometry as geom } from '@progress/kendo-drawing';\n\nimport TextBox from './text-box';\nimport Box from './box';\n\nimport rectToBox from './utils/rect-to-box';\n\nimport { AXIS_LABEL_CLICK, CENTER, TOP, BOTTOM, LEFT, DEFAULT_PRECISION, X, Y } from '../common/constants';\n\nimport { eventElement, round, setDefaultOptions } from '../common';\n\nclass AxisLabel extends TextBox {\n    constructor(value, text, index, dataItem, options) {\n        super(text, options);\n\n        this.text = text;\n        this.value = value;\n        this.index = index;\n        this.dataItem = dataItem;\n        this.reflow(new Box());\n    }\n\n    visualContext(targetBox) {\n        const context = super.visualContext(targetBox);\n\n        context.value = this.value;\n        context.dataItem = this.dataItem;\n        context.format = this.options.format;\n        context.culture = this.options.culture;\n\n        return context;\n    }\n\n    click(widget, e) {\n\n        widget.trigger(AXIS_LABEL_CLICK, {\n            element: eventElement(e),\n            value: this.value,\n            text: this.text,\n            index: this.index,\n            dataItem: this.dataItem,\n            axis: this.parent.options\n        });\n    }\n\n    rotate() {\n        if (this.options.alignRotation !== CENTER) {\n            const box = this.normalBox.toRect();\n            const transform = this.rotationTransform();\n\n            this.box = rectToBox(box.bbox(transform.matrix()));\n        } else {\n            super.rotate();\n        }\n\n        return this.box;\n    }\n\n    rotationTransform() {\n        const options = this.options;\n        const rotation = options.rotation;\n        if (!rotation) {\n            return null;\n        }\n\n        if (options.alignRotation === CENTER) {\n            return super.rotationTransform();\n        }\n\n        const rotationMatrix = geom.transform().rotate(rotation).matrix();\n        const box = this.normalBox.toRect();\n        const rect = this.targetBox.toRect();\n\n        const rotationOrigin = options.rotationOrigin || TOP;\n        const alignAxis = rotationOrigin === TOP || rotationOrigin === BOTTOM ? X : Y;\n        const distanceAxis = rotationOrigin === TOP || rotationOrigin === BOTTOM ? Y : X;\n        const axisAnchor = rotationOrigin === TOP || rotationOrigin === LEFT ? rect.origin : rect.bottomRight();\n\n        const topLeft = box.topLeft().transformCopy(rotationMatrix);\n        const topRight = box.topRight().transformCopy(rotationMatrix);\n        const bottomRight = box.bottomRight().transformCopy(rotationMatrix);\n        const bottomLeft = box.bottomLeft().transformCopy(rotationMatrix);\n        const rotatedBox = geom.Rect.fromPoints(topLeft, topRight, bottomRight, bottomLeft);\n\n        const translate = {\n            [distanceAxis]: rect.origin[distanceAxis] - rotatedBox.origin[distanceAxis]\n        };\n\n        const distanceLeft = Math.abs(topLeft[distanceAxis] + translate[distanceAxis] - axisAnchor[distanceAxis]);\n        const distanceRight = Math.abs(topRight[distanceAxis] + translate[distanceAxis] - axisAnchor[distanceAxis]);\n\n        let alignStart, alignEnd;\n\n        if (round(distanceLeft, DEFAULT_PRECISION) === round(distanceRight, DEFAULT_PRECISION)) {\n            alignStart = topLeft;\n            alignEnd = topRight;\n        } else if (distanceRight < distanceLeft) {\n            alignStart = topRight;\n            alignEnd = bottomRight;\n        } else {\n            alignStart = topLeft;\n            alignEnd = bottomLeft;\n        }\n\n        const alignCenter = alignStart[alignAxis] + (alignEnd[alignAxis] - alignStart[alignAxis]) / 2;\n        translate[alignAxis] = rect.center()[alignAxis] - alignCenter;\n\n        return geom.transform()\n            .translate(translate.x, translate.y)\n            .rotate(rotation);\n    }\n}\n\nsetDefaultOptions(AxisLabel, {\n    _autoReflow: false\n});\n\nexport default AxisLabel;\n"],"names":["super","const","let"],"mappings":"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"}