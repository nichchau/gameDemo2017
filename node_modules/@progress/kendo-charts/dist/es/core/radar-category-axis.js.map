{"version":3,"file":"radar-category-axis.js","sources":["radar-category-axis.js"],"sourcesContent":["import { geometry as geom, drawing as draw } from '@progress/kendo-drawing';\n\nimport GridLinesMixin from './mixins/grid-lines-mixin';\nimport CategoryAxis from './category-axis';\nimport ShapeBuilder from './shape-builder';\nimport Ring from './ring';\nimport Box from './box';\n\nimport { COORD_PRECISION, ARC } from '../common/constants';\nimport { deepExtend, getSpacing, inArray, limitValue, map, rad, round, setDefaultOptions } from '../common';\n\nclass RadarCategoryAxis extends CategoryAxis {\n    range() {\n        return { min: 0, max: this.options.categories.length };\n    }\n\n    reflow(box) {\n        this.box = box;\n        this.reflowLabels();\n    }\n\n    lineBox() {\n        return this.box;\n    }\n\n    reflowLabels() {\n        const { labels, options: { labels: labelOptions } } = this;\n        const skip = labelOptions.skip || 0;\n        const step = labelOptions.step || 1;\n        const measureBox = new Box();\n\n        for (let i = 0; i < labels.length; i++) {\n            labels[i].reflow(measureBox);\n            const labelBox = labels[i].box;\n\n            labels[i].reflow(this.getSlot(skip + i * step).adjacentBox(\n                0, labelBox.width(), labelBox.height()\n            ));\n        }\n    }\n\n    intervals(size, skipOption, stepOption, skipAngles = false) {\n        const options = this.options;\n        const categories = options.categories.length;\n        const divCount = categories / size || 1;\n        const divAngle = 360 / divCount;\n        const skip = skipOption || 0;\n        const step = stepOption || 1;\n        const divs = [];\n        let angle = 0;\n\n        for (let i = skip; i < divCount; i += step) {\n            if (options.reverse) {\n                angle = 360 - i * divAngle;\n            } else {\n                angle = i * divAngle;\n            }\n\n            angle = round(angle, COORD_PRECISION) % 360;\n\n            if (!(skipAngles && inArray(angle, skipAngles))) {\n                divs.push(angle);\n            }\n        }\n\n        return divs;\n    }\n\n    majorIntervals() {\n        return this.intervals(1);\n    }\n\n    minorIntervals() {\n        return this.intervals(0.5);\n    }\n\n    intervalAngle(interval) {\n        return (360 + interval + this.options.startAngle) % 360;\n    }\n\n    majorAngles() {\n        return map(this.majorIntervals(), (interval) => this.intervalAngle(interval));\n    }\n\n    createLine() {\n        return [];\n    }\n\n    majorGridLineAngles(altAxis) {\n        const majorGridLines = this.options.majorGridLines;\n        return this.gridLineAngles(altAxis, 1, majorGridLines.skip, majorGridLines.step);\n    }\n\n    minorGridLineAngles(altAxis, skipMajor) {\n        const { minorGridLines, majorGridLines } = this.options;\n        const majorGridLineAngles = skipMajor ? this.intervals(1, majorGridLines.skip, majorGridLines.step) : null;\n\n        return this.gridLineAngles(altAxis, 0.5, minorGridLines.skip, minorGridLines.step, majorGridLineAngles);\n    }\n\n    radiusCallback(radius, altAxis, skipMajor) {\n        if (altAxis.options.type !== ARC) {\n            const minorAngle = rad(360 / (this.options.categories.length * 2));\n            const minorRadius = Math.cos(minorAngle) * radius;\n            const majorAngles = this.majorAngles();\n\n            const radiusCallback = function(angle) {\n                if (!skipMajor && inArray(angle, majorAngles)) {\n                    return radius;\n                }\n\n                return minorRadius;\n            };\n            return radiusCallback;\n        }\n    }\n\n    createPlotBands() {\n        const plotBands = this.options.plotBands || [];\n\n        const group = this._plotbandGroup = new draw.Group({\n            zIndex: -1\n        });\n\n        for (let i = 0; i < plotBands.length; i++) {\n            const band = plotBands[i];\n            const slot = this.plotBandSlot(band);\n            const singleSlot = this.getSlot(band.from);\n\n            const head = band.from - Math.floor(band.from);\n            slot.startAngle += head * singleSlot.angle;\n\n            const tail = Math.ceil(band.to) - band.to;\n            slot.angle -= (tail + head) * singleSlot.angle;\n\n            const ring = ShapeBuilder.current.createRing(slot, {\n                fill: {\n                    color: band.color,\n                    opacity: band.opacity\n                },\n                stroke: {\n                    opacity: band.opacity\n                }\n            });\n            group.append(ring);\n        }\n\n        this.appendVisual(group);\n    }\n\n    plotBandSlot(band) {\n        return this.getSlot(band.from, band.to - 1);\n    }\n\n    getSlot(from, to) {\n        const options = this.options;\n        const justified = options.justified;\n        const box = this.box;\n        const divs = this.majorAngles();\n        const totalDivs = divs.length;\n        const slotAngle = 360 / totalDivs;\n        let fromValue = from;\n\n        if (options.reverse && !justified) {\n            fromValue = (fromValue + 1) % totalDivs;\n        }\n\n        fromValue = limitValue(Math.floor(fromValue), 0, totalDivs - 1);\n        let slotStart = divs[fromValue];\n\n        if (justified) {\n            slotStart = slotStart - slotAngle / 2;\n\n            if (slotStart < 0) {\n                slotStart += 360;\n            }\n        }\n\n        const toValue = limitValue(Math.ceil(to || fromValue), fromValue, totalDivs - 1);\n        const slots = toValue - fromValue + 1;\n        const angle = slotAngle * slots;\n\n        return new Ring(box.center(), 0, box.height() / 2, slotStart, angle);\n    }\n\n    slot(from, to) {\n        const slot = this.getSlot(from, to);\n        const startAngle = slot.startAngle + 180;\n        const endAngle = startAngle + slot.angle;\n\n        return new geom.Arc([ slot.center.x, slot.center.y ], {\n            startAngle: startAngle,\n            endAngle: endAngle,\n            radiusX: slot.radius,\n            radiusY: slot.radius\n        });\n    }\n\n    pointCategoryIndex(point) {\n        const length = this.options.categories.length;\n        let index = null;\n\n        for (let i = 0; i < length; i++) {\n            const slot = this.getSlot(i);\n            if (slot.containsPoint(point)) {\n                index = i;\n                break;\n            }\n        }\n\n        return index;\n    }\n}\n\nsetDefaultOptions(RadarCategoryAxis, {\n    startAngle: 90,\n    labels: {\n        margin: getSpacing(10)\n    },\n    majorGridLines: {\n        visible: true\n    },\n    justified: true\n});\ndeepExtend(RadarCategoryAxis.prototype, GridLinesMixin);\n\nexport default RadarCategoryAxis;"],"names":["const","let","this"],"mappings":"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"}