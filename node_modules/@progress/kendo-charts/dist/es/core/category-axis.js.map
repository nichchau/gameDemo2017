{"version":3,"file":"category-axis.js","sources":["category-axis.js"],"sourcesContent":["import Axis from './axis';\nimport AxisLabel from './axis-label';\n\nimport { BLACK, COORD_PRECISION, DEFAULT_PRECISION, X, Y } from '../common/constants';\nimport { defined, isNumber, last, limitValue, round, setDefaultOptions, valueOrDefault } from '../common';\n\nconst MIN_CATEGORY_POINTS_RANGE = 0.01;\n\nclass CategoryAxis extends Axis {\n    constructor(options, chartService) {\n        super(options, chartService);\n\n        this._ticks = {};\n        this._initCategories(this.options);\n    }\n\n    _initCategories(options) {\n        const categories = (options.categories || []).slice(0);\n        const definedMin = defined(options.min);\n        const definedMax = defined(options.max);\n        options.categories = categories;\n\n        if ((definedMin || definedMax) && categories.length) {\n            options.srcCategories = options.categories;\n            const min = definedMin ? Math.floor(options.min) : 0;\n            let max;\n\n            if (definedMax) {\n                max = options.justified ? Math.floor(options.max) + 1 : Math.ceil(options.max);\n            } else {\n                max = categories.length;\n            }\n\n            options.categories = options.categories.slice(min, max);\n        }\n    }\n\n    rangeIndices() {\n        const options = this.options;\n        const length = options.categories.length || 1;\n        const min = isNumber(options.min) ? options.min % 1 : 0;\n        let max;\n\n        if (isNumber(options.max) && options.max % 1 !== 0 && options.max < this.totalRange().max) {\n            max = length - (1 - options.max % 1);\n        } else {\n            max = length - (options.justified ? 1 : 0);\n        }\n\n        return {\n            min: min,\n            max: max\n        };\n    }\n\n    totalRangeIndices(limit) {\n        const options = this.options;\n        let min = isNumber(options.min) ? options.min : 0;\n        let max;\n\n        if (isNumber(options.max)) {\n            max = options.max;\n        } else if (isNumber(options.min)) {\n            max = min + options.categories.length;\n        } else {\n            max = ((options.srcCategories || options.categories).length - (options.justified ? 1 : 0) || 1);\n        }\n\n        if (limit) {\n            const totalRange = this.totalRange();\n            min = limitValue(min, 0, totalRange.max);\n            max = limitValue(max, 0, totalRange.max);\n        }\n\n        return {\n            min: min,\n            max: max\n        };\n    }\n\n    range() {\n        const options = this.options;\n        return { min: isNumber(options.min) ? options.min : 0, max: isNumber(options.max) ? options.max : options.categories.length };\n    }\n\n    totalRange() {\n        const options = this.options;\n        return { min: 0, max: Math.max(this._seriesMax || 0, (options.srcCategories || options.categories).length) - (options.justified ? 1 : 0) };\n    }\n\n    getScale() {\n        const { min, max } = this.rangeIndices();\n        const lineBox = this.lineBox();\n        const size = this.options.vertical ? lineBox.height() : lineBox.width();\n        const scale = size / ((max - min) || 1);\n\n        return scale * (this.options.reverse ? -1 : 1);\n    }\n\n    getTickPositions(stepSize) {\n        const { vertical, reverse } = this.options;\n        const { min, max } = this.rangeIndices();\n        const lineBox = this.lineBox();\n        const scale = this.getScale();\n        const pos = lineBox[(vertical ? Y : X) + (reverse ? 2 : 1)];\n        const positions = [];\n\n        let current = min % 1 !== 0 ? Math.floor(min / 1) + stepSize : min;\n\n        while (current <= max) {\n            positions.push(pos + round(scale * (current - min), COORD_PRECISION));\n            current += stepSize;\n        }\n\n        return positions;\n    }\n\n    getLabelsTickPositions() {\n        const tickPositions = this.getMajorTickPositions().slice(0);\n        const range = this.rangeIndices();\n        const scale = this.getScale();\n        const box = this.lineBox();\n        const options = this.options;\n        const axis = options.vertical ? Y : X;\n        const start = options.reverse ? 2 : 1;\n        const end = options.reverse ? 1 : 2;\n\n        if (range.min % 1 !== 0) {\n            tickPositions.unshift(box[axis + start] - scale * (range.min % 1));\n        }\n\n        if (range.max % 1 !== 0) {\n            tickPositions.push(box[axis + end] + scale * (1 - range.max % 1));\n        }\n\n        return tickPositions;\n    }\n\n    labelTickIndex(label) {\n        const range = this.rangeIndices();\n        let index = label.index;\n\n        if (range.min > 0) {\n            index = index - Math.floor(range.min);\n        }\n\n        return index;\n    }\n\n    arrangeLabels() {\n        super.arrangeLabels();\n        this.hideOutOfRangeLabels();\n    }\n\n    hideOutOfRangeLabels() {\n        const { box, labels } = this;\n\n        if (labels.length) {\n            const valueAxis = this.options.vertical ? Y : X;\n            const start = box[valueAxis + 1];\n            const end = box[valueAxis + 2];\n            const firstLabel = labels[0];\n            const lastLabel = last(labels);\n\n            if (firstLabel.box[valueAxis + 1] > end || firstLabel.box[valueAxis + 2] < start) {\n                firstLabel.options.visible = false;\n            }\n            if (lastLabel.box[valueAxis + 1] > end || lastLabel.box[valueAxis + 2] < start) {\n                lastLabel.options.visible = false;\n            }\n        }\n    }\n\n    getMajorTickPositions() {\n        return this.getTicks().majorTicks;\n    }\n\n    getMinorTickPositions() {\n        return this.getTicks().minorTicks;\n    }\n\n    getTicks() {\n        const { reverse, justified } = this.options;\n        const cache = this._ticks;\n        const range = this.rangeIndices();\n        const lineBox = this.lineBox();\n        const hash = lineBox.getHash() + range.min + \",\" + range.max + reverse + justified;\n\n        if (cache._hash !== hash) {\n            cache._hash = hash;\n            cache.majorTicks = this.getTickPositions(1);\n            cache.minorTicks = this.getTickPositions(0.5);\n        }\n\n        return cache;\n    }\n\n    getSlot(from, to, limit) {\n        const { options } = this;\n        const { reverse, justified, vertical } = options;\n        const { min } = this.rangeIndices();\n        const valueAxis = vertical ? Y : X;\n        const lineBox = this.lineBox();\n        const scale = this.getScale();\n        const lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n        const slotBox = lineBox.clone();\n        const singleSlot = !defined(to);\n\n        const start = valueOrDefault(from, 0);\n        let end = valueOrDefault(to, start);\n        end = Math.max(end - 1, start);\n\n        // Fixes transient bug caused by iOS 6.0 JIT\n        // (one can never be too sure)\n        end = Math.max(start, end);\n\n        let p1 = lineStart + (start - min) * scale;\n        let p2 = lineStart + (end + 1 - min) * scale;\n\n        if (singleSlot && justified) {\n            p2 = p1;\n        }\n\n        if (limit) {\n            p1 = limitValue(p1, lineBox[valueAxis + 1], lineBox[valueAxis + 2]);\n            p2 = limitValue(p2, lineBox[valueAxis + 1], lineBox[valueAxis + 2]);\n        }\n\n        slotBox[valueAxis + 1] = reverse ? p2 : p1;\n        slotBox[valueAxis + 2] = reverse ? p1 : p2;\n\n        return slotBox;\n    }\n\n    slot(from, to, limit) {\n        let start = from;\n        let end = to;\n\n        if (typeof start === \"string\") {\n            start = this.categoryIndex(start);\n        }\n\n        if (typeof end === \"string\") {\n            end = this.categoryIndex(end);\n        }\n\n        return super.slot(start, end, limit);\n    }\n\n    pointCategoryIndex(point) {\n        const { reverse, justified, vertical } = this.options;\n        const valueAxis = vertical ? Y : X;\n        const lineBox = this.lineBox();\n        const range = this.rangeIndices();\n        const startValue = reverse ? range.max : range.min;\n        const scale = this.getScale();\n        const lineStart = lineBox[valueAxis + 1];\n        const lineEnd = lineBox[valueAxis + 2];\n        const pos = point[valueAxis];\n\n        if (pos < lineStart || pos > lineEnd) {\n            return null;\n        }\n\n        let value = startValue + (pos - lineStart) / scale;\n        const diff = value % 1;\n\n        if (justified) {\n            value = Math.round(value);\n        } else if (diff === 0 && value > 0) {\n            value--;\n        }\n\n        return Math.floor(value);\n    }\n\n    getCategory(point) {\n        const index = this.pointCategoryIndex(point);\n\n        if (index === null) {\n            return null;\n        }\n\n        return this.options.categories[index];\n    }\n\n    categoryIndex(value) {\n        const options = this.options;\n        const index = (options.srcCategories || options.categories).indexOf(value);\n\n        return index - Math.floor(options.min || 0);\n    }\n\n    translateRange(delta) {\n        const options = this.options;\n        const lineBox = this.lineBox();\n        const size = options.vertical ? lineBox.height() : lineBox.width();\n        const range = options.categories.length;\n        const scale = size / range;\n        const offset = round(delta / scale, DEFAULT_PRECISION);\n\n        return {\n            min: offset,\n            max: range + offset\n        };\n    }\n\n    zoomRange(rate) {\n        const rangeIndices = this.totalRangeIndices();\n        const { min: totalMin, max: totalMax } = this.totalRange();\n        const min = limitValue(rangeIndices.min + rate, totalMin, totalMax);\n        const max = limitValue(rangeIndices.max - rate, totalMin, totalMax);\n\n        if (max - min > 0) {\n            return {\n                min: min,\n                max: max\n            };\n        }\n    }\n\n    scaleRange(scale) {\n        const range = this.options.categories.length;\n        const delta = scale * range;\n\n        return {\n            min: -delta,\n            max: range + delta\n        };\n    }\n\n    labelsCount() {\n        const labelsRange = this.labelsRange();\n\n        return labelsRange.max - labelsRange.min;\n    }\n\n    labelsRange() {\n        const options = this.options;\n        const { justified, labels: labelOptions } = options;\n        let { min, max } = this.totalRangeIndices(true);\n        const start = Math.floor(min);\n\n        if (!justified) {\n            min = Math.floor(min);\n            max = Math.ceil(max);\n        } else {\n            min = Math.ceil(min);\n            max = Math.floor(max);\n        }\n\n        let skip;\n\n        if (min > labelOptions.skip) {\n            skip = labelOptions.skip + labelOptions.step * Math.ceil((min - labelOptions.skip) / labelOptions.step);\n        } else {\n            skip = labelOptions.skip;\n        }\n\n        return {\n            min: skip - start,\n            max: (options.categories.length ? max + (justified ? 1 : 0) : 0) - start\n        };\n    }\n\n    createAxisLabel(index, labelOptions) {\n        const options = this.options;\n        const dataItem = options.dataItems ? options.dataItems[index] : null;\n        const category = valueOrDefault(options.categories[index], \"\");\n        const text = this.axisLabelText(category, dataItem, labelOptions);\n\n        return new AxisLabel(category, text, index, dataItem, labelOptions);\n    }\n\n    shouldRenderNote(value) {\n        const range = this.totalRangeIndices();\n\n        return Math.floor(range.min) <= value && value <= Math.ceil(range.max);\n    }\n\n    noteSlot(value) {\n        const options = this.options;\n        const index = value - Math.floor(options.min || 0);\n        return this.getSlot(index);\n    }\n\n    arrangeNotes() {\n        super.arrangeNotes();\n        this.hideOutOfRangeNotes();\n    }\n\n    hideOutOfRangeNotes() {\n        const { notes, box } = this;\n        if (notes && notes.length) {\n            const valueAxis = this.options.vertical ? Y : X;\n            const start = box[valueAxis + 1];\n            const end = box[valueAxis + 2];\n\n            for (let idx = 0; idx < notes.length; idx++) {\n                const note = notes[idx];\n                if (note.box && (end < note.box[valueAxis + 1] || note.box[valueAxis + 2] < start)) {\n                    note.hide();\n                }\n            }\n        }\n    }\n\n    pan(delta) {\n        const range = this.totalRangeIndices(true);\n        const scale = this.getScale();\n        const offset = round(delta / scale, DEFAULT_PRECISION);\n        const totalRange = this.totalRange();\n        const min = range.min + offset;\n        const max = range.max + offset;\n\n        return this.limitRange(min, max, 0, totalRange.max, offset);\n    }\n\n    pointsRange(start, end) {\n        const { reverse, vertical } = this.options;\n        const valueAxis = vertical ? Y : X;\n        const lineBox = this.lineBox();\n        const range = this.totalRangeIndices(true);\n        const scale = this.getScale();\n        const lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n\n        const diffStart = start[valueAxis] - lineStart;\n        const diffEnd = end[valueAxis] - lineStart;\n\n        const min = range.min + diffStart / scale;\n        const max = range.min + diffEnd / scale;\n        const rangeMin = Math.min(min, max);\n        const rangeMax = Math.max(min, max);\n\n        if (rangeMax - rangeMin >= MIN_CATEGORY_POINTS_RANGE) {\n            return {\n                min: rangeMin,\n                max: rangeMax\n            };\n        }\n    }\n\n    valueRange() {\n        return this.range();\n    }\n}\n\nsetDefaultOptions(CategoryAxis, {\n    type: \"category\",\n    categories: [],\n    vertical: false,\n    majorGridLines: {\n        visible: false,\n        width: 1,\n        color: BLACK\n    },\n    labels: {\n        zIndex: 1\n    },\n    justified: false,\n    _deferLabels: true\n});\n\nexport default CategoryAxis;"],"names":["const","super","let"],"mappings":"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"}