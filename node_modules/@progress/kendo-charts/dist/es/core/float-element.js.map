{"version":3,"file":"float-element.js","sources":["float-element.js"],"sourcesContent":["import ChartElement from './chart-element';\nimport Box from './box';\n\nimport { X, Y, WIDTH, HEIGHT, RIGHT, BOTTOM, CENTER } from '../common/constants';\nimport { round, setDefaultOptions } from '../common';\n\nclass FloatElement extends ChartElement {\n    constructor(options) {\n        super(options);\n        this._initDirection();\n    }\n\n    _initDirection() {\n        const options = this.options;\n        if (options.vertical) {\n            this.groupAxis = X;\n            this.elementAxis = Y;\n            this.groupSizeField = WIDTH;\n            this.elementSizeField = HEIGHT;\n            this.groupSpacing = options.spacing;\n            this.elementSpacing = options.vSpacing;\n        } else {\n            this.groupAxis = Y;\n            this.elementAxis = X;\n            this.groupSizeField = HEIGHT;\n            this.elementSizeField = WIDTH;\n            this.groupSpacing = options.vSpacing;\n            this.elementSpacing = options.spacing;\n        }\n    }\n\n    reflow(targetBox) {\n        this.box = targetBox.clone();\n        this.reflowChildren();\n    }\n\n    reflowChildren() {\n        const { box, elementAxis, groupAxis, elementSizeField, groupSizeField } = this;\n        const { groups, groupsSize, maxGroupElementsSize } = this.groupOptions();\n        const groupsCount = groups.length;\n        const groupsStart = box[groupAxis + 1] + this.alignStart(groupsSize, box[groupSizeField]());\n\n        if (groupsCount) {\n            let groupStart = groupsStart;\n\n            for (let groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                let group = groups[groupIdx];\n                let groupElements = group.groupElements;\n                let elementStart = box[elementAxis + 1];\n                let groupElementsCount = groupElements.length;\n\n                for (let idx = 0; idx < groupElementsCount; idx++) {\n                    let element = groupElements[idx];\n                    let elementSize = this.elementSize(element);\n                    let groupElementStart = groupStart + this.alignStart(elementSize[groupSizeField], group.groupSize);\n\n                    let elementBox = new Box();\n                    elementBox[groupAxis + 1] = groupElementStart;\n                    elementBox[groupAxis + 2] = groupElementStart + elementSize[groupSizeField];\n                    elementBox[elementAxis + 1] = elementStart;\n                    elementBox[elementAxis + 2] = elementStart + elementSize[elementSizeField];\n\n                    element.reflow(elementBox);\n\n                    elementStart += elementSize[elementSizeField] + this.elementSpacing;\n                }\n                groupStart += group.groupSize + this.groupSpacing;\n            }\n            box[groupAxis + 1] = groupsStart;\n            box[groupAxis + 2] = groupsStart + groupsSize;\n            box[elementAxis + 2] = box[elementAxis + 1] + maxGroupElementsSize;\n        }\n    }\n\n    alignStart(size, maxSize) {\n        let start = 0;\n        const align = this.options.align;\n        if (align === RIGHT || align === BOTTOM) {\n            start = maxSize - size;\n        } else if (align === CENTER) {\n            start = (maxSize - size) / 2;\n        }\n        return start;\n    }\n\n    groupOptions() {\n        const { box, children, elementSizeField, groupSizeField, elementSpacing, groupSpacing } = this;\n        const maxSize = round(box[elementSizeField]());\n        const childrenCount = children.length;\n        const groups = [];\n\n        let groupSize = 0;\n        let groupElementsSize = 0;\n        let groupsSize = 0;\n        let maxGroupElementsSize = 0;\n        let groupElements = [];\n\n        for (let idx = 0; idx < childrenCount; idx++) {\n            let element = children[idx];\n            if (!element.box) {\n                element.reflow(box);\n            }\n\n            let elementSize = this.elementSize(element);\n            if (this.options.wrap && round(groupElementsSize + elementSpacing + elementSize[elementSizeField]) > maxSize) {\n                groups.push({\n                    groupElements: groupElements,\n                    groupSize: groupSize,\n                    groupElementsSize: groupElementsSize\n                });\n                maxGroupElementsSize = Math.max(maxGroupElementsSize, groupElementsSize);\n                groupsSize += groupSpacing + groupSize;\n                groupSize = 0;\n                groupElementsSize = 0;\n                groupElements = [];\n            }\n            groupSize = Math.max(groupSize, elementSize[groupSizeField]);\n            if (groupElementsSize > 0) {\n                groupElementsSize += elementSpacing;\n            }\n            groupElementsSize += elementSize[elementSizeField];\n            groupElements.push(element);\n        }\n\n        groups.push({\n            groupElements: groupElements,\n            groupSize: groupSize,\n            groupElementsSize: groupElementsSize\n        });\n        maxGroupElementsSize = Math.max(maxGroupElementsSize, groupElementsSize);\n        groupsSize += groupSize;\n\n        return {\n            groups: groups,\n            groupsSize: groupsSize,\n            maxGroupElementsSize: maxGroupElementsSize\n        };\n    }\n\n    elementSize(element) {\n        return {\n            width: element.box.width(),\n            height: element.box.height()\n        };\n    }\n\n    createVisual() {}\n}\n\nsetDefaultOptions(FloatElement, {\n    vertical: true,\n    wrap: true,\n    vSpacing: 0,\n    spacing: 0\n});\n\nexport default FloatElement;"],"names":["super","const","let","this"],"mappings":"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"}