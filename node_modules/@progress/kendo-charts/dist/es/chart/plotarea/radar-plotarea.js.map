{"version":3,"file":"radar-plotarea.js","sources":["radar-plotarea.js"],"sourcesContent":["import PolarPlotAreaBase from './polar-plotarea-base';\nimport CategoricalPlotArea from './categorical-plotarea';\nimport RadarAreaChart from '../radar-area-chart/radar-area-chart';\nimport RadarLineChart from '../radar-line-chart/radar-line-chart';\nimport RadarBarChart from '../radar-bar-chart/radar-bar-chart';\nimport PlotAreaEventsMixin from '../mixins/plotarea-events-mixin';\n\nimport { RadarCategoryAxis, Point } from '../../core';\n\nimport { RADAR_AREA, RADAR_LINE, RADAR_COLUMN } from '../constants';\n\nimport filterSeriesByType from '../utils/filter-series-by-type';\n\nimport { ARC } from '../../common/constants';\nimport { eventElement, deepExtend, setDefaultOptions } from '../../common';\n\nclass RadarPlotArea extends PolarPlotAreaBase {\n    createPolarAxis() {\n        const categoryAxis = new RadarCategoryAxis(this.options.categoryAxis, this.chartService);\n\n        this.polarAxis = categoryAxis;\n        this.categoryAxis = categoryAxis;\n        this.appendAxis(categoryAxis);\n        this.aggregateCategories();\n        this.createCategoryAxesLabels();\n    }\n\n    valueAxisOptions(defaults) {\n        if (this._hasBarCharts) {\n            deepExtend(defaults, {\n                majorGridLines: { type: ARC },\n                minorGridLines: { type: ARC }\n            });\n        }\n\n        if (this._isStacked100) {\n            deepExtend(defaults, {\n                roundToMajorUnit: false,\n                labels: { format: \"P0\" }\n            });\n        }\n\n        return deepExtend(defaults, this.options.valueAxis);\n    }\n\n    aggregateCategories() {\n        // No separate panes in radar charts\n        CategoricalPlotArea.prototype.aggregateCategories.call(this, this.panes);\n    }\n\n    createCategoryAxesLabels() {\n        CategoricalPlotArea.prototype.createCategoryAxesLabels.call(this, this.panes);\n    }\n\n    filterSeries(currentSeries) {\n        // Not supported for radar charts\n        return currentSeries;\n    }\n\n    createCharts() {\n        const series = this.filterVisibleSeries(this.series);\n        const pane = this.panes[0];\n\n        this.createAreaChart(\n            filterSeriesByType(series, [ RADAR_AREA ]),\n            pane\n        );\n\n        this.createLineChart(\n            filterSeriesByType(series, [ RADAR_LINE ]),\n            pane\n        );\n\n        this.createBarChart(\n            filterSeriesByType(series, [ RADAR_COLUMN ]),\n            pane\n        );\n    }\n\n    chartOptions(series) {\n        const options = { series: series };\n        const firstSeries = series[0];\n        if (firstSeries) {\n            const filteredSeries = this.filterVisibleSeries(series);\n            const stack = firstSeries.stack;\n            options.isStacked = stack && filteredSeries.length > 1;\n            options.isStacked100 = stack && stack.type === \"100%\" && filteredSeries.length > 1;\n\n            if (options.isStacked100) {\n                this._isStacked100 = true;\n            }\n        }\n\n        return options;\n    }\n\n    createAreaChart(series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        const areaChart = new RadarAreaChart(this, this.chartOptions(series));\n        this.appendChart(areaChart, pane);\n    }\n\n    createLineChart(series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        const lineChart = new RadarLineChart(this, this.chartOptions(series));\n        this.appendChart(lineChart, pane);\n    }\n\n    createBarChart(series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        const firstSeries = series[0];\n        const options = this.chartOptions(series);\n        options.gap = firstSeries.gap;\n        options.spacing = firstSeries.spacing;\n\n        const barChart = new RadarBarChart(this, options);\n        this.appendChart(barChart, pane);\n\n        this._hasBarCharts = true;\n    }\n\n    seriesCategoryAxis() {\n        return this.categoryAxis;\n    }\n\n    _dispatchEvent(chart, e, eventType) {\n        const coords = chart._eventCoordinates(e);\n        const point = new Point(coords.x, coords.y);\n        const category = this.categoryAxis.getCategory(point);\n        const value = this.valueAxis.getValue(point);\n\n        if (category !== null && value !== null) {\n            chart.trigger(eventType, {\n                element: eventElement(e),\n                category: category,\n                value: value\n            });\n        }\n    }\n\n    createCrosshairs() {}\n}\n\ndeepExtend(RadarPlotArea.prototype, PlotAreaEventsMixin, {\n    appendChart: CategoricalPlotArea.prototype.appendChart,\n    aggregateSeries: CategoricalPlotArea.prototype.aggregateSeries\n});\n\nsetDefaultOptions(RadarPlotArea, {\n    categoryAxis: {\n        categories: []\n    },\n    valueAxis: {}\n});\n\nexport default RadarPlotArea;"],"names":["const"],"mappings":"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"}