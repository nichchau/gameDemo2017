{"version":3,"file":"series-aggregator.js","sources":["series-aggregator.js"],"sourcesContent":["import Aggregates from './aggregates';\n\nimport { Class, defined, inArray, isArray, isFunction, isNumber, isObject } from '../../common';\n\nclass SeriesAggregator extends Class {\n    constructor(series, binder, defaultAggregates) {\n        super();\n\n        const canonicalFields = binder.canonicalFields(series);\n        const valueFields = binder.valueFields(series);\n        const sourceFields = binder.sourceFields(series, canonicalFields);\n        const seriesFields = this._seriesFields = [];\n        const defaults = defaultAggregates.query(series.type);\n        const rootAggregate = series.aggregate || defaults;\n\n        this._series = series;\n        this._binder = binder;\n\n        for (let i = 0; i < canonicalFields.length; i++) {\n            const field = canonicalFields[i];\n            let fieldAggregate;\n\n            if (isObject(rootAggregate)) {\n                fieldAggregate = rootAggregate[field];\n            } else if (i === 0 || inArray(field, valueFields)) {\n                fieldAggregate = rootAggregate;\n            } else {\n                break;\n            }\n\n            if (fieldAggregate) {\n                seriesFields.push({\n                    canonicalName: field,\n                    name: sourceFields[i],\n                    transform: isFunction(fieldAggregate) ? fieldAggregate : Aggregates[fieldAggregate]\n                });\n            }\n        }\n    }\n\n    aggregatePoints(srcPoints, group) {\n        const { _series: series, _seriesFields: seriesFields } = this;\n        const data = this._bindPoints(srcPoints || []);\n        const firstDataItem = data.dataItems[0];\n        let result = {};\n\n        if (firstDataItem && !isNumber(firstDataItem) && !isArray(firstDataItem)) {\n            const fn = function() {};\n            fn.prototype = firstDataItem;\n            result = new fn();\n        }\n\n        for (let i = 0; i < seriesFields.length; i++) {\n            const field = seriesFields[i];\n            const srcValues = this._bindField(data.values, field.canonicalName);\n            const value = field.transform(srcValues, series, data.dataItems, group);\n\n            if (value !== null && isObject(value) && !defined(value.length) && !(value instanceof Date)) {\n                result = value;\n                break;\n            } else {\n                if (defined(value)) {\n                    setValue(field.name, result, value);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    _bindPoints(points) {\n        const { _binder: binder, _series: series } = this;\n        const values = [];\n        const dataItems = [];\n\n        for (let i = 0; i < points.length; i++) {\n            const pointIx = points[i];\n\n            values.push(binder.bindPoint(series, pointIx));\n            dataItems.push(series.data[pointIx]);\n        }\n\n        return {\n            values: values,\n            dataItems: dataItems\n        };\n    }\n\n    _bindField(data, field) {\n        const values = [];\n        const count = data.length;\n\n        for (let i = 0; i < count; i++) {\n            const item = data[i];\n            const valueFields = item.valueFields;\n            let value;\n\n            if (defined(valueFields[field])) {\n                value = valueFields[field];\n            } else {\n                value = item.fields[field];\n            }\n\n            values.push(value);\n        }\n\n        return values;\n    }\n}\n\nfunction setValue(fieldName, target, value) {\n    let parentObj = target;\n    let field = fieldName;\n\n    if (fieldName.indexOf(\".\") > -1) {\n        const parts = fieldName.split(\".\");\n\n        while (parts.length > 1) {\n            field = parts.shift();\n            if (!defined(parentObj[field])) {\n                parentObj[field] = {};\n            }\n            parentObj = parentObj[field];\n        }\n        field = parts.shift();\n    }\n\n    parentObj[field] = value;\n}\n\nexport default SeriesAggregator;"],"names":["super","const","let","this"],"mappings":"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"}