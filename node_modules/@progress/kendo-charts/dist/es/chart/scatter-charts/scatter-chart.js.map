{"version":3,"file":"scatter-chart.js","sources":["scatter-chart.js"],"sourcesContent":["import { ChartElement, Box } from '../../core';\n\nimport ClipAnimationMixin from '../mixins/clip-animation-mixin';\nimport ErrorRangeCalculator from '../error-bars/error-range-calculator';\nimport ScatterErrorBar from '../error-bars/scatter-error-bar';\nimport LinePoint from '../line-chart/line-point';\nimport CategoricalChart from '../categorical-chart';\n\nimport hasValue from '../utils/has-value';\nimport evalOptions from '../utils/eval-options';\n\nimport { deepExtend, isNumber, isString, defined, isFunction, setDefaultOptions } from '../../common';\nimport { X, Y, MIN_VALUE, MAX_VALUE } from '../../common/constants';\nimport { parseDate } from '../../date-utils';\n\nclass ScatterChart extends ChartElement {\n    constructor(plotArea, options) {\n\n        super(options);\n\n        this.plotArea = plotArea;\n        this.chartService = plotArea.chartService;\n        this._initFields();\n\n        this.render();\n    }\n\n    _initFields() {\n        // X and Y axis ranges grouped by name, e.g.:\n        // primary: { min: 0, max: 1 }\n        this.xAxisRanges = {};\n        this.yAxisRanges = {};\n\n        this.points = [];\n        this.seriesPoints = [];\n        this.seriesOptions = [];\n        this._evalSeries = [];\n    }\n\n    render() {\n        this.traverseDataPoints(this.addValue.bind(this));\n    }\n\n    addErrorBar(point, field, fields) {\n        const value = point.value[field];\n        const valueErrorField = field + \"Value\";\n        const lowField = field + \"ErrorLow\";\n        const highField = field + \"ErrorHigh\";\n        const { seriesIx, series } = fields;\n        const errorBars = point.options.errorBars;\n        const lowValue = fields[lowField];\n        const highValue = fields[highField];\n\n        if (isNumber(value)) {\n            let errorRange;\n            if (isNumber(lowValue) && isNumber(highValue)) {\n                errorRange = { low: lowValue, high: highValue };\n            }\n\n            if (errorBars && defined(errorBars[valueErrorField])) {\n                this.seriesErrorRanges = this.seriesErrorRanges || { x: [], y: [] };\n                this.seriesErrorRanges[field][seriesIx] = this.seriesErrorRanges[field][seriesIx] ||\n                    new ErrorRangeCalculator(errorBars[valueErrorField], series, field);\n\n                errorRange = this.seriesErrorRanges[field][seriesIx].getErrorRange(value, errorBars[valueErrorField]);\n            }\n\n            if (errorRange) {\n                this.addPointErrorBar(errorRange, point, field);\n            }\n        }\n    }\n\n    addPointErrorBar(errorRange, point, field) {\n        const { low, high } = errorRange;\n        const { series, options: { errorBars: options } } = point;\n        const isVertical = field === Y;\n        const item = {};\n\n        point[field + \"Low\"] = low;\n        point[field + \"High\"] = high;\n\n        point.errorBars = point.errorBars || [];\n        const errorBar = new ScatterErrorBar(low, high, isVertical, this, series, options);\n        point.errorBars.push(errorBar);\n        point.append(errorBar);\n\n        item[field] = low;\n        this.updateRange(item, series);\n        item[field] = high;\n        this.updateRange(item, series);\n    }\n\n    addValue(value, fields) {\n        const { x, y } = value;\n        const seriesIx = fields.seriesIx;\n        const series = this.options.series[seriesIx];\n        const missingValues = this.seriesMissingValues(series);\n        const seriesPoints = this.seriesPoints[seriesIx];\n\n        let pointValue = value;\n        if (!(hasValue(x) && hasValue(y))) {\n            pointValue = this.createMissingValue(pointValue, missingValues);\n        }\n\n        let point;\n        if (pointValue) {\n            point = this.createPoint(pointValue, fields);\n            if (point) {\n                Object.assign(point, fields);\n                this.addErrorBar(point, X, fields);\n                this.addErrorBar(point, Y, fields);\n            }\n            this.updateRange(pointValue, fields.series);\n        }\n\n        this.points.push(point);\n        seriesPoints.push(point);\n    }\n\n    seriesMissingValues(series) {\n        return series.missingValues;\n    }\n\n    createMissingValue() {}\n\n    updateRange(value, series) {\n        const intlService = this.chartService.intl;\n        const { xAxis: xAxisName, yAxis: yAxisName } = series;\n        let { x, y } = value;\n        let xAxisRange = this.xAxisRanges[xAxisName];\n        let yAxisRange = this.yAxisRanges[yAxisName];\n\n        if (hasValue(x)) {\n            xAxisRange = this.xAxisRanges[xAxisName] =\n                xAxisRange || { min: MAX_VALUE, max: MIN_VALUE };\n\n            if (isString(x)) {\n                x = parseDate(intlService, x);\n            }\n\n            xAxisRange.min = Math.min(xAxisRange.min, x);\n            xAxisRange.max = Math.max(xAxisRange.max, x);\n        }\n\n        if (hasValue(y)) {\n            yAxisRange = this.yAxisRanges[yAxisName] =\n                yAxisRange || { min: MAX_VALUE, max: MIN_VALUE };\n\n            if (isString(y)) {\n                y = parseDate(intlService, y);\n            }\n\n            yAxisRange.min = Math.min(yAxisRange.min, y);\n            yAxisRange.max = Math.max(yAxisRange.max, y);\n        }\n    }\n\n    evalPointOptions(options, value, fields) {\n        const { series, seriesIx } = fields;\n        const state = { defaults: series._defaults, excluded: [ \"data\", \"tooltip\", \"content\", \"template\", \"visual\", \"toggle\", \"_outOfRangeMinPoint\", \"_outOfRangeMaxPoint\" ] };\n\n        let doEval = this._evalSeries[seriesIx];\n        if (!defined(doEval)) {\n            this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n        }\n\n        let pointOptions = options;\n        if (doEval) {\n            pointOptions = deepExtend({}, options);\n            evalOptions(pointOptions, {\n                value: value,\n                series: series,\n                dataItem: fields.dataItem\n            }, state);\n        }\n\n        return pointOptions;\n    }\n\n    pointType() {\n        return LinePoint;\n    }\n\n    pointOptions(series, seriesIx) {\n        let options = this.seriesOptions[seriesIx];\n        if (!options) {\n            const defaults = this.pointType().prototype.defaults;\n            this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, {\n                markers: {\n                    opacity: series.opacity\n                },\n                tooltip: {\n                    format: this.options.tooltip.format\n                },\n                labels: {\n                    format: this.options.labels.format\n                }\n            }, series);\n        }\n\n        return options;\n    }\n\n    createPoint(value, fields) {\n        const series = fields.series;\n        let pointOptions = this.pointOptions(series, fields.seriesIx);\n        let color = fields.color || series.color;\n\n        pointOptions = this.evalPointOptions(pointOptions, value, fields);\n\n        if (isFunction(series.color)) {\n            color = pointOptions.color;\n        }\n\n        const point = new LinePoint(value, pointOptions);\n        point.color = color;\n\n        this.append(point);\n\n        return point;\n    }\n\n    seriesAxes(series) {\n        const { xAxis: xAxisName, yAxis: yAxisName } = series;\n        const plotArea = this.plotArea;\n        const xAxis = xAxisName ? plotArea.namedXAxes[xAxisName] : plotArea.axisX;\n        const yAxis = yAxisName ? plotArea.namedYAxes[yAxisName] : plotArea.axisY;\n\n        if (!xAxis) {\n            throw new Error(\"Unable to locate X axis with name \" + xAxisName);\n        }\n\n        if (!yAxis) {\n            throw new Error(\"Unable to locate Y axis with name \" + yAxisName);\n        }\n\n        return {\n            x: xAxis,\n            y: yAxis\n        };\n    }\n\n    reflow(targetBox) {\n        const chartPoints = this.points;\n        const limit = !this.options.clip;\n        let pointIx = 0;\n\n\n        this.traverseDataPoints((value, fields) => {\n            const point = chartPoints[pointIx++];\n            const seriesAxes = this.seriesAxes(fields.series);\n            const slotX = seriesAxes.x.getSlot(value.x, value.x, limit);\n            const slotY = seriesAxes.y.getSlot(value.y, value.y, limit);\n\n            if (point) {\n                if (slotX && slotY) {\n                    const pointSlot = this.pointSlot(slotX, slotY);\n                    point.reflow(pointSlot);\n                } else {\n                    point.visible = false;\n                }\n            }\n        });\n\n        this.box = targetBox;\n    }\n\n    pointSlot(slotX, slotY) {\n        return new Box(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n    }\n\n    traverseDataPoints(callback) {\n        const { options: { series }, seriesPoints } = this;\n\n        for (let seriesIx = 0; seriesIx < series.length; seriesIx++) {\n            const currentSeries = series[seriesIx];\n            const currentSeriesPoints = seriesPoints[seriesIx];\n            if (!currentSeriesPoints) {\n                seriesPoints[seriesIx] = [];\n            }\n\n            for (let pointIx = 0; pointIx < currentSeries.data.length; pointIx++) {\n                const { valueFields: value, fields } = this._bindPoint(currentSeries, seriesIx, pointIx);\n\n                callback(value, deepExtend({\n                    pointIx: pointIx,\n                    series: currentSeries,\n                    seriesIx: seriesIx,\n                    dataItem: currentSeries.data[pointIx],\n                    owner: this\n                }, fields));\n            }\n        }\n    }\n\n    formatPointValue(point, format) {\n        const value = point.value;\n        return this.chartService.format.auto(format, value.x, value.y);\n    }\n\n    animationPoints() {\n        const points = this.points;\n        const result = [];\n        for (let idx = 0; idx < points.length; idx++) {\n            result.push((points[idx] || {}).marker);\n        }\n        return result;\n    }\n}\nsetDefaultOptions(ScatterChart, {\n    series: [],\n    tooltip: {\n        format: \"{0}, {1}\"\n    },\n    labels: {\n        format: \"{0}, {1}\"\n    },\n    clip: true\n});\ndeepExtend(ScatterChart.prototype, ClipAnimationMixin, {\n    _bindPoint: CategoricalChart.prototype._bindPoint\n});\n\nexport default ScatterChart;"],"names":["super","const","let","this"],"mappings":"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"}