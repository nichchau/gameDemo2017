{"version":3,"file":"line-chart-mixin.js","sources":["line-chart-mixin.js"],"sourcesContent":["import { ZERO, INTERPOLATE } from '../constants';\n\nimport { Point } from '../../core';\nimport { MAX_VALUE } from '../../common/constants';\nimport { defined } from '../../common';\n\nconst LineChartMixin = {\n    renderSegments: function() {\n        const { options, seriesPoints } = this;\n        const series = options.series;\n        const seriesCount = seriesPoints.length;\n        let lastSegment;\n\n        this._segments = [];\n\n        for (let seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n            const currentSeries = series[seriesIx];\n            const sortedPoints = this.sortPoints(seriesPoints[seriesIx]);\n            const pointCount = sortedPoints.length;\n            let linePoints = [];\n\n            for (let pointIx = 0; pointIx < pointCount; pointIx++) {\n                const point = sortedPoints[pointIx];\n                if (point) {\n                    linePoints.push(point);\n                } else if (this.seriesMissingValues(currentSeries) !== INTERPOLATE) {\n                    if (linePoints.length > 1) {\n                        lastSegment = this.createSegment(\n                            linePoints, currentSeries, seriesIx, lastSegment\n                        );\n                        this._addSegment(lastSegment);\n                    }\n                    linePoints = [];\n                }\n            }\n\n            if (linePoints.length > 1) {\n                lastSegment = this.createSegment(\n                    linePoints, currentSeries, seriesIx, lastSegment\n                );\n                this._addSegment(lastSegment);\n            }\n        }\n\n        this.children.unshift.apply(this.children, this._segments);\n    },\n\n    _addSegment: function(segment) {\n        this._segments.push(segment);\n        segment.parent = this;\n    },\n\n    sortPoints: function(points) {\n        return points;\n    },\n\n    seriesMissingValues: function(series) {\n        const missingValues = series.missingValues;\n        const assumeZero = !missingValues && this.options.isStacked;\n\n        return assumeZero ? ZERO : missingValues || INTERPOLATE;\n    },\n\n    getNearestPoint: function(x, y, seriesIx) {\n        const target = new Point(x, y);\n        const allPoints = this.seriesPoints[seriesIx];\n        let nearestPointDistance = MAX_VALUE;\n        let nearestPoint;\n\n        for (let i = 0; i < allPoints.length; i++) {\n            const point = allPoints[i];\n\n            if (point && defined(point.value) && point.value !== null && point.visible !== false) {\n                const pointBox = point.box;\n                const pointDistance = pointBox.center().distanceTo(target);\n\n                if (pointDistance < nearestPointDistance) {\n                    nearestPoint = point;\n                    nearestPointDistance = pointDistance;\n                }\n            }\n        }\n\n        return nearestPoint;\n    }\n};\n\nexport default LineChartMixin;"],"names":["const","let","this"],"mappings":"AAAA,SAAS,IAAI,EAAE,WAAW,QAAQ,cAAc,CAAC;;AAEjD,SAAS,KAAK,QAAQ,YAAY,CAAC;AACnC,SAAS,SAAS,QAAQ,wBAAwB,CAAC;AACnD,SAAS,OAAO,QAAQ,cAAc,CAAC;;AAEvCA,GAAK,CAAC,cAAc,GAAG;IACnB,cAAc,EAAE,WAAW,CAAC;;AAAA;QACxB,AAAK,AAA0B,OAAA,GAAG,IAAI;QAA9B,IAAA,OAAO;QAAE,IAAA,YAAY,oBAAvB,AAAS,AAAc,AAAS,AAAC;QACvCA,GAAK,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAC9BA,GAAK,CAAC,WAAW,GAAG,YAAY,CAAC,MAAM,CAAC;QACxCC,GAAG,CAAC,WAAW,CAAC;;QAEhB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;;QAEpB,KAAKA,GAAG,CAAC,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,WAAW,EAAE,QAAQ,EAAE,EAAE;YACvDD,GAAK,CAAC,aAAa,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;YACvCA,GAAK,CAAC,YAAY,GAAGE,MAAI,CAAC,UAAU,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC7DF,GAAK,CAAC,UAAU,GAAG,YAAY,CAAC,MAAM,CAAC;YACvCC,GAAG,CAAC,UAAU,GAAG,EAAE,CAAC;;YAEpB,KAAKA,GAAG,CAAC,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,UAAU,EAAE,OAAO,EAAE,EAAE;gBACnDD,GAAK,CAAC,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;gBACpC,IAAI,KAAK,EAAE;oBACP,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC1B,MAAM,IAAIE,MAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,WAAW,EAAE;oBAChE,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;wBACvB,WAAW,GAAGA,MAAI,CAAC,aAAa;4BAC5B,UAAU,EAAE,aAAa,EAAE,QAAQ,EAAE,WAAW;yBACnD,CAAC;wBACFA,MAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;qBACjC;oBACD,UAAU,GAAG,EAAE,CAAC;iBACnB;aACJ;;YAED,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvB,WAAW,GAAGA,MAAI,CAAC,aAAa;oBAC5B,UAAU,EAAE,aAAa,EAAE,QAAQ,EAAE,WAAW;iBACnD,CAAC;gBACFA,MAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;aACjC;SACJ;;QAED,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;KAC9D;;IAED,WAAW,EAAE,SAAS,OAAO,EAAE;QAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC7B,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;KACzB;;IAED,UAAU,EAAE,SAAS,MAAM,EAAE;QACzB,OAAO,MAAM,CAAC;KACjB;;IAED,mBAAmB,EAAE,SAAS,MAAM,EAAE;QAClCF,GAAK,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;QAC3CA,GAAK,CAAC,UAAU,GAAG,CAAC,aAAa,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;;QAE5D,OAAO,UAAU,GAAG,IAAI,GAAG,aAAa,IAAI,WAAW,CAAC;KAC3D;;IAED,eAAe,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE;QACtCA,GAAK,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/BA,GAAK,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAC9CC,GAAG,CAAC,oBAAoB,GAAG,SAAS,CAAC;QACrCA,GAAG,CAAC,YAAY,CAAC;;QAEjB,KAAKA,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvCD,GAAK,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;;YAE3B,IAAI,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,IAAI,IAAI,KAAK,CAAC,OAAO,KAAK,KAAK,EAAE;gBAClFA,GAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC;gBAC3BA,GAAK,CAAC,aAAa,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;;gBAE3D,IAAI,aAAa,GAAG,oBAAoB,EAAE;oBACtC,YAAY,GAAG,KAAK,CAAC;oBACrB,oBAAoB,GAAG,aAAa,CAAC;iBACxC;aACJ;SACJ;;QAED,OAAO,YAAY,CAAC;KACvB;CACJ,CAAC;;AAEF,eAAe,cAAc"}