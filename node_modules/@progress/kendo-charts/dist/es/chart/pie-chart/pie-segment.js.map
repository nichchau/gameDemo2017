{"version":3,"file":"pie-segment.js","sources":["pie-segment.js"],"sourcesContent":["import { drawing as draw, geometry as geom, Color } from '@progress/kendo-drawing';\n\nimport { ChartElement, ShapeBuilder, TextBox, Box } from '../../core';\n\nimport PointEventsMixin from '../mixins/point-events-mixin';\n\nimport { OUTSIDE_END, INSIDE_END, PIE, FADEIN, TOOLTIP_OFFSET } from '../constants';\nimport hasGradientOverlay from '../utils/has-gradient-overlay';\n\nimport { TOP, BOTTOM, LEFT, RIGHT, DEFAULT_FONT, CIRCLE, WHITE, BLACK, CENTER, DEFAULT_PRECISION } from '../../common/constants';\nimport { setDefaultOptions, getSpacing, getTemplate, deepExtend, round, rad } from '../../common';\n\nclass PieSegment extends ChartElement {\n    constructor(value, sector, options) {\n        super(options);\n\n        this.value = value;\n        this.sector = sector;\n    }\n\n    render() {\n        const labels = this.options.labels;\n        const chartService = this.owner.chartService;\n        let labelText = this.value;\n\n        if (this._rendered || this.visible === false) {\n            return;\n        }\n        this._rendered = true;\n\n        const labelTemplate = getTemplate(labels);\n        if (labelTemplate) {\n            labelText = labelTemplate({\n                dataItem: this.dataItem,\n                category: this.category,\n                value: this.value,\n                series: this.series,\n                percentage: this.percentage\n            });\n        } else if (labels.format) {\n            labelText = chartService.format.auto(labels.format, labelText);\n        }\n\n        if (labels.visible && labelText) {\n            if (labels.position === CENTER || labels.position === INSIDE_END) {\n                if (!labels.color) {\n                    const brightnessValue = new Color(this.options.color).percBrightness();\n                    if (brightnessValue > 180) {\n                        labels.color = BLACK;\n                    } else {\n                        labels.color = WHITE;\n                    }\n                }\n                if (!labels.background) {\n                    labels.background = this.options.color;\n                }\n            } else {\n                const themeLabels = chartService.theme.seriesDefaults.labels;\n                labels.color = labels.color || themeLabels.color;\n                labels.background = labels.background || themeLabels.background;\n            }\n\n\n            this.label = new TextBox(labelText, deepExtend({}, labels, {\n                align: CENTER,\n                vAlign: \"\",\n                animation: {\n                    type: FADEIN,\n                    delay: this.animationDelay\n                }\n            }));\n\n            this.append(this.label);\n        }\n    }\n\n    reflow(targetBox) {\n        this.render();\n        this.box = targetBox;\n        this.reflowLabel();\n    }\n\n    reflowLabel() {\n        const { options: { labels: labelsOptions }, label } = this;\n        const sector = this.sector.clone();\n        const labelsDistance = labelsOptions.distance;\n        const angle = sector.middle();\n\n        if (label) {\n            const labelHeight = label.box.height();\n            const labelWidth = label.box.width();\n            let lp;\n\n            if (labelsOptions.position === CENTER) {\n                sector.radius = Math.abs((sector.radius - labelHeight) / 2) + labelHeight;\n                lp = sector.point(angle);\n                label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n            } else if (labelsOptions.position === INSIDE_END) {\n                sector.radius = sector.radius - labelHeight / 2;\n                lp = sector.point(angle);\n                label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n            } else {\n                let x1;\n                lp = sector.clone().expand(labelsDistance).point(angle);\n                if (lp.x >= sector.center.x) {\n                    x1 = lp.x + labelWidth;\n                    label.orientation = RIGHT;\n                } else {\n                    x1 = lp.x - labelWidth;\n                    label.orientation = LEFT;\n                }\n                label.reflow(new Box(x1, lp.y - labelHeight, lp.x, lp.y));\n            }\n        }\n    }\n\n    createVisual() {\n        const { sector, options } = this;\n\n        super.createVisual();\n\n        if (this.value) {\n            if (options.visual) {\n                const startAngle = (sector.startAngle + 180) % 360;\n                const visual = options.visual({\n                    category: this.category,\n                    dataItem: this.dataItem,\n                    value: this.value,\n                    series: this.series,\n                    percentage: this.percentage,\n                    center: new geom.Point(sector.center.x, sector.center.y),\n                    radius: sector.radius,\n                    innerRadius: sector.innerRadius,\n                    startAngle: startAngle,\n                    endAngle: startAngle + sector.angle,\n                    options: options,\n                    sender: this.getSender(),\n                    createVisual: () => {\n                        const group = new draw.Group();\n                        this.createSegmentVisual(group);\n\n                        return group;\n                    }\n                });\n\n                if (visual) {\n                    this.visual.append(visual);\n                }\n            } else {\n                this.createSegmentVisual(this.visual);\n            }\n        }\n    }\n\n    createSegmentVisual(group) {\n        const { sector, options } = this;\n        const borderOptions = options.border || {};\n        const border = borderOptions.width > 0 ? {\n            stroke: {\n                color: borderOptions.color,\n                width: borderOptions.width,\n                opacity: borderOptions.opacity,\n                dashType: borderOptions.dashType\n            }\n        } : {};\n        const color = options.color;\n        const fill = {\n            color: color,\n            opacity: options.opacity\n        };\n        const visual = this.createSegment(sector, deepExtend({\n            fill: fill,\n            stroke: {\n                opacity: options.opacity\n            },\n            zIndex: options.zIndex\n        }, border));\n\n        group.append(visual);\n\n        if (hasGradientOverlay(options)) {\n            group.append(this.createGradientOverlay(visual, {\n                baseColor: color,\n                fallbackFill: fill\n            }, deepExtend({\n                center: [ sector.center.x, sector.center.y ],\n                innerRadius: sector.innerRadius,\n                radius: sector.radius,\n                userSpace: true\n            }, options.overlay)));\n        }\n    }\n\n    createSegment(sector, options) {\n        if (options.singleSegment) {\n            return new draw.Circle(new geom.Circle(new geom.Point(sector.center.x, sector.center.y), sector.radius), options);\n        }\n\n        return ShapeBuilder.current.createRing(sector, options);\n    }\n\n    createAnimation() {\n        const { options, sector: { center } } = this;\n\n        deepExtend(options, {\n            animation: {\n                center: [ center.x, center.y ],\n                delay: this.animationDelay\n            }\n        });\n\n        super.createAnimation();\n    }\n\n    createHighlight(options) {\n        const highlight = this.options.highlight || {};\n        const border = highlight.border || {};\n\n        return this.createSegment(this.sector, deepExtend({}, options, {\n            fill: {\n                color: highlight.color,\n                opacity: highlight.opacity\n            },\n            stroke: {\n                opacity: border.opacity,\n                width: border.width,\n                color: border.color\n            }\n        }));\n    }\n\n    highlightVisual() {\n        return this.visual.children[0];\n    }\n\n    highlightVisualArgs() {\n        const sector = this.sector;\n\n        return {\n            options: this.options,\n            radius: sector.radius,\n            innerRadius: sector.innerRadius,\n            center: new geom.Point(sector.center.x, sector.center.y),\n            startAngle: sector.startAngle,\n            endAngle: sector.angle + sector.startAngle,\n            visual: this.visual\n        };\n    }\n\n    tooltipAnchor() {\n        const sector = this.sector.clone().expand(TOOLTIP_OFFSET);\n        const midAndle = sector.middle();\n        const midPoint = sector.point(midAndle);\n\n        return {\n            point: midPoint,\n            align: tooltipAlignment(midAndle + 180)\n        };\n    }\n\n    formatValue(format) {\n        return this.owner.formatPointValue(this, format);\n    }\n}\n\nconst RAD_30 = round(rad(30), DEFAULT_PRECISION);\nconst RAD_60 = round(rad(60), DEFAULT_PRECISION);\n\nfunction tooltipAlignment(angle) {\n    const radians = rad(angle);\n    const sine = round(Math.sin(radians), DEFAULT_PRECISION);\n    const cosine = round(Math.cos(radians), DEFAULT_PRECISION);\n\n\n    let horizontal;\n    if (Math.abs(sine) > RAD_60) {\n        horizontal = CENTER;\n    } else if (cosine < 0) {\n        horizontal = RIGHT;\n    } else {\n        horizontal = LEFT;\n    }\n\n    let vertical;\n    if (Math.abs(sine) < RAD_30) {\n        vertical = CENTER;\n    } else if (sine < 0) {\n        vertical = BOTTOM;\n    } else {\n        vertical = TOP;\n    }\n\n    return {\n        horizontal: horizontal,\n        vertical: vertical\n    };\n}\n\nsetDefaultOptions(PieSegment, {\n    color: WHITE,\n    overlay: {\n        gradient: \"roundedBevel\"\n    },\n    border: {\n        width: 0.5\n    },\n    labels: {\n        visible: false,\n        distance: 35,\n        font: DEFAULT_FONT,\n        margin: getSpacing(0.5),\n        align: CIRCLE,\n        zIndex: 1,\n        position: OUTSIDE_END\n    },\n    animation: {\n        type: PIE\n    },\n    highlight: {\n        visible: true,\n        border: {\n            width: 1\n        }\n    },\n    visible: true\n});\n\ndeepExtend(PieSegment.prototype, PointEventsMixin);\n\nexport default PieSegment;"],"names":["super","const","let","this"],"mappings":"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"}