{"version":3,"file":"bar.js","sources":["bar.js"],"sourcesContent":["import { drawing as draw, Color } from '@progress/kendo-drawing';\n\nimport BarLabel from './bar-label';\n\nimport { BORDER_BRIGHTNESS, TOOLTIP_OFFSET } from '../constants';\n\nimport hasGradientOverlay from '../utils/has-gradient-overlay';\n\nimport { ChartElement, Point } from '../../core';\n\nimport PointEventsMixin from '../mixins/point-events-mixin';\nimport NoteMixin from '../mixins/note-mixin';\n\nimport { WHITE, LEFT, RIGHT, BOTTOM, TOP } from '../../common/constants';\nimport { alignPathToPixel, deepExtend, defined, getTemplate, valueOrDefault } from '../../common';\n\nconst BAR_ALIGN_MIN_WIDTH = 6;\n\nclass Bar extends ChartElement {\n    constructor(value, options) {\n        super();\n\n        this.options = options;\n        this.color = options.color || WHITE;\n        this.aboveAxis = valueOrDefault(this.options.aboveAxis, true);\n        this.value = value;\n    }\n\n    render() {\n        if (this._rendered) {\n            return;\n        }\n\n        this._rendered = true;\n\n        this.createLabel();\n        this.createNote();\n\n        if (this.errorBar) {\n            this.append(this.errorBar);\n        }\n    }\n\n    createLabel() {\n        const options = this.options;\n        const labels = options.labels;\n\n        if (labels.visible) {\n            let labelTemplate = getTemplate(labels);\n            let labelText;\n\n            if (labelTemplate) {\n                labelText = labelTemplate({\n                    dataItem: this.dataItem,\n                    category: this.category,\n                    value: this.value,\n                    percentage: this.percentage,\n                    stackValue: this.stackValue,\n                    runningTotal: this.runningTotal,\n                    total: this.total,\n                    series: this.series\n                });\n            } else {\n                labelText = this.formatValue(labels.format);\n            }\n\n            this.label = new BarLabel(labelText,\n                    deepExtend({\n                        vertical: options.vertical\n                    },\n                    labels\n                ));\n            this.append(this.label);\n        }\n    }\n\n    formatValue(format) {\n        return this.owner.formatPointValue(this, format);\n    }\n\n    reflow(targetBox) {\n        this.render();\n\n        const label = this.label;\n\n        this.box = targetBox;\n\n        if (label) {\n            label.options.aboveAxis = this.aboveAxis;\n            label.reflow(targetBox);\n        }\n\n        if (this.note) {\n            this.note.reflow(targetBox);\n        }\n\n        if (this.errorBars) {\n            for (let i = 0; i < this.errorBars.length; i++) {\n                this.errorBars[i].reflow(targetBox);\n            }\n        }\n    }\n\n    createVisual() {\n        const { box, options } = this;\n        const customVisual = options.visual;\n\n        if (this.visible !== false) {\n            super.createVisual();\n\n            if (customVisual) {\n                const visual = this.rectVisual = customVisual({\n                    category: this.category,\n                    dataItem: this.dataItem,\n                    value: this.value,\n                    sender: this.getSender(),\n                    series: this.series,\n                    percentage: this.percentage,\n                    stackValue: this.stackValue,\n                    runningTotal: this.runningTotal,\n                    total: this.total,\n                    rect: box.toRect(),\n                    createVisual: () => {\n                        const group = new draw.Group();\n                        this.createRect(group);\n                        return group;\n                    },\n                    options: options\n                });\n\n                if (visual) {\n                    this.visual.append(visual);\n                }\n            } else if (box.width() > 0 && box.height() > 0) {\n                this.createRect(this.visual);\n            }\n        }\n    }\n\n    createRect(visual) {\n        const options = this.options;\n        const border = options.border;\n        const strokeOpacity = defined(border.opacity) ? border.opacity : options.opacity;\n        const rect = this.box.toRect();\n\n        rect.size.width = Math.round(rect.size.width);\n\n        const path = this.rectVisual = draw.Path.fromRect(rect, {\n            fill: {\n                color: this.color,\n                opacity: options.opacity\n            },\n            stroke: {\n                color: this.getBorderColor(),\n                width: border.width,\n                opacity: strokeOpacity,\n                dashType: border.dashType\n            }\n        });\n\n        const width = this.box.width();\n        const height = this.box.height();\n\n        const size = options.vertical ? width : height;\n\n        if (size > BAR_ALIGN_MIN_WIDTH) {\n            alignPathToPixel(path);\n\n            // Fixes lineJoin issue in firefox when the joined lines are parallel\n            if (width < 1 || height < 1) {\n                path.options.stroke.lineJoin = \"round\";\n            }\n        }\n\n        visual.append(path);\n\n        if (hasGradientOverlay(options)) {\n            const overlay = this.createGradientOverlay(path, { baseColor: this.color }, deepExtend({\n                end: !options.vertical ? [ 0, 1 ] : undefined\n            }, options.overlay));\n\n            visual.append(overlay);\n        }\n    }\n\n    createHighlight(style) {\n        const highlight = draw.Path.fromRect(this.box.toRect(), style);\n\n        return alignPathToPixel(highlight);\n    }\n\n    highlightVisual() {\n        return this.rectVisual;\n    }\n\n    highlightVisualArgs() {\n        return {\n            options: this.options,\n            rect: this.box.toRect(),\n            visual: this.rectVisual\n        };\n    }\n\n    getBorderColor() {\n        const color = this.color;\n        const border = this.options.border;\n        const brightness = border._brightness || BORDER_BRIGHTNESS;\n        let borderColor = border.color;\n\n        if (!defined(borderColor)) {\n            borderColor = new Color(color).brightness(brightness).toHex();\n        }\n\n        return borderColor;\n    }\n\n    tooltipAnchor() {\n        const { options, box, aboveAxis } = this;\n        const clipBox = this.owner.pane.clipBox() || box;\n        let horizontalAlign = LEFT;\n        let verticalAlign = TOP;\n        let x, y;\n\n        if (options.vertical) {\n            x = Math.min(box.x2, clipBox.x2) + TOOLTIP_OFFSET;\n            if (aboveAxis) {\n                y = Math.max(box.y1, clipBox.y1);\n            } else {\n                y = Math.min(box.y2, clipBox.y2);\n                verticalAlign = BOTTOM;\n            }\n        } else {\n            const x1 = Math.max(box.x1, clipBox.x1);\n            const x2 = Math.min(box.x2, clipBox.x2);\n\n            if (options.isStacked) {\n                verticalAlign = BOTTOM;\n                if (aboveAxis) {\n                    horizontalAlign = RIGHT;\n                    x = x2;\n                } else {\n                    x = x1;\n                }\n                y = Math.max(box.y1, clipBox.y1) - TOOLTIP_OFFSET;\n            } else {\n                if (aboveAxis) {\n                    x = x2 + TOOLTIP_OFFSET;\n                } else {\n                    x = x1 - TOOLTIP_OFFSET;\n                    horizontalAlign = RIGHT;\n                }\n                y = Math.max(box.y1, clipBox.y1);\n            }\n        }\n\n        return {\n            point: new Point(x, y),\n            align: {\n                horizontal: horizontalAlign,\n                vertical: verticalAlign\n            }\n        };\n    }\n\n    overlapsBox(box) {\n        return this.box.overlaps(box);\n    }\n}\n\ndeepExtend(Bar.prototype, PointEventsMixin);\ndeepExtend(Bar.prototype, NoteMixin);\n\nBar.prototype.defaults = {\n    border: {\n        width: 1\n    },\n    vertical: true,\n    overlay: {\n        gradient: \"glass\"\n    },\n    labels: {\n        visible: false,\n        format: \"{0}\"\n    },\n    opacity: 1,\n    notes: {\n        label: {}\n    }\n};\n\nexport default Bar;"],"names":["const","super","let","this"],"mappings":"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"}