{"version":3,"file":"bar-chart.js","sources":["bar-chart.js"],"sourcesContent":["import { geometry as geom } from '@progress/kendo-drawing';\n\nimport Bar from './bar';\n\nimport CategoricalChart from '../categorical-chart';\nimport ClusterLayout from '../layout/cluster-layout';\nimport StackWrap from '../layout/stack-wrap';\nimport { BAR, OUTSIDE_END, INSIDE_END } from '../constants';\n\nimport anyHasZIndex from '../utils/any-has-z-index';\n\nimport { STRING, X, Y } from '../../common/constants';\nimport { defined, isFunction, setDefaultOptions } from '../../common';\n\nclass BarChart extends CategoricalChart {\n\n    render() {\n        super.render();\n        this.updateStackRange();\n    }\n\n    pointType() {\n        return Bar;\n    }\n\n    clusterType() {\n        return ClusterLayout;\n    }\n\n    stackType() {\n        return StackWrap;\n    }\n\n    stackLimits(axisName, stackName) {\n        const limits = super.stackLimits(axisName, stackName);\n\n        return limits;\n    }\n\n    createPoint(data, fields) {\n        const { categoryIx, category, series, seriesIx } = fields;\n        const { options, children } = this;\n        const isStacked = options.isStacked;\n        const value = this.pointValue(data);\n        let pointOptions = this.pointOptions(series, seriesIx);\n\n        const labelOptions = pointOptions.labels;\n        if (isStacked) {\n            if (labelOptions.position === OUTSIDE_END) {\n                labelOptions.position = INSIDE_END;\n            }\n        }\n\n        pointOptions.isStacked = isStacked;\n\n        let color = data.fields.color || series.color;\n        if (value < 0 && pointOptions.negativeColor) {\n            color = pointOptions.negativeColor;\n        }\n\n        pointOptions = this.evalPointOptions(\n            pointOptions, value, category, categoryIx, series, seriesIx\n        );\n\n        if (isFunction(series.color)) {\n            color = pointOptions.color;\n        }\n\n        const pointType = this.pointType();\n        const point = new pointType(value, pointOptions);\n        point.color = color;\n\n        let cluster = children[categoryIx];\n        if (!cluster) {\n            const clusterType = this.clusterType();\n            cluster = new clusterType({\n                vertical: options.invertAxes,\n                gap: options.gap,\n                spacing: options.spacing\n            });\n            this.append(cluster);\n        }\n\n        if (isStacked) {\n            const stackWrap = this.getStackWrap(series, cluster);\n            stackWrap.append(point);\n        } else {\n            cluster.append(point);\n        }\n\n        return point;\n    }\n\n    getStackWrap(series, cluster) {\n        const stack = series.stack;\n        const stackGroup = stack ? stack.group || stack : stack;\n        const wraps = cluster.children;\n        let stackWrap;\n\n        if (typeof stackGroup === STRING) {\n            for (let i = 0; i < wraps.length; i++) {\n                if (wraps[i]._stackGroup === stackGroup) {\n                    stackWrap = wraps[i];\n                    break;\n                }\n            }\n        } else {\n            stackWrap = wraps[0];\n        }\n\n        if (!stackWrap) {\n            const stackType = this.stackType();\n            stackWrap = new stackType({\n                vertical: !this.options.invertAxes\n            });\n            stackWrap._stackGroup = stackGroup;\n            cluster.append(stackWrap);\n        }\n\n        return stackWrap;\n    }\n\n    categorySlot(categoryAxis, categoryIx, valueAxis) {\n        const options = this.options;\n        const categorySlot = categoryAxis.getSlot(categoryIx);\n        const startValue = valueAxis.startValue();\n\n        if (options.isStacked) {\n            const zeroSlot = valueAxis.getSlot(startValue, startValue, true);\n            const stackAxis = options.invertAxes ? X : Y;\n            categorySlot[stackAxis + 1] = categorySlot[stackAxis + 2] = zeroSlot[stackAxis + 1];\n        }\n\n        return categorySlot;\n    }\n\n    reflowCategories(categorySlots) {\n        const children = this.children;\n        const childrenLength = children.length;\n\n        for (let i = 0; i < childrenLength; i++) {\n            children[i].reflow(categorySlots[i]);\n        }\n    }\n\n    createAnimation() {\n        this._setAnimationOptions();\n        super.createAnimation();\n\n        if (anyHasZIndex(this.options.series)) {\n            this._setChildrenAnimation();\n        }\n    }\n\n    _setChildrenAnimation() {\n        const points = this.points;\n\n        for (let idx = 0; idx < points.length; idx++) {\n            const point = points[idx];\n            const pointVisual = point.visual;\n            if (pointVisual && defined(pointVisual.options.zIndex)) {\n                point.options.animation = this.options.animation;\n                point.createAnimation();\n            }\n        }\n    }\n\n    _setAnimationOptions() {\n        const options = this.options;\n        const animation = options.animation || {};\n        let origin;\n\n        if (options.isStacked) {\n            const valueAxis = this.seriesValueAxis(options.series[0]);\n            origin = valueAxis.getSlot(valueAxis.startValue());\n        } else {\n            origin = this.categoryAxis.getSlot(0);\n        }\n\n        animation.origin = new geom.Point(origin.x1, origin.y1);\n        animation.vertical = !options.invertAxes;\n    }\n}\n\nsetDefaultOptions(BarChart, {\n    animation: {\n        type: BAR\n    }\n});\n\nexport default BarChart;"],"names":["super","const","let","this"],"mappings":"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"}