{"version":3,"file":"candlestick-chart.js","sources":["candlestick-chart.js"],"sourcesContent":["import CategoricalChart from '../categorical-chart';\nimport ClusterLayout from '../layout/cluster-layout';\nimport Candlestick from './candlestick';\n\nimport ClipAnimationMixin from '../mixins/clip-animation-mixin';\nimport { CANDLESTICK } from '../constants';\nimport areNumbers from '../utils/are-numbers';\n\nimport { MIN_VALUE, MAX_VALUE } from '../../common/constants';\nimport { deepExtend, isFunction } from '../../common';\n\nclass CandlestickChart extends CategoricalChart {\n\n    reflowCategories(categorySlots) {\n        const children = this.children;\n        const childrenLength = children.length;\n\n        for (let i = 0; i < childrenLength; i++) {\n            children[i].reflow(categorySlots[i]);\n        }\n    }\n\n    addValue(data, fields) {\n        const { categoryIx, category, series, seriesIx } = fields;\n        const { children, options } = this;\n        const value = data.valueFields;\n        const valueParts = this.splitValue(value);\n        const hasValue = areNumbers(valueParts);\n        const dataItem = series.data[categoryIx];\n        let categoryPoints = this.categoryPoints[categoryIx];\n        let point;\n\n        if (!categoryPoints) {\n            this.categoryPoints[categoryIx] = categoryPoints = [];\n        }\n\n        if (hasValue) {\n            point = this.createPoint(data, fields);\n        }\n\n        let cluster = children[categoryIx];\n        if (!cluster) {\n            cluster = new ClusterLayout({\n                vertical: options.invertAxes,\n                gap: options.gap,\n                spacing: options.spacing\n            });\n            this.append(cluster);\n        }\n\n        if (point) {\n            this.updateRange(value, fields);\n\n            cluster.append(point);\n\n            point.categoryIx = categoryIx;\n            point.category = category;\n            point.series = series;\n            point.seriesIx = seriesIx;\n            point.owner = this;\n            point.dataItem = dataItem;\n            point.noteText = data.fields.noteText;\n        }\n\n        this.points.push(point);\n        categoryPoints.push(point);\n    }\n\n    pointType() {\n        return Candlestick;\n    }\n\n    createPoint(data, fields) {\n        const { categoryIx, category, series, seriesIx } = fields;\n        const pointType = this.pointType();\n        const value = data.valueFields;\n        let pointOptions = deepExtend({}, series);\n        let color = data.fields.color || series.color;\n\n        pointOptions = this.evalPointOptions(\n            pointOptions, value, category, categoryIx, series, seriesIx\n        );\n\n        if (series.type === CANDLESTICK) {\n            if (value.open > value.close) {\n                color = data.fields.downColor || series.downColor || series.color;\n            }\n        }\n\n        if (isFunction(series.color)) {\n            color = pointOptions.color;\n        }\n\n        pointOptions.vertical = !this.options.invertAxes;\n\n        const point = new pointType(value, pointOptions);\n        point.color = color;\n\n        return point;\n    }\n\n    splitValue(value) {\n        return [ value.low, value.open, value.close, value.high ];\n    }\n\n    updateRange(value, fields) {\n        const axisName = fields.series.axis;\n        const parts = this.splitValue(value);\n        let axisRange = this.valueAxisRanges[axisName];\n\n        axisRange = this.valueAxisRanges[axisName] =\n            axisRange || { min: MAX_VALUE, max: MIN_VALUE };\n\n        axisRange = this.valueAxisRanges[axisName] = {\n            min: Math.min.apply(Math, parts.concat([ axisRange.min ])),\n            max: Math.max.apply(Math, parts.concat([ axisRange.max ]))\n        };\n    }\n\n    formatPointValue(point, format) {\n        const value = point.value;\n\n        return this.chartService.format.auto(format,\n            value.open, value.high,\n            value.low, value.close, point.category\n        );\n    }\n\n    animationPoints() {\n        return this.points;\n    }\n}\n\ndeepExtend(CandlestickChart.prototype, ClipAnimationMixin);\n\nexport default CandlestickChart;"],"names":["const","let"],"mappings":"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"}