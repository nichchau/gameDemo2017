{
  "_args": [
    [
      {
        "raw": "@telerik/kendo-intl@^0.14.0",
        "scope": "@telerik",
        "escapedName": "@telerik%2fkendo-intl",
        "name": "@telerik/kendo-intl",
        "rawSpec": "^0.14.0",
        "spec": ">=0.14.0 <0.15.0",
        "type": "range"
      },
      "C:\\Users\\NichChau\\Documents\\GitHub\\gameDemo2017\\node_modules\\@progress\\kendo-angular-intl"
    ]
  ],
  "_from": "@telerik/kendo-intl@>=0.14.0 <0.15.0",
  "_id": "@telerik/kendo-intl@0.14.6",
  "_inCache": true,
  "_location": "/@telerik/kendo-intl",
  "_nodeVersion": "6.10.2",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/kendo-intl-0.14.6.tgz_1492691896518_0.6279619433917105"
  },
  "_npmUser": {
    "name": "telerik",
    "email": "npm@telerik.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@telerik/kendo-intl@^0.14.0",
    "scope": "@telerik",
    "escapedName": "@telerik%2fkendo-intl",
    "name": "@telerik/kendo-intl",
    "rawSpec": "^0.14.0",
    "spec": ">=0.14.0 <0.15.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@progress/kendo-angular-intl"
  ],
  "_resolved": "https://registry.npmjs.org/@telerik/kendo-intl/-/kendo-intl-0.14.6.tgz",
  "_shasum": "d800e5174ed3a2db7ca146b4b7bb5a5f1137c50b",
  "_shrinkwrap": null,
  "_spec": "@telerik/kendo-intl@^0.14.0",
  "_where": "C:\\Users\\NichChau\\Documents\\GitHub\\gameDemo2017\\node_modules\\@progress\\kendo-angular-intl",
  "author": {
    "name": "Telerik"
  },
  "bugs": {
    "url": "https://github.com/telerik/kendo-intl/issues"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    },
    "ghooks": {
      "pre-commit": "npm run lint",
      "commit-msg": "validate-commit-msg"
    }
  },
  "dependencies": {},
  "description": "A package exporting functions for date and number parsing and formatting",
  "devDependencies": {
    "@telerik/eslint-config": "^1.0.0",
    "@telerik/kendo-package-tasks": "^1.2.0",
    "cldr-data": "latest",
    "cz-conventional-changelog": "^1.1.5",
    "ghooks": "^1.0.3",
    "gulp": "3.9.1",
    "semantic-release": "^4.3.5",
    "validate-commit-msg": "^1.1.1"
  },
  "directories": {},
  "dist": {
    "shasum": "d800e5174ed3a2db7ca146b4b7bb5a5f1137c50b",
    "tarball": "https://registry.npmjs.org/@telerik/kendo-intl/-/kendo-intl-0.14.6.tgz"
  },
  "gitHead": "e540d2143e93789ab0f6449761ecb09b54224543",
  "homepage": "https://github.com/telerik/kendo-intl#readme",
  "jsnext:main": "dist/es/main.js",
  "keywords": [
    "Kendo",
    "Internationalization"
  ],
  "license": "Apache-2.0",
  "main": "dist/npm/main.js",
  "maintainers": [
    {
      "name": "telerik",
      "email": "npm@telerik.com"
    }
  ],
  "module": "dist/es/main.js",
  "name": "@telerik/kendo-intl",
  "optionalDependencies": {},
  "readme": "[![Commitizen friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg)](http://commitizen.github.io/cz-cli/)\n[![Build Status](https://travis-ci.org/telerik/kendo-intl.svg?branch=master)](https://travis-ci.org/telerik/kendo-intl)\n[![npm version](https://badge.fury.io/js/%40telerik%2Fkendo-intl.svg)](https://badge.fury.io/js/%40telerik%2Fkendo-intl)\n\n\n# Kendo UI Internationalization\n\nThis repository contains the source code and documentation of the Kendo UI Internationalization package.\n\nIt includes methods for parsing and formatting dates and numbers by using [Unicode Common Locale Data Repository (CLDR)](http://cldr.unicode.org/) data. These methods are split into the following modules:\n\n* [CLDR](#cldr-data)\n* [Date Parsing](#date-parsing)\n* [Date Formatting](#date-formatting)\n* [Number Parsing](#number-parsing)\n* [Number Formatting](#number-formatting)\n* [General Formatting](#general-formatting)\n\n## Basic Usage\n\n### CLDR Data\n\nTo download the full CDLR database, you need to install the [cldr-data module](https://www.npmjs.com/package/cldr-data) by running the following command.\n\n```sh\nnpm install --save cldr-data\n```\n\nTo apply the methods for different locales, load the `likelySubtags` and the locale data by using the [`load`](https://github.com/telerik/kendo-intl/blob/master/docs/cldr/api.md#load) method.\n\nAdditionally, the library requires you to load:\n* The supplemental `currencyData` for the default currency formatting.\n* The `weekData` for the day of week formatting.\n\n```javascript\nimport { load } from '@telerik/kendo-intl';\n\nload(\n    require(\"cldr-data/supplemental/likelySubtags.json\"),\n    require(\"cldr-data/supplemental/currencyData.json\"),\n    require(\"cldr-data/supplemental/weekData.json\"),\n\n    require(\"cldr-data/main/bg/numbers.json\"),\n    require(\"cldr-data/main/bg/currencies.json\"),\n    require(\"cldr-data/main/bg/ca-gregorian.json\"),\n    require(\"cldr-data/main/bg/dateFields.json\"),\n    require(\"cldr-data/main/bg/timeZoneNames.json\")\n);\n```\n\nFor more examples and available configuration options, refer to the article on [CLDR Data](https://github.com/telerik/kendo-intl/blob/master/docs/cldr/index.md).\n\n### Date Parsing\n\nDate parsing converts a string to a `Date` object by using the specific settings of the locale.\n\n```js\nimport { parseDate } from '@telerik/kendo-intl';\n\nparseDate(\"11/6/2000\", [\"G\", \"d\"]); // Mon Nov 06 2000\nparseDate(\"Montag, 6.11.2000\", \"EEEE, d.MM.y\", \"de\"); // Mon Nov 06 2000\nparseDate(\"2000-11-06T10:30Z\"); // Mon Nov 06 2000 12:30\n```\n\nFor more examples and available configuration options, refer to the article on [date parsing](https://github.com/telerik/kendo-intl/blob/master/docs/date-parsing/index.md).\n\n### Date Formatting\n\nDate formatting converts a `Date` object to a human-readable string by using the specific settings of the locale.\n\n```js\nimport { formatDate } from '@telerik/kendo-intl';\n\nformatDate(new Date(2000, 10, 6), \"d\"); // 11/6/2000\nformatDate(new Date(2000, 10, 6), \"yMd\", \"de\"); // 6.11.2000\nformatDate(new Date(2000, 10, 6), \"EEEE, d.MM.y\", \"bg\"); // понеделник, 6.11.2000\n```\n\nFor more examples and available configuration options, refer to the article on [date formatting](https://github.com/telerik/kendo-intl/blob/master/docs/date-formatting/index.md).\n\n### Number Parsing\n\nNumber parsing converts a string to a `Number` object by using the specific settings of the locale.\n\n```js\nimport { parseNumber } from '@telerik/kendo-intl';\n\nparseNumber(\"12.22\"); // 12.22\nparseNumber(\"1.212,22 €\", \"de\"); // 1212.22\nparseNumber(\"10.22 %\"); // 0.1022\nparseNumber(\"1,0000123e+4\", \"bg\"); // 10000.123\n```\n\nFor more examples and available configuration options, refer to the article on [number parsing](https://github.com/telerik/kendo-intl/blob/master/docs/num-parsing/index.md).\n\n### Number Formatting\n\nNumber formatting converts a `Number` object to a human-readable string using the specific settings of the locale.\n\n```js\nimport { formatNumber } from '@telerik/kendo-intl';\n\nformatNumber(1234.567, \"n2\"); // 1,234.57\n\nformatNumber(1234.567, \"c\", \"de\"); // 1.234,57 €\n\nformatNumber(1234.567, {\n   style: \"currency\",\n   currency: \"USD\",\n   currencyDisplay: \"displayName\"\n}, \"bg\"); // 1 234,57 щатски долара\n\nformatNumber(2345678, \"##,#.00\"); // 2,345,678.00\n```\n\nFor more examples and available configuration options, refer to the article on [number formatting](https://github.com/telerik/kendo-intl/blob/master/docs/num-formatting/index.md).\n\n### General Formatting\n\nGeneral formatting provides methods for independent placeholder and type formatting by using the specific settings of the locale.\n\n```js\nimport { format, toString } from '@telerik/kendo-intl';\n\nformat('Date: {0:d} - Price: {1:c}', [new Date(), 10.5], \"en\") // Date: 1/5/2017 - Price: $10.50\n\ntoString(10.5, \"c\", \"bg\"); // 10,50 лв.\n\ntoString(new Date(), \"d\"); // 1/5/2017\n```\n\nFor more examples and available configuration options, refer to the article on [general formatting](https://github.com/telerik/kendo-intl/blob/master/docs/general-formatting/index.md).\n\n## Installation\n\n1. The Internationalization library is published as a [scoped NPM package](https://docs.npmjs.com/misc/scope) in the [NPMJS Telerik account](https://www.npmjs.com/~telerik).\n\n2. Download and install the module:\n\n    ```bash\n    npm install --save '@telerik/kendo-intl';\n    ```\n\n3. Once installed, import the Internationalization in your application root module:\n\n    ```javascript\n    // ES2015 module syntax\n    import { formatDate, parseDate } from '@telerik/kendo-intl';\n    //or\n    import { formatNumber, parseNumber } from '@telerik/kendo-intl';\n    ```\n    ```javascript\n    // CommonJS format\n    var numbers = require('@telerik/kendo-intl/number').numbers;\n    //or\n    var dates = require('@telerik/kendo-intl/dates').dates;\n    ```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/telerik/kendo-intl.git"
  },
  "scripts": {
    "build-package": "gulp build-rollup-package",
    "lint": "gulp lint",
    "semantic-release": "semantic-release pre && npm publish && semantic-release post",
    "test": "gulp test"
  },
  "typings": "dist/es/main",
  "version": "0.14.6"
}
